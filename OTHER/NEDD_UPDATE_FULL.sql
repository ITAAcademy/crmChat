-- phpMyAdmin SQL Dump
-- version 4.1.14
-- http://www.phpmyadmin.net
--
-- Хост: 127.0.0.1
-- Время создания: Янв 20 2016 г., 14:38
-- Версия сервера: 5.6.17
-- Версия PHP: 5.5.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- База данных: `qa_intita`
--

-- --------------------------------------------------------

--
-- Структура таблицы `aboutus`
--

CREATE TABLE IF NOT EXISTS `aboutus` (
  `blockID` int(11) NOT NULL AUTO_INCREMENT,
  `iconImage` varchar(255) NOT NULL,
  `titleText` varchar(6) NOT NULL,
  `textAbout` varchar(6) NOT NULL,
  `titleTextExp` varchar(6) NOT NULL,
  PRIMARY KEY (`blockID`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=4 ;

--
-- Дамп данных таблицы `aboutus`
--

INSERT INTO `aboutus` (`blockID`, `iconImage`, `titleText`, `textAbout`, `titleTextExp`) VALUES
(1, 'image1.png', '0032', '0035', '0556'),
(2, 'image2.png', '0033', '0036', '0557'),
(3, 'image3.png', '0034', '0037', '0558');

-- --------------------------------------------------------

--
-- Структура таблицы `aboutus_slider`
--

CREATE TABLE IF NOT EXISTS `aboutus_slider` (
  `image_order` int(11) NOT NULL AUTO_INCREMENT,
  `pictureUrl` varchar(255) NOT NULL,
  `text` varchar(5) NOT NULL,
  `order` int(11) NOT NULL,
  PRIMARY KEY (`image_order`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=7 ;

--
-- Дамп данных таблицы `aboutus_slider`
--

INSERT INTO `aboutus_slider` (`image_order`, `pictureUrl`, `text`, `order`) VALUES
(1, '1.jpg', '0550', 1),
(2, '2.jpg', '0551', 2),
(3, '3.jpg', '0552', 3),
(4, '4.jpg', '0553', 4),
(5, '5.jpg', '0554', 5),
(6, '6.jpg', '0555', 6);

-- --------------------------------------------------------

--
-- Структура таблицы `attribute_value`
--

CREATE TABLE IF NOT EXISTS `attribute_value` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `teacher` int(10) NOT NULL,
  `attribute` int(10) NOT NULL,
  `value` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_attribute_value_role_attribute` (`attribute`),
  KEY `FK_attribute_value_roles` (`teacher`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=59 ;

--
-- Дамп данных таблицы `attribute_value`
--

INSERT INTO `attribute_value` (`id`, `teacher`, `attribute`, `value`) VALUES
(2, 1, 1, '5'),
(3, 2, 1, '12'),
(4, 3, 1, '23'),
(6, 4, 1, '5'),
(8, 6, 1, '14'),
(10, 1, 2, '51'),
(11, 2, 2, '52'),
(13, 3, 2, '54'),
(14, 6, 2, '22'),
(15, 4, 2, '55'),
(16, 6, 3, '1'),
(17, 1, 3, '1'),
(18, 2, 3, '5'),
(19, 3, 4, '1'),
(20, 5, 3, '5'),
(32, 1, 4, '1'),
(33, 2, 4, '2'),
(34, 4, 4, '4'),
(35, 5, 4, '5'),
(37, 6, 4, '6'),
(38, 1, 6, '1'),
(39, 2, 6, '5'),
(40, 3, 6, '14'),
(41, 4, 6, '5'),
(43, 5, 6, '4'),
(44, 6, 6, '5'),
(45, 1, 7, '1'),
(46, 2, 7, '2'),
(47, 3, 7, '123'),
(48, 4, 7, '1'),
(49, 5, 7, '1'),
(50, 6, 7, '1'),
(51, 1, 8, '1245'),
(52, 2, 8, '4'),
(53, 3, 8, '4'),
(54, 4, 8, '5'),
(55, 5, 8, '6'),
(56, 6, 8, '2'),
(57, 9, 5, '1'),
(58, 21, 9, '5555555555');

-- --------------------------------------------------------

--
-- Структура таблицы `carousel`
--

CREATE TABLE IF NOT EXISTS `carousel` (
  `order` int(11) NOT NULL,
  `pictureURL` varchar(50) NOT NULL,
  `slider_text` varchar(6) NOT NULL,
  `id` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=8 ;

--
-- Дамп данных таблицы `carousel`
--

INSERT INTO `carousel` (`order`, `pictureURL`, `slider_text`, `id`) VALUES
(1, '9.jpg', '0666', 1),
(2, '1.jpg', '0027', 2),
(3, '2.jpg', '0028', 3),
(4, '3.jpg', '0029', 4),
(5, '4.jpg', '0030', 5),
(6, '5.jpg', '0559', 6),
(7, '10.jpg', '0560', 7);

-- --------------------------------------------------------

--
-- Структура таблицы `chat_room`
--

CREATE TABLE IF NOT EXISTS `chat_room` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `active` bit(1) NOT NULL,
  `name` varchar(255) NOT NULL,
  `author_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_fy1be4k30rsfiyj277sx585ev` (`author_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=13 ;

--
-- Дамп данных таблицы `chat_room`
--

INSERT INTO `chat_room` (`id`, `active`, `name`, `author_id`) VALUES
(3, b'1', 'fghfg', 41),
(4, b'1', '1_53_Tue Jan 19 21:54:31 EET 2016', 39),
(5, b'1', '1_56_Tue Jan 19 22:33:41 EET 2016', 39),
(6, b'1', '1_57_Tue Jan 19 23:21:05 EET 2016', 39),
(7, b'1', 'forTest', 41),
(8, b'1', 'khjk', 41),
(9, b'1', '1_58_Wed Jan 20 02:35:10 EET 2016', 39),
(10, b'1', '1_59_Wed Jan 20 02:38:30 EET 2016', 39),
(11, b'1', 'jhgj', 40),
(12, b'1', '1_60_Wed Jan 20 12:56:17 EET 2016', 39);

-- --------------------------------------------------------

--
-- Структура таблицы `chat_room_users`
--

CREATE TABLE IF NOT EXISTS `chat_room_users` (
  `rooms_from_users_id` bigint(20) NOT NULL,
  `users_id` bigint(20) NOT NULL,
  PRIMARY KEY (`rooms_from_users_id`,`users_id`),
  KEY `FK_9ryl67smn61vqw2j0wrl3lxtw` (`users_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Дамп данных таблицы `chat_room_users`
--

INSERT INTO `chat_room_users` (`rooms_from_users_id`, `users_id`) VALUES
(11, 41),
(3, 52),
(4, 52),
(11, 52),
(4, 53),
(5, 56),
(6, 57),
(9, 58),
(10, 59),
(12, 60);

-- --------------------------------------------------------

--
-- Структура таблицы `chat_tenant`
--

CREATE TABLE IF NOT EXISTS `chat_tenant` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `chat_user_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_icdfbpqt3tdjy7d8204mvdcg0` (`chat_user_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;

--
-- Дамп данных таблицы `chat_tenant`
--

INSERT INTO `chat_tenant` (`id`, `chat_user_id`) VALUES
(1, 39);

-- --------------------------------------------------------

--
-- Структура таблицы `chat_user`
--

CREATE TABLE IF NOT EXISTS `chat_user` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `nick_name` varchar(50) DEFAULT NULL,
  `intita_user_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=61 ;

--
-- Дамп данных таблицы `chat_user`
--

INSERT INTO `chat_user` (`id`, `nick_name`, `intita_user_id`) VALUES
(39, 'teacher2@gmail.com', 39),
(40, 'teacher1@gmail.com', 38),
(41, 'teacher3@gmail.com', 40),
(42, 'ANONIM', NULL),
(44, 'ANONIM', NULL),
(45, 'ANONIM', NULL),
(46, 'ANONIM', NULL),
(47, 'ANONIM_921dded540faaff2d307948fd481d2573ca79d34', NULL),
(48, 'ANONIM_4083babe4cd37f604f24c522c45992103d22688c', NULL),
(49, 'ANONIM_a218cffb6789319f2e2cf0c420a5d7077dcf9708', NULL),
(50, 'ANONIM_96e21adcae1fa366f083e3452b20423bcddcb79f', NULL),
(52, 'ivanna@yutr.rtr', 11),
(53, 'ANONIM_4944ab62e6d233a88789f3e8a49bbaa531afb882', NULL),
(54, 'ANONIM_6d9b49ac33e9be78909b8a5786cc08341f906fe1', NULL),
(55, 'ita.in.ua@gmail.com', 46),
(56, 'Guest_c2c424b5cb5dba7d9ce03cb017e4a152a6160bd6', NULL),
(57, 'Guest_4ed11174b290eda3d6c50e70a0bca7944b53b5fa', NULL),
(58, 'Guest_8d5cdcc8cc582a951875ae4b6896d504a1020857', NULL),
(59, 'Guest_f237bbe8845fa22a7d177dc49e71e8587664cdab', NULL),
(60, 'Guest_e2ae5ea1d152960b9b6362018b7dc6892109e710', NULL);

-- --------------------------------------------------------

--
-- Структура таблицы `chat_user_last_room_date`
--

CREATE TABLE IF NOT EXISTS `chat_user_last_room_date` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `last_logout` datetime DEFAULT NULL,
  `chat_user_id` bigint(20) DEFAULT NULL,
  `room_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_tcagriy0qhcpqgarbl77lrkel` (`chat_user_id`),
  KEY `FK_l12n7117lch4gomo1egq6wabl` (`room_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=9 ;

--
-- Дамп данных таблицы `chat_user_last_room_date`
--

INSERT INTO `chat_user_last_room_date` (`id`, `last_logout`, `chat_user_id`, `room_id`) VALUES
(1, '2000-01-01 00:00:00', 41, 3),
(2, '2016-01-20 02:36:12', 41, 7),
(3, '2016-01-20 02:36:45', 41, 8),
(4, '2016-01-20 15:12:30', 40, 11),
(5, '2016-01-20 13:36:36', 41, 11),
(6, '2000-01-01 00:00:00', 52, 11),
(7, '2000-01-01 00:00:00', 52, 3),
(8, '2000-01-01 00:00:00', 52, 4);

-- --------------------------------------------------------

--
-- Структура таблицы `chat_user_message`
--

CREATE TABLE IF NOT EXISTS `chat_user_message` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `body` varchar(64000) DEFAULT NULL,
  `author_id` bigint(20) DEFAULT NULL,
  `room_id` bigint(20) DEFAULT NULL,
  `date` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_2vqyb0vwecdl9a0b1lsdr6pac` (`author_id`),
  KEY `FK_fo86b284hr4fm8kaxxbx78a40` (`room_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=82 ;

--
-- Дамп данных таблицы `chat_user_message`
--

INSERT INTO `chat_user_message` (`id`, `body`, `author_id`, `room_id`, `date`) VALUES
(1, 'jghjghj', 53, 4, NULL),
(2, 'hjkhjkhjkhjkhjk', 39, 4, NULL),
(3, 'hjkhjk', 39, 4, NULL),
(4, 'bnmbnmnbm', 41, 3, '2016-01-19 21:21:59'),
(5, 'ghjghjgh', 41, 3, '2016-01-19 21:29:08'),
(6, 'kjhkjk', 41, 3, '2016-01-19 21:29:11'),
(7, 'jhjkhjkjh', 41, 3, '2016-01-19 21:29:18'),
(8, 'mbnmbnm', 41, 3, '2016-01-19 21:29:21'),
(9, 'Hi', 41, 3, '2016-01-19 22:00:20'),
(10, 'Hi', 41, 3, '2016-01-19 22:00:28'),
(11, 'j', 41, 3, '2016-01-19 22:00:39'),
(12, 'h', 41, 3, '2016-01-19 22:00:59'),
(13, 'f', 41, 3, '2016-01-19 22:01:03'),
(14, 'try', 41, 3, '2016-01-19 22:01:04'),
(15, 'hgfh', 41, 3, '2016-01-19 22:01:06'),
(16, 'hgf', 41, 3, '2016-01-19 22:01:07'),
(17, 'h', 41, 3, '2016-01-19 22:01:08'),
(18, 'h', 41, 3, '2016-01-19 22:01:09'),
(19, 'h', 41, 3, '2016-01-19 22:01:09'),
(20, 'h', 41, 3, '2016-01-19 22:01:10'),
(21, 'y', 41, 3, '2016-01-19 22:02:00'),
(22, 'h', 41, 3, '2016-01-19 22:04:44'),
(23, 'y', 41, 3, '2016-01-19 22:05:09'),
(24, 'h', 41, 3, '2016-01-19 22:05:58'),
(25, 'fh', 41, 3, '2016-01-19 22:06:00'),
(26, 'j', 41, 3, '2016-01-19 22:06:04'),
(27, 'g', 41, 3, '2016-01-19 22:06:26'),
(28, 'g', 41, 3, '2016-01-19 22:06:27'),
(29, 'k', 41, 3, '2016-01-19 22:06:39'),
(30, 'utyuty', 41, 7, '2016-01-19 22:42:20'),
(31, 'tyuty', 41, 7, '2016-01-19 22:42:22'),
(32, 'utyuyt', 41, 7, '2016-01-19 22:42:23'),
(33, 'tyu', 41, 7, '2016-01-19 22:42:24'),
(34, 'tyutyu', 41, 7, '2016-01-19 22:42:26'),
(35, 'utyu', 41, 7, '2016-01-19 22:42:27'),
(36, 'utyuy', 41, 7, '2016-01-19 22:42:37'),
(37, 'tyu', 41, 7, '2016-01-19 22:42:38'),
(38, 'tyu', 41, 7, '2016-01-19 22:42:39'),
(39, 'tyu', 41, 7, '2016-01-19 22:42:40'),
(40, 'tyut', 41, 7, '2016-01-19 22:42:40'),
(41, 'tyu', 41, 7, '2016-01-19 22:42:41'),
(42, 'tyu', 41, 7, '2016-01-19 22:42:42'),
(43, 'tyu', 41, 7, '2016-01-19 22:42:42'),
(44, 'tyu', 41, 7, '2016-01-19 22:42:43'),
(45, 'tyutyu', 41, 7, '2016-01-19 22:42:44'),
(46, 'tyu', 41, 7, '2016-01-19 22:42:46'),
(47, 'ghjgh', 41, 7, '2016-01-19 22:42:58'),
(48, 'ghj', 41, 7, '2016-01-19 22:42:59'),
(49, 'jgh', 41, 7, '2016-01-19 22:43:10'),
(50, 'j', 41, 7, '2016-01-19 22:43:19'),
(51, 'j', 41, 7, '2016-01-19 22:43:22'),
(52, 'qwe', 41, 7, '2016-01-19 22:43:56'),
(53, 'l', 41, 7, '2016-01-19 22:50:11'),
(54, 'ghjghjgh', 40, 11, '2016-01-20 00:41:07'),
(55, 'hikhoi', 40, 11, '2016-01-20 00:41:16'),
(56, 'gfghfg', 40, 11, '2016-01-20 00:41:19'),
(57, 'hjkhk', 40, 11, '2016-01-20 00:41:28'),
(58, 'nbnmbnm', 60, 12, '2016-01-20 10:56:37'),
(59, '', 60, 12, '2016-01-20 10:56:39'),
(60, '', 60, 12, '2016-01-20 10:56:40'),
(61, '', 60, 12, '2016-01-20 10:56:41'),
(62, '', 60, 12, '2016-01-20 10:56:42'),
(63, '', 60, 12, '2016-01-20 10:56:46'),
(64, '', 60, 12, '2016-01-20 10:56:46'),
(65, '', 60, 12, '2016-01-20 10:56:46'),
(66, '', 60, 12, '2016-01-20 10:56:46'),
(67, '', 60, 12, '2016-01-20 10:56:47'),
(68, '', 60, 12, '2016-01-20 10:56:47'),
(69, 'hghg', 60, 12, '2016-01-20 10:56:52'),
(70, 'fghfg', 60, 12, '2016-01-20 10:56:53'),
(71, 'fghfgh', 60, 12, '2016-01-20 10:56:55'),
(72, 'k', 41, 11, '2016-01-20 10:57:23'),
(73, 'j', 40, 11, '2016-01-20 10:58:02'),
(74, 'g', 40, 11, '2016-01-20 10:58:04'),
(75, 'j', 40, 11, '2016-01-20 10:58:05'),
(76, 'k', 40, 11, '2016-01-20 10:58:07'),
(77, 'hgf', 40, 11, '2016-01-20 10:58:47'),
(78, 'fh', 40, 11, '2016-01-20 10:58:50'),
(79, '', 41, 11, '2016-01-20 11:37:03'),
(80, '__            _               __    __     _     __            _        _       ___ _           _    / _\\_ __  _ __(_)_ __   __ _  / / /\\ \\ \\___| |__ / _\\ ___   ___| | _____| |_    / __\\ |__   __ _| |_  \\ \\| ''_ \\| ''__| | ''_ \\ / _` | \\ \\/  \\/ / _ \\ ''_ \\\\ \\ / _ \\ / __| |/ / _ \\ __|  / /  | ''_ \\ / _` | __| _\\ \\ |_) | |  | | | | | (_| |  \\  /\\  /  __/ |_) |\\ \\ (_) | (__|   <  __/ |_  / /___| | | | (_| | |_  \\__/ .__/|_|  |_|_| |_|\\__, |   \\/  \\/ \\___|_.__/\\__/\\___/ \\___|_|\\_\\___|\\__| \\____/|_| |_|\\__,_|\\__|    |_|                 |___/  2016-01-20 15:10:15.297  INFO 8584 --- [           main] com.intita.wschat.Application            : Starting Application on DESKTOP-3MVIBJ1 with PID 8584 (Z:\\DOCUMENTU\\crmChat\\bin started by nico in Z:\\DOCUMENTU\\crmChat) 2016-01-20 15:10:15.401  INFO 8584 --- [           main] com.intita.wschat.Application            : No active profile set, falling back to default profiles: default 2016-01-20 15:10:15.673  INFO 8584 --- [           main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d1c005e: startup date [Wed Jan 20 15:10:15 EET 2016]; root of context hierarchy 2016-01-20 15:10:20.520  INFO 8584 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean ''beanNameViewResolver'' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration; factoryMethodName=beanNameViewResolver; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter; factoryMethodName=beanNameViewResolver; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter.class]] 2016-01-20 15:10:21.159  INFO 8584 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean ''sessionRepository'' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webSocketConfig; factoryMethodName=sessionRepository; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/intita/wschat/config/WebSocketConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration; factoryMethodName=sessionRepository; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.class]] 2016-01-20 15:10:22.247  INFO 8584 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean ''org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a95ad8a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2016-01-20 15:10:22.373  INFO 8584 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean ''org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'' of type [class org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d27c21a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2016-01-20 15:10:22.404  INFO 8584 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean ''objectPostProcessor'' of type [class org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2016-01-20 15:10:22.408  INFO 8584 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean ''org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@13866329'' of type [class org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2016-01-20 15:10:22.447  INFO 8584 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean ''org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'' of type [class org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$855a5613] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2016-01-20 15:10:22.512  INFO 8584 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean ''methodSecurityMetadataSource'' of type [class org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2016-01-20 15:10:23.545  INFO 8584 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http) 2016-01-20 15:10:23.569  INFO 8584 --- [           main] o.apache.catalina.core.StandardService   : Starting service Tomcat 2016-01-20 15:10:23.571  INFO 8584 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.0.30 2016-01-20 15:10:23.893  INFO 8584 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext 2016-01-20 15:10:23.894  INFO 8584 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 8227 ms 2016-01-20 15:10:25.734  INFO 8584 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: ''metricFilter'' to: [/*] 2016-01-20 15:10:25.735  INFO 8584 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: ''characterEncodingFilter'' to: [/*] 2016-01-20 15:10:25.736  INFO 8584 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: ''springSessionRepositoryFilter'' to: [/*] 2016-01-20 15:10:25.737  INFO 8584 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: ''hiddenHttpMethodFilter'' to: [/*] 2016-01-20 15:10:25.737  INFO 8584 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: ''httpPutFormContentFilter'' to: [/*] 2016-01-20 15:10:25.738  INFO 8584 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: ''requestContextFilter'' to: [/*] 2016-01-20 15:10:25.742  INFO 8584 --- [ost-startStop-1] .e.DelegatingFilterProxyRegistrationBean : Mapping filter: ''springSecurityFilterChain'' to: [/*] 2016-01-20 15:10:25.742  INFO 8584 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: ''webRequestLoggingFilter'' to: [/*] 2016-01-20 15:10:25.742  INFO 8584 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: ''applicationContextIdFilter'' to: [/*] 2016-01-20 15:10:25.743  INFO 8584 --- [ost-startStop-1] o.s.b.c.e.ServletRegistrationBean        : Mapping servlet: ''dispatcherServlet'' to [/] 2016-01-20 15:10:26.945  INFO 8584 --- [ost-startStop-1] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit ''default'' 2016-01-20 15:10:26.975  INFO 8584 --- [ost-startStop-1] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [ 	name: default 	...] 2016-01-20 15:10:27.216  INFO 8584 --- [ost-startStop-1] org.hibernate.Version                    : HHH000412: Hibernate Core {4.3.11.Final} 2016-01-20 15:10:27.222  INFO 8584 --- [ost-startStop-1] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found 2016-01-20 15:10:27.225  INFO 8584 --- [ost-startStop-1] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist 2016-01-20 15:10:27.971  INFO 8584 --- [ost-startStop-1] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 2016-01-20 15:10:28.601  INFO 8584 --- [ost-startStop-1] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 2016-01-20 15:10:28.985  INFO 8584 --- [ost-startStop-1] o.h.h.i.ast.ASTQueryTranslatorFactory    : HHH000397: Using ASTQueryTranslatorFactory 2016-01-20 15:10:29.653  INFO 8584 --- [ost-startStop-1] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update 2016-01-20 15:10:29.653  INFO 8584 --- [ost-startStop-1] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000102: Fetching database metadata 2016-01-20 15:10:29.655  INFO 8584 --- [ost-startStop-1] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000396: Updating schema 2016-01-20 15:10:29.715  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000261: Table found: qa_intita.chat_room 2016-01-20 15:10:29.716  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000037: Columns: [name, active, id, author_id] 2016-01-20 15:10:29.716  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000108: Foreign keys: [fk_fy1be4k30rsfiyj277sx585ev] 2016-01-20 15:10:29.716  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000126: Indexes: [primary, fk_fy1be4k30rsfiyj277sx585ev] 2016-01-20 15:10:29.736  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000261: Table found: qa_intita.chat_room_users 2016-01-20 15:10:29.737  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000037: Columns: [rooms_from_users_id, users_id] 2016-01-20 15:10:29.737  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000108: Foreign keys: [fk_9ryl67smn61vqw2j0wrl3lxtw, fk_8uci3ndco1sna4jf1t5u33lia] 2016-01-20 15:10:29.737  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000126: Indexes: [fk_9ryl67smn61vqw2j0wrl3lxtw, primary] 2016-01-20 15:10:29.757  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000261: Table found: qa_intita.chat_tenant 2016-01-20 15:10:29.757  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000037: Columns: [chat_user_id, id] 2016-01-20 15:10:29.757  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000108: Foreign keys: [fk_icdfbpqt3tdjy7d8204mvdcg0] 2016-01-20 15:10:29.757  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000126: Indexes: [fk_icdfbpqt3tdjy7d8204mvdcg0, primary] 2016-01-20 15:10:29.773  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000261: Table found: qa_intita.chat_user 2016-01-20 15:10:29.773  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000037: Columns: [nick_name, intita_user_id, id] 2016-01-20 15:10:29.773  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000108: Foreign keys: [] 2016-01-20 15:10:29.773  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000126: Indexes: [primary] 2016-01-20 15:10:29.787  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000261: Table found: qa_intita.chat_user_last_room_date 2016-01-20 15:10:29.787  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000037: Columns: [room_id, chat_user_id, id, last_logout] 2016-01-20 15:10:29.787  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000108: Foreign keys: [fk_tcagriy0qhcpqgarbl77lrkel, fk_l12n7117lch4gomo1egq6wabl] 2016-01-20 15:10:29.788  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000126: Indexes: [fk_tcagriy0qhcpqgarbl77lrkel, fk_l12n7117lch4gomo1egq6wabl, primary] 2016-01-20 15:10:29.804  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000261: Table found: qa_intita.chat_user_message 2016-01-20 15:10:29.805  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000037: Columns: [room_id, date, id, body, author_id] 2016-01-20 15:10:29.808  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000108: Foreign keys: [fk_fo86b284hr4fm8kaxxbx78a40, fk_2vqyb0vwecdl9a0b1lsdr6pac] 2016-01-20 15:10:29.808  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000126: Indexes: [fk_fo86b284hr4fm8kaxxbx78a40, fk_2vqyb0vwecdl9a0b1lsdr6pac, primary] 2016-01-20 15:10:29.834  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000261: Table found: qa_intita.user 2016-01-20 15:10:29.834  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000037: Columns: [birthday, firstname, education, role, linkedin, activkey_lifetime, network, password, twitter, identity, reg_time, nickname, id, state, email, googleplus, aboutus, address, facebook, middlename, avatar, token, secondname, full_name, aboutmy, phone, vkontakte, interests, hash, educform, status] 2016-01-20 15:10:29.834  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000108: Foreign keys: [] 2016-01-20 15:10:29.835  INFO 8584 --- [ost-startStop-1] o.hibernate.tool.hbm2ddl.TableMetadata   : HHH000126: Indexes: [primary] 2016-01-20 15:10:29.868 ERROR 8584 --- [ost-startStop-1] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000388: Unsuccessful: alter table chat_user add constraint FK_6s4ybyn17xe52cnebr26kooey foreign key (intita_user_id) references user (id) 2016-01-20 15:10:29.868 ERROR 8584 --- [ost-startStop-1] org.hibernate.tool.hbm2ddl.SchemaUpdate  : Impossible d''ajouter des contraintes d''index externe 2016-01-20 15:10:29.868  INFO 8584 --- [ost-startStop-1] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000232: Schema update complete Ram Shyam Mohan <<<<<<<<<<<< Ram admin user created admin user created 2016-01-20 15:10:31.606  INFO 8584 --- [ost-startStop-1] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern=''/css/**''], Ant [pattern=''/js/**''], Ant [pattern=''/images/**''], Ant [pattern=''/**/favicon.ico''], Ant [pattern=''/error'']]], [] 2016-01-20 15:10:31.876  INFO 8584 --- [ost-startStop-1] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d5e51d8, org.springframework.security.web.context.SecurityContextPersistenceFilter@4e9e550f, org.springframework.security.web.header.HeaderWriterFilter@faeb537, org.springframework.security.web.authentication.logout.LogoutFilter@7be5c09d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@768edfbd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6c5d663, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26017cfd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@96db01e, org.springframework.security.web.session.SessionManagementFilter@72705715, org.springframework.security.web.access.ExceptionTranslationFilter@778f5d51, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7c0b039e] 2016-01-20 15:10:31.920  INFO 8584 --- [ost-startStop-1] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@58bd3fd3, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@342fc1b3, org.springframework.security.web.context.SecurityContextPersistenceFilter@4968d01c, org.springframework.security.web.header.HeaderWriterFilter@b3ebc44, org.springframework.security.web.authentication.logout.LogoutFilter@5dbe99fe, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@e6ac8a0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@208c4b18, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e2e1fd1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7948364d, org.springframework.security.web.session.SessionManagementFilter@660ae64, org.springframework.security.web.access.ExceptionTranslationFilter@68702fb6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@67216bfc] admin user created 2016-01-20 15:10:32.681  INFO 8584 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  ''clientInboundChannelExecutor'' 2016-01-20 15:10:32.741  INFO 8584 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  ''clientOutboundChannelExecutor'' 2016-01-20 15:10:32.876  INFO 8584 --- [           main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  ''messageBrokerTaskScheduler'' 2016-01-20 15:10:33.065  INFO 8584 --- [           main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/ws/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler] 2016-01-20 15:10:33.317  INFO 8584 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  ''brokerChannelExecutor'' 2016-01-20 15:10:33.575  INFO 8584 --- [           main] .WebSocketAnnotationMethodMessageHandler : Mapped "{[/chat.login/{username}],messageType=[SUBSCRIBE]}" onto public java.util.Map<java.lang.String, java.lang.Long> com.intita.wschat.web.ChatController.login(java.security.Principal) 2016-01-20 15:10:33.576  INFO 8584 --- [           main] .WebSocketAnnotationMethodMessageHandler : Mapped "{[/{room}/chat.message],messageType=[MESSAGE]}" onto public com.intita.wschat.domain.ChatMessage com.intita.wschat.web.ChatController.filterMessage(java.lang.String,com.intita.wschat.domain.ChatMessage,java.security.Principal) 2016-01-20 15:10:33.576  INFO 8584 --- [           main] .WebSocketAnnotationMethodMessageHandler : Mapped "{[/{room}/chat.private.{username}],messageType=[MESSAGE]}" onto public void com.intita.wschat.web.ChatController.filterPrivateMessage(java.lang.String,com.intita.wschat.domain.ChatMessage,java.lang.String,java.security.Principal) 2016-01-20 15:10:33.576  INFO 8584 --- [           main] .WebSocketAnnotationMethodMessageHandler : Mapped "{[/chat.go.to.dialog/{roomId}],messageType=[MESSAGE]}" onto public void com.intita.wschat.web.ChatController.userGoToDialogListener(java.lang.String,java.security.Principal) 2016-01-20 15:10:33.576  INFO 8584 --- [           main] .WebSocketAnnotationMethodMessageHandler : Mapped "{[/chat.go.to.dialog.list/{roomId}],messageType=[MESSAGE]}" onto public void com.intita.wschat.web.ChatController.userGoToDialogListListener(java.lang.String,java.security.Principal) 2016-01-20 15:10:33.577  INFO 8584 --- [           main] .WebSocketAnnotationMethodMessageHandler : Mapped "{[/chat/rooms.{room}/user.add.{nickName}],messageType=[MESSAGE]}" onto public boolean com.intita.wschat.web.RoomController.addUserToRoom(java.lang.String,java.lang.String,java.security.Principal) 2016-01-20 15:10:33.577  INFO 8584 --- [           main] .WebSocketAnnotationMethodMessageHandler : Mapped "{[/chat/rooms/add.{name}],messageType=[MESSAGE]}" onto public boolean com.intita.wschat.web.RoomController.addRoomByAuthor(java.lang.String,java.security.Principal) 2016-01-20 15:10:33.577  INFO 8584 --- [           main] .WebSocketAnnotationMethodMessageHandler : Mapped "{[/chat/rooms.{room}/user.remove.{login}],messageType=[MESSAGE]}" onto public boolean com.intita.wschat.web.RoomController.removeUserFromRoom(java.lang.String,java.lang.Long,java.security.Principal) 2016-01-20 15:10:33.577  INFO 8584 --- [           main] .WebSocketAnnotationMethodMessageHandler : Mapped "{[/{room}/chat.participants],messageType=[SUBSCRIBE]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.intita.wschat.web.RoomController.retrieveParticipantsSubscribe(java.lang.String) 2016-01-20 15:10:33.578  INFO 8584 --- [           main] .WebSocketAnnotationMethodMessageHandler : Mapped "{[/chat/rooms/user.{username}],messageType=[MESSAGE]}" onto public java.util.Map<java.lang.Long, com.intita.wschat.web.RoomController$StringInt> com.intita.wschat.web.RoomController.getRoomsByAuthorMessage(java.security.Principal) 2016-01-20 15:10:33.578  INFO 8584 --- [           main] .WebSocketAnnotationMethodMessageHandler : Mapped "{[/chat/rooms/user.{username}],messageType=[SUBSCRIBE]}" onto public java.util.Map<java.lang.Long, com.intita.wschat.web.RoomController$StringInt> com.intita.wschat.web.RoomController.getRoomsByAuthorSubscribe(java.security.Principal) 2016-01-20 15:10:33.579  INFO 8584 --- [           main] .WebSocketAnnotationMethodMessageHandler : Mapped "{[/{room}/chat.participants],messageType=[MESSAGE]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.intita.wschat.web.RoomController.retrieveParticipantsMessage(java.lang.String) 2016-01-20 15:10:33.972  INFO 8584 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d1c005e: startup date [Wed Jan 20 15:10:15 EET 2016]; root of context hierarchy 2016-01-20 15:10:34.222  INFO 8584 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/get_users_emails_like],methods=[GET]}" onto public java.lang.String com.intita.wschat.web.ChatController.getEmailsLike(java.lang.String,java.lang.Long) throws com.fasterxml.jackson.core.JsonProcessingException 2016-01-20 15:10:34.224  INFO 8584 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/get_users_nicknames_like],methods=[GET]}" onto public java.util.Set<com.intita.wschat.event.LoginEvent> com.intita.wschat.web.ChatController.getNickNamesLike(java.lang.String,java.lang.Long) throws com.fasterxml.jackson.core.JsonProcessingException 2016-01-20 15:10:34.228  INFO 8584 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 2016-01-20 15:10:34.229  INFO 8584 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 2016-01-20 15:10:34.287  INFO 8584 --- [           main] o.s.w.s.c.a.WebMvcConfigurerAdapter      : Adding welcome page: class path resource [static/index.html] 2016-01-20 15:10:34.324  INFO 8584 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController] 2016-01-20 15:10:34.460  INFO 8584 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 2016-01-20 15:10:34.460  INFO 8584 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 2016-01-20 15:10:34.652  INFO 8584 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 2016-01-20 15:10:36.081  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal) 2016-01-20 15:10:36.083  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() 2016-01-20 15:10:36.084  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() 2016-01-20 15:10:36.086  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() 2016-01-20 15:10:36.087  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() 2016-01-20 15:10:36.091  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() 2016-01-20 15:10:36.094  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/websocketmappings || /websocketmappings.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() 2016-01-20 15:10:36.097  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String) 2016-01-20 15:10:36.098  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() 2016-01-20 15:10:36.099  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() 2016-01-20 15:10:36.100  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/websocketstats || /websocketstats.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() 2016-01-20 15:10:36.100  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/websockettrace || /websockettrace.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() 2016-01-20 15:10:36.102  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String) 2016-01-20 15:10:36.102  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() 2016-01-20 15:10:36.103  INFO 8584 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() 2016-01-20 15:10:37.090  INFO 8584 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup 2016-01-20 15:10:37.118  INFO 8584 --- [           main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0 2016-01-20 15:10:37.306  INFO 8584 --- [           main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647 2016-01-20 15:10:37.307  INFO 8584 --- [           main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting... 2016-01-20 15:10:37.307  INFO 8584 --- [           main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]] 2016-01-20 15:10:37.310  INFO 8584 --- [           main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started. 2016-01-20 15:10:37.496  INFO 8584 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http) 2016-01-20 15:10:37.509  INFO 8584 --- [           main] com.intita.wschat.Application            : Started Application in 23.597 seconds (JVM running for 24.977)', 40, 11, '2016-01-20 13:11:07'),
(81, 'jhgjgh', 40, 11, '2016-01-20 13:12:32');

-- --------------------------------------------------------

--
-- Структура таблицы `config`
--

CREATE TABLE IF NOT EXISTS `config` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `param` varchar(128) NOT NULL,
  `value` text NOT NULL,
  `default` text NOT NULL,
  `label` varchar(255) NOT NULL,
  `type` varchar(128) NOT NULL,
  `hidden` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=11 ;

--
-- Дамп данных таблицы `config`
--

INSERT INTO `config` (`id`, `param`, `value`, `default`, `label`, `type`, `hidden`) VALUES
(1, 'baseUrl', 'http://qa.intita.com', 'http://intita.com', 'Домен сайта', 'string', 0),
(2, 'baseUrlWithoutSchema', 'qa.intita.com', 'intita.com', 'Домен сайта без протокола', 'string', 0),
(3, 'openDialogPath', 'http://qa.intita.com/index.php?dialog=true', 'http://intita.com/index.php?dialog=true', 'Путь к главной странице - открытие окна входа (для форума).', 'string', 0),
(4, 'imagesPath', 'http://qa.intita.com/images', 'http://intita.com/IntITA/images', 'Путь к папке с изображениями', 'string', 0),
(5, 'adminEmail', 'Wizlightdragon@gmail.com', 'Wizlightdragon@gmail.com', 'Почта администратора сайта', 'string', 0),
(6, 'avatarsPath', 'http://qa.intita.com/avatars', 'http://intita.com/avatars', 'Путь к папке с аватарками', 'string', 0),
(7, 'commonPath', 'http://qa.intita.com/files', 'http://intita.com/files', 'Общие файлы (текстовые и т.д.)', 'string', 0),
(8, 'interpreterServer', 'http://ii.itatests.com', 'http://ii.itatests.com', 'Сервер интерпретатора задач (занятия)', 'string', 0),
(9, 'maintenanceMode', '0', '0', 'Режим технического обслуживания сайта', 'integer', 1),
(10, 'coeffIndependentModule', '1.5', '1.5', 'Коэффициент независимого модуля', 'float', 0);

-- --------------------------------------------------------

--
-- Структура таблицы `consultant_modules`
--

CREATE TABLE IF NOT EXISTS `consultant_modules` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `consultant` int(10) NOT NULL,
  `module` int(10) NOT NULL,
  `start_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `end_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK__teacher` (`consultant`),
  KEY `FK__module` (`module`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=12 ;

--
-- Дамп данных таблицы `consultant_modules`
--

INSERT INTO `consultant_modules` (`id`, `consultant`, `module`, `start_time`, `end_time`) VALUES
(1, 1, 1, '2015-12-12 15:32:01', NULL),
(2, 2, 1, '2015-12-12 15:32:01', NULL),
(3, 3, 1, '2015-12-12 15:32:01', NULL),
(4, 4, 2, '2015-12-12 15:32:01', NULL),
(5, 5, 4, '2015-12-12 15:32:01', NULL),
(6, 6, 3, '2015-12-12 15:32:01', NULL),
(7, 9, 3, '2015-12-12 15:32:01', NULL),
(8, 11, 2, '2015-12-12 15:32:01', NULL),
(9, 12, 3, '2015-12-12 15:32:01', NULL),
(10, 11, 3, '2015-12-12 15:32:01', NULL),
(11, 1, 179, '2015-12-25 12:57:07', NULL);

-- --------------------------------------------------------

--
-- Структура таблицы `consultations_calendar`
--

CREATE TABLE IF NOT EXISTS `consultations_calendar` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `teacher_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `lecture_id` int(11) DEFAULT NULL,
  `date_cons` date DEFAULT NULL,
  `start_cons` time DEFAULT NULL,
  `end_cons` time DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=219 ;

--
-- Дамп данных таблицы `consultations_calendar`
--

INSERT INTO `consultations_calendar` (`id`, `teacher_id`, `user_id`, `lecture_id`, `date_cons`, `start_cons`, `end_cons`) VALUES
(1, 1, 22, 1, '2015-07-16', '10:20:00', '10:40:00'),
(2, 1, 22, 1, '2015-07-16', '12:20:00', '12:40:00'),
(3, 1, 22, 1, '2015-07-16', '14:20:00', '14:40:00'),
(4, 1, 22, 1, '2015-07-29', '09:20:00', '09:40:00'),
(6, 1, 22, 1, '2015-07-29', '11:20:00', '11:40:00'),
(7, 1, 22, 1, '2015-07-29', '13:20:00', '13:40:00'),
(8, 1, 22, 1, '2015-07-29', '14:20:00', '14:40:00'),
(9, 1, 22, 1, '2015-07-29', '15:20:00', '15:40:00'),
(11, 2, 22, 1, '2015-07-16', '16:00:00', '16:20:00'),
(12, 2, 22, 1, '2015-07-16', '16:40:00', '17:40:00'),
(13, 2, 22, 2, '2015-07-09', '10:20:00', '10:40:00'),
(14, 2, 22, 2, '2015-07-17', '14:20:00', '14:40:00'),
(19, 3, 22, 2, '2015-07-10', '09:00:00', '11:40:00'),
(20, 3, 22, 2, '2015-07-10', '13:20:00', '13:40:00'),
(21, 3, 22, 2, '2015-07-10', '14:20:00', '14:40:00'),
(22, 3, 22, 2, '2015-07-10', '15:00:00', '16:00:00'),
(23, 3, 22, 2, '2015-07-10', '16:20:00', '16:40:00'),
(24, 3, 22, 2, '2015-07-10', '17:20:00', '17:40:00'),
(25, 3, 22, 2, '2015-07-10', '18:20:00', '18:40:00'),
(26, 3, 22, 2, '2015-07-10', '19:00:00', '20:00:00'),
(27, 3, 22, 2, '2015-07-10', '20:20:00', '20:40:00'),
(28, 3, 22, 2, '2015-07-10', '21:20:00', '21:40:00'),
(29, 3, 22, 2, '2015-07-10', '22:00:00', '23:00:00'),
(30, 1, 22, 1, '2015-07-10', '13:00:00', '13:20:00'),
(31, 3, 22, 1, '2015-07-23', '16:20:00', '16:40:00'),
(33, 2, 22, 15, '2015-07-15', '12:00:00', '12:20:00'),
(34, 2, 22, 1, '2015-07-21', '14:00:00', '14:20:00'),
(37, 1, 45, 1, '2015-07-13', '11:40:00', '12:00:00'),
(38, 1, 45, 1, '2015-07-13', '12:20:00', '12:40:00'),
(42, 1, 45, 1, '2015-07-13', '16:20:00', '16:40:00'),
(44, 1, 45, 1, '2015-07-13', '18:20:00', '18:40:00'),
(49, 2, 22, 1, '2015-07-16', '10:00:00', '10:20:00'),
(50, 1, 22, 1, '2015-07-15', '12:40:00', '13:00:00'),
(51, 1, 45, 80, '2015-07-13', '13:00:00', '14:20:00'),
(53, 1, 45, 80, '2015-07-13', '16:00:00', '16:20:00'),
(54, 1, 106, 1, '2015-07-16', '18:20:00', '18:40:00'),
(55, 1, 106, 1, '2015-07-22', '17:20:00', '17:40:00'),
(56, 3, 106, 1, '2015-07-16', '09:20:00', '09:40:00'),
(57, 3, 106, 1, '2015-07-24', '19:20:00', '19:40:00'),
(58, 2, 106, 1, '2015-07-23', '11:20:00', '11:40:00'),
(59, 2, 106, 1, '2015-07-23', '13:20:00', '13:40:00'),
(60, 4, 106, 91, '2015-07-16', '15:20:00', '15:40:00'),
(61, 4, 106, 23, '2015-07-24', '12:20:00', '12:40:00'),
(63, 1, 106, 1, '2015-07-24', '17:00:00', '17:20:00'),
(64, 2, 45, 80, '2015-07-22', '09:00:00', '09:20:00'),
(66, 4, 22, 22, '2015-07-24', '14:20:00', '14:40:00'),
(67, 2, 52, 81, '2015-07-23', '19:20:00', '19:40:00'),
(68, 1, 52, 81, '2015-07-24', '12:00:00', '12:20:00'),
(69, 1, 52, 81, '2015-07-24', '15:20:00', '15:40:00'),
(70, 1, 52, 81, '2015-07-24', '18:20:00', '18:40:00'),
(71, 1, 52, 81, '2015-07-24', '19:00:00', '19:20:00'),
(72, 3, 52, 81, '2015-07-30', '11:00:00', '11:20:00'),
(73, 3, 52, 81, '2015-07-30', '11:40:00', '12:00:00'),
(74, 3, 52, 81, '2015-07-30', '12:20:00', '12:40:00'),
(75, 6, 45, 100, '2015-07-22', '10:20:00', '10:40:00'),
(76, 4, 52, 22, '2015-07-23', '13:20:00', '13:40:00'),
(77, 4, 52, 22, '2015-07-24', '14:40:00', '15:00:00'),
(78, 4, 52, 22, '2015-08-21', '13:20:00', '13:40:00'),
(79, 1, 121, 118, '2015-07-24', '16:40:00', '17:00:00'),
(80, 6, 121, 101, '2015-07-24', '12:20:00', '12:40:00'),
(81, 2, 121, 133, '2015-07-27', '13:00:00', '13:20:00'),
(82, 2, 22, 126, '2015-07-30', '11:20:00', '11:40:00'),
(84, 2, 45, 117, '2015-07-24', '20:20:00', '20:40:00'),
(85, 3, 45, 117, '2015-07-27', '16:20:00', '16:40:00'),
(86, 6, 121, 100, '2015-08-04', '13:20:00', '13:40:00'),
(87, 6, 121, 100, '2015-07-29', '11:40:00', '12:00:00'),
(88, 6, 121, 100, '2015-07-29', '12:20:00', '12:40:00'),
(89, 3, 22, 117, '2015-07-28', '16:20:00', '16:40:00'),
(90, 1, 22, 117, '2015-07-29', '19:20:00', '19:40:00'),
(91, 2, 121, 117, '2015-07-28', '12:00:00', '12:20:00'),
(92, 6, 121, 107, '2015-07-30', '11:20:00', '11:40:00'),
(93, 2, 22, 127, '2015-07-30', '09:00:00', '11:20:00'),
(94, 2, 22, 127, '2015-07-30', '11:40:00', '23:00:00'),
(95, 2, 22, 127, '2015-08-05', '09:00:00', '09:20:00'),
(96, 2, 22, 127, '2015-08-05', '09:40:00', '10:00:00'),
(97, 2, 22, 127, '2015-08-05', '10:20:00', '10:40:00'),
(98, 2, 22, 127, '2015-08-05', '11:00:00', '11:20:00'),
(99, 2, 22, 127, '2015-08-05', '11:40:00', '12:00:00'),
(100, 2, 22, 127, '2015-08-05', '12:20:00', '12:40:00'),
(101, 2, 22, 127, '2015-08-05', '13:00:00', '13:20:00'),
(102, 2, 22, 127, '2015-08-05', '13:40:00', '14:00:00'),
(103, 2, 22, 127, '2015-08-05', '14:20:00', '14:40:00'),
(104, 2, 22, 127, '2015-08-05', '15:00:00', '15:20:00'),
(105, 2, 22, 127, '2015-08-05', '15:40:00', '16:00:00'),
(106, 2, 22, 127, '2015-08-05', '16:20:00', '16:40:00'),
(107, 2, 22, 127, '2015-08-05', '17:00:00', '17:20:00'),
(108, 2, 22, 127, '2015-08-05', '17:40:00', '18:00:00'),
(109, 2, 22, 127, '2015-08-05', '18:20:00', '18:40:00'),
(110, 2, 22, 127, '2015-08-05', '19:00:00', '19:20:00'),
(111, 2, 22, 127, '2015-08-05', '19:40:00', '20:00:00'),
(112, 2, 22, 127, '2015-08-05', '20:20:00', '20:40:00'),
(113, 2, 22, 127, '2015-08-05', '21:00:00', '21:20:00'),
(114, 2, 22, 127, '2015-08-05', '21:40:00', '22:00:00'),
(115, 2, 22, 127, '2015-08-05', '22:20:00', '22:40:00'),
(116, 6, 129, 110, '2015-07-31', '18:20:00', '18:40:00'),
(117, 1, 121, 117, '2015-07-31', '14:20:00', '14:40:00'),
(118, 3, 121, 117, '2015-08-07', '10:20:00', '10:40:00'),
(119, 1, 51, 117, '2015-08-07', '09:40:00', '10:00:00'),
(120, 2, 22, 117, '2015-08-20', '12:00:00', '12:20:00'),
(122, 1, 22, 117, '2015-08-27', '10:20:00', '10:40:00'),
(123, 1, 22, 117, '2015-08-27', '11:40:00', '12:00:00'),
(124, 1, 22, 117, '2015-08-27', '12:20:00', '12:40:00'),
(125, 1, 22, 117, '2015-08-27', '13:00:00', '13:20:00'),
(126, 1, 22, 117, '2015-08-27', '14:20:00', '14:40:00'),
(128, 1, 22, 117, '2015-08-27', '16:20:00', '16:40:00'),
(129, 1, 22, 117, '2015-08-27', '17:00:00', '17:20:00'),
(130, 1, 22, 117, '2015-08-27', '18:20:00', '18:40:00'),
(131, 1, 22, 117, '2015-08-27', '19:40:00', '20:00:00'),
(135, 3, 22, 117, '2015-08-20', '09:00:00', '09:20:00'),
(136, 3, 22, 117, '2015-08-20', '09:40:00', '10:00:00'),
(137, 3, 22, 117, '2015-08-20', '10:20:00', '10:40:00'),
(138, 3, 22, 117, '2015-08-20', '11:00:00', '11:20:00'),
(139, 3, 22, 117, '2015-08-20', '11:40:00', '12:00:00'),
(140, 3, 22, 117, '2015-08-20', '12:20:00', '12:40:00'),
(141, 3, 22, 117, '2015-08-20', '13:00:00', '13:20:00'),
(142, 3, 22, 117, '2015-08-20', '13:40:00', '14:00:00'),
(143, 3, 22, 117, '2015-08-20', '14:20:00', '14:40:00'),
(144, 3, 22, 117, '2015-08-20', '15:00:00', '15:20:00'),
(145, 3, 22, 117, '2015-08-20', '15:40:00', '16:00:00'),
(146, 3, 22, 117, '2015-08-20', '16:20:00', '16:40:00'),
(147, 3, 22, 117, '2015-08-20', '17:00:00', '17:20:00'),
(148, 3, 22, 117, '2015-08-20', '17:40:00', '18:00:00'),
(149, 3, 22, 117, '2015-08-20', '18:20:00', '18:40:00'),
(150, 3, 22, 117, '2015-08-20', '19:00:00', '19:20:00'),
(151, 3, 22, 117, '2015-08-20', '19:40:00', '20:00:00'),
(153, 3, 22, 117, '2015-08-20', '21:00:00', '21:20:00'),
(154, 3, 22, 117, '2015-08-20', '21:40:00', '22:00:00'),
(155, 3, 22, 117, '2015-08-20', '22:20:00', '22:40:00'),
(156, 2, 22, 117, '2015-08-20', '19:20:00', '19:40:00'),
(157, 1, 52, 117, '2015-08-20', '11:00:00', '11:20:00'),
(158, 1, 52, 117, '2015-08-20', '12:20:00', '12:40:00'),
(159, 1, 52, 117, '2015-08-20', '13:40:00', '14:00:00'),
(160, 1, 52, 117, '2015-08-20', '14:20:00', '14:40:00'),
(161, 1, 52, 117, '2015-08-20', '15:00:00', '15:20:00'),
(162, 1, 52, 117, '2015-08-20', '16:20:00', '16:40:00'),
(163, 1, 52, 117, '2015-08-20', '17:40:00', '18:00:00'),
(164, 2, 44, 117, '2015-08-19', '10:00:00', '10:20:00'),
(165, 1, 22, 117, '2015-08-20', '17:20:00', '17:40:00'),
(166, 2, 22, 117, '2015-08-18', '19:00:00', '19:20:00'),
(167, 6, 22, 102, '2015-08-20', '18:40:00', '19:00:00'),
(168, 1, 22, 117, '2015-08-19', '13:20:00', '13:40:00'),
(169, 4, 123, 242, '2015-08-20', '12:20:00', '12:40:00'),
(170, 4, 123, 235, '2015-08-27', '14:20:00', '14:40:00'),
(171, 2, 123, 117, '2015-08-19', '14:20:00', '14:40:00'),
(172, 2, 123, 117, '2015-08-21', '14:20:00', '14:40:00'),
(173, 4, 123, 237, '2015-08-20', '15:20:00', '15:40:00'),
(174, 1, 166, 117, '2015-08-20', '20:00:00', '20:20:00'),
(175, 1, 166, 117, '2015-08-27', '19:00:00', '19:20:00'),
(176, 6, 121, 111, '2015-08-26', '11:00:00', '12:00:00'),
(177, 6, 121, 111, '2015-08-26', '13:00:00', '14:00:00'),
(178, 6, 121, 111, '2015-08-26', '17:00:00', '18:00:00'),
(179, 2, 166, 126, '2015-08-24', '09:00:00', '09:20:00'),
(180, 4, 22, 238, '2015-08-26', '12:20:00', '12:40:00'),
(181, 4, 22, 238, '2015-08-26', '15:00:00', '15:40:00'),
(182, 4, 22, 238, '2015-08-26', '17:40:00', '18:20:00'),
(183, 4, 22, 238, '2015-08-26', '20:20:00', '20:40:00'),
(184, 4, 22, 238, '2015-08-26', '21:20:00', '22:20:00'),
(185, 1, 22, 118, '2015-08-27', '09:40:00', '10:00:00'),
(186, 2, 167, 117, '2015-09-01', '09:00:00', '09:20:00'),
(187, 2, 22, 118, '2015-09-02', '10:00:00', '10:20:00'),
(189, 2, 22, 117, '2015-09-23', '13:00:00', '14:40:00'),
(190, 2, 22, 117, '2015-09-23', '16:20:00', '16:40:00'),
(191, 2, 22, 117, '2015-09-23', '19:20:00', '19:40:00'),
(193, 6, 51, 100, '2015-09-10', '12:20:00', '12:40:00'),
(194, 2, 53, 130, '2015-09-15', '11:00:00', '14:40:00'),
(195, 4, 53, 236, '2015-10-01', '10:20:00', '10:40:00'),
(196, 4, 53, 236, '2015-10-01', '13:20:00', '13:40:00'),
(197, 4, 53, 236, '2015-10-01', '16:20:00', '16:40:00'),
(198, 9, 45, 103, '2015-10-01', '10:20:00', '10:40:00'),
(199, 9, 167, 100, '2015-10-08', '11:20:00', '11:40:00'),
(200, 9, 106, 105, '2015-10-08', '09:00:00', '11:20:00'),
(201, 9, 106, 105, '2015-10-08', '11:40:00', '13:20:00'),
(202, 11, 22, 103, '2015-10-08', '12:20:00', '12:40:00'),
(207, 1, 22, 117, '2015-12-28', '15:40:00', '23:00:00'),
(208, 1, 22, 117, '2015-12-29', '10:20:00', '10:40:00'),
(209, 12, 22, 111, '2015-12-30', '11:20:00', '11:40:00'),
(214, 1, 261, 127, '2016-01-05', '20:20:00', '21:00:00'),
(215, 11, 261, 100, '2016-01-25', '10:00:00', '10:40:00'),
(216, 11, 261, 100, '2016-01-25', '16:20:00', '16:40:00'),
(218, 11, 261, 100, '2016-01-21', '21:20:00', '21:40:00');

-- --------------------------------------------------------

--
-- Структура таблицы `course`
--

CREATE TABLE IF NOT EXISTS `course` (
  `course_ID` int(11) NOT NULL AUTO_INCREMENT,
  `alias` varchar(20) NOT NULL,
  `language` varchar(6) NOT NULL,
  `title_ua` varchar(100) NOT NULL,
  `title_ru` varchar(100) DEFAULT NULL,
  `title_en` varchar(100) DEFAULT NULL,
  `level` enum('intern','junior','strong junior','middle','senior') NOT NULL,
  `start` date DEFAULT NULL,
  `status` tinyint(4) NOT NULL,
  `modules_count` int(255) DEFAULT NULL,
  `course_duration_hours` int(11) NOT NULL,
  `course_price` decimal(10,0) DEFAULT NULL,
  `for_whom_ua` text,
  `what_you_learn_ua` text,
  `what_you_get_ua` text,
  `for_whom_ru` text,
  `what_you_learn_ru` text,
  `what_you_get_ru` text,
  `for_whom_en` text,
  `what_you_learn_en` text,
  `what_you_get_en` text,
  `course_img` varchar(255) DEFAULT 'courseimg1.png',
  `rating` tinyint(2) DEFAULT NULL,
  `cancelled` tinyint(1) NOT NULL DEFAULT '0',
  `course_number` int(10) DEFAULT NULL,
  PRIMARY KEY (`course_ID`),
  UNIQUE KEY `course` (`alias`),
  UNIQUE KEY `course_number` (`course_number`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='status: 0 - in develop, 1 - avaliable' AUTO_INCREMENT=41 ;

--
-- Дамп данных таблицы `course`
--

INSERT INTO `course` (`course_ID`, `alias`, `language`, `title_ua`, `title_ru`, `title_en`, `level`, `start`, `status`, `modules_count`, `course_duration_hours`, `course_price`, `for_whom_ua`, `what_you_learn_ua`, `what_you_get_ua`, `for_whom_ru`, `what_you_learn_ru`, `what_you_get_ru`, `for_whom_en`, `what_you_learn_en`, `what_you_get_en`, `course_img`, `rating`, `cancelled`, `course_number`) VALUES
(1, 'php', 'ua', 'Інтернет програміст (РНР)', 'Интернет программист (РНР)', 'Web developer (PHP)', 'strong junior', '2015-07-30', 1, 19, 89, '2320', 'хто відповідає за постановку завдань на розробку;для дизайнерів, які готові почати не просто малювати красиві картинки, а й навчитися тому, як створювати працюючі і зручні інтерфейси;для розробників, які хочуть самостійно створити або змінити свій проект\r\n', 'Ви навчитеся писати чистий код;Користуватися системами контролю версій;Дізнаєтеся, з чого складається сучасний додаток;Для чого потрібен безперервна інтеграція (СІ) сервер;Чому потрібно тестувати свої програми і як це робити', 'Відеозаписи та текстові матеріали всіх онлайн-занять;Спілкування з розумними одногрупниками;Сертифікат про закінчення навчання;Прилаштованість на робоче місце в силіконовій долині', 'кто отвечает за постановку задач на разработку;', 'Вы научитесь писать чистый кодd', 'Видеозаписи и текстовые материалы всех онлайн-занятий', 'who is responsible for setting objectives for development, for designers who are ready to start not just draw pretty pictures, but also learn how to create working and convenient interface, for developers who want to create their own or modify your project', 'What you learn description', 'What you get description', 'course2Image.png', 9, 0, NULL),
(2, 'javascript', 'ua', 'Інтернет програміст (Java Script)', 'Интернет программист  (Java Script)', 'Web developer (JavaScript)', 'strong junior', '2015-10-30', 1, 0, 120, '6500', 'хто відповідає за постановку завдань на розробку;для дизайнерів, які готові почати не просто малювати красиві картинки, а й навчитися тому, як створювати працюючі і зручні інтерфейси;для розробників, які хочуть самостійно створити або змінити свій проект\r\n [...]', 'Ви навчитеся писати чистий код;Користуватися системами контролю версій;Дізнаєтеся, з чого складається сучасний додаток;Для чого потрібен безперервна інтеграція (СІ) сервер;Чому потрібно тестувати свої програми і як це робити', 'Відеозаписи та текстові матеріали всіх онлайн-занять;Спілкування з розумними одногрупниками;Сертифікат про закінчення навчання;Прилаштованість на робоче місце в силіконовій долині', '', '', '', 'who is responsible for setting objectives for development, for designers who are ready to start not just draw pretty pictures, but also learn how to create working and convenient interface, for developers who want to create their own or modify your project', '', '', 'course9Image.png', 6, 0, NULL),
(3, 'java', 'ua', 'Програміст (Java)', 'Программист (Java)', 'Programmer  (Java)', 'strong junior', '2015-10-30', 0, 6, 30, '6700', 'хто відповідає за постановку завдань на розробку;для дизайнерів, які готові почати не просто малювати красиві картинки, а й навчитися тому, як створювати працюючі і зручні інтерфейси;для розробників, які хочуть самостійно створити або змінити свій проект\r\n [...]', 'Ви навчитеся писати чистий код;Користуватися системами контролю версій;Дізнаєтеся, з чого складається сучасний додаток;Для чого потрібен безперервна інтеграція (СІ) сервер;Чому потрібно тестувати свої програми і як це робити', 'Відеозаписи та текстові матеріали всіх онлайн-занять;Спілкування з розумними одногрупниками;Сертифікат про закінчення навчання;Прилаштованість на робоче місце в силіконовій долині', '', '', '', 'who is responsible for setting objectives for development, for designers who are ready to start not just draw pretty pictures, but also learn how to create working and convenient interface, for developers who want to create their own or modify your project', '', '', 'course3Image.png', 6, 0, NULL),
(4, 'csharp', 'ua', 'Програміст (C#)', 'Программист (C#)', 'Programmer(C#)', 'strong junior', '2015-10-30', 0, 2, 40, '6000', 'хто відповідає за постановку завдань на розробку;для дизайнерів, які готові почати не просто малювати красиві картинки, а й навчитися тому, як створювати працюючі і зручні інтерфейси;для розробників, які хочуть самостійно створити або змінити свій проект\r\n [...]', 'Ви навчитеся писати чистий код;Користуватися системами контролю версій;Дізнаєтеся, з чого складається сучасний додаток;Для чого потрібен безперервна інтеграція (СІ) сервер;Чому потрібно тестувати свої програми і як це робити', 'Відеозаписи та текстові матеріали всіх онлайн-занять;Спілкування з розумними одногрупниками;Сертифікат про закінчення навчання;Прилаштованість на робоче місце в силіконовій долині', '', '', '', 'who is responsible for setting objectives for development, for designers who are ready to start not just draw pretty pictures, but also learn how to create working and convenient interface, for developers who want to create their own or modify your project', '', '', 'course4Image.png', 6, 0, NULL),
(5, 'cplusplus', 'ua', 'Програміст (С++)', 'Программист (C++)', 'Programmer (С++)', 'intern', '2015-12-30', 0, 1, 36, '8200', 'хто відповідає за постановку завдань на розробку;для дизайнерів, які готові почати не просто малювати красиві картинки, а й навчитися тому, як створювати працюючі і зручні інтерфейси;для розробників, які хочуть самостійно створити або змінити свій проект\r\n [...]', 'Ви навчитеся писати чистий код;Користуватися системами контролю версій;Дізнаєтеся, з чого складається сучасний додаток;Для чого потрібен безперервна інтеграція (СІ) сервер;Чому потрібно тестувати свої програми і як це робити', 'Відеозаписи та текстові матеріали всіх онлайн-занять;Спілкування з розумними одногрупниками;Сертифікат про закінчення навчання;Прилаштованість на робоче місце в силіконовій долині', '', '', '', 'who is responsible for setting objectives for development, for designers who are ready to start not just draw pretty pictures, but also learn how to create working and convenient interface, for developers who want to create their own or modify your project', '', '', 'course2Image.png', 6, 0, NULL),
(6, 'objectivec', 'ua', 'Програміст (Objective С)', 'Программист (Objective С)', 'Programmer(Objective С)', 'middle', '2015-10-30', 0, -1, 130, '7100', 'хто відповідає за постановку завдань на розробку;для дизайнерів, які готові почати не просто малювати красиві картинки, а й навчитися тому, як створювати працюючі і зручні інтерфейси;для розробників, які хочуть самостійно створити або змінити свій проект\r\n [...]', 'Ви навчитеся писати чистий код;Користуватися системами контролю версій;Дізнаєтеся, з чого складається сучасний додаток;Для чого потрібен безперервна інтеграція (СІ) сервер;Чому потрібно тестувати свої програми і як це робити', 'Відеозаписи та текстові матеріали всіх онлайн-занять;Спілкування з розумними одногрупниками;Сертифікат про закінчення навчання;Прилаштованість на робоче місце в силіконовій долині', '', '', '', 'who is responsible for setting objectives for development, for designers who are ready to start not just draw pretty pictures, but also learn how to create working and convenient interface, for developers who want to create their own or modify your project', '', '', 'course8Image.png', 4, 0, NULL),
(7, 'qa', 'ua', 'Тестувальник (QA)', 'Тестировщик (QA)', 'Quality assurance engineer(QA)', 'senior', '2016-02-28', 0, 6, 64, '6100', 'хто відповідає за постановку завдань на розробку;для дизайнерів, які готові почати не просто малювати красиві картинки, а й навчитися тому, як створювати працюючі і зручні інтерфейси;для розробників, які хочуть самостійно створити або змінити свій проект\r\n [...]', 'Ви навчитеся писати чистий код;Користуватися системами контролю версій;Дізнаєтеся, з чого складається сучасний додаток;Для чого потрібен безперервна інтеграція (СІ) сервер;Чому потрібно тестувати свої програми і як це робити', 'Відеозаписи та текстові матеріали всіх онлайн-занять;Спілкування з розумними одногрупниками;Сертифікат про закінчення навчання;Прилаштованість на робоче місце в силіконовій долині', '', '', '', 'who is responsible for setting objectives for development, for designers who are ready to start not just draw pretty pictures, but also learn how to create working and convenient interface, for developers who want to create their own or modify your project', '', '', 'course7Image.png', 6, 0, NULL),
(13, 'english', 'ua', 'Англійська мова для ІТ', 'Английский язык для ИТ', 'English for IT', 'middle', '2015-12-30', 0, 3, 60, '2500', 'хто відповідає за постановку завдань на розробку;для дизайнерів, які готові почати не просто малювати красиві картинки, а й навчитися тому, як створювати працюючі і зручні інтерфейси;для розробників, які хочуть самостійно створити або змінити свій проект\r\n [...]', 'Ви навчитеся писати чистий код;Користуватися системами контролю версій;Дізнаєтеся, з чого складається сучасний додаток;Для чого потрібен безперервна інтеграція (СІ) сервер;Чому потрібно тестувати свої програми і як це робити', 'Відеозаписи та текстові матеріали всіх онлайн-занять;Спілкування з розумними одногрупниками;Сертифікат про закінчення навчання;Прилаштованість на робоче місце в силіконовій долині', '', '', '', 'who is responsible for setting objectives for development, for designers who are ready to start not just draw pretty pictures, but also learn how to create working and convenient interface, for developers who want to create their own or modify your project', '', '', 'course11Image.png', 6, 0, NULL),
(14, 'career', 'ua', 'Побудова успішної ІТ кар’єри', 'Построение успешной ИТ-карьеры', 'How to build a  successful career in IT', 'senior', '2015-12-30', 0, 3, 0, '0', 'хто відповідає за постановку завдань на розробку;для дизайнерів, які готові почати не просто малювати красиві картинки, а й навчитися тому, як створювати працюючі і зручні інтерфейси;для розробників, які хочуть самостійно створити або змінити свій проект\r\n [...]', '', '', NULL, NULL, NULL, 'who is responsible for setting objectives for development, for designers who are ready to start not just draw pretty pictures, but also learn how to create working and convenient interface, for developers who want to create their own or modify your project', NULL, NULL, 'course3Image.png', 1, 0, NULL),
(18, 'verstka', 'ua', 'Верстальник сайтів (HTML, CSS)', 'Верстальщик сайтов (HTML, CSS)', 'Website layout specialist (HTML, CSS)', 'middle', '2015-12-30', 0, -1, 0, '5200', '', '', '', '', '', '', 'who is responsible for setting objectives for development, for designers who are ready to start not just draw pretty pictures, but also learn how to create working and convenient interface, for developers who want to create their own or modify your project', '', '', 'course3Image.png', NULL, 0, NULL),
(19, 'phpru', 'ru', 'Інтернет програміст (РНР)', 'Интернет программист (РНР)', 'Web developer(PHP)', 'strong junior', '2015-07-30', 0, 14, 0, '6200', '', '', '', '', '', '', 'who is responsible for setting objectives for development, for designers who are ready to start not just draw pretty pictures, but also learn how to create working and convenient interface, for developers who want to create their own or modify your project', '', '', 'course1Image.png', NULL, 0, NULL),
(20, 'englishru', 'ru', 'Англійська мова для ІТ', 'Английский язык для ИТ', 'English for IT', 'middle', '2015-12-30', 0, 3, 0, '5600', '', '', '', '', '', '', 'who is responsible for setting objectives for development, for designers who are ready to start not just draw pretty pictures, but also learn how to create working and convenient interface, for developers who want to create their own or modify your project', '', '', 'course1Image.png', NULL, 1, NULL),
(21, 'careerru', 'ru', 'Побудова успішної ІТ кар’єри', 'Как построить успешную ІТ карьеру', 'How to build a  successful career in IT', 'senior', '2015-12-30', 0, 3, 0, '4500', '', '', '', '', '', '', 'who is responsible for setting objectives for development, for designers who are ready to start not just draw pretty pictures, but also learn how to create working and convenient interface, for developers who want to create their own or modify your project', '', '', 'course1Image.png', NULL, 0, NULL),
(22, 'frontend', 'ua', 'FrontEnd розробник (HTML/CSS, JavaScript)', 'FrontEnd разработчик (HTML/CSS, JavaScript)', 'FrontEnd developer (HTML/CSS, JavaScript)', 'strong junior', '2015-09-01', 0, 7, 0, '773', '', '', '', '', '', '', '', '', '', 'course8Image.png', NULL, 1, NULL),
(23, 'cddddfd', 'ua', 'Тестовий курс1', '', '', 'intern', NULL, 0, NULL, 0, '0', '', '', '', '', '', '', '', '', '', 'траляля.jpg', NULL, 1, NULL),
(24, 'ррррррррррррр', 'ua', 'Тестовий курс2', '', '', 'intern', NULL, 0, 0, 0, '0', '', '', '', '', '', '', '', '', '', '2.jpg', NULL, 0, NULL),
(25, 'ddddddd', 'ua', 'Тестовий курс3', '', '', 'intern', NULL, 0, NULL, 0, '0', '', '', '', '', '', '', '', '', '', NULL, NULL, 1, NULL),
(26, 'Курс новий', 'en', 'Тестовий курс4', 'Курс новий', 'Курс новий', 'middle', '2015-12-12', 0, NULL, 10, '2500', '', '', '', '', '', '', '', '', '', NULL, NULL, 1, 25),
(27, 'df', 'ua', 'Тестовий курс5', '', '', 'intern', NULL, 0, NULL, 0, '0', '', '', '', '', '', '', '', '', '', 'courseImage.png', NULL, 1, NULL),
(28, 'пппппппп', 'ua', 'Тестовий курс6', '', '', 'intern', NULL, 0, NULL, 0, '0', '', '', '', '', '', '', '', '', '', 'courseImage.png', NULL, 1, NULL),
(29, '2', 'ua', 'course', '', '', 'intern', NULL, 0, 0, 0, '7700', '', '', '', '', '', '', '', '', '', 'courseImage.png', NULL, 1, NULL),
(30, '344', 'ua', 'Тестовий курс', 'Тестовый курс ', 'Testing course', 'intern', '2015-12-11', 0, NULL, 0, '4200', '', '', '', '', '', '', '', '', '', '11327_94184-700x700.jpg', NULL, 1, NULL),
(31, '01', 'ua', 'Тест-курс', 'Тест-курс', 'Test-course', 'middle', '2016-01-01', 0, 4, 120, '0', '', 'Для студентів 5-11 класів', '', '', '', '', '', '', '', 'courseImage.png', NULL, 0, NULL),
(32, '09', 'ua', 'Курси', 'Курсы', 'Course', 'junior', '2016-01-01', 0, NULL, 130, '0', 'Для студентів вищих навчальних закладів....0', 'Для студентів вищих навчальних закладів....0', 'Для студентів вищих навчальних закладів....0', 'Для студентів вищих навчальних закладів....1', 'Для студентів вищих навчальних закладів....1', 'Для студентів вищих навчальних закладів....1', 'Для студентів вищих навчальних закладів....2', 'Для студентів вищих навчальних закладів....2', 'Для студентів вищих навчальних закладів....2', '991337815.gif', NULL, 0, 12),
(33, '55', 'ua', 'Курс-тестувальник', 'Курс-тестувальник', '', 'strong junior', '2016-01-01', 0, 0, 120, '2900', '', '', '', '', '', '', '', '', '', 'Photo-0038.jpg', NULL, 0, 55),
(34, 'hello', 'ua', 'new Test', '', '', 'intern', NULL, 0, 3, 0, '0', '', '', '', '', '', '', '', '', '', 'course3Image.png', NULL, 1, NULL),
(35, 'gdfgdfgdfg', 'ua', 'hello', '', '', 'intern', NULL, 0, NULL, 0, '0', '', '', '', '', '', '', '', '', '', 'courseImage.png', NULL, 0, NULL),
(36, 'asdasdas', 'ua', 'asdasd', '', '', 'intern', NULL, 0, NULL, 0, '0', '', '', '', '', '', '', '', '', '', 'courseImage.png', NULL, 1, NULL),
(37, '44', 'ua', 'Стажування 1', 'Стажировка 1', 'gfdhh', 'middle', '2016-01-02', 0, NULL, 130, NULL, 'печопопсрлс', 'чегоеншоншншл', 'говеноншнго', '', '', '', '', '', '', 'courseImage.png', NULL, 0, 56),
(38, 'r1', 'ua', 'Курс кройки і шиття', 'Курс кройки и шитья', 'Sewing course', 'junior', '2016-01-16', 0, 2, 92, NULL, 'Для випускників шкіл і технікумів.', 'Для людей, бажаючих навчитися робити викройки і шити дизайнерський одяг.', 'Вміння та навички створювати дизайнерський одяг за власними ескізами.', 'Для выпускников школ и техникумов.', 'Для людей, желающих научиться делать выкройки и шить дизайнерскую одежду.', 'Умения и навыки создавать дизайнерскую одежду по собственным эскизам.', 'For graduates of schools and colleges.', 'For people who want to learn to sew designer clothes.', 'Get the skills to create designer clothing', 'модуль.png', NULL, 0, 45),
(39, '777', 'ua', 'Управління персоналом (TEAM)', 'Управление персоналом ', '(TEAM)', 'intern', NULL, 1, 4, 145, NULL, '', '', '', '', '', '', '', '', '', 'courseImage.png', NULL, 0, NULL),
(40, '977', 'ua', '(TEAM)1', ' (TEAM)1', ' (TEAM)1', 'intern', NULL, 0, 4, 135, NULL, '', '', '', '', '', '', '', '', '', 'LdeKeqyiSko.jpg', NULL, 0, 15);

-- --------------------------------------------------------

--
-- Структура таблицы `course_languages`
--

CREATE TABLE IF NOT EXISTS `course_languages` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `lang_ua` int(10) NOT NULL,
  `lang_ru` int(10) NOT NULL,
  `lang_en` int(10) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_course_languages_course_2` (`lang_ua`),
  KEY `FK_course_languages_course` (`lang_ru`),
  KEY `FK_course_languages_course_3` (`lang_en`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='Table for connecting similar courses on different languages.' AUTO_INCREMENT=7 ;

--
-- Дамп данных таблицы `course_languages`
--

INSERT INTO `course_languages` (`id`, `lang_ua`, `lang_ru`, `lang_en`) VALUES
(3, 1, 19, 0),
(4, 14, 21, 0),
(6, 13, 20, 0);

-- --------------------------------------------------------

--
-- Структура таблицы `course_modules`
--

CREATE TABLE IF NOT EXISTS `course_modules` (
  `id_course` int(10) NOT NULL,
  `id_module` int(10) NOT NULL,
  `order` int(10) NOT NULL,
  `mandatory_modules` int(10) DEFAULT NULL,
  `price_in_course` int(10) DEFAULT NULL,
  KEY `FK_course_modules_course` (`id_course`),
  KEY `FK_course_modules_module` (`id_module`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `course_modules`
--

INSERT INTO `course_modules` (`id_course`, `id_module`, `order`, `mandatory_modules`, `price_in_course`) VALUES
(1, 1, 1, NULL, NULL),
(1, 2, 2, NULL, NULL),
(1, 3, 3, NULL, NULL),
(1, 4, 4, NULL, NULL),
(1, 7, 5, NULL, NULL),
(1, 9, 6, NULL, NULL),
(1, 10, 7, NULL, NULL),
(1, 11, 8, NULL, NULL),
(1, 16, 10, NULL, NULL),
(1, 17, 12, NULL, NULL),
(1, 18, 13, NULL, NULL),
(1, 20, 15, NULL, NULL),
(1, 23, 17, NULL, NULL),
(13, 54, 1, NULL, NULL),
(13, 55, 2, NULL, NULL),
(13, 56, 3, NULL, NULL),
(14, 58, 1, NULL, NULL),
(14, 59, 2, NULL, NULL),
(14, 60, 3, NULL, NULL),
(3, 1, 1, NULL, NULL),
(3, 2, 2, NULL, NULL),
(3, 3, 3, NULL, NULL),
(19, 82, 1, NULL, NULL),
(19, 83, 2, NULL, NULL),
(19, 84, 3, NULL, NULL),
(19, 85, 4, NULL, NULL),
(19, 86, 5, NULL, NULL),
(19, 87, 6, NULL, NULL),
(19, 88, 7, NULL, NULL),
(19, 89, 8, NULL, NULL),
(19, 90, 9, NULL, NULL),
(19, 91, 10, NULL, NULL),
(19, 92, 11, NULL, NULL),
(19, 93, 12, NULL, NULL),
(19, 94, 13, NULL, NULL),
(19, 95, 14, NULL, NULL),
(21, 96, 1, NULL, NULL),
(21, 97, 2, NULL, NULL),
(21, 98, 3, NULL, NULL),
(20, 99, 1, NULL, NULL),
(20, 100, 2, NULL, NULL),
(20, 101, 3, NULL, NULL),
(1, 121, 9, NULL, NULL),
(1, 122, 11, NULL, NULL),
(1, 123, 18, NULL, NULL),
(22, 1, 1, NULL, NULL),
(22, 2, 2, NULL, NULL),
(22, 126, 3, NULL, NULL),
(22, 127, 4, NULL, NULL),
(22, 128, 5, NULL, NULL),
(22, 129, 6, NULL, NULL),
(22, 130, 7, NULL, NULL),
(1, 131, 14, NULL, NULL),
(1, 132, 16, NULL, NULL),
(4, 139, 1, NULL, NULL),
(7, 141, 2, NULL, NULL),
(7, 142, 3, NULL, NULL),
(7, 143, 4, NULL, NULL),
(5, 11, 2, NULL, NULL),
(7, 144, 5, NULL, NULL),
(7, 146, 1, NULL, NULL),
(5, 147, 1, NULL, NULL),
(5, 70, 3, NULL, NULL),
(7, 148, 6, NULL, NULL),
(7, 148, 7, NULL, NULL),
(3, 148, 8, NULL, NULL),
(3, 148, 8, NULL, NULL),
(3, 148, 8, NULL, NULL),
(4, 148, 2, NULL, NULL),
(4, 148, 3, NULL, NULL),
(3, 150, 7, NULL, NULL),
(7, 151, 8, NULL, NULL),
(7, 152, 9, NULL, NULL),
(1, 155, 19, NULL, NULL),
(24, 158, 1, 158, NULL),
(3, 22, 4, NULL, NULL),
(7, 162, 10, NULL, NULL),
(29, 163, 1, NULL, NULL),
(1, 164, 20, NULL, NULL),
(30, 1, 1, NULL, NULL),
(31, 166, 1, NULL, 166),
(31, 167, 2, NULL, NULL),
(34, 172, 2, NULL, NULL),
(34, 173, 3, NULL, NULL),
(34, 174, 1, NULL, NULL),
(34, 175, 4, NULL, NULL),
(36, 177, 1, NULL, NULL),
(31, 3, 3, NULL, NULL),
(23, 3, 1, NULL, NULL),
(25, 2, 1, NULL, NULL),
(25, 11, 2, NULL, NULL),
(38, 179, 1, NULL, NULL),
(38, 181, 2, NULL, NULL),
(31, 183, 4, NULL, NULL),
(38, 186, 3, NULL, NULL),
(39, 187, 1, NULL, NULL),
(39, 188, 2, NULL, NULL),
(39, 190, 3, NULL, NULL),
(39, 191, 4, NULL, NULL),
(38, 2, 4, NULL, NULL),
(4, 23, 4, NULL, NULL),
(40, 192, 1, NULL, NULL),
(40, 193, 2, NULL, NULL),
(40, 195, 3, NULL, NULL),
(40, 196, 4, NULL, NULL),
(24, 7, 2, NULL, NULL),
(24, 7, 3, NULL, NULL);

-- --------------------------------------------------------

--
-- Структура таблицы `element_type`
--

CREATE TABLE IF NOT EXISTS `element_type` (
  `id` tinyint(4) NOT NULL AUTO_INCREMENT,
  `type` varchar(15) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='Types of lecture elements.' AUTO_INCREMENT=14 ;

--
-- Дамп данных таблицы `element_type`
--

INSERT INTO `element_type` (`id`, `type`) VALUES
(1, 'text'),
(2, 'video'),
(3, 'code'),
(4, 'example'),
(5, 'task'),
(6, 'plaintask'),
(7, 'instruction'),
(8, 'label'),
(9, 'skip task'),
(10, 'formula'),
(11, 'table'),
(12, 'test'),
(13, 'final test');

-- --------------------------------------------------------

--
-- Структура таблицы `footer`
--

CREATE TABLE IF NOT EXISTS `footer` (
  `footerID` int(11) NOT NULL AUTO_INCREMENT,
  `imageSotial` varchar(255) NOT NULL,
  `phone` varchar(40) NOT NULL,
  `mobile` varchar(40) NOT NULL,
  `email` varchar(50) NOT NULL,
  `imageUp` varchar(255) NOT NULL,
  PRIMARY KEY (`footerID`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=4 ;

--
-- Дамп данных таблицы `footer`
--

INSERT INTO `footer` (`footerID`, `imageSotial`, `phone`, `mobile`, `email`, `imageUp`) VALUES
(1, '/css/images/sotial.gif', 'телефон: +38 0432 52 82 67 ', 'тел. моб. +38 067 431 20 10', 'e-mail: intita.hr@gmail.com', '/css/images/go_up.png'),
(2, '/css/images/sotial.gif', 'tel.: +38 0432 52 82 67', 'mobile +38 067 431 20 10', 'e-mail: intita.hr@gmail.com', '/css/images/go_up.png'),
(3, '/css/images/sotial.gif', 'телефон: +38 0432 52 82 67', 'тел. моб. +38 067 431 20 10', 'e-mail: intita.hr@gmail.com', '/css/images/go_up.png');

-- --------------------------------------------------------

--
-- Структура таблицы `graduate`
--

CREATE TABLE IF NOT EXISTS `graduate` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `first_name` varchar(255) DEFAULT NULL,
  `last_name` varchar(255) DEFAULT NULL,
  `avatar` varchar(255) DEFAULT 'noname2.png',
  `graduate_date` date DEFAULT NULL,
  `position` varchar(255) DEFAULT NULL,
  `work_place` varchar(255) DEFAULT NULL,
  `work_site` varchar(255) DEFAULT NULL,
  `courses_page` varchar(255) DEFAULT NULL,
  `history` varchar(255) DEFAULT NULL,
  `rate` tinyint(4) DEFAULT NULL,
  `recall` text,
  `first_name_en` varchar(50) DEFAULT NULL,
  `last_name_en` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=21 ;

--
-- Дамп данных таблицы `graduate`
--

INSERT INTO `graduate` (`id`, `first_name`, `last_name`, `avatar`, `graduate_date`, `position`, `work_place`, `work_site`, `courses_page`, `history`, `rate`, `recall`, `first_name_en`, `last_name_en`) VALUES
(1, 'Олена', 'Дубровіна', 'elena.jpg', '2015-01-23', 'junior Ruby developer', 'Freelancer', 'https://www.google.com/about/careers/', '3', '', 10, 'Намагаючись знайти себе у справі, яка була б справді до душі, я спробувала різні сфери діяльності. Коли зацікавилась програмуванням, переді мною було два шляхи: або продовжувати й далі самостійно та безсистемно вивчати то ту, то іншу мову, або йти навчатись у спеціалізований заклад, де б мені могли передати досвід та вчасно вказати на помилки і невірно обраний шлях. Адже мов програмування на сьогодні дуже багато, і ще більше технологій, які використовуються разом з ними. Що на сьогодні актуально і що корисно, можуть знати лише практикуючі програмісти. Тому, коли друзі порадили ІТ Академію, це і стало головним для мене аргументом у виборі спеціалізованого закладу: всі викладачі тут практики, кожен з яких має досить великий досвід у програмуванні. \r\nНавчання проходило у дружній атомосфері. Тут не практикують академізму, немає бар''єру між викладачами і студентами, але в той же час байдикувати не дадуть. \r\nДля мене великим плюсом навчання стала велика кількість пройденого матеріалу за різними напрямками програмування. На сьогодні, працюючи програмістом, я постійно використовую технології, які були вивчені в ІТ Академії. Тобто навчання тут актуальне і відповідає вимогам ІТ ринку. Не зайвим було вивчення і дискретної математики, знання якої зараз також постійно стають у нагоді. Приємним бонусом було те, що в ІТ Академії для програмістів є курс англійської мови, який викладається також на високому рівні.\r\nІТ Академія може стати гарним путівником для тих, хто розуміє, що на ній навчання не закінчується і що взагалі професія програміста вимагає постійного навчання. ІТ Академія дає хороші ази програмування, дає можливість попрактикуватись на різних мовах і технологіях, знайти те, що цікаво, і, що не менш важливо для програміста, навчає культурі програмування.', 'Olena', 'Dubrovina'),
(2, 'Максим', 'Жук', 'noname2.png', '2015-05-12', 'Web-developer. Team leader', 'RIA', 'http://www.dom.ria.com', '1', '', 10, 'Про академію, можна написати, що дала хороші базові знання в області програмування, що забезпечило швидке кар’єрне зростання, впевненість у колективі більш досвідчених програмістів та розуміння подальшого плану розвитку, як спеціаліста. Також спілкування з однодумцями в групі, робота в команді і т.п.', 'Maksym', 'Zhuk'),
(3, 'Федоренко', 'Олександр', 'noname2.png', '2015-05-12', 'Java developer', 'Luxoft Ukraine', 'http://www.luxoft.com/ukraine/', '1', '', 10, ' ІТ-Академія дає достатню кількість знань та вмінь, щоб влаштуватись на роботу програмістом в будь-яку ІТ компанію України і, покищо, я не знаю альтернатив (ні державних, ні приватних навчальних закладів) якісної підготовки саме програмістів “з нуля” і за такий короткий термін. Дуже багато практики і цікавих реальних проектів. Всі викладачі - практикуючі програмісти.', 'Fedorenko', 'Oleksandr'),
(4, 'Чех', 'Іванна', 'noname2.png', '2015-05-12', 'Web-developer', 'Freelancer', 'http://intita.com/', '1', '', 10, 'Є декілька моментів, які вирізняють ІТ-Академію з поміж інших. Перш за все, це принцип самомотивації студентів, тобто студент вчиться не тому, що від нього вимагають батьки, ректор чи декан, а тому що розуміє цінність і потрібність знань. Інший важливий момент - це навчальна програма, яка побудована за принципом - “все необхідне і нічого зайвого”. Це допомагає концентруватися на головному та пов''язувати знання в систему - починаючи від звичайної вищої математики і аж до сучасних фреймворків та об’єктно-орієнтованих мов програмування.\r\nТретій аспект - комплексність навчальної програми, яка закладає підґрунтя для подальшого розвитку програміста у будь-якому напрямку - від веб-дизайнера до IT Architect’а. Знання вищої математики, дискретної математики, баз даних, алгоритмів, принципів веб-, процедурного та об’єктно-орієнтованого програмування дає можливість студенту обирати будь-яку спеціалізацію у сфері ІТ.\r\nІ останній момент - це практичне спрямування. Базові знання в ІТ-Академії подаються в класичному університетському вигляді - лекції, домашнє завдання, екзамени. Але потім вони обов''язково закріплюються на практиці, під керівництвом досвідчених програмістів провідних ІТ-компаній.\r\nЗагалом, ІТ-Академія - це гарний шанс стати програмістом, якщо ти готовий реально вчитися і працювати над цим.', 'Chekh', 'Ivanna'),
(5, 'Сергій', 'Петросюк', 'noname2.png', '2015-05-12', 'Junior Android Developer', 'Mlsdev', 'http://mlsdev.com/', '1', '', 10, 'Мабуть перші два питання, якими задається кожен, хто хоч раз замислювався про те, чи варто починати навчання в ІТ Академії, це:\r\n1) чи варте воно того щоб платити такі реально не малі гроші?\r\n2) чи справді забезпечать роботою, чи це лише такий собі піар-хід щоб заманити людей і качнути з них грошей?\r\nЯ також задавався цими питаннями і дуже довго вагався перед прийняттям свого рішення. Вирішив ризикнути... Саме ризикнути тому, що в інтернеті наткнувся і на негативні відгуки.\r\nАле вже через 1.5 місяці я зрозумів, що зробив правильний вибір.\r\nСтосовно навчального процесу:\r\n1) Викладачі дійсно знають свою справу, усі вони є практиками. Всі вони працюють  в потужних ІТ компаніях і всі мають за плечима більш-ніж 5 років досвіду.\r\n2) Викладачам не бракує завзяття і терпіння в тому щоб навчити навіть абсолютно нульових, і в них це виходить!\r\n3) Проекти для курсових та дипломних дуже цікаві і в той самий час не прості.\r\n4) Ніхто не виділяє серед студентів "улюбленців", що мені особливо сподобалось.\r\n5) Приділяється значна увага сучасним технологіям\r\nПрацевлаштували мене ще за 2 місяці до завершення навчання, в компанію RIA. Працював на проекті (http://www.ria.com/). Також успішно пройшов співбесіду в компінії EPAM на посаду junior Java developer, але через відсутність проектів і великої кількості джавістів на бенчі (ті, хто чекають поки компанія отримає проект) мені відмовили.\r\nЗараз працюю в компанії - http://mlsdev.com/ на посаді Junior Android Developer.', 'Serhii', 'Petrosiuk'),
(6, 'Олександр', 'Бохан', 'noname2.png', '2015-05-12', 'Web-developer', 'Freelancer', 'http://kavadrive.com/', '1', '', 10, 'Одвічна проблема традиційної української освіти – велика кількість непотрібного. Студенти роками вивчають непотрібні їм дисципліни, завчають інформацію, яка ніколи не знадобиться. Потім приходять на роботу, де з’ясовується, що там вимагаються зовсім інші знання та навички.\r\nНаша (тому, що рідна) Академія пішла революційним шляхом. З навчальної програми викреслено все зайве. Ми не вивчаємо гуманітарних дисциплін, не вникаємо у захмарний рівень науки. Все суто практично: працівники ІТ-компаній навчають студентів саме тим знанням, які вони бажають бачити у своїх майбутніх підлеглих.\r\nВ ІТ-академії проходять:\r\nсучасні технології, які використовуються у роботі компаній\r\nактуальні для даного періоду часу мови програмування\r\nзавдання подібні до тих, які виникають перед працівниками на робочому місці\r\nВ ІТ-академії немає:\r\nнудних лекцій за матеріалами 20-річної давнини\r\nнікому не потрібних завдань «для галочки»\r\nісторії, культорології, мовознавства, філософії...\r\nА ще тут всюди англійська мова. Не лише як окрема дисципліна. Вона постійно застосовується під час вивчення програмування і виконання завдань.', 'Oleksandr', 'Bokhan'),
(17, 'Valeriy', 'Ex', 'LdeKeqyiSko.jpg', '2015-10-10', 'developer', 'EX', '', '3', 'Story', 10, 'Text', 'Valeriy', 'Ex'),
(18, 'Valeriy', 'Ex', 'noname2.png', '2015-10-10', 'developer', 'EX', NULL, '3', 'Story', 10, '', 'Valeriy', 'Ex'),
(19, 'Vlad', 'Romanov', 'noname2.png', '0000-00-00', '', '', '', '1', '', NULL, '', '', ''),
(20, 'Антон', 'Малинков', 'spellcheck2.png', '0000-00-00', '', '', '', '1', '', NULL, '', '', '');

-- --------------------------------------------------------

--
-- Структура таблицы `header`
--

CREATE TABLE IF NOT EXISTS `header` (
  `headerID` int(11) NOT NULL AUTO_INCREMENT,
  `logoURL` varchar(255) NOT NULL,
  `smallLogoURL` varchar(255) NOT NULL,
  `item1Link` varchar(255) NOT NULL,
  `item2Link` varchar(255) NOT NULL,
  `item3Link` varchar(255) NOT NULL,
  `item4Link` varchar(255) NOT NULL,
  PRIMARY KEY (`headerID`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

--
-- Дамп данных таблицы `header`
--

INSERT INTO `header` (`headerID`, `logoURL`, `smallLogoURL`, `item1Link`, `item2Link`, `item3Link`, `item4Link`) VALUES
(1, '/css/images/Logo_big.png', '/css/images/Logo_small.png', '/courses', '/teachers', '/forum', '/aboutus'),
(2, '/css/images/Logo_big.png', '/css/images/Logo_small.png', '/courses', '/teachers', '/forum', '/aboutus');

-- --------------------------------------------------------

--
-- Структура таблицы `leader_modules`
--

CREATE TABLE IF NOT EXISTS `leader_modules` (
  `leader` int(10) NOT NULL,
  `module` int(10) NOT NULL,
  KEY `FK_leader_modules_teacher` (`leader`),
  KEY `FK_leader_modules_module` (`module`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `leader_modules`
--

INSERT INTO `leader_modules` (`leader`, `module`) VALUES
(5, 54),
(5, 18),
(5, 56),
(6, 7),
(6, 56),
(6, 54),
(6, 16);

-- --------------------------------------------------------

--
-- Структура таблицы `lectures`
--

CREATE TABLE IF NOT EXISTS `lectures` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `image` varchar(255) NOT NULL DEFAULT 'lectureImage.png',
  `alias` varchar(10) NOT NULL,
  `idModule` int(11) DEFAULT NULL,
  `order` int(11) DEFAULT NULL,
  `title_ua` varchar(255) NOT NULL,
  `title_ru` varchar(255) NOT NULL,
  `title_en` varchar(255) NOT NULL,
  `idType` int(11) DEFAULT '1',
  `durationInMinutes` int(11) DEFAULT '60',
  `idTeacher` varchar(50) DEFAULT NULL,
  `isFree` tinyint(1) NOT NULL DEFAULT '0',
  `rate` int(2) NOT NULL DEFAULT '0',
  `verified` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='isFree ( 0 - pay, 1 - demo lecture)' AUTO_INCREMENT=591 ;

--
-- Дамп данных таблицы `lectures`
--

INSERT INTO `lectures` (`id`, `image`, `alias`, `idModule`, `order`, `title_ua`, `title_ru`, `title_en`, `idType`, `durationInMinutes`, `idTeacher`, `isFree`, `rate`, `verified`) VALUES
(22, 'lectureImage.png', 'lecture1', 0, 0, 'Взаємодія PHP і XML', '', '', 1, 60, '1', 0, 4, 0),
(23, 'lectureImage.png', 'lecture2', 0, 0, 'Приклади коду', '', '', 1, 60, '2', 0, 4, 0),
(24, 'lectureImage.png', 'lecture3', 0, 0, 'Список літератури', '', '', 1, 60, '4', 0, 4, 0),
(50, 'lectureImage.png', 'lecture2', 0, 0, 'Математический анализ', '', '', 1, 60, '5', 0, 4, 0),
(51, 'lectureImage.png', 'lecture3', 0, 0, 'Дифференциальные уравнения', '', '', 1, 60, '5', 0, 4, 0),
(52, 'lectureImage.png', 'lecture4', 0, 0, 'Математическая физика', '', '', 1, 60, '5', 0, 4, 0),
(53, 'lectureImage.png', 'lecture5', 0, 0, 'Геометрия и топология', '', '', 1, 60, '5', 0, 4, 0),
(54, 'lectureImage.png', 'lecture6', 0, 0, 'Теория вероятностей и математическая статистика', '', '', 1, 60, '5', 0, 4, 0),
(66, 'lectureImage.png', 'lecture1', 0, 0, 'Занятие 1', '', '', 1, 60, '2', 0, 4, 0),
(67, 'lectureImage.png', 'lecture2', 0, 0, 'Занятие 2,', '', '', 1, 60, '2', 0, 4, 0),
(68, 'lectureImage.png', 'lecture3', 0, 0, 'Занятие 3.', '', '', 1, 60, '2', 0, 4, 0),
(69, 'lectureImage.png', 'lecture4', 0, 0, 'Занятие 4;', '', '', 1, 60, '2', 0, 4, 0),
(70, 'lectureImage.png', 'lecture5', 0, 0, 'Занятие 5:', '', '', 1, 60, '2', 0, 4, 0),
(72, 'lectureImage.png', 'lecture1', 0, 0, 'аатара', '', '', 1, 60, '2', 0, 4, 0),
(73, 'lectureImage.png', 'lecture2', 0, 0, 'gfggeg', '', '', 1, 60, '1', 0, 4, 0),
(78, 'lectureImage.png', 'lecture1', 0, 0, 'rgdgjkj', '', '', 1, 60, '3', 0, 4, 0),
(79, 'lectureImage.png', 'lecture2', 0, 0, 'hjhgjghgkg', '', '', 1, 60, '3', 0, 4, 0),
(88, 'lectureImage.png', 'lecture4', 0, 0, 'Дроби', '', '', 1, 60, '10', 0, 4, 0),
(89, 'lectureImage.png', 'lecture5', 0, 0, 'Нескінченний періодичний десятковий дріб', '', '', 1, 60, '10', 0, 4, 0),
(90, 'lectureImage.png', 'lecture6', 0, 0, 'Одночлен і многочлени', '', '', 1, 60, '10', 0, 4, 0),
(91, 'lectureImage.png', 'lecture7', 0, 0, 'Натуральні числа', '', '', 1, 60, '10', 0, 4, 0),
(98, 'lectureImage.png', 'lecture1', 9, 1, '1', '', '', 1, 60, '3', 0, 4, 0),
(99, 'lectureImage.png', 'lecture3', 0, 0, '!!!!!!', '', '', 1, 60, '1', 0, 4, 0),
(100, '', 'lecture8', 3, 1, 'Основи мови С (частина 1)', '', '', 3, 60, '11', 0, 4, 0),
(101, 'lectureImage.png', 'lecture9', 3, 2, 'Основи мови С (частина 2)', '', '', 1, 60, '11', 0, 4, 1),
(102, 'lectureImage.png', 'lecture3', 3, 3, 'Процедури і функції', '', '', 1, 60, '11', 0, 4, 0),
(103, 'lectureImage.png', 'lecture4', 3, 4, 'Покажчики та рекурсія', '', '', 1, 60, '11', 0, 4, 0),
(104, 'lectureImage.png', 'lecture5', 3, 5, 'Символьні рядки', '', '', 1, 60, '11', 0, 4, 0),
(105, 'lectureImage.png', 'lecture6', 3, 6, 'Текстові файли', '', '', 1, 60, '11', 0, 4, 0),
(106, 'lectureImage.png', 'lecture7', 3, 7, 'Файли з довільним доступом', '', '', 1, 60, '11', 0, 4, 0),
(107, 'lectureImage.png', 'lecture8', 3, 8, 'Типи даних, визначені користувачем (частина 1)', '', '', 1, 60, '11', 0, 4, 0),
(108, 'lectureImage.png', 'lecture9', 3, 10, 'Динамічні структури даних (частина 1)', '', '', 1, 60, '11', 0, 4, 0),
(109, 'lectureImage.png', 'lecture10', 3, 9, 'Типи даних, визначені користувачем (ч.2)', '', '', 1, 60, '11', 0, 4, 0),
(110, 'lectureImage.png', 'lecture11', 3, 11, 'Динамічні структури даних (частина 2)', '', '', 1, 60, '11', 0, 4, 0),
(111, 'lectureImage.png', 'lecture12', 3, 12, 'Налагодження і тестування', '', '', 1, 60, '11', 0, 4, 0),
(115, 'lectureImage.png', 'lecture1', 0, 0, 'Тест занятие', '', '', 1, 60, '1', 0, 4, 0),
(116, 'lectureImage.png', 'lecture4', 0, 0, 'тьмтсич', '', '', 1, 60, '1', 0, 4, 0),
(117, '', 'lecture5', 1, 1, 'Етапи програмування. Парадигма програмування.', 'Этапы программирования. Парадигма программирования', 'Stages programming. The paradigm of programming.', 1, 60, '9', 1, 4, 0),
(118, 'lectureImage.png', 'lecture6', 1, 2, 'Функціонування комп''ютера.', 'Функционирование компьютера.', 'Functioning of the computer.', 1, 60, '9', 1, 4, 0),
(125, 'lectureImage.png', 'lecture13', 1, 10, 'Технології програмування. Покоління', 'Технологии программирования. Поколения', 'Programming technologies. Generation', 1, 60, '9', 1, 4, 0),
(126, 'lectureImage.png', 'lecture14', 1, 9, 'Розвиток мов програмування', 'Развитие языков программирования', 'The development of programming languages', 1, 60, '9', 1, 4, 0),
(127, '561280174a07a.jpg', 'lecture11', 1, 3, 'Пристрої введення та виведення інформації.', 'Устройства ввода и вывода информации.', 'Devices of input and output data.', 1, 60, '9', 1, 4, 0),
(129, 'lectureImage.png', 'lecture11', 1, 5, 'Принципи фон Неймана. Що таке процесор.', 'Принципы фон Неймана. Что такое процессор.', 'The principles of von Neumann. What is a processor.', 1, 60, '9', 1, 4, 0),
(130, 'lectureImage.png', 'lecture11', 1, 6, 'Що таке операційна система.', 'Что такое операционная система.', 'What is a operating system.', 1, 60, '9', 1, 4, 0),
(131, 'lectureImage.png', 'lecture11', 1, 4, 'Пам''ять комп''ютера. Програмне забезпечення', 'Память компьютера. Программное обеспечение', 'Computer memory. Software', 1, 60, '9', 1, 4, 0),
(132, 'lectureImage.png', 'lecture11', 1, 8, 'Що таке алгоритм.', 'Что такое алгоритм.', 'What is a algorithm.', 1, 60, '9', 1, 4, 0),
(133, 'lectureImage.png', 'lecture11', 1, 7, 'Системи числення. Правила переведення.', 'Системы счисления. Правила перевода.', 'Number systems. Rules transfer.', 1, 60, '9', 1, 4, 0),
(136, 'lectureImage.png', 'lecture3', 0, 0, 'Test3', '', '', 1, 60, '1', 0, 4, 0),
(140, 'lectureImage.png', 'lecture8', 0, 0, 'Дроби', '', '', 1, 60, '10', 0, 4, 0),
(144, 'lectureImage.png', 'lecture4', 0, 0, 'Test 4', '', '', 1, 60, '1', 0, 4, 0),
(145, 'lectureImage.png', 'lecture5', 0, 0, 'test 5', '', '', 1, 60, '1', 0, 4, 0),
(161, 'lectureImage.png', 'lecture6', 0, 0, '6', '', '', 1, 60, '1', 0, 0, 0),
(162, 'lectureImage.png', 'lecture7', 0, 0, '7', '', '', 1, 60, '1', 0, 0, 0),
(163, 'lectureImage.png', 'lecture8', 0, 0, '8', '', '', 1, 60, '1', 0, 0, 0),
(164, 'lectureImage.png', 'lecture9', 0, 0, '9', '', '', 1, 60, '1', 0, 0, 0),
(165, 'lectureImage.png', 'lecture10', 0, 0, '10', '', '', 1, 60, '1', 0, 0, 0),
(172, 'lectureImage.png', 'lecture19', 0, 0, '20', '', '', 1, 60, '1', 0, 4, 0),
(173, 'lectureImage.png', 'lecture1', 0, 0, '1', '', '', 1, 60, '1', 0, 0, 0),
(174, 'lectureImage.png', 'lecture2', 0, 0, '2', '', '', 1, 60, '1', 0, 0, 0),
(175, 'lectureImage.png', 'lecture3', 0, 0, '3', '', '', 1, 60, '1', 0, 0, 0),
(176, 'lectureImage.png', 'lecture4', 0, 0, '4', '', '', 1, 60, '1', 0, 0, 0),
(177, 'lectureImage.png', 'lecture20', 0, 0, 'sdfdfdsf', '', '', 1, 60, '1', 0, 4, 0),
(178, 'lectureImage.png', 'lecture7', 0, 0, 'ТестТестів', '', '', 1, 60, '1', 0, 4, 0),
(179, 'lectureImage.png', 'lecture8', 0, 0, 'Test 8', '', '', 1, 60, '1', 0, 4, 0),
(180, 'lectureImage.png', 'lecture9', 0, 0, 'Test 9', '', '', 1, 60, '1', 0, 4, 0),
(181, 'lectureImage.png', 'lecture10', 0, 0, 'Test 10', '', '', 1, 60, '1', 0, 4, 0),
(182, 'lectureImage.png', 'lecture11', 0, 0, 'test 11', '', '', 1, 60, '1', 0, 4, 0),
(183, 'lectureImage.png', 'lecture12', 0, 0, 'test 12', '', '', 1, 60, '1', 0, 4, 0),
(184, 'lectureImage.png', 'lecture13', 0, 0, 'test 13', '', '', 1, 60, '1', 0, 4, 0),
(185, 'lectureImage.png', 'lecture14', 0, 0, 'test 14', '', '', 1, 60, '1', 0, 4, 0),
(192, 'lectureImage.png', 'lecture9', 0, 0, 'Одночлени і многочлени', '', '', 1, 60, '10', 0, 4, 0),
(193, 'lectureImage.png', 'lecture15', 0, 0, 'ua', 'ru', 'en', 1, 60, '1', 0, 0, 0),
(194, 'lectureImage.png', 'lecture16', 0, 0, 'ua', 'ru', 'en', 1, 60, '1', 0, 0, 0),
(195, 'lectureImage.png', 'lecture17', 0, 0, 'UA', 'RU', 'EN', 1, 60, '1', 0, 0, 0),
(196, 'lectureImage.png', 'lecture18', 0, 0, 'ctj', 'du', 'fyi', 1, 60, '1', 0, 0, 0),
(197, 'lectureImage.png', 'lecture13', 0, 0, '13', '', '', 1, 60, '1', 0, 0, 0),
(198, 'lectureImage.png', 'lecture14', 0, 0, '14', '', '', 1, 60, '1', 0, 0, 0),
(199, 'lectureImage.png', 'lecture15', 0, 0, '15', '', '', 1, 60, '1', 0, 0, 0),
(200, 'lectureImage.png', 'lecture16', 0, 0, '16', '', '', 1, 60, '1', 0, 0, 0),
(201, 'lectureImage.png', 'lecture6', 0, 0, 'Заняття 6', 'Заняття 6', 'Заняття 6', 1, 60, '12', 0, 0, 0),
(202, 'lectureImage.png', 'lecture19', 0, 0, 'fhfghgfhfghgfhgf', '', '', 1, 60, '1', 0, 0, 0),
(203, 'lectureImage.png', 'lecture2', 0, 0, 'Заняття 2', 'Занятие 2', 'Lesson 2', 1, 60, '1', 0, 0, 0),
(204, 'lectureImage.png', 'lecture3', 0, 0, '3', '3', '3', 1, 60, '1', 0, 0, 0),
(205, 'lectureImage.png', 'lecture4', 0, 0, '4!', '4', '4-', 1, 60, '1', 0, 0, 0),
(206, 'lectureImage.png', 'lecture5', 0, 0, '5)', '5(', '5.', 1, 60, '1', 0, 0, 0),
(207, 'lectureImage.png', 'lecture11', 0, 0, 'ua', 'ru', 'en', 1, 60, '1', 0, 0, 0),
(208, 'lectureImage.png', 'lecture12', 0, 0, 'nsfkj', 'ncfwek', 'nfwk', 1, 60, '1', 0, 0, 0),
(209, 'lectureImage.png', 'lecture5', 0, 0, '5)', '', '', 1, 60, '2', 0, 0, 0),
(210, 'lectureImage.png', 'lecture6', 0, 0, 'lesson 6', 'lesson 6', 'lesson 6', 1, 60, '12', 0, 0, 0),
(211, 'lectureImage.png', 'lecture4', 0, 0, 'Що таке бази даних і які вони бувають', 'First', 'First', 1, 60, '12', 0, 0, 0),
(212, 'lectureImage.png', 'lecture11', 0, 0, 'skefbk', 'feklw', 'bdkjq', 1, 60, '1', 0, 0, 0),
(213, 'lectureImage.png', 'lecture7', 0, 0, 'Натуральні числа', 'Натуральні числа', 'Натуральні числа', 1, 60, '10', 0, 0, 0),
(214, 'lectureImage.png', 'lecture2', 0, 0, '1, 2, 3 нормальні форми', '1, 2, 3 нормальні форми', '1, 2, 3 нормальні форми', 1, 60, '12', 0, 0, 0),
(215, 'lectureImage.png', 'lecture3', 0, 0, '4, 5, 6 нормальні форми', '4, 5, 6 нормальні форми', '4, 5, 6 нормальні форми', 1, 60, '12', 0, 0, 0),
(216, 'lectureImage.png', 'lecture1', 18, 1, 'Введення і основні поняття', '', '', 1, 60, '10', 0, 0, 0),
(217, 'lectureImage.png', 'lecture2', 18, 2, 'Структура HTML сторінки', '', '', 1, 60, '10', 0, 0, 0),
(218, 'lectureImage.png', 'lecture3', 18, 3, 'Гіперпосилання', '', '', 1, 60, '10', 0, 0, 0),
(219, 'lectureImage.png', 'lecture4', 18, 4, 'Зображення', '', '', 1, 60, '10', 0, 0, 0),
(220, 'lectureImage.png', 'lecture5', 18, 5, 'Каскадні таблиці стилів: основні властивості', '', '', 1, 60, '10', 0, 0, 0),
(221, 'lectureImage.png', 'lecture6', 18, 6, 'Списки', '', '', 1, 60, '10', 0, 0, 0),
(222, 'lectureImage.png', 'lecture7', 18, 7, 'Таблиці', '', '', 1, 60, '10', 0, 0, 0),
(223, 'lectureImage.png', 'lecture8', 18, 8, 'Форми', '', '', 1, 60, '10', 0, 0, 0),
(224, 'lectureImage.png', 'lecture9', 18, 9, 'Використання CSS для макетування', '', '', 1, 60, '10', 0, 0, 0),
(225, 'lectureImage.png', 'lecture10', 18, 10, 'Додаткові можливості HTML і CSS', '', '', 1, 60, '10', 0, 0, 0),
(226, 'lectureImage.png', 'lecture11', 18, 11, 'Мета-інформація на сторінці', '', '', 1, 60, '10', 0, 0, 0),
(227, 'lectureImage.png', 'lecture1', 20, 1, 'Модуль 1. Основи програмування', '', '', 1, 60, '10', 0, 0, 0),
(228, 'lectureImage.png', 'lecture2', 20, 2, 'Модуль 2. Керуючі конструкції', '', '', 1, 60, '10', 0, 0, 0),
(229, 'lectureImage.png', 'lecture3', 20, 3, 'Модуль 3. Функції', '', '', 1, 60, '10', 0, 0, 0),
(230, 'lectureImage.png', 'lecture4', 20, 4, 'Модуль 4. Об''єкти та масиви', '', '', 1, 60, '10', 0, 0, 0),
(231, 'lectureImage.png', 'lecture5', 20, 5, 'Модуль 5. Використання об''єктів JavaScript', '', '', 1, 60, '10', 0, 0, 0),
(232, 'lectureImage.png', 'lecture6', 0, 0, 'Модуль 6. Об''єктно-орієнтоване програмування', '', '', 1, 60, '10', 0, 0, 0),
(233, 'lectureImage.png', 'lecture7', 0, 0, 'Об''єктна модель браузера', '', '', 1, 60, '10', 0, 0, 0),
(234, 'lectureImage.png', 'lecture8', 0, 0, 'Арифметика', '', '', 1, 60, '10', 0, 0, 0),
(235, 'lectureImage.png', 'lecture1', 2, 1, 'Арифметика (ч.1)', '', '', 1, 60, '10', 0, 0, 0),
(236, 'lectureImage.png', 'lecture2', 2, 2, 'Арифметика (ч.2)', '', '', 1, 60, '10', 0, 0, 0),
(237, 'lectureImage.png', 'lecture3', 2, 3, 'Дроби', '', '', 1, 60, '10', 0, 0, 0),
(238, 'lectureImage.png', 'lecture4', 2, 4, 'Алгебраїчні вирази (види, область визначення, тотожньо рівні вирази).', '', '', 1, 60, '10', 0, 0, 0),
(239, 'lectureImage.png', 'lecture5', 2, 5, 'Степінь числа з натуральним та дійсним показником', '', '', 1, 60, '10', 0, 0, 0),
(240, 'lectureImage.png', 'lecture6', 2, 6, 'Одночлен і многочлени', '', '', 1, 60, '10', 0, 0, 0),
(241, 'lectureImage.png', 'lecture7', 2, 7, 'Формули скороченого множення. Трикутник Паскаля', '', '', 1, 60, '10', 0, 0, 0),
(242, 'lectureImage.png', 'lecture8', 2, 8, 'Корінь n-го степеня (поняття, властивості).Середнє арифметичне та геометричне', '', '', 1, 60, '10', 0, 0, 0),
(243, 'lectureImage.png', 'lecture9', 2, 9, 'Функції їх властивості та графіки (ч.1)', '', '', 1, 60, '10', 0, 0, 0),
(244, 'lectureImage.png', 'lecture10', 2, 10, 'Функції їх властивості та графіки (ч.2)', '', '', 1, 60, '10', 0, 0, 0),
(245, 'lectureImage.png', 'lecture11', 2, 11, 'Алгебраїчні рівняння та системи рівнянь', '', '', 1, 60, '10', 0, 0, 0),
(246, 'lectureImage.png', 'lecture12', 2, 12, 'Алгебраїчні нерівності. Лінійні нерівності', '', '', 1, 60, '10', 0, 0, 0),
(247, 'lectureImage.png', 'lecture13', 2, 13, 'Тригонометрія', '', '', 1, 60, '10', 0, 0, 0),
(248, 'lectureImage.png', 'lecture14', 2, 14, 'Показникові і логарифмічна функція', '', '', 1, 60, '10', 0, 0, 0),
(249, 'lectureImage.png', 'lecture15', 2, 15, 'Планіментрія', '', '', 1, 60, '10', 0, 0, 0),
(250, 'lectureImage.png', 'lecture16', 2, 16, 'Стереометрія', '', '', 1, 60, '10', 0, 0, 0),
(251, 'lectureImage.png', 'lecture12', 0, 0, 'ncgbnc', '', '', 1, 60, '1', 0, 0, 0),
(252, 'lectureImage.png', 'lecture19', 0, 0, 'nvdskl', 'ncklsd', 'ngvklse', 1, 60, '1', 0, 0, 0),
(253, 'lectureImage.png', 'lecture4', 0, 0, 'реляційна модель представлення даних', 'реляційна модель представлення даних', 'реляційна модель представлення даних', 1, 60, '12', 0, 0, 0),
(254, 'lectureImage.png', 'lecture4', 11, 2, 'Реляційна модель представлення даних', 'Реляційна модель представлення даних', 'Реляційна модель представлення даних', 1, 60, '12', 0, 0, 0),
(255, 'lectureImage.png', 'lecture11', 0, 0, 'temp', 'temp', 'temp', 1, 60, '1', 0, 0, 0),
(256, 'lectureImage.png', 'lecture11', 0, 0, 'Тест', 'temp', 'ww', 1, 60, '1', 0, 0, 0),
(257, 'lectureImage.png', 'lecture20', 0, 0, 'jgkjkhjv', '', '', 1, 60, '1', 0, 0, 0),
(258, 'lectureImage.png', 'lecture5', 11, 6, 'Транзакції в MySQL', 'Транзакції в MySQL', 'Транзакції в MySQL', 1, 60, '12', 0, 0, 0),
(259, 'lectureImage.png', 'lecture21', 0, 0, 'тест занятие', '', '', 1, 60, '1', 0, 0, 0),
(260, 'lectureImage.png', 'lecture1', 10, 1, 'Методи індукції та дедукції', '', '', 1, 60, '11', 0, 0, 0),
(261, 'lectureImage.png', 'lecture2', 10, 2, 'Теорія множин: поняття, властивості та операції', '', '', 1, 60, '11', 0, 0, 0),
(262, 'lectureImage.png', 'lecture3', 10, 3, 'Відношення в теорії множин', '', '', 1, 60, '11', 0, 0, 0),
(263, 'lectureImage.png', 'lecture4', 10, 4, 'Алгебра висловлювань. Решітки, кільця і поля', '', '', 1, 60, '11', 0, 0, 0),
(264, 'lectureImage.png', 'lecture5', 10, 5, 'Булева алгебра: функції, таблиці істинності, нормальні форми', '', '', 1, 60, '11', 0, 0, 0),
(265, 'lectureImage.png', 'lecture6', 10, 6, 'Методи мінімізації булевих функцій', '', '', 1, 60, '11', 0, 0, 0),
(266, 'lectureImage.png', 'lecture7', 10, 7, 'Основи логіки висловлювань', '', '', 1, 60, '11', 0, 0, 0),
(267, 'lectureImage.png', 'lecture8', 10, 8, 'Логіка предикатів', '', '', 1, 60, '11', 0, 0, 0),
(268, 'lectureImage.png', 'lecture9', 10, 9, 'Формалізація мови: поняття граматики, типи граматик, регулярні вирази', '', '', 1, 60, '11', 0, 0, 0),
(269, 'lectureImage.png', 'lecture10', 10, 10, 'Теорія алгоритмів: поняття алгоритму, нормальні алгоритми Маркова, рекурсивні фукнції', '', '', 1, 60, '11', 0, 0, 0),
(270, 'lectureImage.png', 'lecture11', 10, 11, 'Теорія графів: основні визначення, поняття зв''язності та ізоморфізму', '', '', 1, 60, '11', 0, 0, 0),
(271, 'lectureImage.png', 'lecture12', 10, 12, 'Зважені графи. Алгоритм пошуку найкоротших шляхів', '', '', 1, 60, '11', 0, 0, 0),
(272, 'lectureImage.png', 'lecture13', 10, 13, 'Планарність графів. Незалежні множини вершин. Паросполучення в графах', '', '', 1, 60, '11', 0, 0, 0),
(273, 'lectureImage.png', 'lecture14', 10, 14, 'Дерева та їх застосування. Рекурсія. Обхід дерев.', '', '', 1, 60, '11', 0, 0, 0),
(274, 'lectureImage.png', 'lecture15', 10, 15, 'Бінарне дерево пошуку. Дерева прийняття рішень', '', '', 1, 60, '11', 0, 0, 0),
(275, 'lectureImage.png', 'lecture16', 10, 16, 'Бектрекінг і каркаси', '', '', 1, 60, '11', 0, 0, 0),
(276, 'lectureImage.png', 'lecture1', 0, 0, 'test', '', '', 1, 60, '10', 0, 0, 0),
(277, 'lectureImage.png', 'lecture17', 10, 17, 'Загальна характеристика автоматів. Розпізнавачі', '', '', 1, 60, '11', 0, 0, 0),
(278, 'lectureImage.png', 'lecture18', 10, 18, 'Скінченні автомати. Автомати з магазинною пам''яттю. Лінійно-обмежені автомати', '', '', 1, 60, '11', 0, 0, 0),
(279, 'lectureImage.png', 'lecture19', 10, 19, 'Комбінаторний аналіз. Формули перелічення, включення та виключення', '', '', 1, 60, '11', 0, 0, 0),
(280, 'lectureImage.png', 'lecture20', 10, 20, 'Алфавітне кодування, кодування з мінімальним надлишком', '', '', 1, 60, '11', 0, 0, 0),
(281, 'lectureImage.png', 'lecture21', 10, 21, 'Коди, стійкі до перешкод', '', '', 1, 60, '11', 0, 0, 0),
(282, 'lectureImage.png', 'lecture22', 10, 22, 'Стиснення даних. Шифрування', '', '', 1, 60, '11', 0, 0, 0),
(283, 'lectureImage.png', 'lecture2', 131, 1, 'Вибір хостингу та підтримка сайту', '', '', 1, 60, '10', 0, 0, 0),
(284, 'lectureImage.png', 'lecture2', 131, 2, 'Робота з сервером', '', '', 1, 60, '10', 0, 0, 0),
(285, 'lectureImage.png', 'lecture3', 131, 3, 'Веб-стандарти та їх підтримка', '', '', 1, 60, '10', 0, 0, 0),
(286, 'lectureImage.png', 'lecture4', 131, 4, 'Елементи й атрибути HTML5 і структура сторінки', '', '', 1, 60, '10', 0, 0, 0),
(287, 'lectureImage.png', 'lecture5', 131, 5, 'Ефективне використання інструментів розробки веб-сторінок', '', '', 1, 60, '10', 0, 0, 0),
(288, 'lectureImage.png', 'lecture6', 131, 6, 'Селектори в HTML5', '', '', 1, 60, '10', 0, 0, 0),
(289, 'lectureImage.png', 'lecture7', 131, 7, 'Введення в побудову зручних для використання сайтів (usability) і доступність (accessibility) сайтів', '', '', 1, 60, '10', 0, 0, 0),
(290, 'lectureImage.png', 'lecture8', 131, 8, 'Технології HTML і CSS', '', '', 1, 60, '10', 0, 0, 0),
(291, 'lectureImage.png', 'lecture9', 131, 9, 'Сумісність веб-сторінок з різними браузерами', '', '', 1, 60, '10', 0, 0, 0),
(292, 'lectureImage.png', 'lecture10', 131, 10, 'Використання властивостей CSS2 та CSS3', '', '', 1, 60, '10', 0, 0, 0),
(293, 'lectureImage.png', 'lecture11', 131, 11, 'Верстка макета', '', '', 1, 60, '10', 0, 0, 0),
(294, 'lectureImage.png', 'lecture12', 131, 12, 'Типові рішення', '', '', 1, 60, '10', 0, 0, 0),
(295, 'lectureImage.png', 'lecture1', 132, 1, 'Модуль 6. Об''єктно-орієнтоване програмування', '', '', 1, 60, '10', 0, 0, 0),
(296, 'lectureImage.png', 'lecture2', 132, 2, 'Об''єктна модель браузера', '', '', 1, 60, '10', 0, 0, 0),
(297, 'lectureImage.png', 'lecture3', 132, 3, 'Модуль 8. Використання елементів HTML', '', '', 1, 60, '10', 0, 0, 0),
(298, 'lectureImage.png', 'lecture4', 132, 4, 'Модуль 9. Об''єктна модель документа: DOM', '', '', 1, 60, '10', 0, 0, 0),
(299, 'lectureImage.png', 'lecture5', 132, 5, 'Модуль 10. Події та їх обробка', '', '', 1, 60, '10', 0, 0, 0),
(300, 'lectureImage.png', 'lecture6', 0, 0, 'Тригери', 'Тригери', 'Тригери', 1, 60, '12', 0, 0, 0),
(301, 'lectureImage.png', 'lecture7', 11, 4, 'SELECT', 'SELECT', 'SELECT', 1, 60, '12', 0, 0, 0),
(302, 'lectureImage.png', 'lecture8', 11, 5, 'DELETE', 'DELETE', 'DELETE', 1, 60, '12', 0, 0, 0),
(303, 'lectureImage.png', 'lecture8', 0, 0, 'Бази даних. Основні поняття.', 'Бази даних. Основні поняття.', 'Бази даних. Основні поняття.', 1, 60, '12', 0, 0, 0),
(304, 'lectureImage.png', 'lecture8', 11, 1, 'Бази даних. Основні поняття.', 'Бази даних. Основні поняття.', 'Бази даних. Основні поняття.', 1, 60, '12', 0, 0, 0),
(305, 'lectureImage.png', 'lecture6', 0, 0, '6', '', '', 1, 60, '1', 0, 0, 0),
(306, 'lectureImage.png', 'lecture7', 0, 0, '7', '', '', 1, 60, '1', 0, 0, 0),
(307, 'lectureImage.png', 'lecture8', 0, 0, '8', '', '', 1, 60, '1', 0, 0, 0),
(308, 'lectureImage.png', 'lecture9', 0, 0, '9', '', '', 1, 60, '1', 0, 0, 0),
(309, 'lectureImage.png', 'lecture10', 0, 0, '10', '', '', 1, 60, '1', 0, 0, 0),
(310, '55e73c0b84996.jpg', 'lecture2', 0, 0, '1', '', '', 4, 30, '1', 0, 0, 0),
(311, 'lectureImage.png', 'lecture3', 0, 0, '3', '', '', 1, 60, '1', 0, 0, 0),
(312, 'lectureImage.png', 'lecture4', 0, 0, '4', '', '', 1, 60, '1', 0, 0, 0),
(313, 'lectureImage.png', 'lecture5', 0, 0, '5', '', '', 1, 60, '1', 0, 0, 0),
(314, 'lectureImage.png', 'lecture6', 0, 0, '6', '', '', 1, 60, '1', 0, 0, 0),
(315, 'lectureImage.png', 'lecture7', 0, 0, '7', '', '', 1, 60, '1', 0, 0, 0),
(316, 'lectureImage.png', 'lecture8', 0, 0, '8', '', '', 1, 60, '1', 0, 0, 0),
(317, '', 'lecture11', 0, 0, 'ngr', 'nbrlk', 'nblk', 1, 60, '1', 0, 0, 0),
(318, '55e448baee014.jpg', 'lecture9', 0, 0, 'Тест пересування блоків на пейжах', '', '', 1, 60, '1', 0, 0, 0),
(319, '', 'lecture17', 0, 0, 'Pfyznbt', '', '', 1, 60, '3', 0, 0, 0),
(320, '', 'lecture18', 0, 0, 'ghjcnj', '', '', 1, 60, '3', 0, 0, 0),
(321, '', 'lecture19', 0, 0, 'dhdfh', '', '', 1, 60, '3', 0, 0, 0),
(322, '', 'lecture10', 0, 0, 'Test', 'testtest', 'test', 1, 60, '1', 0, 0, 0),
(323, '', 'lecture11', 0, 0, '11', '', '', 1, 60, '1', 0, 0, 0),
(324, '', 'lecture12', 0, 0, '12', '', '', 1, 60, '1', 0, 0, 0),
(325, '', 'lecture13', 0, 0, '13', '', '', 1, 60, '1', 0, 0, 0),
(326, '55fd108310828.jpg', 'lecture1', 14, 1, 'Заняття 1', 'Занятие 1', 'Lesson 1', 1, 60, '1', 0, 0, 0),
(327, '', 'lecture2', 14, 2, 'заняття 2', '', '', 1, 60, '1', 0, 0, 0),
(328, '', 'lecture9', 0, 0, '9', '', '', 1, 60, '1', 0, 0, 0),
(329, '55e196c363b37.jpg', 'lecture10', 0, 0, '10', '', '', 1, 60, '1', 0, 0, 0),
(330, '', 'lecture11', 0, 0, '11', '', '', 1, 60, '1', 0, 0, 0),
(331, '', 'lecture12', 0, 0, 'ррар', '', '', 1, 60, '1', 0, 0, 0),
(332, '', 'lecture8', 11, 3, 'Нормалізація БД', 'Нормалізація БД', 'Нормалізація БД', 1, 60, '12', 0, 0, 0),
(333, '', 'lecture12', 0, 0, '12', '', '', 1, 60, '1', 0, 0, 0),
(334, '', 'lecture13', 0, 0, '13', '', '', 1, 60, '1', 0, 0, 0),
(335, '', 'lecture14', 0, 0, '14', '', '', 1, 60, '1', 0, 0, 0),
(336, '', 'lecture15', 0, 0, '15', '', '', 1, 60, '1', 0, 0, 0),
(337, '', 'lecture13', 0, 0, 'кенкегк', '', '', 1, 60, '1', 0, 0, 0),
(338, '', 'lecture14', 0, 0, 'векнкен', '', '', 1, 60, '1', 0, 0, 0),
(339, '', 'lecture15', 0, 0, 'вкгкгвкен', '', '', 1, 60, '1', 0, 0, 0),
(340, '', 'lecture7', 11, 7, 'Тригери', 'Тригери', 'Тригери', 1, 60, '12', 0, 0, 0),
(341, '', 'lecture12', 0, 0, 'dw', '', '', 1, 60, '3', 0, 0, 0),
(342, 'lectureImage.png', 'lecture13', 0, 0, 'BDFBDF', '', '', 1, 60, '3', 0, 0, 0),
(343, 'lectureImage.png', 'lecture10', 0, 0, '11', '', '', 1, 60, '1', 0, 0, 0),
(344, 'lectureImage.png', 'lecture11', 0, 0, '11', '', '', 1, 60, '1', 0, 0, 0),
(345, 'lectureImage.png', 'lecture12', 0, 0, '12', '', '', 1, 60, '1', 0, 0, 0),
(346, 'lectureImage.png', 'lecture3', 14, 3, 'cnxf', '', '', 1, 60, '1', 0, 0, 0),
(347, 'lectureImage.png', 'lecture4', 14, 4, 'gfhfgh', '', '', 1, 60, '1', 0, 0, 0),
(348, '5608e8b4c004d.jpg', 'lecture1', 61, 1, 'lesson', '', '', 1, 60, '1', 0, 0, 0),
(349, 'lectureImage.png', 'lecture2', 0, 0, 'сисмисм', '', '', 1, 60, '1', 0, 0, 0),
(350, 'lectureImage.png', 'lecture3', 61, 3, 'мсимсм', '', '', 1, 60, '1', 0, 0, 0),
(351, '55f6b7591e079.jpg', 'lecture14', 0, 0, 'Занятие 14', '14', '14', 1, 60, '1', 0, 0, 0),
(352, 'lectureImage.png', 'lecture5', 14, 5, 'reaf', 'erfer', 'fre', 1, 60, '1', 0, 0, 0),
(353, 'lectureImage.png', 'lecture4', 0, 0, 'sdthfh', '', '', 1, 60, '1', 0, 0, 0),
(354, 'lectureImage.png', 'lecture5', 0, 0, 'dfyuytu', '', '', 1, 60, '1', 0, 0, 0),
(355, 'lectureImage.png', 'lecture6', 14, 6, 'yutyi', '', '', 1, 60, '1', 0, 0, 0),
(356, 'lectureImage.png', 'lecture4', 61, 4, 'заняття4', '', '', 1, 60, '1', 0, 0, 0),
(357, 'lectureImage.png', 'lecture5', 61, 5, 'заняття 5', '', '', 1, 60, '1', 0, 0, 0),
(358, 'lectureImage.png', 'lecture6', 0, 0, 'заняття 6', '', '', 1, 60, '1', 0, 0, 0),
(359, '55f3f31835ce3.jpg', 'lecture7', 0, 0, 'lesson7', '', '', 1, 60, '1', 0, 0, 0),
(360, 'lectureImage.png', 'lecture2', 0, 0, '22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222', '', '', 1, 60, '2', 0, 0, 0),
(361, 'lectureImage.png', 'lecture23', 0, 0, 'пмрлпшлплш', '', '', 1, 60, '1', 0, 0, 0),
(362, 'lectureImage.png', 'lecture8', 61, 6, 'рпопо', 'прорп', 'псоп', 1, 60, '1', 0, 0, 0),
(363, 'lectureImage.png', 'lecture9', 0, 0, 'аопророро', 'проророро', 'проророро', 1, 60, '1', 0, 0, 0),
(364, 'lectureImage.png', 'lecture10', 61, 2, '????!!!!!06', '', '', 2, 10, '1', 0, 0, 0),
(365, 'lectureImage.png', 'lecture8', 11, 8, 'gjhjghdghdfjkghdfjkghdfjkghdfkjghdfkgjhdfjkgdfghdfg', '', '', 1, 60, '2', 0, 0, 0),
(366, 'lectureImage.png', 'lecture15', 0, 0, 'fwef', 'feklw', 'fwef', 1, 60, '1', 0, 0, 0),
(367, 'lectureImage.png', 'lecture9', 0, 0, 'ftykiuidtituiuit', '', '', 1, 60, '1', 0, 0, 0),
(368, 'lectureImage.png', 'lecture10', 0, 0, '10', '', '', 1, 60, '1', 0, 0, 0),
(369, '', 'lecture11', 61, 10, '11', '', '', 1, 60, '1', 0, 0, 0),
(370, '5603cfe084d1a.jpg', 'lecture11', 0, 0, '11111111111111111111111111111111111111111111111111111111111111111111', '', '', 1, 60, '1', 0, 0, 0),
(371, 'lectureImage.png', 'lecture12', 0, 0, 'dhhhhdsdhghgfhfghhhhhhhhhhhhhhhhhhhhfffffffffffffffffffffffffffffhhhhhhhhhhhhhhhhfh', '', '', 1, 60, '1', 0, 0, 0),
(372, 'lectureImage.png', 'lecture13', 0, 0, 'tdjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjfgggggggggggggggggggggggghbbbbbbbbbbbbbb', '', '', 1, 60, '1', 0, 0, 0),
(373, 'lectureImage.png', 'lecture10', 0, 0, 'ghhjhj', '', '', 1, 60, '1', 0, 0, 0),
(374, 'lectureImage.png', 'lecture8', 61, 8, 'cgjhjh', '', '', 1, 60, '1', 0, 0, 0),
(375, 'lectureImage.png', 'lecture9', 61, 7, 'gjhjhgj', '', '', 1, 60, '1', 0, 0, 0),
(376, 'lectureImage.png', 'lecture10', 61, 9, 'ьттмим', '', '', 1, 60, '1', 0, 0, 0),
(377, 'lectureImage.png', 'lecture11', 0, 0, '/', '', '', 1, 60, '1', 0, 0, 0),
(378, 'lectureImage.png', 'lecture11', 0, 0, '/', '', '', 1, 60, '1', 0, 0, 0),
(379, 'lectureImage.png', 'lecture11', 0, 0, 'r4fregv', '3frdgver', 'fdevre', 1, 60, '1', 0, 0, 0),
(380, 'lectureImage.png', 'lecture12', 61, 12, '?', '', '', 1, 60, '1', 0, 0, 0),
(381, 'lectureImage.png', 'lecture13', 61, 11, '!)(', '', '', 1, 60, '1', 0, 0, 0),
(382, 'lectureImage.png', 'lecture12', 0, 0, 'програм', 'програм', 'program', 1, 60, '1', 0, 0, 0),
(383, 'lectureImage.png', 'lecture12', 0, 0, 'ghgjhgj', 'ghjmjl', 'hjkjhkjl', 1, 60, '1', 0, 0, 0),
(384, 'lectureImage.png', 'lecture13', 0, 0, 'nbmmnn', 'nbmnmn', 'nmnnn', 1, 60, '1', 0, 0, 0),
(385, 'lectureImage.png', 'lecture12', 0, 0, 'тестування', 'тестірованіє', 'тестінг', 1, 60, '1', 0, 0, 0),
(386, 'lectureImage.png', 'lecture13', 0, 0, '1212', '1321', '123', 1, 60, '1', 0, 0, 0),
(387, 'lectureImage.png', 'lecture14', 0, 0, 'hfdgkjhk', 'fgdgdf', 'fdggf', 1, 60, '1', 0, 0, 0),
(388, 'lectureImage.png', 'lecture1', 7, 1, '111111111', '-111111', '+1111111111', 1, 60, '1', 0, 0, 0),
(389, 'lectureImage.png', 'lecture12', 0, 0, 'олодл', '', 'роррдодщ', 1, 60, '1', 0, 0, 0),
(390, 'lectureImage.png', 'lecture12', 0, 0, 'тест', '', 'testing', 1, 60, '1', 0, 0, 0),
(391, 'lectureImage.png', 'lecture13', 0, 0, 'тестування', '', 'testtest', 1, 60, '1', 0, 0, 0),
(392, 'lectureImage.png', 'lecture14', 0, 0, 'апиии', 'иииии', '', 1, 60, '1', 0, 0, 0),
(393, 'lectureImage.png', 'lecture11', 0, 0, '11уц2у23у32у1', '', '', 1, 60, '1', 0, 0, 0),
(394, 'lectureImage.png', 'lecture6', 0, 0, 'werrrrryt', '', '', 1, 60, '1', 0, 0, 0),
(395, 'lectureImage.png', 'lecture11', 0, 0, 'dfbgdbfgfdgm', '', '', 1, 60, '1', 0, 0, 0),
(396, 'lectureImage.png', 'lecture12', 0, 0, 'Тестування', 'Тестирование', '', 1, 60, '1', 0, 0, 0),
(397, 'lectureImage.png', 'lecture11', 0, 0, 'Тестування', 'Тестирование', '', 1, 60, '1', 0, 0, 0),
(398, 'lectureImage.png', 'lecture11', 0, 0, '11112', '', '', 1, 60, '1', 0, 0, 0),
(399, '', 'lecture1', 23, 1, 'gfhfgh', '', '', 1, 60, '1', 0, 0, 0),
(400, 'lectureImage.png', 'lecture2', 23, 2, 'fghgfh', '', '', 1, 60, '1', 0, 0, 0),
(401, 'lectureImage.png', 'lecture3', 23, 3, 'ghghghgfh', '', '', 1, 60, '1', 0, 0, 0),
(402, 'lectureImage.png', 'lecture4', 0, 0, 'fghgfhgfhgfhg', '', '', 1, 60, '1', 0, 0, 0),
(403, 'lectureImage.png', 'lecture11', 0, 0, 'wwww', '', '', 1, 60, '1', 0, 0, 0),
(404, 'lectureImage.png', 'lecture11', 0, 0, 'програм', '', '', 1, 60, '1', 0, 0, 0),
(405, 'lectureImage.png', 'lecture12', 0, 0, 'прогр', 'прогр', '', 1, 60, '1', 0, 0, 0),
(406, 'lectureImage.png', 'lecture11', 0, 0, 'програм', 'прогр', 'HHHH', 1, 60, '1', 0, 0, 0),
(407, 'lectureImage.png', 'lecture12', 0, 0, 'капер', 'фяЧИИИ', 'ASDERFGHJ', 1, 60, '1', 0, 0, 0),
(408, 'lectureImage.png', 'lecture13', 0, 0, 'ававва', 'ввси иа', 'SFFFF', 1, 60, '1', 0, 0, 0),
(409, 'lectureImage.png', 'lecture13', 3, 13, 'Test', '', '', 1, 60, '1', 0, 0, 0),
(410, 'lectureImage.png', 'lecture14', 0, 0, 'Test', '', '', 1, 60, '1', 0, 0, 0),
(411, 'lectureImage.png', 'lecture11', 0, 0, 'вваваав', 'ваава', 'ASDFG', 1, 60, '1', 0, 0, 0),
(412, 'lectureImage.png', 'lecture11', 0, 0, 'апрпрр', 'папаап', 'ASDFGH', 1, 60, '1', 0, 0, 0),
(413, 'lectureImage.png', 'lecture11', 0, 0, 'ВВУКККАК', 'ВВАВААВ', 'SDDFGG', 1, 60, '1', 0, 0, 0),
(414, 'lectureImage.png', 'lecture11', 0, 0, 'Test', '', '', 1, 60, '1', 0, 0, 0),
(415, 'lectureImage.png', 'lecture12', 0, 0, 'xdcfvbnm', 'fvgbhnm', 'gvbhnjm,', 1, 60, '1', 0, 0, 0),
(416, 'lectureImage.png', 'lecture13', 0, 0, 'zsxdcfvghj', 'dfghyujiko', '', 1, 60, '1', 0, 0, 0),
(417, 'lectureImage.png', 'lecture12', 0, 0, 'swdefrgthyujk', 'пррол', 'axsdcgfthuj', 1, 60, '1', 0, 0, 0),
(418, 'lectureImage.png', 'lecture13', 0, 0, 'sdgftuhjk', 'wdsefryhujiolp', 'dsfgvbhj', 1, 60, '1', 0, 0, 0),
(419, 'lectureImage.png', 'lecture12', 0, 0, 'qwert', 'qwedrfgt', 'qwerty', 1, 60, '1', 0, 0, 0),
(420, 'lectureImage.png', 'lecture15', 0, 0, 'вапр', 'вап', '', 1, 60, '1', 0, 0, 0),
(421, 'lectureImage.png', 'lecture14', 0, 0, 'мапиро', '', '', 1, 60, '1', 0, 0, 0),
(422, 'lectureImage.png', 'lecture12', 0, 0, 'івапро', 'сампирт', '', 1, 60, '1', 0, 0, 0),
(423, 'lectureImage.png', 'lecture12', 0, 0, 'вапрол', 'парпро', '', 1, 60, '1', 0, 0, 0),
(424, 'lectureImage.png', 'lecture13', 0, 0, 'рпрроорвп', 'ывап', '', 1, 60, '1', 0, 0, 0),
(425, 'lectureImage.png', 'lecture14', 0, 0, 'цуук', 'ывв', '', 1, 60, '1', 0, 0, 0),
(426, 'lectureImage.png', 'lecture12', 0, 0, 'йцуке', 'фывап', '', 1, 60, '1', 0, 0, 0),
(427, 'lectureImage.png', 'lecture12', 0, 0, 'тест', 'тест', '', 1, 60, '1', 0, 0, 0),
(428, 'lectureImage.png', 'lecture12', 0, 0, 'sdfg', '', '', 1, 60, '1', 0, 0, 0),
(429, 'lectureImage.png', 'lecture12', 0, 0, 'тест', 'тест', 'test', 1, 60, '1', 0, 0, 0),
(430, 'lectureImage.png', 'lecture12', 0, 0, 'увап', '', '', 1, 60, '2', 0, 0, 0),
(431, 'lectureImage.png', 'lecture12', 0, 0, 'тест', 'тест', 'test', 1, 60, '1', 0, 0, 0),
(432, 'lectureImage.png', 'lecture12', 0, 0, 'вавва', 'ававав', '', 1, 60, '1', 0, 0, 0),
(433, 'lectureImage.png', 'lecture13', 0, 0, 'vgvvb', 'bbb', '', 1, 60, '1', 0, 0, 0),
(434, 'lectureImage.png', 'lecture12', 0, 0, 'кккк', 'ккккк', '', 1, 60, '1', 0, 0, 0),
(435, 'lectureImage.png', 'lecture12', 0, 0, 'ппролд', 'ппррооо', 'cvgfgghhj', 1, 60, '1', 0, 0, 0),
(436, 'lectureImage.png', 'lecture12', 0, 0, 'eeeeee', '', '', 1, 60, '1', 0, 0, 0),
(437, 'lectureImage.png', 'lecture12', 0, 0, 'прполпоп', '', '', 1, 60, '1', 0, 0, 0),
(438, 'lectureImage.png', 'lecture13', 0, 0, 'ssdfg', '', '', 1, 60, '1', 0, 0, 0),
(439, 'lectureImage.png', 'lecture12', 0, 0, 'qqqqqqq', '', '', 1, 60, '1', 0, 0, 0),
(440, 'lectureImage.png', 'lecture11', 0, 0, '1', '1', '1', 1, 60, '1', 0, 0, 0),
(441, 'lectureImage.png', 'lecture12', 0, 0, '2', '2', '', 1, 60, '1', 0, 0, 0),
(442, 'lectureImage.png', 'lecture13', 0, 0, '3', '3', '', 1, 60, '1', 0, 0, 0),
(443, 'lectureImage.png', 'lecture11', 0, 0, 'заняття 123', '', '', 1, 60, '1', 0, 0, 0),
(444, 'lectureImage.png', 'lecture11', 0, 0, '22qqq', '', '', 1, 60, '1', 0, 0, 0),
(445, 'lectureImage.png', 'lecture12', 0, 0, 'Перевірка редагування уроку', '', '', 1, 60, '1', 0, 0, 0),
(446, 'lectureImage.png', 'lecture11', 0, 0, 'Перевірка', '', '', 1, 60, '1', 0, 0, 0),
(447, 'lectureImage.png', 'lecture12', 0, 0, 'Баг', '', '', 1, 60, '1', 0, 0, 0),
(448, 'lectureImage.png', 'lecture13', 0, 0, 'тест', '', '', 1, 60, '1', 0, 0, 0),
(449, 'lectureImage.png', 'lecture14', 0, 0, 'test2', '', '', 1, 60, '1', 0, 0, 0),
(450, 'lectureImage.png', 'lecture15', 0, 0, 'Заняття 15', '', '', 1, 60, '1', 0, 0, 0),
(451, 'lectureImage.png', 'lecture16', 0, 0, '21', '12', '21', 1, 60, '1', 0, 0, 0),
(452, 'lectureImage.png', 'lecture17', 0, 0, '22', '', '', 1, 60, '1', 0, 0, 0),
(453, 'lectureImage.png', 'lecture18', 0, 0, '33', '', '', 1, 60, '1', 0, 0, 0),
(454, 'lectureImage.png', 'lecture19', 0, 0, '20', '', '', 1, 60, '1', 0, 0, 0),
(455, 'lectureImage.png', 'lecture15', 0, 0, 'test3', '', '', 1, 60, '1', 0, 0, 0),
(456, 'lectureImage.png', 'lecture16', 0, 0, 'test4', '', '', 1, 60, '1', 0, 0, 0),
(457, 'lectureImage.png', 'lecture17', 0, 0, 'sfsdgdg', '', '', 1, 60, '1', 0, 0, 0),
(458, 'lectureImage.png', 'lecture15', 0, 0, 'bbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbb', '', '', 1, 60, '1', 0, 0, 0),
(459, 'lectureImage.png', 'lecture15', 0, 0, 'fy', '', '', 1, 60, '1', 0, 0, 0),
(460, 'lectureImage.png', 'lecture11', 0, 0, 'Тестове заняття', 'наше занятие', '', 1, 60, '1', 1, 0, 0),
(461, 'lectureImage.png', 'lecture12', 0, 0, 'Тест ', '', '', 1, 60, '1', 0, 0, 0),
(462, 'lectureImage.png', 'lecture13', 1, 11, 'ТЕСТУВАННЯ', '', '', 1, 60, '1', 0, 0, 0),
(463, 'lectureImage.png', 'lecture14', 0, 0, 'New', 'New', 'New', 1, 60, '1', 0, 0, 0),
(464, 'lectureImage.png', 'lecture1', 123, 1, 'Стажування 1.', 'Стажировка 1.', 'Traineeship 1.', 1, 60, '1', 0, 0, 0),
(465, 'lectureImage.png', 'lecture14', 0, 0, 'Заняття для тестування', 'Занятие для тестирования', '', 1, 60, '16', 0, 0, 0),
(466, 'lectureImage.png', 'lecture1', 166, 1, 'Перевірка редагування уроку', 'Проверка редактирования урока', '', 1, 60, '1', 0, 0, 0),
(467, 'lectureImage.png', 'lecture2', 0, 0, '6', '', '', 1, 60, '1', 0, 0, 0),
(468, 'lectureImage.png', 'lecture2', 0, 0, '6666', '', '', 1, 60, '1', 0, 0, 0),
(469, 'lectureImage.png', 'lecture3', 0, 0, '66', '', 'vhyfy', 1, 60, '1', 0, 0, 0),
(470, 'lectureImage.png', 'lecture4', 0, 0, '64566446', '', '4fhgfj', 1, 60, '1', 0, 0, 0),
(471, 'lectureImage.png', 'lecture2', 0, 0, 'yy', '', '', 1, 60, '1', 0, 0, 0),
(472, 'lectureImage.png', 'lecture15', 0, 0, 'Автотест', 'Автотест', 'Autotest', 1, 60, '1', 0, 0, 0),
(473, 'lectureImage.png', 'lecture15', 0, 0, 'Автотест', 'Автотест', 'Autotest', 1, 60, '1', 0, 0, 0),
(474, 'lectureImage.png', 'lecture15', 0, 0, 'Автотест', 'Автотест', 'Autotest', 1, 60, '1', 0, 0, 0),
(475, 'lectureImage.png', 'lecture15', 0, 0, 'Автотест', 'Автотест', 'Autotest', 1, 60, '1', 0, 0, 0),
(476, 'lectureImage.png', 'lecture16', 0, 0, 'Автотест', 'Автотест', 'Autotest', 1, 60, '1', 0, 0, 0),
(477, 'lectureImage.png', 'lecture16', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(478, 'lectureImage.png', 'lecture17', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(479, 'lectureImage.png', 'lecture18', 0, 0, 'Автотест', 'Автотест', 'Autotest', 1, 60, '1', 0, 0, 0),
(480, 'lectureImage.png', 'lecture18', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(481, 'lectureImage.png', 'lecture19', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(482, 'lectureImage.png', 'lecture20', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(483, 'lectureImage.png', 'lecture21', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(484, 'lectureImage.png', 'lecture22', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(485, 'lectureImage.png', 'lecture23', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(486, 'lectureImage.png', 'lecture24', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(487, 'lectureImage.png', 'lecture25', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(488, 'lectureImage.png', 'lecture26', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(489, 'lectureImage.png', 'lecture27', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(490, 'lectureImage.png', 'lecture28', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(491, 'lectureImage.png', 'lecture29', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(492, 'lectureImage.png', 'lecture30', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(493, 'lectureImage.png', 'lecture31', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(494, 'lectureImage.png', 'lecture32', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(495, 'lectureImage.png', 'lecture33', 0, 0, 'Автотест', 'Автотест', 'Autotest', 1, 60, '1', 0, 0, 0),
(496, 'lectureImage.png', 'lecture33', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(497, 'lectureImage.png', 'lecture34', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(498, 'lectureImage.png', 'lecture35', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(499, 'lectureImage.png', 'lecture36', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(500, 'lectureImage.png', 'lecture37', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(501, 'lectureImage.png', 'lecture38', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(502, 'lectureImage.png', 'lecture39', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(503, 'lectureImage.png', 'lecture16', 0, 0, 'Автотест', 'Автотест', 'Autotest', 1, 60, '1', 0, 0, 0),
(504, 'lectureImage.png', 'lecture16', 0, 0, 'Автотест', 'Автотест', 'Autotest', 1, 60, '1', 0, 0, 0),
(505, 'lectureImage.png', 'lecture16', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(506, 'lectureImage.png', 'lecture17', 0, 0, 'Автотест1', 'Автотест1', 'Autotest1', 1, 60, '1', 0, 0, 0),
(507, 'lectureImage.png', 'lecture18', 0, 0, 'Автотест', 'Автотест', 'Autotest', 1, 60, '1', 0, 0, 0),
(508, 'lectureImage.png', 'lecture18', 0, 0, 'Автотест', 'Автотест', 'Autotest', 1, 60, '1', 0, 0, 0),
(509, 'lectureImage.png', 'lecture18', 0, 0, 'Автотест', 'Автотест', 'Autotest', 1, 60, '1', 0, 0, 0),
(510, 'lectureImage.png', 'lecture14', 0, 0, 'Тест1', 'Тест2', 'Test3', 1, 60, '1', 0, 0, 0),
(511, 'lectureImage.png', 'lecture15', 0, 0, 'T1', 'T2', 'T3', 1, 60, '1', 0, 0, 0),
(512, 'lectureImage.png', 'lecture2', 7, 2, '1', '1', '1', 1, 60, '1', 0, 0, 0),
(513, 'lectureImage.png', 'lecture15', 1, 13, 'даної воимвормвал заняття для перевірки доступного функціоналу, Заняття для перевірки доступного функціоналуЗаняття для перевірки доступного функціоналу даної воимвормвал заняття для перевірки доступного функціоналу', '', '', 1, 60, '1', 0, 0, 0),
(514, '', 'lecture2', 123, 2, 'Стажування 2', '', '', 1, 60, '1', 0, 0, 0),
(515, 'lectureImage.png', 'lecture16', 0, 0, '5', '5', '', 1, 60, '1', 0, 0, 0),
(516, 'lectureImage.png', 'lecture1', 179, 1, 'Натуральні тканини', 'Натуральные ткани', 'Natural fabrics', 1, 60, '1', 0, 0, 0),
(517, 'lectureImage.png', 'lecture2', 179, 2, 'Штучні тканини', 'Искусственные ткани', 'Silk fabrics', 1, 60, '1', 0, 0, 0),
(518, '', 'lecture1', 187, 1, 'Принципи підбору персоналу', '', '', 1, 60, '1', 0, 0, 0),
(519, 'lectureImage.png', 'lecture2', 187, 2, 'Основи 1', '', '', 1, 60, '1', 0, 0, 0),
(520, 'lectureImage.png', 'lecture3', 0, 0, 'Основи 1', '', '', 1, 60, '1', 0, 0, 0),
(521, 'lectureImage.png', 'lecture3', 187, 3, 'Основи2', '', '', 1, 60, '1', 0, 0, 0),
(522, 'lectureImage.png', 'lecture1', 188, 1, 'Заняття 1', '', '', 1, 60, '1', 0, 0, 0),
(523, 'lectureImage.png', 'lecture1', 0, 0, 'Наше перше заняття', '', '', 1, 60, '1', 0, 0, 0),
(524, 'lectureImage.png', 'lecture2', 0, 0, 'Нпаовчра', '', '', 1, 60, '1', 0, 0, 0),
(525, 'lectureImage.png', 'lecture3', 0, 0, 'арапрапр', '', '', 1, 60, '1', 0, 0, 0),
(526, 'lectureImage.png', 'lecture4', 0, 0, 'апопрорло', '', '', 1, 60, '1', 0, 0, 0),
(527, 'lectureImage.png', 'lecture4', 0, 0, 'чсисми', '', '', 1, 60, '1', 0, 0, 0),
(528, 'lectureImage.png', 'lecture5', 0, 0, 'тптрппрьр', '', '', 1, 60, '1', 0, 0, 0),
(529, 'lectureImage.png', 'lecture5', 0, 0, 'итпатпми', '', '', 1, 60, '1', 0, 0, 0),
(530, 'lectureImage.png', 'lecture16', 0, 0, 'пиптмипти', '', '', 1, 60, '1', 0, 0, 0),
(531, 'lectureImage.png', 'lecture17', 0, 0, 'ролролдодол', '', '', 1, 60, '1', 0, 0, 0),
(532, 'lectureImage.png', 'lecture16', 1, 12, 'рогнрьлгнорлош', '', '', 1, 60, '1', 0, 0, 0),
(533, 'lectureImage.png', 'lecture16', 0, 0, 'кегркегоенвшнг', '', '', 1, 60, '1', 0, 0, 0),
(534, 'lectureImage.png', 'lecture17', 0, 0, 'кепогелгнршл', '', '', 1, 60, '1', 0, 0, 0),
(535, 'lectureImage.png', 'lecture18', 1, 15, 'гнлорбдолбдлдю', '', '', 1, 60, '1', 0, 0, 0),
(536, 'lectureImage.png', 'lecture15', 1, 14, 'кегркепагонпьпр', 'отлорл', '', 1, 60, '1', 0, 0, 0),
(537, 'lectureImage.png', 'lecture1', 193, 1, 'УРОК1', '', '', 1, 60, '1', 0, 0, 0),
(538, 'lectureImage.png', 'lecture2', 0, 0, 'УРОК2', '', '', 1, 60, '1', 0, 0, 0),
(539, 'lectureImage.png', 'lecture3', 0, 0, 'sfdsfs', '', '', 1, 60, '1', 0, 0, 0),
(540, 'lectureImage.png', 'lecture4', 0, 0, 'sdfsdfsdfsfdsf34343', '', '', 1, 60, '1', 0, 0, 0),
(541, 'lectureImage.png', 'lecture2', 0, 0, 'dstgedtert', '', '', 1, 60, '1', 0, 0, 0),
(542, 'lectureImage.png', 'lecture3', 192, 1, 'ertertertert', '', '', 1, 60, '1', 0, 0, 0),
(543, 'lectureImage.png', 'lecture2', 192, 2, 'hjgujik.', '', '', 1, 60, '1', 0, 0, 0),
(544, 'lectureImage.png', 'lecture3', 0, 0, 'nhghnhmhn', '', '', 1, 60, '1', 0, 0, 0),
(545, 'lectureImage.png', 'lecture4', 0, 0, 'm nm,', '', '', 1, 60, '1', 0, 0, 0),
(546, 'lectureImage.png', 'lecture5', 192, 3, 'hjjjjjjmhj', '', '', 1, 60, '1', 0, 0, 0),
(547, 'lectureImage.png', 'lecture6', 0, 0, 'jhmkhg', '', '', 1, 60, '1', 0, 0, 0),
(548, 'lectureImage.png', 'lecture6', 192, 4, 'm, mn, mn,', '', '', 1, 60, '1', 0, 0, 0),
(549, 'lectureImage.png', 'lecture2', 193, 2, 'jfuyhjkuyhk', '', '', 1, 60, '1', 0, 0, 0),
(550, 'lectureImage.png', 'lecture3', 0, 0, 'yjuyjkguyk', '', '', 1, 60, '1', 0, 0, 0),
(551, 'lectureImage.png', 'lecture4', 0, 0, 'hjkjg', '', '', 1, 60, '1', 0, 0, 0),
(552, 'lectureImage.png', 'lecture3', 0, 0, 'hjmkhg,gjklgl', '', '', 1, 60, '1', 0, 0, 0),
(553, 'lectureImage.png', 'lecture4', 0, 0, 'ukuikljhil', '', '', 1, 60, '1', 0, 0, 0),
(554, 'lectureImage.png', 'lecture4', 0, 0, 'ghuklio', '', '', 1, 60, '1', 0, 0, 0),
(555, 'lectureImage.png', 'lecture5', 193, 4, 'ioliol;.kl.;', '', '', 1, 60, '1', 0, 0, 0),
(556, 'lectureImage.png', 'lecture5', 193, 3, 'fyuioo;lk,;,,', '', '', 1, 60, '1', 0, 0, 0),
(557, 'lectureImage.png', 'lecture6', 0, 0, 'ytg u7ygo', '', '', 1, 60, '1', 0, 0, 0),
(558, 'lectureImage.png', 'lecture7', 193, 5, 'yug uyn uih yiop', '', '', 1, 60, '1', 0, 0, 0),
(559, 'lectureImage.png', 'lecture7', 193, 6, 'fuygn uo', '', '', 1, 60, '1', 0, 0, 0),
(560, 'lectureImage.png', 'lecture3', 123, 3, 'ропрлр', '', '', 1, 60, '1', 0, 0, 0),
(561, 'lectureImage.png', 'lecture4', 123, 4, 'ропрлр', '', '', 1, 60, '1', 0, 0, 0),
(562, 'lectureImage.png', 'lecture5', 123, 5, 'ропрлр', '', '', 1, 60, '1', 0, 0, 0),
(563, 'lectureImage.png', 'lecture6', 123, 6, 'ропрлр', '', '', 1, 60, '1', 0, 0, 0),
(564, 'lectureImage.png', 'lecture7', 123, 7, 'ропрлр', '', '', 1, 60, '1', 0, 0, 0),
(565, 'lectureImage.png', 'lecture8', 123, 8, 'ропрлр', '', '', 1, 60, '1', 0, 0, 0),
(566, 'lectureImage.png', 'lecture9', 123, 9, 'ропрлр', '', '', 1, 60, '1', 0, 0, 0),
(567, 'lectureImage.png', 'lecture10', 123, 10, 'ропрлр', '', '', 1, 60, '1', 0, 0, 0),
(568, 'lectureImage.png', 'lecture11', 123, 11, 'ропрлр', '', '', 1, 60, '1', 0, 0, 0),
(569, 'lectureImage.png', 'lecture12', 123, 12, 'ропрлр', '', '', 1, 60, '1', 0, 0, 0),
(570, 'lectureImage.png', 'lecture13', 123, 13, 'ропрлр', '', '', 1, 60, '1', 0, 0, 0);
INSERT INTO `lectures` (`id`, `image`, `alias`, `idModule`, `order`, `title_ua`, `title_ru`, `title_en`, `idType`, `durationInMinutes`, `idTeacher`, `isFree`, `rate`, `verified`) VALUES
(571, 'lectureImage.png', 'lecture14', 123, 14, 'ропрлр', '', '', 1, 60, '1', 0, 0, 0),
(572, 'lectureImage.png', 'lecture15', 123, 15, 'ропрлр', '', '', 1, 60, '1', 0, 0, 0),
(573, 'lectureImage.png', 'lecture4', 23, 4, 'опропр', '', '', 1, 60, '1', 0, 0, 0),
(574, 'lectureImage.png', 'lecture5', 23, 5, 'опропр', '', '', 1, 60, '1', 0, 0, 0),
(575, 'lectureImage.png', 'lecture6', 23, 6, 'опропр', '', '', 1, 60, '1', 0, 0, 0),
(576, 'lectureImage.png', 'lecture7', 23, 7, 'опропр', '', '', 1, 60, '1', 0, 0, 0),
(577, 'lectureImage.png', 'lecture16', 0, 0, 'jhkjl', '', '', 1, 60, '1', 0, 0, 0),
(578, 'lectureImage.png', 'lecture17', 0, 0, 'jhkjl', '', '', 1, 60, '1', 0, 0, 0),
(579, 'lectureImage.png', 'lecture18', 0, 0, 'jhkjl', '', '', 1, 60, '1', 0, 0, 0),
(580, 'lectureImage.png', 'lecture19', 0, 0, 'jhkjl', '', '', 1, 60, '1', 0, 0, 0),
(581, 'lectureImage.png', 'lecture20', 0, 0, 'jhkjl', '', '', 1, 60, '1', 0, 0, 0),
(582, 'lectureImage.png', 'lecture16', 0, 0, 'Повтор', '', '', 1, 60, '1', 0, 0, 0),
(583, 'lectureImage.png', 'lecture17', 0, 0, 'Повтор', '', '', 1, 60, '1', 0, 0, 0),
(584, 'lectureImage.png', 'lecture18', 0, 0, 'Повтор', '', '', 1, 60, '1', 0, 0, 0),
(585, 'lectureImage.png', 'lecture19', 0, 0, 'Повтор', '', '', 1, 60, '1', 0, 0, 0),
(586, 'lectureImage.png', 'lecture20', 0, 0, 'Повтор', '', '', 1, 60, '1', 0, 0, 0),
(587, 'lectureImage.png', 'lecture21', 0, 0, 'Повтор', '', '', 1, 60, '1', 0, 0, 0),
(588, 'lectureImage.png', 'lecture22', 0, 0, 'Повтор', '', '', 1, 60, '1', 0, 0, 0),
(589, 'lectureImage.png', 'lecture23', 0, 0, 'Повтор', '', '', 1, 60, '1', 0, 0, 0),
(590, 'lectureImage.png', 'lecture24', 0, 0, 'Повтор', '', '', 1, 60, '1', 0, 0, 0);

-- --------------------------------------------------------

--
-- Структура таблицы `lecture_element`
--

CREATE TABLE IF NOT EXISTS `lecture_element` (
  `id_block` int(11) NOT NULL AUTO_INCREMENT,
  `id_lecture` int(11) NOT NULL,
  `block_order` int(11) NOT NULL,
  `id_type` tinyint(4) NOT NULL,
  `html_block` text NOT NULL,
  PRIMARY KEY (`id_block`),
  KEY `FK_lecture_element_element_type` (`id_type`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='Chapters and other lecture''s resources ' AUTO_INCREMENT=2039 ;

--
-- Дамп данных таблицы `lecture_element`
--

INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(9, 1, 1, 2, 'https://www.youtube.com/embed/L3Mg6lk6yyA'),
(10, 1, 4, 7, '<ol>\n	<li>On line 7, set <span class="colorBP"><span class="colorGreen">$</span>ter<em>ms</em></span><em> equal to a number greater than 5. Make sure to put a semicolon at the end of the line.</em></li>\n	<li>On line 9, edit the state condition so that your program will be out Some expressions return a '' logical value": TRUE or FALSE, text like thise:<span class="colorAlert">You get a 10% discount!</span></li>\n</ol>'),
(13, 1, 2, 1, '<p><span class="colorBlack">Імена змінних</span>\n</p>\n<p>Б<strong><em><del>удь-яка змінна в РНР має ім''я, що починається із знаку $, наприклад Svariable. При такому способі формування імен змінних їх дуже легко відрізнити від іншого коду. Якщо в інших мовах інколи може виникати плутанина з тим, що при першому погляді</del></em></strong> на код не завжди ясно - де тут змінні, а де функції, то в РНР це питання навіть не постає. Наприклад, ссилка на змінну по її імені, що зберігається в іншій змінній:\n</p>'),
(18, 1, 3, 1, '<p><br>\n</p>\n<ol>\n	<ol>\n		<li><span style="background-color: rgb(255, 255, 255);">On <del>li</del>ne 7, set $terms equal to a number greater than 5. Make sure to put a semicolon at the end of the line.</span></li>\n		<li><span style="background-color: rgb(255, 255, 255);">On line 9, edit the st<del>ate condition so that your program will be out Some expressions return a '' logical value": TRUE or FALSE, text like thise:</del>You get a 10% discount!</span></li>\n	</ol>\n</ol>'),
(19, 1, 7, 2, 'https://www.youtube.com/embed/L3Mg6lk6yyA'),
(21, 2, 1, 1, '<p><span class="colorBlack">Імена змінних<em></em></span>\n	<strong><del><em></em></del></strong>\n</p>\n<p>Будь-яка змінна в РНР має ім''я, що починається із знаку $, наприклад Svariable. При такому способі формування імен змінних їх дуже легко відрізнити від іншого коду. Якщо в інших мовах інколи може виникати плутанина з тим, що при першому погляді на код не завжди ясно - де тут змінні, а де функції, то в РНР це питання навіть не постає. Наприклад, ссилка на змінну по її імені, що зберігається в іншій змінній:\n</p>'),
(22, 3, 1, 1, ' <span class="colorBlack">Імена змінних</span>\r\n    <p>Будь-яка змінна в РНР має ім''я, що починається із знаку $, наприклад Svariable. При такому способі формування імен змінних їх дуже легко відрізнити від іншого коду. Якщо в інших мовах інколи може виникати плутанина з тим, що при першому погляді на код не завжди ясно - де тут змінні, а де функції, то в РНР це питання навіть не постає. Наприклад, ссилка на змінну по її імені, що зберігається в іншій змінній:</p>'),
(23, 24, 1, 1, '<p>New text block!</p>'),
(24, 24, 2, 1, '<p><iframe width="420" height="315" src="https://www.youtube.com/embed/7KAhgrBDl3A" frameborder="0" allowfullscreen=""></iframe></p>'),
(25, 1, 5, 1, '<p>simple\r\n</p>'),
(26, 1, 8, 1, '<p>Add links. Example with "www" and "http"</p><p><a href="http://www.google.com">www.google.com</a></p><p><a href="http://google.com">http://google.com</a></p><p><br></p>'),
(27, 1, 6, 1, '<p>Add video. Example: ("<a href="http://www.youtube.com/watch?v=QlRGhXj0uRY">youtube.com/watch?v=QlRGhXj0uRY</a>")\r\n'),
(28, 1, 9, 1, '<p>Add picture. Example: "screensavergift.com/wp-content/uploads/BeautifulNature3-610x320.jpg"</p><p><img src="http://www.screensavergift.com/wp-content/uploads/BeautifulNature3-610x320.jpg"><span class="redactor-invisible-space"><br></span></p>'),
(29, 1, 10, 1, '<p>Add code. Example:\n</p>\n<pre>&lt;div id="logo_img" class="down"&gt;\n &lt;a href="&lt;?php echo Yii::app()-&gt;createUrl(''site/index'');?&gt;"&gt;\n &lt;img id="logo" src="&lt;?php echo Yii::app()-&gt;request-&gt;baseUrl;?&gt;/css/images/Logo_small.png"/&gt;\n &lt;/a&gt;\n&lt;/div&gt;\n</pre>'),
(30, 1, 11, 1, '<p><iframe width="500" height="281" src="//www.youtube.com/embed/6zEnXc8jdEE" frameborder="0" allowfullscreen=""></iframe></p>'),
(32, 1, 12, 3, '<pre>\r\nmodel = Module::model()->findByPk($idModule);\r\n        $owners = explode('';'',$model->owners); //array of teacher''s ids that cna edit this module\r\n        $teachers = Teacher::model()->findAllByAttributes(array(''teacher_id''=>$owners)); //info about owners\r\n\r\n\r\n        $criteria=new CDbCriteria();\r\n        $criteria->addCondition(''idModule>0'');\r\n        $criteria->addCondition(''idModule=''.$idModule);\r\n\r\n        $dataProvider = new CActiveDataProvider(''Lecture'', array(\r\n            ''criteria'' =>$criteria,\r\n            ''pagination''=>false,\r\n            ''sort''=>array(\r\n                ''defaultOrder''=>array(\r\n                    ''order''=>CSort::SORT_ASC,\r\n                )\r\n            )\r\n        ));\r\n</pre>'),
(35, 1, 13, 1, '<p>Глава 1.</p>'),
(36, 1, 14, 1, '<p>Глава 3.</p>'),
(37, 1, 15, 1, '<p>Глава 4.</p>'),
(38, 1, 16, 1, '<p>aefaeghsr</p>'),
(39, 1, 17, 1, '<p>124578235689</p>'),
(40, 1, 18, 2, '//www.youtube.com/embed/d1_JBMrrYw8"'),
(41, 1, 19, 2, '//www.youtube.com/embed/5PSNL1qE6VY"'),
(42, 1, 20, 2, '//www.youtube.com/embed/5PSNL1qE6VY"'),
(43, 1, 21, 2, '//www.youtube.com/embed/d1_JBMrrYw8"'),
(45, 1, 22, 1, '<p>y6</p>'),
(46, 1, 23, 1, '<iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/9eiRmWLcASw" frameborder="0" allowfullscreen=""></iframe>'),
(47, 1, 24, 2, '//www.youtube.com/embed/9eiRmWLcASw"'),
(59, 2, 2, 1, '<table><tbody><tr><td>bdffbdz</td><td>bdfb</td><td>bfdbdbfd</td></tr><tr><td>bfdbdf</td><td>bdfbfd</td><td>bfdb</td></tr><tr><td>fdbsf</td><td>bfb</td><td>bfbfs</td></tr></tbody></table>'),
(60, 2, 5, 1, '<table><thead><tr><th>First Name</th><th>Last Name</th><th>Points</th></tr></thead><tbody><tr><td>Jill</td><td>Smith</td><td>50</td></tr><tr><td>Eve</td><td>Jackson</td><td>94</td></tr></tbody></table>'),
(76, 2, 4, 1, '\\[\\aa \\mathbb{I}\\Re \\Im \\exists \\Im\\Theta \\Sigma \\Psi \\Psi \\Psi \\Psi \\Re \\Cup \\!\\]\r\n'),
(79, 48, 1, 1, '\\[\\sqrt{\\mathbb{Z}\\ddots \\mathbb{I}\\zeta \\varepsilon \\vartheta \\nu \\tau \\sigma \\mu \\varpi }\\]\r\n'),
(80, 1, 25, 1, '<p><span class="highLT">&lt;</span><span class="highELE">a</span> <span class="highATT">href=</span><span class="highVAL">"http://www.w3schools.com/"</span> <span class="highATT">target=</span><span class="highVAL">"_blank"</span><span class="highGT">&gt;</span>Visit W3Schools!<span class="highLT">&lt;</span><span class="highELE">/a</span><span class="highGT">&gt;</span></p><p><span class="highLT">&lt;<span class="highELE">a</span> <span class="highATT">href=</span><span class="highVAL">"http://www.w3schools.com/"</span> <span class="highATT">target=</span><span class="highVAL">"_blank"</span><span class="highGT">&gt;</span>Visit W3Schools!<span class="highLT">&lt;</span><span class="highELE">/a</span><span class="highGT">&gt;</span><br></span></p><p><span class="redactor-invisible-space"><span class="highLT">&lt;<span class="highELE">a</span> <span class="highATT">href=</span><span class="highVAL">"http://www.w3schools.com/"</span> <span class="highATT">target=</span><span class="highVAL">"_blank"</span><span class="highGT">&gt;</span>Visit W3Schools!<span class="highLT">&lt;</span><span class="highELE">/a</span><span class="highGT">&gt;</span><br></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="highLT">&lt;<span class="highELE">a</span> <span class="highATT">href=</span><span class="highVAL">"http://www.w3schools.com/"</span> <span class="highATT">target=</span><span class="highVAL">"_blank"</span><span class="highGT">&gt;</span>Visit W3Schools!<span class="highLT">&lt;</span><span class="highELE">/a</span><span class="highGT">&gt;</span><br></span></span></span></p>'),
(81, 2, 6, 1, '<p><a href="http://intita.itatests.com/teachers">Teachers</a></p>'),
(82, 2, 3, 1, '<p><a href="http://intita.itatests.com/teachers" target="_blank">Teachers</a></p>'),
(83, 14, 1, 1, '<p>Chapter 1.</p>'),
(84, 1, 26, 5, '<p>gvszbs</p>'),
(86, 54, 1, 1, '<h2><span style="font-size: 30px;"><u>Математика как специальность</u></span></h2>'),
(88, 54, 2, 4, '<p>« <a href="http://testitquickly.com/2009/09/09/cu-dneara-patsanii/">С днем сами знаете кого!</a></p><p><a href="http://testitquickly.com/2009/09/11/op-donderdag-op/" rel="next">Оп, дондердаг! Оп!</a> »</p><h2>Тестируем поля логин/пароль</h2><p>09.09.2009 by <a href="http://testitquickly.com/author/astenix/" title="Posts by Алексей Лупан">Алексей Лупан</a></p><p>Как и все собравшиеся в этом мониторе, мне приходится тестировать иногда проклятые поля ввода логина и пароля. И еще поля регистрации нового юзверя. По ходу дела и после поисков по интернетам собрался отдельный файлик с перечнем тематических тестов (еще будет дополняться и всячески обновляться). Полезен и в ратнейшем труде программистов.</p><p>Повсюду под предложением “<strong>Expected: alert</strong>” подразумевается, что ответ должен быть отрицательным, но система должна как-то сигнализировать юзеру о причине проблемы.</p><h2><strong>Регистрация нового пользователя</strong></h2><ol><li>Зарегистрировать нового пользователя с логином new_user. Expected: можно.</li><li>Зарегистрировать нового пользователя с логином new_user_test. Expected: можно.</li><li>Зарегистрировать нового пользователя с логином new-user. Expected: можно.</li><li>Зарегистрировать нового пользователя с логином new1234user. Expected: можно.</li><li>Зарегистрировать нового пользователя с логином new@user. Expected: alert.</li><li>Зарегистрировать нового пользователя с логином newuser и паролем newuser (полное совпадение). Expected: alert.</li><li>использование только ASCII символов в логине – Expected: alert.</li><li>регистрация пользователя с логином, содержащим пробелы или состоящим из одних пробелом – Expected: alert.</li><li>регистрация пользователя с паролем, содержащим пробелы или состоящим из одних пробелом – Expected: alert.</li><li>регистрация пользователя с логином содержащим XSS или SQL injections. – Expected: alert.</li><li>а можно ли зарегистрировать пользователя “admin”, и пользователя “аdmin” (где а – из русской расскладки)?</li><li>В некоторых случаях разработчики проверяют пользователя в базе с помощью LIKE, и не обрабатывают user input. Поэтому нужно проверить комбинацию %%%/%%% (знак % повторяется 3 раза, чтобы обойти валидацию на минимальную длину).</li><li>Логин под существуюшим пользователем – смена пароля:<ol><li>Создать аккаунт с максимально возможным числом символом в логине<ol><li>Попробовать залогиниться</li><li>Попробовать сменить пароль</li><li>Причина: возможно несовпадение максимумов между строками ввода нового пароля, ввода пароля, смены пароля, и в БД.<ol><li>Дополнительно: проделать те же шаги, но с количеством символов макс+1</li><li>Дополнительно: проделать те же шаги, но<ol><li>с макс. количеством разрешенных символов + пробел (и другие безобидные);</li><li>с макс. количеством разрешенных символов + 1 запрещенный.</li></ol></li></ol></li></ol></li><li>Создать аккаунт с максимально возможным числом символом в пароле</li></ol><ol><li><ol><li>Попробовать залогиниться</li><li>Попробовать сменить пароль (а может – и сам логин?)</li><li>Причина та же: возможно несовпадение максимумов между строками ввода нового пароля, ввода пароля, смены пароля, и в БД.</li></ol></li></ol></li></ol><h2><strong>Ввод некорректных данных</strong></h2><ol><li>Ввeсти корректный логин и корректный пароль. Expected: успешно залогинен. Разлогиниться. Почистить кэш и куки (открыть/закрыть браузер?).</li><li>Оставить оба поля пустыми. Нажать на Login. Expected: alert.</li><li>Оставить пустое поле login. Нажать на Login. Expected: alert.</li><li>Оставить пустое поле password. Нажать на Login. Expected: alert.</li><li>Ввeсти корректный логин и некорректный пароль. Expected: alert.</li><li>Ввeсти некорректный логин, но корректный пароль. Expected: alert.</li></ol>'),
(89, 54, 3, 1, '<p>вопрлпокрплврплврппепловрвлрпвапроварпарвапрваопрвловрплварпварпвоорвапрваорпвоарпваопрвоапрваопрвааопрвааопрваопварповараплваарповапрваопрвлопрвапорваалпорваалопва</p>'),
(90, 54, 4, 5, '<p><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0" title="Математика">Математика</a> как специальность научных работников министерства науки и технологий Российской Федерации<sup><a href="https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB%D1%8B_%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B8#cite_note-1">[1]</a></sup> подразделяется на научные специальности</p><ul><li><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7" title="Математический анализ">Математический анализ</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5" title="Дифференциальное уравнение">Дифференциальные уравнения</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F_%D1%84%D0%B8%D0%B7%D0%B8%D0%BA%D0%B0" title="Математическая физика">Математическая физика</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%93%D0%B5%D0%BE%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D1%8F" title="Геометрия">Геометрия</a> и <a href="https://ru.wikipedia.org/wiki/%D0%A2%D0%BE%D0%BF%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D1%8F" title="Топология">топология</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%A2%D0%B5%D0%BE%D1%80%D0%B8%D1%8F_%D0%B2%D0%B5%D1%80%D0%BE%D1%8F%D1%82%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9" title="Теория вероятностей">Теория вероятностей</a> и <a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F_%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%81%D1%82%D0%B8%D0%BA%D0%B0" title="Математическая статистика">математическая статистика</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F_%D0%BB%D0%BE%D0%B3%D0%B8%D0%BA%D0%B0" title="Математическая логика">Математическая логика</a>, <a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%B5%D0%B1%D1%80%D0%B0" title="Алгебра">алгебра</a> и <a href="https://ru.wikipedia.org/wiki/%D0%A2%D0%B5%D0%BE%D1%80%D0%B8%D1%8F_%D1%87%D0%B8%D1%81%D0%B5%D0%BB" title="Теория чисел">теория чисел</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%92%D1%8B%D1%87%D0%B8%D1%81%D0%BB%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0" title="Вычислительная математика">Вычислительная математика</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%81%D0%BA%D1%80%D0%B5%D1%82%D0%BD%D0%B0%D1%8F_%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0" title="Дискретная математика">Дискретная математика</a> и математическая <a href="https://ru.wikipedia.org/wiki/%D0%9A%D0%B8%D0%B1%D0%B5%D1%80%D0%BD%D0%B5%D1%82%D0%B8%D0%BA%D0%B0" title="Кибернетика">кибернетика</a></li></ul>'),
(91, 54, 5, 7, '<h2><span class="mw-headline">Математика как учебная дисциплина</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="https://ru.wikipedia.org/w/index.php?title=%D0%A0%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB%D1%8B_%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B8&amp;veaction=edit&amp;vesection=2" title="Редактировать раздел «Математика как учебная дисциплина»" class="mw-editsection-visualeditor">править</a> | </span><a href="https://ru.wikipedia.org/w/index.php?title=%D0%A0%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB%D1%8B_%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B8&amp;action=edit&amp;section=2" title="Редактировать раздел «Математика как учебная дисциплина»">править вики-текст</a><span class="mw-editsection-bracket">]</span></h2><p>Математика как учебная дисциплина подразделяется в Российской Федерации на <a href="https://ru.wikipedia.org/wiki/%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%BD%D0%B0%D1%8F_%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0" title="Элементарная математика">элементарную математику</a>, изучаемую в средней школе и образованную дисциплинами:</p><ul><li><a href="https://ru.wikipedia.org/wiki/%D0%90%D1%80%D0%B8%D1%84%D0%BC%D0%B5%D1%82%D0%B8%D0%BA%D0%B0" title="Арифметика">арифметика</a>,</li><li><a href="https://ru.wikipedia.org/wiki/%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%BD%D0%B0%D1%8F_%D0%B0%D0%BB%D0%B3%D0%B5%D0%B1%D1%80%D0%B0" title="Элементарная алгебра">элементарная алгебра</a>,</li><li><a href="https://ru.wikipedia.org/wiki/%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%BD%D0%B0%D1%8F_%D0%B3%D0%B5%D0%BE%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D1%8F" title="Элементарная геометрия" class="mw-redirect">элементарная геометрия</a>: <a href="https://ru.wikipedia.org/wiki/%D0%9F%D0%BB%D0%B0%D0%BD%D0%B8%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D1%8F" title="Планиметрия">планиметрия</a> и <a href="https://ru.wikipedia.org/wiki/%D0%A1%D1%82%D0%B5%D1%80%D0%B5%D0%BE%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D1%8F" title="Стереометрия">стереометрия</a>,</li><li>теория элементарных функций и элементы анализа,</li></ul>'),
(92, 54, 6, 1, '<p><fmath><mrow><mrow><mrow><mi>a</mi><msup><mi>x</mi> <span class="fm-script fm-inline"><mn>2</mn></span></msup></mrow><mo>+</mo><mrow><mi>b</mi><mi>x</mi></mrow></mrow><mo>+</mo><mi>c</mi></mrow></fmath><strong> = 0 </strong></p>'),
(93, 54, 7, 1, '<p><strong><span style="background-color: rgb(192, 80, 77);">Последовательность решения квадратного уравнения</span></strong>\n</p>\n<p><span style="background-color: rgb(192, 80, 77);"><strong> <fmath><mrow><mrow><mrow><mi>a</mi><msup><mi>x</mi> <span class="fm-script fm-inline"><mn>2</mn></span></msup></mrow><mo>+</mo><mrow><mi>b</mi><mi>x</mi></mrow></mrow><mo>+</mo><mi>c</mi></mrow></fmath> = 0 </strong><strong>:</strong></span>\n</p>\n<p><span style="background-color: rgb(192, 80, 77);"><strong> • находим дискриминант </strong><strong> D = <fmath><msup><mi>b</mi> <span class="fm-script fm-inline"><mn>2</mn></span></msup></fmath> – <fmath><mrow><mrow><mn>4</mn><mi>a</mi></mrow><mi>c</mi></mrow></fmath> </strong><strong>;</strong></span>\n</p>\n<p><span style="background-color: rgb(192, 80, 77);"><strong> • если </strong><strong> D &lt; 0 </strong><strong>, то квадратное уравнение </strong><strong>не имеет корней </strong><strong>;</strong></span>\n</p>\n<p><span style="background-color: rgb(192, 80, 77);"><strong> • если </strong><strong> D = 0 </strong><strong>, то квадратное уравнение имеет </strong></span><strong><span style="background-color: rgb(192, 80, 77);">один корень x =</span> <fmath><span class="fm-vert fm-frac"></span></fmath></strong>\n</p>\n<table>\n<tbody>\n<tr>\n	<td><mrow><mi>–</mi><mi>b</mi></mrow>\n	</td>\n</tr>\n<tr>\n	<td><mrow><mn>2</mn><mi>a</mi></mrow>\n	</td>\n</tr>\n</tbody>\n</table><strong><br></strong>\n<p><strong> • если </strong><strong> D &gt; 0 </strong><strong>, то квадратное уравнение имеет </strong><strong>два корня</strong>\n</p>\n<p><strong> <fmath><msub><mi>x</mi> <span class="fm-script fm-inline"><mn>1</mn></span></msub></fmath> = <fmath><span class="fm-vert fm-frac"></span></fmath></strong>\n</p>\n<table>\n<tbody>\n<tr>\n	<td><mrow><mrow><mi>–</mi><mi>b</mi></mrow><mo>+</mo><mrow><mo>√</mo> <span class="fm-vert fm-radicand"><mi>D</mi></span></mrow></mrow>\n	</td>\n</tr>\n<tr>\n	<td><mrow><mn>2</mn><mi>a</mi></mrow>\n	</td>\n</tr>\n</tbody>\n</table><strong> </strong><strong>, </strong><strong> <fmath><msub><mi>x</mi> <span class="fm-script fm-inline"><mn>2</mn></span></msub></fmath> = <fmath><span class="fm-vert fm-frac">\n<table>\n<tbody>\n<tr>\n	<td><mrow><mrow><mi>–</mi><mi>b</mi></mrow><mo>−</mo><mrow><mo>√</mo> <span class="fm-vert fm-radicand"><mi>D</mi></span></mrow></mrow>\n	</td>\n</tr>\n<tr>\n	<td><mrow><mn>2</mn><mi>a</mi></mrow>\n	</td>\n</tr>\n</tbody>\n</table></span></fmath> </strong><strong>.</strong>'),
(94, 49, 1, 1, '<p><a href="http://testitquickly.com/2009/09/09/vvodeste-loginu-la-adnaklassni6i/">http://testitquickly.com/2009/09/09/vvodeste-login...</a></p><p><a href="http://testitquickly.com/2009/09/09/vvodeste-loginu-la-adnaklassni6i/">http://testitquickly.com/2009/09/09/vvodeste-login...</a><span class="redactor-invisible-space"><br></span></p><p><span class="redactor-invisible-space"><a href="http://testitquickly.com/2009/09/09/vvodeste-loginu-la-adnaklassni6i/">http://testitquickly.com/2009/09/09/vvodeste-login...</a><span class="redactor-invisible-space"><br></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><a href="http://testitquickly.com/2009/09/09/vvodeste-loginu-la-adnaklassni6i/">http://testitquickly.com/2009/09/09/vvodeste-login...</a><span class="redactor-invisible-space"><br></span></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><a href="http://testitquickly.com/2009/09/09/vvodeste-loginu-la-adnaklassni6i/">http://testitquickly.com/2009/09/09/vvodeste-login...</a><span class="redactor-invisible-space"><br></span></span></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><a href="http://testitquickly.com/2009/09/09/vvodeste-loginu-la-adnaklassni6i/">http://testitquickly.com/2009/09/09/vvodeste-login...</a><span class="redactor-invisible-space"><br></span></span></span></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><a href="http://testitquickly.com/2009/09/09/vvodeste-loginu-la-adnaklassni6i/">http://testitquickly.com/2009/09/09/vvodeste-login...</a><span class="redactor-invisible-space"><br></span></span></span></span></span></span></p>'),
(97, 53, 1, 1, '<p>111111111111111\n</p>'),
(99, 14, 2, 1, '\\[x^{2}+5^{\\frac{\\partial }{\\partial x}}\\]\r\n'),
(100, 59, 2, 5, '<p><br>\n</p>\n<p>Подобные ресурсы непосредственно используются создателями для получения прибыли от посетителей. При этом можно выделить несколько основных принципов монетизации онлайн ресурсов:\n</p>'),
(101, 27, 1, 1, '<p><span style="color: rgb(149, 55, 52);"><span style="background-color: rgb(235, 241, 221);">швагиапаимриомримлчирорилапралпралпварпларпларпапрал</span><span style="background-color: rgb(235, 241, 221);"></span><span style="background-color: rgb(235, 241, 221);"></span></span></p>'),
(102, 27, 2, 1, '<p><span style="color: rgb(255, 255, 0);">4. Монетизация</span>\r\n</p>\r\n<p><span style="background-color: rgb(31, 73, 125);"><em>Если рассматривать категоризацию сайтов с точки зрения монетизации, то речь идёт о принципах получения прибыли с данных ресурсов. И в этом случае, следует выделить следующие категории:</em></span>\r\n</p>\r\n<h3>4.1 Прямая монетизация</h3>\r\n<p><span style="color: rgb(255, 255, 0);">Подобные ресурсы непосредственно используются создателями для получения прибыли от посетителей. При этом можно выделить несколько основных принципов монетизации онлайн ресурсов:</span>\r\n</p>'),
(104, 63, 1, 1, 'итмитмититмити'),
(105, 1, 27, 1, '<p>v  ;soeijy lkrstjh l;kdrj dktypj kdrty jperk jp</p>'),
(106, 50, 1, 1, '<p><br>\n</p>\n<p>            Hello World!dfbfzgnfhnm\n</p>'),
(107, 50, 2, 1, '<p>"Мой дядя самых честных правил, <br>Когда не в шутку занемог, <br>Он уважать себя заставил <br>И лучше выдумать не мог. <br>Его пример другим наука; <br>Но, боже мой, какая скука <br>С больным сидеть и день и ночь, <br>Не отходя ни шагу прочь! <br>Какое низкое коварство <br>Полу-живого забавлять, <br>Ему подушки поправлять, <br>Печально подносить лекарство, <br>Вздыхать и думать про себя: <br>Когда же чорт возьмет тебя!" </p>'),
(109, 50, 3, 1, '/images/lecture/b9f9d03a441739e0719070f374444a16.jpg"></p'),
(110, 50, 4, 7, '<p>6г6г6гг6г6г6г6г6г6г6г6г6г6г6г6г6г6г6г6г6г6г6г6г6г6гг6г6г6гогогогогогогоеонеоноеноеннооггг</p>'),
(112, 51, 2, 5, '<p>Мы все учились понемногу <br>Чему-нибудь и как-нибудь, <br>Так воспитаньем, слава богу, <br>У нас немудрено блеснуть. <br>Онегин был, по мненью многих <br>(Судей решительных и строгих) <br>Ученый малый, но педант: <br>Имел он счастливый талант <br>Без принужденья в разговоре <br>Коснуться до всего слегка, <br>С ученым видом знатока <br>Хранить молчанье в важном споре <br>И возбуждать улыбку дам <br>Огнем нежданных эпиграмм. </p>'),
(113, 51, 3, 1, '<p><a href="http://www.magister.msk.ru/library/pushkin/poetry/onegin.htm" target="_blank">http://www.magister.msk.ru/library/pushkin/poetry/onegin.htm</a>\n</p>'),
(114, 52, 1, 1, '<p><a href="http://intita.itatests.com/lesson/index/73/?idCourse=1">http://intita.itatests.com/lesson/index/73/?idCour...</a>\n</p>\n<p><a href="http://intita.itatests.com/lesson/index/73/?idCourse=1">http://intita.itatests.com/lesson/index/73/?idCour...</a><span class="redactor-invisible-space"><br></span>\n</p>\n<p><span class="redactor-invisible-space"><a href="http://intita.itatests.com/lesson/index/73/?idCourse=1">http://intita.itatests.com/lesson/index/73/?idCour...</a><span class="redactor-invisible-space"><br></span></span>\n</p>\n<p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><a href="http://intita.itatests.com/lesson/index/73/?idCourse=1">http://intita.itatests.com/lesson/index/73/?idCour...</a><span class="redactor-invisible-space"><br></span></span></span>\n</p>\n<p><span class="redactor-invisible-space">gfdgfdfgdf</span>\n</p>'),
(115, 52, 2, 1, '<p>tyuytiuiuiyuruiuiuiu</p><p><img src="/images/lecture/14b121c40847cd1005ed5b1cbdca9999.jpg"></p>'),
(116, 52, 3, 1, '<p><strong>Высокой страсти не имея <br>Для звуков жизни не щадить, </strong><br><em>Не мог он ямба от хорея, <br>Как мы ни бились, отличить. </em><br><del>Бранил Гомера, Феокрита; <br>Зато читал Адама Смита,</del> <br><u>И был глубокий эконом, <br><span style="background-color: rgb(31, 73, 125);">То есть, умел судить о том, </span></u><br><span style="font-size: 18px;">Как государство богатеет, <br>И чем живет, и почему <br>Не нужно золота ему, <br>Когда <i>простой продукт</i> имеет. </span><br><span style="color: rgb(31, 73, 125);">Отец понять его не мог <br>И земли отдавал в залог. </span><span style="color: rgb(31, 73, 125);"></span></p>'),
(117, 52, 4, 1, '\\[5+7=12+x^{2}\\]\r'),
(118, 52, 5, 1, '<p><span class="MathJax_Preview" style="color: inherit;"><span class="MJXc-math MJXc-display" id="MJXc-Span-12"><span class="MJXc-msubsup" id="MJXc-Span-13"><span class="MJXc-mo" id="MJXc-Span-14" style="margin-left: 0em; margin-right: 0.05em;"><span class="MJXc-largeop MJXc-int">∫</span></span><span class="MJXc-script-box" style="height: 2.1em; vertical-align: -0.7em;"><span class=" MJXc-script"><span style="margin-bottom: -0.25em;"><span class="MJXc-mrow" id="MJXc-Span-17"><span class="MJXc-mn" id="MJXc-Span-18">1</span><span class="MJXc-mrow" id="MJXc-Span-19"><span class="MJXc-mo" id="MJXc-Span-20">(</span><span class="MJXc-mi MJXc-italic" id="MJXc-Span-21">x</span><span class="MJXc-mo" id="MJXc-Span-22">)</span></span></span></span></span><span class=" MJXc-script"><span style="margin-top: -0.85em;"><span class="MJXc-mrow" id="MJXc-Span-15"><span class="MJXc-mn" id="MJXc-Span-16">0</span></span></span></span></span></span></span></span>\\int_{0}^{1\\left ( x \\right )}\n</p>'),
(119, 52, 6, 1, '\\[\\int_{0}^{1}\\left \\{ 5+5 \\right \\}\\]\r\n'),
(120, 52, 7, 1, '\\[\\frac{a}{b}+^x{2}\\]\r\n'),
(121, 52, 8, 1, '<p><span class="MathJax_Preview" style="color: inherit;"><span class="MJXc-math MJXc-display" id="MJXc-Span-34"><span class="MJXc-mfrac" id="MJXc-Span-35" style="vertical-align: 0.25em;"><span class="MJXc-box"><span class="MJXc-mi MJXc-italic" id="MJXc-Span-36">a</span></span><span class="MJXc-box" style="margin-top: -0.6em;"><span class="MJXc-denom"><span class="MJXc-rule" style="border-top-width: 1px; border-top-style: solid; margin: 0.1em 0px;"></span><span class="MJXc-box"><span class="MJXc-mi MJXc-italic" id="MJXc-Span-37">b</span></span></span></span></span><span class="MJXc-msubsup" id="MJXc-Span-38"><span class="MJXc-mo" id="MJXc-Span-39" style="margin-left: 0.267em; margin-right: 0.05em;">+</span><span class="MJXc-mi MJXc-italic MJXc-script" id="MJXc-Span-40" style="vertical-align: 0.5em;">x</span></span><span class="MJXc-mrow" id="MJXc-Span-41"><span class="MJXc-mn" id="MJXc-Span-42">2</span></span></span></span>\\frac{a}{b}+^x{2}\n</p>'),
(122, 52, 9, 1, '\\[\\frac{\\tfrac{a}{d}}{c}\\]\r\n'),
(123, 52, 10, 1, '\\[\\frac{\\tfrac{s}{5}}{8}\\]\r\n\\[\\sum \\Upsilon \\Sigma \\Pi\\]\r\n'),
(125, 78, 1, 1, '\\[ghfgfhjf\\]\r\n'),
(126, 78, 2, 1, '\\[gggjkgjkgjkjkgjgghghjfgjhmmnmnmb\\]\r\n'),
(127, 27, 3, 1, '<p><span style="color: inherit;" class="MathJax_Preview"></span>\n</p>\n<div style="text-align: center;" class="MathJax_Display"><span style="" ""="" "" class="MathJax"><nobr><span style="width: 17.078em; display: inline-block;" role="math" id="MathJax-Span-1" class="math"><span style="display: inline-block; position: relative; width: 15.234em; height: 0px; font-size: 112%;"><span style="position: absolute; clip: rect(1.873em, 1000em, 3.208em, -1000em); top: -2.79em; left: 0em;"><span id="MathJax-Span-2" class="mrow"><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-3" class="mi">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-4" class="mi">h</span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-5" class="mi">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-6" class="mi">h</span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-7" class="mi">f<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.06em;"></span></span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-8" class="mi">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-9" class="mi">f<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.06em;"></span></span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-10" class="mi">n</span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-11" class="mi">h</span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-12" class="mi">h</span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-13" class="mi">k</span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-14" class="mi">b</span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-15" class="mi">b</span><span style="font-family: MathJax_Main;" id="MathJax-Span-16" class="mo">.</span><span style="font-family: MathJax_Math; font-style: italic; padding-left: 0.167em;" id="MathJax-Span-17" class="mi">n</span><span style="font-family: MathJax_Main;" id="MathJax-Span-18" class="mo">,</span><span style="padding-left: 0.167em;" id="MathJax-Span-19" class="texatom"><span id="MathJax-Span-20" class="mrow"><span style="font-family: MathJax_Main;" id="MathJax-Span-21" class="mo">/</span></span></span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-22" class="mi">m</span><span style="font-family: MathJax_Main;" id="MathJax-Span-23" class="mo">.</span><span style="padding-left: 0.167em;" id="MathJax-Span-24" class="texatom"><span id="MathJax-Span-25" class="mrow"><span style="font-family: MathJax_Main;" id="MathJax-Span-26" class="mo">/</span></span></span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-27" class="mi">m</span><span style="font-family: MathJax_Main;" id="MathJax-Span-28" class="mo">.</span><span style="padding-left: 0.167em;" id="MathJax-Span-29" class="texatom"><span id="MathJax-Span-30" class="mrow"><span style="font-family: MathJax_Main;" id="MathJax-Span-31" class="mo">/</span></span></span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-32" class="mi">m</span><span style="font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-33" class="mi">n</span><span style="font-family: MathJax_Main;" id="MathJax-Span-34" class="mo">,</span><span style="font-family: MathJax_Math; font-style: italic; padding-left: 0.167em;" id="MathJax-Span-35" class="mi">m</span></span><span style="display: inline-block; width: 0px; height: 2.79em;"></span></span></span><span style="border-left: 0em solid; display: inline-block; overflow: hidden; width: 0px; height: 1.245em; vertical-align: -0.342em;"></span></span></nobr></span>\n</div>ghghfgfnhhkbb.n,/m./m./mn,m'),
(128, 31, 1, 1, '<p>PPPPPPPPPPPPPPPP</p><p><br></p>'),
(129, 31, 2, 2, '//www.youtube.com/embed/1hkb2uuHk2g"'),
(130, 31, 3, 1, '<pre> <b><a name="tema5"></a>Тема 5. Кривые второго порядка.</b></pre>'),
(131, 31, 4, 1, '<pre>К кривым второго порядка относят кривые, записанные уравнением Ах<sup>2</sup> + Вху + Су<sup>2</sup> + Ех + Ду + F = 0. В зависимости от значений коэффициентов (вещественные числа) это могут быть окружность, эллипс, гипербола, парабола. Эти кривые были известны с глубокой древности. Все эти кривые суть сечения прямого кругового конуса плоскостями (конические сечения). <b>Эллипс.</b> Эллипсом называется геометрическое место точек, сумма расстояний которых от двух данных точек F<sub>1</sub> и F<sub>2</sub> (фокусов) есть величина постоянная 2а, большая F<sub>1</sub>F<sub>2</sub>. Каноническое уравнение (простейшее) уравнение эллипса: х<sup>2</sup>/а<sup>2</sup> + у<sup> 2</sup>/в<sup>2</sup> =1 Эллипс, заданный таким уравнением симметричен относительно осей координат (рис 1) <table class="dip"><tbody><tr><td></td></tr><tr><td></td><td><p><img src="http://works.tarefer.ru/50/100134/pics/image045.gif" unselectable="on"></p></td></tr></tbody></table> М (х,у) – произвольная точка эллипса, (х,у) – текущие координаты этой точки. Все точки эллипса удовлетворяют условию: F<sub>1</sub>M + F<sub>2</sub>M=2a. а,в называются полуосями эллипса, а – большая полуось, в – малая полуось. F<sub> 1</sub> и F<sub>2</sub> – фокусы эллипса находятся на оси ох на расстоянии С= <sub><img src="http://works.tarefer.ru/50/100134/pics/image046.gif" unselectable="on"></sub><sup> 2</sup> – в<sup>2</sup>) от центра О. Отношение с/а = Е называется эксцентриситетом эллипса.</pre>'),
(132, 31, 5, 4, '<pre><b>Пример 1.</b> 1)Написать уравнение эллипса, если а=4, в=3; 2)Найти координаты фокусов; 3)Найти Е. <b>Ответ:</b> 1) х<sup>2</sup>/16 + у<sup>2</sup>/9=1; 2) С= <sub><img src="http://works.tarefer.ru/50/100134/pics/image047.gif" unselectable="on"></sub>= <sub><img src="http://works.tarefer.ru/50/100134/pics/image048.gif" unselectable="on"></sub>, F<sub>1</sub> (- <sub><img src="http://works.tarefer.ru/50/100134/pics/image048.gif" unselectable="on"></sub>, 0); F<sub>2</sub> ( <sub><img src="http://works.tarefer.ru/50/100134/pics/image048.gif" unselectable="on"></sub>, 0); 3)Е = с/а = <sub><img src="http://works.tarefer.ru/50/100134/pics/image048.gif" unselectable="on"></sub>/4 &lt; 1.</pre>'),
(133, 80, 1, 1, '<p>Якщо підходити формально, то програмування - це діяльність людини спрямована на розробку, реалізацію, тестування та підтримку комп’ютерних програм.\n</p>\n<p>У широкому розумінні програмування - це процес розробки та реалізації будь-якого програмного продукту (операційної системи, програми для побутової техніки, програм та ігор для комп’ютерів, телефонів, планшетів, веб-сайтів та інше).\n</p>\n<p>У вузькому розумінні - це процес кодування певного, попередньо розробленого, алгоритму.\n</p>\n<p>Можливо програмування це наука? Адже щоб бути програмістом потрібно володіти математичними прийомами, знати математичні формули. Вирішення певного кола задач вимагає від програміста знання фізики, уміння користуватись фізичними формулами.\n</p>\n<p>Але програмування не має власної системи знань. Немає чітко визначеної закономірності створення програм.\n</p>\n<p>Отже неможливо сказати, що програмування це наука.\n</p>\n<p>Тоді можливо програмування це мистецтво?\n</p>\n<p>Адже щоб бути програмістом треба мати натхнення. Без натхнення у програмуванні не обійтись. Чим складніше завдання, тим складніше витягти натхнення з підсвідомості. Іноді для цього потрібні часи, іноді - тижні. Програмісти, як і митці, застосовують при написанні програм певні техніки та технології.\n</p>\n<p>Але художники, музиканти, поети, письменники та інші митці, коли пишуть свої твори, намагаються відобразити своє сприйняття світу, виразити свої почуття…\n</p>\n<p>Погодьтесь, що важко уявити програміста, який через написання програми намагається показати людям своє світосприйняття, або свої почуття.\n</p>\n<p>Програмування поєднує у собі як і науку, так і мистецтво. Програміста можна порівняти зі столяром. Наприклад столяр отримав замовлення на виробництво дверей. Щоб двері були якісні, необхідно зробити їх креслення, врахувати особливості їх використання, зробити все “по науці”. Проте в замовник забажав, щоб столяр прикрасив двері, адже це будуть вхідні двері у будинок. Тут майстер застосовує своє вміння митця, щоб зробити на дверях певний візерунок.\n</p>\n<p>Отже можна зробити висновок, що програмування - не мистецтво та не наука - це ремесло. Щоб стати майстром своєї справи столяр вчився, переймав науку у вчителів, вдосконалювався самостійно та отримував досвід. Так само і програміст - якщо програміст бажає стати професіоналом своєї справи він має вчитись постійно, працювати та отримувати досвід.<br>\n</p>'),
(134, 80, 2, 2, '//www.youtube.com/embed/7N1u-BsRzcg"'),
(135, 31, 6, 5, '<pre>Дана гипербола х²-4у²=16. 1)Написать каноническое уравнение гиперболы; 2)Найти вещественную и мнимую полуоси; 3) Найти асимптоты гиперболы; 4) Вычислить эксцентриситет Е.</pre>'),
(136, 31, 7, 7, '<pre><b>Парабола.</b> Параболой называется геометрическое место точек, одинаково удаленных от данной точки (фокуса) и данной прямой (директрисы). Каноническое уравнение параболы имеет два вида: 1) у²= 2рх – парабола симметрична относительно ох (рис.3) 2) х²= 2ру – парабола симметрична относительно оу (рис.4) <table class="dip"><tbody><tr><td></td></tr><tr><td></td><td><p><img src="http://works.tarefer.ru/50/100134/pics/image058.gif" unselectable="on"></p></td></tr></tbody></table> РИС.3 0 <table class="dip"><tbody><tr><td><table class="dip"><tbody><tr><td>у</td></tr></tbody></table></td></tr></tbody></table> <img src="http://works.tarefer.ru/50/100134/pics/image059.gif" unselectable="on"><img src="http://works.tarefer.ru/50/100134/pics/image060.gif" unselectable="on">РИС.4 <table class="dip"><tbody><tr><td></td></tr><tr><td></td><td><p><img src="http://works.tarefer.ru/50/100134/pics/image061.gif" unselectable="on"></p></td></tr></tbody></table> М (х,у) – произвольная точка парабола, (х,у) – текущие координаты произвольной точки, х = -р/2 – уравнение директрисы. FM = d, где d – расстояние от точки М до директрисы. В обоих случаях вершина параболы находится на оси симметрии в начале координат 0. Парабола у² = 2рх имеет фокус F (р/2) и директрису х = - р/2 Парабола х = 2ру имеет фокус F (р/2) и директрису у = - р/2</pre>'),
(137, 31, 8, 5, '<pre>&lt;b&gt;ример 3.&lt;/b&gt; Построить параболы заданные уравнениями: 1) у² = 4х; 2) у² = -4х; 3) х² =4у; 4) х² =-4у; а так же их фокусы и директрисы и написать уравнения директрис.\n</pre>'),
(138, 31, 9, 1, 'bvcbxvxv'),
(139, 31, 10, 1, '\\[\\large fhjfhghkgjkjg\\]\r'),
(140, 82, 1, 1, '<p>уенкегнгнег</p><p>елоелнкоорлр</p><p>уклоелоронроплр</p><p>лопаппрпрплаппла</p><p>валопдплорпролп</p>'),
(141, 82, 2, 1, '<p style="margin-left: 20px;">!@#$%^&amp;*()_++_)(*&amp;^%$#@!!@#$%^&amp;*()_++_)(*&amp;^%$#@!\n</p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(142, 82, 3, 1, '<p>!@#$%^&amp;*()_++_)(*&amp;^%$#@!!@#$%^&amp;*()_++_)(*&amp;^%$#@!</p>'),
(143, 82, 4, 7, '<p>!@#$%^&amp;*()_++_)(*&amp;^%$#@!!@#$%^&amp;*()_++_)(*&amp;^%$#@!</p>'),
(144, 82, 5, 5, '<p>!@#$%^&amp;*()_++_)(*&amp;^%$#@!!@#$%^&amp;*()_++_)(*&amp;^%$#@!</p>'),
(145, 82, 6, 4, '<p>!@#$%^&amp;*()_++_)(*&amp;^%$#@!!@#$%^&amp;*()_++_)(*&amp;^%$#@!</p>'),
(146, 82, 7, 1, '<p><span class="MathJax_Preview" style="color: inherit;"></span>\n</p>\n<div class="MathJax_Display" style="text-align: center; margin-left: 20px;"><span class="MathJax" id="MathJax-Element-1-Frame"><nobr><span class="math" id="MathJax-Span-1" role="math" style="width: 20.483em; display: inline-block;"><span style="display: inline-block; position: relative; width: 18.251em; height: 0px; font-size: 112%;"><span style="position: absolute; clip: rect(1.677em 1000.003em 2.96em -999.997em); top: -2.564em; left: 0.003em;"><span class="mrow" id="MathJax-Span-2"><span class="mi" id="MathJax-Span-3" style="font-family: MathJax_Math-italic;">h</span><span class="mi" id="MathJax-Span-4" style="font-family: MathJax_Math-italic;">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-5" style="font-family: MathJax_Math-italic;">j</span><span class="mi" id="MathJax-Span-6" style="font-family: MathJax_Math-italic;">h</span><span class="mi" id="MathJax-Span-7" style="font-family: MathJax_Math-italic;">h</span><span class="mi" id="MathJax-Span-8" style="font-family: MathJax_Math-italic;">j</span><span class="mi" id="MathJax-Span-9" style="font-family: MathJax_Math-italic;">h</span><span class="mi" id="MathJax-Span-10" style="font-family: MathJax_Math-italic;">j</span><span class="mi" id="MathJax-Span-11" style="font-family: MathJax_Math-italic;">h</span><span class="mi" id="MathJax-Span-12" style="font-family: MathJax_Math-italic;">j</span><span class="mi" id="MathJax-Span-13" style="font-family: MathJax_Math-italic;">h</span><span class="mi" id="MathJax-Span-14" style="font-family: MathJax_Math-italic;">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-15" style="font-family: MathJax_Math-italic;">d<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-16" style="font-family: MathJax_Math-italic;">f<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.059em;"></span></span><span class="mi" id="MathJax-Span-17" style="font-family: MathJax_Math-italic;">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-18" style="font-family: MathJax_Math-italic;">f<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.059em;"></span></span><span class="mi" id="MathJax-Span-19" style="font-family: MathJax_Math-italic;">d<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-20" style="font-family: MathJax_Math-italic;">f<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.059em;"></span></span><span class="mi" id="MathJax-Span-21" style="font-family: MathJax_Math-italic;">b</span><span class="mi" id="MathJax-Span-22" style="font-family: MathJax_Math-italic;">v</span><span class="mi" id="MathJax-Span-23" style="font-family: MathJax_Math-italic;">n</span><span class="mi" id="MathJax-Span-24" style="font-family: MathJax_Math-italic;">m</span><span class="mi" id="MathJax-Span-25" style="font-family: MathJax_Math-italic;">h</span><span class="mi" id="MathJax-Span-26" style="font-family: MathJax_Math-italic;">v</span><span class="mi" id="MathJax-Span-27" style="font-family: MathJax_Math-italic;">c</span><span class="mi" id="MathJax-Span-28" style="font-family: MathJax_Math-italic;">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-29" style="font-family: MathJax_Math-italic;">h</span><span class="mi" id="MathJax-Span-30" style="font-family: MathJax_Math-italic;">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-31" style="font-family: MathJax_Math-italic;">h</span><span class="mi" id="MathJax-Span-32" style="font-family: MathJax_Math-italic;">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-33" style="font-family: MathJax_Math-italic;">c</span><span class="mi" id="MathJax-Span-34" style="font-family: MathJax_Math-italic;">b</span><span class="mi" id="MathJax-Span-35" style="font-family: MathJax_Math-italic;">n</span><span class="mi" id="MathJax-Span-36" style="font-family: MathJax_Math-italic;">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-37" style="font-family: MathJax_Math-italic;">f<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.059em;"></span></span></span><span style="display: inline-block; width: 0px; height: 2.57em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.128em; vertical-align: -0.309em;"></span></span></nobr></span>\n</div>hgjhhjhjhjhgdfgfdfbvnmhvcghghgcbngf'),
(147, 27, 4, 3, '<p><a href="cgvjhj" target="_blank">tyyuui</a>\n</p>'),
(148, 27, 5, 1, '<p>hgfgfdgdg\n</p>\n<p>jhjgjgfhgfhfh\n</p>\n<p>jkhkjgjgfhfhfh\n</p>'),
(149, 27, 6, 7, '<p>Профессиональный преподаватель бухгалтерского и налогового учета Национальноготранспортного университета кафедры финансов, учета и аудита со стажем преподавательской работы более 25 лет. Закончила аспирантуру, автор 36 научных работ в области учета и аудита, в т.ч. уникальной обучающей методики написания бухгалтерских проводок: <strong>"Как украсть и не сесть" </strong>и <strong>"Как украсть и посадить другого" </strong>.</p><p>Главный бухгалтер акционерного предприятия, специализирующегося на:</p><ul><li>оказании полезных услуг горизонтального характера;</li><li>торговле, внешнеэкономической и внутреннеэкономической;</li><li>позитивное обучение швейного мастерства;</li></ul>'),
(151, 83, 1, 1, '<p>У першу чергу треба мати бажання, як і у будь-якій справі. Ще потрібно мати терпіння, адже програмування - кропітка робота. Для написання програми та досягнення певного результату може знадобитись багато часу. Більша частка якого піде на тестування програми, пошук та виправлення помилок.</p><p>Треба володіти математичними прийомами. Але програмування не потребує глибоких знань математики (окрім реалізації специфічних програм). Знання математики необхідно для логічного мислення, яке є основою розробки програмного забезпечення. </p><p>Дуже велика кількість інформації щодо останніх технологій програмування викладена на англійській мові. Знання останіх тенденцій необхідно для підтримки знань програміста у актуальному стані. Саме тому знання англійської мови життєво важливо для програміста який бажає стати справжнім професіоналом своєї справи. Крім того, важливо знати де і як знайти потрібну інформацію, адже пам’ятати все неможливо.</p><p>Необхідно знати і розуміти принципи функціонування комп’ютера, адже це основний робочий інструмент програміста.</p><p>І звичайно потрібно знати мову програмування. А для того, щоб бути висококласним програмістом потрібно знати не одну мову програмування а певний набір (“стек” - від англійського слова stack - набор, пачка) технологій які використовуються для вирішення завдань, які ставляться перед програмістами. В цей стек технологій входять мови програмування, технології, які застосовуються у програмуванні, технології по роботі з базами даних та інше. Наприклад веб-програміст має знати та орієнтуватись у таких технологіях як - HTML, CSS, JavaScript, PHP.</p><p>На початку 70 років вчений А. П. Єршов сказав “Програміст має володіти здатністю першокласного математика до абстракції та логічного мислення у поєднанні з едісоновським талантом створювати все, що завгодно з нуля та одиниці. Він має поєднувати акуратність бухгалтера з проникливістю розвідника, фантазію автора детективних романів з тверезою практичністю економіста.”</p>'),
(152, 83, 3, 5, '<p><strong>Знання яких мов є життеєво важливим для роботи програміста?</strong></p><ol><li>Української</li><li>Англійської</li><li>Мови машиних кодів</li><li>Мови програмування</li></ol>'),
(154, 84, 2, 1, '<p>Мова програмування (англ. Programming language) — це штучна мова, створена для передачі команд машинам, зокрема комп''ютерам. Мови програмування використовуються для створення програм, котрі контролюють поведінку машин, та запису алгоритмів.</p><p>Мову програмування визначає набір лексичних, синтаксичних і семантичних правил, що задають зовнішній вигляд програми і дії, які виконує комп''ютер під її управлінням.</p><p>З часу створення перших програмованих машин було створено понад дві з половиною тисячі мов програмування. Щороку їх кількість поповнюється новими. Деякими мовами вміє користуватись тільки невелике число їх власних розробників, інші стають відомі мільйонам людей. Професійні програмісти зазвичай застосовують в своїй роботі декілька мов програмування.</p><p>Мова програмування - це перш за все інструмент діяльності програміста. На мову програмування впливає характер задач, які вирішуються за допомогою цієї мови програмування. Неможна вивчати мову заради вивчення мови програмування. Неможливо вивчати мову програмування без поєднання з програмуванням.</p>'),
(155, 84, 1, 1, '/images/lecture/75911748454db02f89f7c0aae6e2a352.jpg"></p'),
(156, 85, 1, 1, '<p>При розробці програми програміст має намагатись створити програму яка буде відповідати наступним критеріям.</p><ul><li>Ефективність: програма має виконувати покладені на неї задачі за оптимальну (тоб то мінімально можливу) кількість часу, без використання надмірної кількості ресурсів комп’ютера.</li><li>Надійність: алгоритми програми мають бути розроблені таким чином, що результат роботи програми завжди був вірний.</li><li>Стійкість: при розробці програми мають бути враховані нестандартні ситуації, наприклад отримання помилкових даних (випадково чи у результаті дій зловмисників), недоступність необхідних ресурсів (наприклад пам''ять, локальна мережа).</li><li>Зручність: програма має бути максимально зручною та доступною для кінцевого користувача.</li><li>Переносимість: програма має працювати на різних комп’ютерах, операційних системах.</li><li>Масштабованість: програма має бути простою для подальшого супроводження та поліпшення.</li></ul>'),
(157, 85, 3, 5, '<p><strong>Програма має бути:</strong></p><ol><li>стійкою</li><li>безкоштовною</li><li>ефективною</li><li>гарною</li><li>веселою</li><li>зручною</li></ol>'),
(158, 86, 1, 1, '<p>Умовно процес програмування можна поділити на наступні етапи.</p><ol><li><strong>Постановка задачі, створення моделі програми. </strong>На цьому етапі програміст (команда програмістів) має описати задачу, визначитись з форматом вхідних та вихідних даних, створити певну логічну (математичну) модель програми.</li><li><strong>Планування та вибір методу рішення задачі. </strong>На цьому етапі обираються способи та підходи вирішення задачі, в залежності від розміру задачі та кількості розробників, виділяються окремі задачі, які виконуються окремими програмістами.</li><li><strong>Розробка алгоритму.</strong> Після визначення методів вирішення задач та виділення окремих підзадач, визначаються ефективні алгоритми функціонування різних частин програми. Відбувається узгодження взаємодії різних частин програми між собою та обираються оптимальні спосіб зберігання даних програми (як у оперативній пам’яті, так і у постійній).</li><li><strong>Кодування. </strong>Коли проведена попередня робота з розробки загальної схеми (архітектури) програми, визначені основні алгоритми за якими буде працювати програма, обрані найбільш доречні структури даних та способи зберігання інформації відбувається безпосередньо написання коду програми.</li><li><strong>Тестування</strong>. Після написання програми вона перевіряється з метою контролю якості програми: стійкості, надійності, зручності та інше.</li><li><strong>Аналіз результатів роботи програми, складання технічної документації. </strong>З початку процесу розробки програми складається технічна документація, на кожному етапі вона доповнюється, уточнюється. У результаті розробки програми має бути готова повноцінна технічна документація яка б дозволила у подальшому забезпечити розширення функціоналу програми (масштабованість).</li><li><strong>Подальше супроводження.</strong>  Цей етап полягає у підтримці функціонуванні програми, виправлені помилок, які виявляються у процесі експлуатації програми та вдосконалення функціоналу (за необхідності)</li></ol><p><span></span></p><p>Звичайно, в залежності від призначення програми, її масштабу та мети її роботи загальна схема розробки може бути значно простішою.</p>'),
(159, 86, 3, 5, '<p>До якого етапу відносится процес процес перетворення алгоритму на зрозумілу комп’ютері мову?</p><ol><li>Постановка задачі, створення моделі програми.</li><li>Планування та вибір методу рішення задачі.</li><li>Розробка алгоритму.</li><li>Кодування.</li><li>Тестування.</li><li>Аналіз результатів роботи програми, складання технічної документації.</li><li>Подальше супроводження.</li></ol>'),
(160, 87, 1, 5, '<p><strong>На Ваш погляд, що таке програмування?</strong></p>'),
(163, 89, 1, 1, '<p><strong>Частина 1</strong></p><p><strong>Нескінченний періодичний десятковий дріб</strong></p><p><em> </em><em>Нескінченний періодичний десятковий дріб</em> – десятковий дріб, у якому нескінченно повторюється певна група цифр. Мінімальна група цифр, яка повторюється, називається <em>періодом</em>. Період записується в круглих дужках.</p><p><strong><em> Наприклад</em>: <img src="https://lh4.googleusercontent.com/kcQj22wyvjDtqJCqMFZlL9xye5lDudjIEgycH6Iyx4MKygpaHX6PEGgNA8-DJE4GS2Ykej6NB0c1pC9R4taSRekGJXZxovJ3iI7IF22O2i7AQAsm_PEKoA8thw5mIMYsL-Q28-rgPESmBb6e" alt="\\frac{1}{3} = 0,333... = 0,(3);3,060606... = 3,(06);\\frac{8}{9} = 0,3111... = 0,3(1)">.</strong></p><p><strong><em>Завдання: </em>Записати у вигляді періодичного дробу <strong><em><img src="https://lh3.googleusercontent.com/7rFir9Qap-iehQUpsW5XkiXIYtm9iY5hntQso8eiJzJYuma2B6svKuFIoSCulgg7ApTfFtyYS4BZTnuWRwaIBG5mdux_VvoXGl7ZFMTv9dVo-qnJGk0UblzFl1dFtDPxcLo6wPj0u8wDdtjk" width="100" height="217" style="width: 100px; height: 217px;"></em><strong><em><img src="https://lh3.googleusercontent.com/NTaXnoykImN1pzUu9Z5JtGVsVI66IhtANHxG7eSjlEzDo57yPlmXaW1yzLJTmRX9xPzSAqeWTEubhGHcIH2y5_gTxxAKRYWLium_gZlWUcwbQcwdLJuYhMEXTL0D5dxqUXeDwBrrX537LsWE" width="103" height="213" style="width: 103px; height: 213px;"></em></strong></strong></strong></p><p> Якщо період починається відразу після коми, то дріб називається <em>чисто періодичним</em>. Якщо ж період починається не відразу після коми, то дріб називається <em>змішаним періодичним</em>.</p><p><strong>Перетворення нескінченного десяткового </strong> <strong>періодичного дробу у звичайний</strong></p><p> Чисто періодичний десятковий дріб дорівнює звичайному дробу, чисельник якого є період, а знаменник – цифра 9, що записана стільки разів, скільки цифр у періоді.</p><p><strong><em> Наприклад</em>:<img src="https://lh5.googleusercontent.com/rLJXhPm0aDyI-gxn8xL7fgPldDz6cnQYX3j9xcFjvVCKhUQAOuNOEOBbFDkgatawrg8TD4EZW7EONmCFAhJxlVzIfKRA3MsZEiyHnkb3kWROu48Gs_EEvQYbKmsWWf8VYD171Ffc3ZSKLZpM" width="229" height="50" style="width: 229px; height: 50px;">.</strong></p><p> Для того щоб перетворити змішаний нескінченний періодичний дріб на звичайний, треба від числа, що стоїть до другого періоду, відняти число, що стоїть до першого періоду. Потім записати цю різницю чисельником, а в знаменнику записати цифру 9 стільки разів, скільки цифр у періоді, а після дев’яток дописати стільки нулів, скільки цифр стоїть між комою і першим періодом.</p><p><strong><em> Наприклад</em>:<img src="https://lh4.googleusercontent.com/r7ttIxV0t-AT25UONKfZNPDUFUWOrqftmYZd86TE__tU6eDnjrpaydsHUkGymE5v-P4SDjVqIO48ixWGJD5eJt0Q79FEBA1b7NFjuv2v5QFftHKZTQDZn-9c3DYACOvlIZyQopjzWydNoH6u" width="248" height="50" style="width: 248px; height: 50px;">.</strong></p><p><strong><em>Завдання :</em>Перетворити періодичний дріб у звичайний 0,333</strong></p><p><strong>Частина 2 </strong></p><p><strong>Відношенням </strong>числа <em>а </em>до числа<em> b</em> називається частка чисел <em>а </em>і <em>b</em>, тобто <em>а/b </em>(або <em>а:b</em>). <strong>Пропорцією</strong> називається рівність двох відношень, тобто <img src="https://lh5.googleusercontent.com/fJbeh68iCMcUkFThtZV8HsLpcDeVz2QJFtoUNGh1tVPY-HaWqCfE6N1dlomFLUkwU1jMqNNeMzYbYjPOy-bW4uPqOK-OvW2uq8ylNEXVAUzh3rkeSMlAgkQ1Is7jfNY2hrgGHPRvLcqTurcf">; <em>а </em>і <em>п </em>називають крайніми членами пропорції, <em>b </em>і <em>т </em>– середніми членами пропорції.</p><p>Властивості пропорції</p><p>1) Добуток крайніх членів пропорції дорівнює добутку її середніх членів, тобто якщо <img src="https://lh6.googleusercontent.com/VlK4Oem7g74rJ28617P8EaDfnQ9sXnMRPeQ04bQ4kQHuhcoWTtQ0drZZiPqv47FlOuS-_8CL_p5fhMXMTEqmP9xvP1WEMEHexFcQ9WysSb7EdbIyJJSl36wNBKooYpYj_ac7GTxhDa9WFUgg">, то <img src="https://lh5.googleusercontent.com/lTG7qOqLjSCV_UWB5btD2zYoKONbGQzUhf9A1C8NkEC1adj39KQweRxeAzg5Gt6X07HxL8zz7alFFE8hCrcvACiposHEs9-4h6ipG6kuYk2ZNjMQw6t1Jg0jQ6fdBJ7yffxaN_U5Y-ZxpydR">.</p><p>2) Із пропорції <img src="https://lh6.googleusercontent.com/VlK4Oem7g74rJ28617P8EaDfnQ9sXnMRPeQ04bQ4kQHuhcoWTtQ0drZZiPqv47FlOuS-_8CL_p5fhMXMTEqmP9xvP1WEMEHexFcQ9WysSb7EdbIyJJSl36wNBKooYpYj_ac7GTxhDa9WFUgg">випливають такі пропорції <img src="https://lh6.googleusercontent.com/7Yp2-AjWHJS12PCEQ5gyzTr1_hR_aRo7rRdrtmESsaQ4OTJO9uCIfkStQXNDugGdNRxFBPioQK4ghtJGKlW9POBDweyfLbeCISgL_gBuxOTfr8MrycpWSJrT09sh2DgFOk-knY0TIxgv8ULB"><img src="https://lh5.googleusercontent.com/xd6L4NXMP1jIlqmo_bkXT4UfaXUwfa3YcVtow8zTqR8fNmx2nZhhG0fQejoYeGmJfHCCTpWfOO9dEhPqq_8eW4YH67G2tQwhfXruz4vywGJ7FUTYZuPz9xrxuLQ4fM-iViueTA3-KdhEYOlD">, <img src="https://lh4.googleusercontent.com/1BNIFFJLcOzCMmtS7hhxVsCM_jxRHK0oLI6Q0hYyTBTGC92tdhWFHJ7ltKDv2UND2K0z_GZB16Je1TwEF1ANhQHO6MEDR4t-MqJk_9Vc5mLc7U37dZ8oMuRyL4xYH367nlZRntmAen6ayZi8">, тобто в пропорції можна змінювати місцями крайні і середні члени або ті й інші одночасно.</p><p>3) Щоб знайти невідомий крайній (середній) член пропорції, треба добуток середніх (крайніх) членів поділити на відомий крайній (середній) член пропорції: <img src="https://lh4.googleusercontent.com/EDALzzGM4kbZMf7hP6wKIDbHwqiFdYQ11u7rxWQnXdEUHihBBrxN5O6rgDY5MDHKc6ODkVqUF2uMhcg5f8jsqHbaov_Xoi3CAlqsVFeqsiskvp-TlTsZf0bgnE-VFNiH0vr--KDGsw9XykoD"><img src="https://lh3.googleusercontent.com/yrj6cYrAlUBI8U5JC-BO7ul3Cg90022vycPugfuVoiab5uhRHikvABVWVoca2utw76-47wrSyNvDkbzM8dRcTAB22LXkq2p9pZvqogqOmzwHTm120QRHFfm8dk4E49BFLLSvA98qooDBC1w3"><img src="https://lh6.googleusercontent.com/W1u11Y-6-NZcrCkr8DEErfDTNRVOHBNIos6-EhvjBWyU0Mwwdoa1nirZk9b5d-pxxqSgfZoA_mFuAM-5Xmx5k2sqTavFWHdyaYnuDP1aMdptXrcYaDPkgWbEUgFOi7GYQV2ZMEYh5C5l-Srk"><img src="https://lh4.googleusercontent.com/i3C4dCsH9xHcO9bwQUOseXQUppuFF4nbtZd8_eEihIvw26Uz603rNN3GoasIP9vvVhOktQlQNqjT-c7tjAqkKruc7g453X-htTGXwNNhiZE1IlitqOnnSPdbCv2nyOW-oNEX6miDzXPMOXlF"></p><p>Наприклад: <img src="https://lh3.googleusercontent.com/yW-McUt4BKAa3WWVnEO3DKdutBEkH5byjlsZaxrbTC5aFXo9P-TL5Mr4U4d0cD9Z_7Wv4OQbtjvwXX-nF-1DKE6ivepjy7A4rCXW1C8-nHPZkDVKoxs3MO7DzM422Yr_Q0_UvnsoM8jdsZ4k">=<img src="https://lh3.googleusercontent.com/4d2jBaoM9QdI1TQyDlWE8V4qraFt2GcVYlR4ARl-owdrsVdRNgDipCUxLmQaJdt1vYLvZFlxT5QQ8bcVFlZz1hwu3qWI9JDG3zbU8pSELVhPN3Ztei_wH7j0NK9fXKntciEqO3yxs6P71Ehm">; <img src="https://lh4.googleusercontent.com/WQ_DgHRQk06mxfOkrxsHqziGClCwho_9-Inyg7ztvcG3dgVWVUCsDu4Ho7iPRzIfw1OBWh3yUVbo7elh3W5TlwnGuydTLz2Hli7XLRuE_kDa1KG6ZxRe6PBcRH0GFaCd_blwSNNwVObQg9Dn"></p><p><strong><em>Завдання: </em>Знайти х :<img src="https://lh5.googleusercontent.com/flWDoeFqqmwo2zE_qJwmFR6sKglEWvRw8wIC8NKu24AC2eHBmUUpLBR97UhVBhT51A0F-KmH1Q6wvDCRB2LNE_PyEC-xTLs3q1zZWImk8YWjgk25TT5EQNQ4aQTRAKK7nWS8uGeS-JaEPQvA" width="103" height="104" style="width: 103px; height: 104px;"></strong></p><p><strong>Частина 3 </strong></p><p><strong>Відсотки</strong></p><p>Основні співвідношення </p><p>1%=1/100=0,01 </p>\r\n<p>Соту частину будь-якої величини або числа називають відсотком (процентом). Це слово замінюють знаком %.<br><img src="https://lh5.googleusercontent.com/5DX2-mfVhDibI72SA3E4cz_2dWsVvuiPDq4DJAdio5CXhT2Q_W4aQZdvdhb_PToROU6nd_PTcs1ngxx0WxqsaXMQ9cFDApzo7K27I_xNLmLPIk-JdLEzfidZBlCb6cCNFEdtnpeGRMZT5Aq5"></p><p>Щоб перетворити десятковий дріб на відсотки, його треба помножити на 100.<br>Наприклад, 0,45 = 45%; 0,06 = 6%; 1,5 = 150%.</p><p>Щоб перетворити відсотки на десятковий дріб, треба число відсотків розділити на 100.<br>Наприклад, 40% = 0,4; 5% = 0,05; 120% = 1,2.</p><p>Є три основні задачі на відсотки:</p><ol><li>Знаходження частини <strong>b</strong> за відомим її відсотком <strong>q</strong> від даного числа <strong>a</strong>.<br><img src="https://lh6.googleusercontent.com/sIth9eJfMF91m2Le46_UubHML-jmtT5OUOwQyht6rJ6U28jjMUCDlJGVC1HfVtU_4qWVXSr_UHTgohQjZYkgi6G93f93x80O2QY4PMyPnmQm-aZfliBXC8GNRe-qLX2_D6TOeSdKepk1p2FD"></li></ol><p>Приклад. Знайти 30% від числа 180<br><img src="https://lh6.googleusercontent.com/wbFbQW6l-rA6XsUN1D8GxQoX-QjSl75vgi5meZ9I2eFPL14wjBYUcYiAg60reU1gyZRq9zPKJkHm3pcTPfvV83XuxUfGHg_JPQfWaFfiYT8CYAGd8kysDZ1W3EpaCCgtdwmWfnyJDI8y82pP"></p><p><strong><em>Завдання:</em> Знайти 20% від числа 120.</strong></p>\r\n<ol><li>Знаходження всього числа <strong>а</strong> за відомою частиною <strong>b</strong> і числом відповідних відсотків <strong>q</strong>.<br><img src="https://lh3.googleusercontent.com/N9drKnnTxVs1y9xcQw0_2x379wCiWaDookE8Xa4hEU9PV2imyPZwbobXKOVeN7lDTSfKvdR863FZGJJVpNwMqR1U-hWRD1iYHp1MeWD2IbTY_qHrucdbGZY1Fe3t7D5GMp9GWXXMwtQTWkJZ"></li></ol><p>Приклад. Знайти число, 20% якого складає 24<br><img src="https://lh4.googleusercontent.com/-cp5lbyQpYsjNk7QSYWlPKAA_rJiLhRM1bN1IIlYhrOeMlip313GNQr14vPrltWh7gdnI2xCDhLkHby0Z2zmKeU_Hw__Nygc4c_7djbUPb6TeF5ncIEQYm8JMLu7qv67AZXF8k5M7Nqnnlw1"></p><p><strong><em>Завдання:</em> Знайти число, 12% якого складає 60</strong></p>\r\n<ol><li>Знаходження відсотка числа <strong>b</strong> від числа <strong>а</strong>.<br><img src="https://lh6.googleusercontent.com/wQGYBoUl6CydZa1bu3KTJ52uWXBLu0kNjx3oVGt7ELceD8FgSEC2ZAgz3ftc3YEVIkdN_0aj4Arxub2E-YerT0oQ8GuTRZxKwiE1ehNaf16FWB0Pyo3uFa9SuFxoyYrSWe02ATPXn7wDm3Ie"></li></ol><p>Приклад. Скільки процентів складає число 0,5 від 20?<br><img src="https://lh6.googleusercontent.com/soTTZlV3LhOUjjk6j-_fVQdUMjA3OyfnQU9VKIDDb64dGI7jNfqFx1-2FD67yHWUu3MKBo8QgBrv9eYkEY8JaQvAP6U2_7TSqr3qF_PotFbIbU_RbhPf-_E36TjzvOgNiPU4kTVsQEr5xn5M"></p><p><strong><em>Завдання:</em> Скільки відсотків складає число 0,3 від 20?</strong></p><p><strong><em>Збільшення (зменшення) числа на декілька відсотків. Формула складних відсотків</em></strong></p><p><strong><img src="https://lh4.googleusercontent.com/FeQTqOYm_63Nyt_HTP-K6Fr1j0lCAxrBGUMhZv9nmx5WnuBath9H9bUd4gT55qL8kFdRzDysBl8FNeOOCu_B4mM8jzMNEyyjPj1Eo2JBTK0St3UMRcSKqky3ddYlC39-BjoxDomuWh7u_5Uv"></strong></p><p><strong><em>Завдання: </em>Первісний внесок в ощадбанк дорівнює 500 доларів, за рік нараховується 4%. Знайти суму внеску через 5 років.</strong></p><p><strong>Частина 4</strong></p><p><strong>Модуль і його властивості</strong></p><p>Модулем додатного числа називається саме це число, модулем від’ємного числа називається число, протилежне даному, модуль нуля дорівнює нулю.</p><p>Модуль числа α позначається символом |а| і читається «модуль числа а». Згідно з означенням:</p><p><img src="https://lh6.googleusercontent.com/nhkTPPTjDxYs1ze7RzcKD5hibXMdKayzqscl2wqhtuJjwGmsV0Ei-dIaQKAs4islnvnQaiS43uEQBrk-kxYJq-OipiCacDIgWErXxvF872tTNZRXpQ5PfMubmKkcy92XBYLzIMsaqc9k47cs"></p><p>Геометричним представленням модуля числа на координатній прямій є відстань від початку координат до точки, що зображує дане число.</p><p>Модулем числа +15 є 15. Модулем числа <img src="https://lh4.googleusercontent.com/GCnhCVkF0TKs9zeaI4ziNE4jC2GekIsmlG-V1uCOEIRj2GcLsEBX3v-JLNo19zaJW2QKsqzFG5Xl1bVfMEwrj4mq2ENePNRL9qEvjU7IHDeMqr1lUPfFoq8i6OSEw-2BmR3cKSYCbX6b5i9S" width="103" height="281" style="width: 103px; height: 281px;">є <img src="https://lh4.googleusercontent.com/yCiphlcHIY5wjcBXeFVA9OmI5dQEmQAp_lFds5YzScz5WtKdYPjUO_ypIZgEPRYy82cKNW9aabTUJFquZtdIO0_oEUNpdhcAAbYUVhtIJL5hvRDGmxo4TYtE6NQozaePobBy_W_S1ndoHiLW" width="104" height="278" style="width: 104px; height: 278px;" rel="width: 104px; height: 278px;">. </p><p>Модулем числа -20 є 20. Модулем числа -4,6 є 4,6.</p><p><img src="https://lh4.googleusercontent.com/MJpPTvA95lKBoO1cnAmAC3eDeidvJeXIvBqobp4V71Zj42Kf1S3lMna_MTSoxMwJuHK3F04C8ynp3Ro1thYa__3Ki0Qc2KPsQWBB7vV5GWyRJFcCIKHGHkSdy-Lt_EzR6NZl_qZYYJQBnnjI" width="132" height="50" style="width: 132px; height: 50px;"></p><p>Модуль числа <img src="https://lh5.googleusercontent.com/34ErC-1Hlm5nQkSoKc-G_UBvKCZGH38ycMjataj9Ni71d6xn14L3J71dsozKDltaX0CHC5ZGAyv7STJ0HbhqI5VBJNENl8xX6R0P1-2DwN2lt1MZfc5_YSAqYcsxH8Ucz09if8NuF9aocvyW" width="131" height="54" style="width: 131px; height: 54px;">;<img src="https://lh5.googleusercontent.com/bSaSs8zOVK0D_hM_6fC7FcsRGoEV4qI70hCrfarjEjQ7sMkJCGLqo-fuWqyxiVduPx61RlbYGqjHLCd3M3pWbDncidUQ6jRvMF3bPYN80P1-VXAkHcOytudRYFgf8zA7AxDuVfkcLb6F69HD" width="143" height="51" style="width: 143px; height: 51px;" rel="width: 143px; height: 51px;">;<img src="https://lh6.googleusercontent.com/MvBdTr-0gtnRiaI594PGVvEem5IlQrdT7J4QfQuNxQaNbukogbbViIxrTE_mUEdkt8WBE4TUcQnyTMXO-PIJbn_K09b8ydwZY2XbMaKBNeaTDVpOs4Q5iQEcInRhsdXS6fG3wC0l1hrOhpR7" width="131" height="52" style="width: 131px; height: 52px;">;<img src="https://lh6.googleusercontent.com/Oc6bREL_nhWxQDHkFUNiqa2sNfR9ODhuOgHoVkwtEes-fIFF5rvTch3MnDOPuDLADK7vscfvnO7Lr80u-FZ7x_kfc7Wi7CoY1G3WmrSIkIHReYn3BhzdqbhIdRD8qhPiPZXYG2o3RB68Mk5v" width="172" height="61" style="width: 172px; height: 61px;" rel="width: 172px; height: 61px;"> </p><p><strong>Будь-яке додатне число є модулем двох чисел: самого цього числа і протилежного йому числа.</strong> Наприклад, </p><p><img src="https://lh3.googleusercontent.com/WCqYMIG24W7qT8rJS51SmD2OpxK35RfOWYnHB6UQseu2TjZ48h9M9BeBAPXcPEYumjRHGvDBlOYfTjKR2WMUzbgfKhwM2jdfedIbpXr-1XYjbE4jHHpwXYXpDbWtCt4nSZ3cz12epWWTxrCt" width="104" height="95" style="width: 104px; height: 95px;"></p><p><strong>Властивості модуля</strong></p><p>1. <img src="https://lh6.googleusercontent.com/gKE-xMKc_k40LkYa2vzIezyQcMFADqeNZjm43x3MZ_sG9nePTXIxWPAJyyNz13wDohyIMWc-8vXtJqFHNTIWL1MnSwVM8lEKfJJe1mPM58WN96zMSAspFBgTM1VnOmMv3QgFKIb0ylCFM87b">.<br>2. Якщо <img src="https://lh4.googleusercontent.com/_l1r9DslMx8NCyDwpnGBaTUyrPVvTUSCsUQzZYEAXRntTAKCC_9woFeH_NSWJjvIEMDkVpwefu-iJqEu4S4f9VJQU8XSo71uvNZUWVRYUr03IDSm9YU0zWEUauPne_OJneZMXCO2UWjI296f">, то <img src="https://lh4.googleusercontent.com/3Mnc_in8v2XpXE8rvZWJsAGuqrSfNzqzI1AjjkRWMVr33OFCFlw6ExiNtffzyoghgMZ7rNtzUHEnEP5wssjkuwAhBIehMKrRWT6F-m9Jd-d_JxUF5K3dOnhslc-XX0xDibrjBISUpUanmiTK">.<br>3. Якщо <img src="https://lh6.googleusercontent.com/7DNbLbRDVhBcz4eyym4NgLYlyXf1HkWIIrCiNpYDEaoRV-ZCCLUkoeOtxX2AjzD7uA-SolCM1gXiaKXTULBnF_gR4PpFCLs520J4mm920lw4gqSPudi5lcQUP0aNTmcs9hwNhf4h0VvSsO5L">, то <img src="https://lh5.googleusercontent.com/2rwioeXNZHTXU_JmbefEnettHrrZ1va4S-5FkYIQ6DU8Kby3VhZ7odXwqUzE3otAthECn_u6zuZELKVkRz9DqEWfF8LS67ND03WbW3jRMhMP7o-LbM19ruL_Xtgp03dpiG00W5j3KpPJRAtg"><br>4. Модуль суми скінченного числа дійсних чисел не перевищує суми модулів цих чисел:<br><img src="https://lh4.googleusercontent.com/SvvrZcNwXrc47ye9XCTv_7WPjLNBQiWSWrI6TG2DF2YrsV2gMv7RCgObbJhpPbsIJ0tbZUAmt8dxrwNkToSn4fuAfS_MsZKtQXV7pTvPJXfcUArxApTFI2A-dFL9-PRlfcgepr4sSVYRQBMd">.<br>5. Модуль різниці не менший за різницю модулів цих чисел:<br><img src="https://lh4.googleusercontent.com/a5nrYImsdya1XwC0fwA8aaY12SqigWIfe2jVCDwgG8e8eB7ZJvByTszBcPtMXwcJE7cI-iJxiAnTs6VVFiKDqUVFC9FgftS6IlFzvvBdkFeBOLSCwpA2KaXhkk4d8NKqNvg28yAtCaBCoffw">.<br>6. Модуль добутку скінченного числа співмножників <img src="https://lh3.googleusercontent.com/EF4fLotrnCy80jHJsCQR7sPC48Cg5ZzK-uLpvdHVivDUPZQMkvActT9yhu3Nadj-p3w-PSZomUihfKUTqCbArfTwba1L7o5ZIcGT93gCdAhsj_ayxXayAqFib7S2Ez0aLDqHInOGzlva6iAj">, ..., <img src="https://lh5.googleusercontent.com/pzvkSNUUqUnVA3OftWZM_av1nAmmP3vOlwsh-e95mTFjAm-DF4Elv2PPf_egJr1pPk6rYuZtdK59MLYWMAII_XWER-k8c9_ghmRARyvZ8NGLjYC6ob_ufcLNjiCm0iEXRZbF1NmEswdt4HIT">дорівнює добутку модулів цих співмножників:<br><img src="https://lh3.googleusercontent.com/wmgorx_w6-WN-Uz1O_zOmB-IEGj4vfdnbViXzgWl61GLtRKhshf15mvTepy9QqgLi0Tyr180b9e3QWnEiV5c99kgunRxETqCE0IGdn1FnOb-QtKejFXQRYK0nhxSpSP4ujlrWzeostAQ5Qhm">.<br>7. Модуль частки дорівнює частці від ділення модуля діленого на модуль дільника:<br><img src="https://lh4.googleusercontent.com/isWBfYHvR1Cd-v1tQmeCP2m3P4Zkcz-YkSwlPvMOKo5KckLAfNspvbEbBP4fziKOO-oNL5TaisZpVIN54K7Mv93eSbIzrC7_2M3kVb4TFq8GvPJIu4P7ZxNP55BYAEMV7vo2wmgEJcXq9a4o">, якщо <img src="https://lh5.googleusercontent.com/QcsCmmfQPbv94Tx7Rv73W_e8MElgcGXqus8y9bo6xeip6PXg5FkFgLaGJa-vTq5ymj_skPVMTFBfhHTMDqwtHdTy8FycDwlsF_qKL421zfAhsZH3cSKDrfUQRr1nESAWluTMHXsT4c0SjzRp">.</p><p><strong><em>Завдання:</em> Знайти | <img src="https://lh5.googleusercontent.com/gB0A2U7tu_C1qyNP5aM_Mg15zZKikF7ClsfCHBSUP9SdUmYDvIyCJfFuGMYSz-Lqg12KQz-Yh3x3IjHUx4bAx3PS_m7caUDk0adMqrtmAXIBlr5guo72cDHg3rCknq9aWTKWLvny8WwhZzTW" width="101" height="281" style="width: 101px; height: 281px;"> | ;<img src="https://lh4.googleusercontent.com/zinhhC73Gf9zNZ6c-qUBr6miS70KeZ8xms3ri-6ZWxYsDEy40p_ppJHMrIY4yU4GTFII08-xhRbkH_MqldTJ1l1B2fDedz5yUuGoXaLerG-i69uRNUxcp4LbQojoK4TyKPskB5ZaNS5HYcF4" width="100" height="76" style="width: 100px; height: 76px;" rel="width: 100px; height: 76px;">;| - 0,7 | ;<img src="https://lh4.googleusercontent.com/78KRvha6nb4UlDOy1EwI4jf5hQFjFsNgW1p7pucnOBeyTVDaqxYNtFs57Ej6jJRd9cn1ekdcs12qztEl10x_AaGgNkmqrkrIIRom-EjlozMToOOmXFYXUWE4uPPW4BvNRTzREcWj8PxX5V3Z" width="331" height="213" style="width: 331px; height: 213px;">.</strong></p><p><br><br></p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(164, 90, 1, 1, '<p><strong>Вступ</strong></p><p>Мета заняття: розглянути поняття одночлена і многочленна, ознайомитися з основними формулами та діями над ними. Вивичення даної теми дасть можливість краще зрозуміти поняття переміної в програмуванні. </p><p><strong>Частина 1 </strong></p><p><strong>Буквені вирази. Числові значення буквених виразів</strong></p><p><em>Буквеним виразом</em> називають запис, у якому числа і букви з’єднано знаками дій.</p><p><strong><em> Наприклад</em>: <img src="https://lh5.googleusercontent.com/MQX3rzdIlIenNh3KnLywaLpcb__lMxPsg3BkVnClC6DjRvBQ45QWYZbmsfBHV0Syr1Y54SBYaBCyfBmIo4hRSTQr2j57jUn39xQz_-u2TZzDCJ2pTkifBvly6HboiMgzA8bb_2yjDMeUpzKQ" width="178" height="60" style="width: 178px; height: 60px;">– буквені вирази.</strong></p><p>Буквені вирази також називають <em>виразами зі змінними</em>, а букви – <em>змінними</em>. Якщо в буквений вираз замість букв підставити числа, то одержимо числовий вираз, значення якого називається <em>числовим значенням буквеного виразу при даних значеннях букв</em>.</p><p>Якщо вираз не містить ніяких інших дій, крім додавання, віднімання, множення, піднесення до натурального степеня і ділення, його називають <em>раціональним</em>.</p><p><strong><em> Наприклад</em>: <img src="https://lh3.googleusercontent.com/NCT3H4wHcPLN8vRa654msu6Y_B-XRhaQiZoUcAY4NwISke4HjPSXlufLGUoMvyNWaMuZm45iv-AnjWn0l_-b9pKBAItdH33NEM16ccxmaaVjkROmc8YY-pBz7l9ZDrSpp1N4izRTzzZ_SEqI" alt="2xy + x,\\frac{{a + b}}{{a - b}},\\frac{{3xy}}{{x + y}}"> - раціональні вирази.</strong></p><p>Раціональний вираз, який не містить ділення на вираз зі змінною, називають <em>цілим</em>.</p><p><strong><em>Наприклад</em>, x+y, 2xy- цілі вирази.</strong></p><p><strong>Одночлени</strong></p><p><em>Одночленом</em> називається добуток чисел, змінних та їх натуральних степенів, а також самі числа, змінні та їх натуральні числа.</p><p><strong><em>Наприклад</em>: 5a,6<img src="https://lh6.googleusercontent.com/-ZVBSECQYdclx6g1VZ-JrFoSeFWCKET8mMzVgar4BrJzEOFHJJ3EjUMmEphIqQUMIZiMcChJ8FbkFtNQK5XuuCkyJ40kcqljBSuUNSlVA4KysciUxE9KHDPQSMobWFUaR_mhzUsI45gbJRqP" width="101" height="102" style="width: 101px; height: 102px;">b,3x,xyz – одночлени.</strong></p><p><em>Одночлен стандартного вигляду</em> – одночлен, який містить тільки один числовий множник, що стоїть на першому місці, і степені з різними буквеними основами.</p><p><strong><em> Наприклад</em>: <img src="https://lh3.googleusercontent.com/xdw6yrNgfBE_iesSz0Xc76tpC5VBT7bGp5TQrPmAfPsffc_0ZxrAnbndJe4LvLbe1CVQIirfi6lo0nPgeuAu6QiUknUayZGdTIfmkX6FrLVDE-xlZFH3GhbJ0PK58u8RFIUpfHe6VJNfGdAB" width="315" height="59" style="width: 315px; height: 59px;">- одночлени стандартного вигляду.</strong></p><p><em>Коефіцієнтом одночлена</em> називають числовий множник одночлена стандартного вигляду.</p><p><strong><em>Наприклад</em>: коефіцієнтами одночленів <img src="https://lh4.googleusercontent.com/KA-CtiSgQUXq6319BqCc_m4jUybfDChJkBvYJRWpvPhAKA74Wdf94P-Q9P33SEAt7Sjp_qE3eLFiYb0oNOx_DsDp3OeefZRYTKmm_D30KNuiza2pyjXCd7Hv3R-KmZYzIEaHj4aN4hqIJK_u" width="308" height="61" style="width: 308px; height: 61px;"> є відповідно числа 5, -3, -1, 1. Коефіцієнти 1 та -1 в одночленах не записують.</strong></p><p><strong><em>Завдання :</em> Знайдіть коефіцієнт одночлена <img src="https://lh4.googleusercontent.com/tdITxRJOhtt5I3TIpwLbhnCmJvegfFWrQkUEp0BHC9tiO4ofqzz4Mt0ToilO9g1MHHV85-s0NtphJ7uFoBPJOVknVPZygCskszOf9PsVdlhcJfcMmieHYRxsa9iADVKbo_C_VoAZIqj_eZVE" width="152" height="56" style="width: 152px; height: 56px;"></strong></p><p> Щоб записати одночлен у стандартному вигляді, треба перемножити всі його числові множники й одержане число поставити на перше місце, а потім добутки однакових буквених множників записати у вигляді степенів.</p><p><strong><em>Наприклад</em>:<img src="https://lh5.googleusercontent.com/4SLZSkUWIi9Z5Tx-c9ycuEFC1ZUdmZQ0PrzMcp0IJG1OCitnS-NuiThuH_hMAhkfagWFr9tnfrP9milOFjXRGedpw3ENDnqcmluf7e4odqjCfJwT3RRxYbezQBnqKFci0UlCWn0Nn1rzOIQu" width="445" height="57" style="width: 445px; height: 57px;"></strong></p><p><em>Степенем одночлена</em> називають суму показників степенів усіх буквених множників, що входять до одночлена.</p><p><strong><em>Наприклад</em>: степінь одночлена <img src="https://lh3.googleusercontent.com/pJyUdNH_ppClOKqUqNUhosEPRNlc-UL6YYnLJlVoH0z7mow1zGr_Lk5IgkKkKjtNjIz7lYKKr4B8DovbXT0K5TaFu9y1Q_UiELsoRw1ZlT6GQDejfpcNc1dAWulzV5umgsQQceMfZJo7v0DJ" width="100" height="51" style="width: 100px; height: 51px;"> дорівнює 3+1+6=10.</strong></p><p>Якщо одночленом є число, відмінне від нуля, то вважають, що його степінь дорівнює нулю<strong>.</strong></p><p><strong>Частина 2</strong></p><p><strong>Дії над одночленами</strong></p><p>Щоб помножити одночлен на одночлен, треба перемножити їх коефіцієнти і перемножити степені з однаковими основами.</p><p><strong><em>Наприклад</em>:<img src="https://lh6.googleusercontent.com/TJDrQxYCPC039rtH9KDVUK5ka6aVCH2qeCSsrkK921A7Ef2CmCaVmEomypjHG4jFJkQWStr5aYIZoPaeUZKsnUmVmC7e9X3sFfiBYMMzBYvYZ7uQ0n2Hs80mEXYiXTadSalfZiqYK0VVvhfr" width="578" height="73" style="width: 578px; height: 73px;"></strong></p><p><strong><em>Завдання </em>Знайдіть значення виразу <img src="https://lh6.googleusercontent.com/rEkqKJYa7PtmhBVo5nVDsorubQNi5Jsy-UZm8xFJx9VnLyGG0zPmQirKB4Clu54piPu9uYdzP52b9yYr7nUSx2PLTJKQS7xChET7r89pQbNt5X4R4xDsukZJeUh3BzNg6V3iEjXBM_w1ykcr" width="184" height="53" style="width: 184px; height: 53px;"></strong></p><p>Щоб піднести одночлен до степеня, треба піднести його коефіцієнт до цього степеня і помножити показник степеня кожної букви на показник степеня, до якого підноситься одночлен.</p><p><strong><em> Наприклад</em>:<img src="https://lh5.googleusercontent.com/obiF6roMthkQf9APdGX8JjGqw1TpC9KhB87FS75bTydIu9BvENeGf93ZIe5j-w3UQcnHgZLZZSDYz0x1tCHuxhrr5idx4wuIKazXEMKXKJIRnGTdUhvWhd_CsqE1DD62h3noSNTYYsuQ482V" width="331" height="52" style="width: 331px; height: 52px;"></strong></p><p><strong><em>Завдання </em>Знайти значення виразу <img src="https://lh6.googleusercontent.com/sOccAUX-QyYdFmaaEYR4W3SzmMDVmGOLSTXDi1PljFpIbKny4I0zudFifDi1C_tYa0e2fXggJVDNzG9FRrftdhKT7v_lIE0PifIhIX8PE9To07Lywmgv9PQpOnXxrBQNt9v36-nxfwArkzUD" width="278" height="52" style="width: 278px; height: 52px;"></strong></p><p>Щоб поділити одночлен на одночлен, треба поділити коефіцієнт діленого на коефіцієнт дільника, до знайденої частки приписати множниками кожну змінну діленого з показником, що дорівнює різниці показників цієї змінної в діленому і дільнику.</p><p><strong><em>Наприклад</em>: <img src="https://lh5.googleusercontent.com/nLElpG7DbrvNQrnVJF1ej_h8SECiNVT8lQ49n47ypktlAqEuOeTIfhrau6zaUUc4McHsr0brtUYpxW_Xb_cp46zCvErUBYq06WcLdkp00m7XB4IHRrr4RUFKYpIvNW-3LYWzZ-dgrt1ROLeu" width="101" height="207" style="width: 101px; height: 207px;"><img src="https://lh5.googleusercontent.com/vgVaIIvggEmtwsLd-XWN5u2IxA7rPxTwB_3sT45shNj3Do9gzQOMnoEwmUyKC_0dmfzcTMrgyVNSULqHWQ_oZfABsd3KpW8v33xEYYbPhr5jOycaI8LCSo-K_tNiVaYN4Kf0lEFW7We-bChH" width="658" height="53" style="width: 658px; height: 53px;" rel="width: 658px; height: 53px;"></strong></p><p><strong><em>Завдання</em> Виконайте ділення.:<img src="https://lh5.googleusercontent.com/Hc4CCNhCvhNU1Aq4FPwfHF8Dc2rM8McHoAF1eqA8JLgyBgUOwgMKwzKHPQBh4EZx4pYc-RhG10TsmEMV_nZ3r7YRUTL78C00wKVhDV-szwHNMuS2lS9Ye31l4Nl8adiG6dDao7N-Iesm5l5H" width="106" height="58" style="width: 106px; height: 58px;"></strong></p>\r\n<p><strong>Частина 3 </strong></p><p><strong>Многочлени</strong></p><p><em>Многочленом</em> називається алгебраїчна сума кількох одночленів.</p><p><strong><em>Наприклад</em>: <img src="https://lh3.googleusercontent.com/WztRDJTN6t-jtH7_JtFN3f8rZ_H-tUXoN8tRJkUrDVSnRyB-BgGiFfK8-gol2l8sPZI8f7bmdKON0b3zR4tQmMa9sBwH3HQQJavO-lr13S4Cb47bHp4iHYJwY-btZPs9gUMwMW8BqmERMu5q" width="383" height="53" style="width: 383px; height: 53px;">- многочлени.</strong></p><p>Одночлени, з яких складається многочлен, називають його <em>членами</em>. Одночлен – окремий вид многочлена. Многочлен, який містить два або три доданки, називають відповідно <em>двочленом</em> або <em>тричленом</em>.</p><p><strong><em> Наприклад</em>: <img src="https://lh5.googleusercontent.com/zQJzfDNg5Fu-GODtck3Pd8kYkL69SMoXB9zBPnZB-Spt1dFBLadaBA3yHcD1CVjq3nYcrkV-WjNQ8RjTIhtSWNG18byGAEEOmPBvzMQYnHlsbMYr8dS0uNWKNPcK55dw2qWPTYUQDbWaz5Bf" width="189" height="50" style="width: 189px; height: 50px;"> - двочлени; <img src="https://lh5.googleusercontent.com/Q92qPvIwfuxRzYXsECJSxLUE3h1eJnsX_syiGC1ypTn-LJNo3u2YdUoefW87B5mceqAQw9JVKRhpu3ViuZnH-4yoEpWBGk12ufIO7IWpQlvngMR3BjRGn9gWfAZVTx53ZdF8_xuE8CnwR8Rj" width="313" height="55" style="width: 313px; height: 55px;" rel="width: 313px; height: 55px;"> - тричлени.</strong></p><p><em>Подібні члени многочлена</em> – це однакові одночлени, або одночлени, запис яких у стандартному вигляді відрізняється лише коефіцієнтами.</p><p><strong><em>Наприклад</em>: у многочлені <img src="https://lh3.googleusercontent.com/GPbFjbajGKhcQFFu3o1Sm1GRzDJi1BcD09Hqe99Lfh7csDoR2O9tFr7ihbpd4XvHzvz2mFJ4Fy74XTWuCYlFONReQegBgFAxuwts3q6UXxh99YleiyWZ326xqnsA5hRrLOXYktABoUeMGqPf" alt="15{a^2}b + 3a{b^2} - 7{a^2}b + 5a{b^2}"> перший і третій, другий і четвертий члени подібні.</strong></p><p><em>Зведення подібних членів</em> – це спрощення многочлена, коли алгебрагічна сума подібних членів замінюється одним членом. Щоб звести подібні члени, треба додати їх коефіцієнти і результат помножити на їх спільну буквену частину.</p><p><strong><em> Наприклад</em>:<img src="https://lh5.googleusercontent.com/0C755I6ied7U84InOUURDEk1_U4ymhVfH9oQ8P3hRWo34mi12kP0YA0-25sejsInRTFYpxscTXmE4idmiAkyS8SKiDBzhcNnWk87zpshbrIsSSQhpbjC4SOMPRSjygdqbA66xRJhSolttiXl" width="659" height="52" style="width: 659px; height: 52px;"></strong></p><p><strong><em>Завдання</em> Звести подібні члени<em> (</em><em><img src="https://lh3.googleusercontent.com/ucjDlNS93RVnG1JhTNgCRd4-0bKiwp0BDV0cmKhpDEpIBUZCQj3PqUW8biubHbddJqMFYaa1ELIiaakF4okN1sD-FDBbPn6rmR0dVrazD5uosiPpjSBSvuyGvlAmS7wG3S9N_PHuu5NqiFb2" width="426" height="50" style="width: 426px; height: 50px;"></em></strong></p><p><em>Стандартний вигляд многочлена</em> – це запис многочлена, усі члени якого мають стандартний вигляд і серед них немає подібних.</p><p> <img src="https://lh4.googleusercontent.com/mIt7cdytxVCv_wg3TrsPEpZVL6F38eZOYXaSYlGeRxVTQqPJaCk_R-fMVzQEoUIBoowiUi3RQPGkiVX8e6EmawrSTYl-CjOhQnjaP_xsOn-TYpmOnziTOzhejASSu3n5POWBCgwB8ODtaYWR" width="354" height="53" style="width: 354px; height: 53px;">- многочлени стандартного вигляду, </p><p> <img src="https://lh3.googleusercontent.com/iXK8XrXK6YaD2Ma384tQUvox3pR1yQ6XUtmNDcb1CJpX5k97egYHHjfLq87I0TuI0dUERxFSOFOq26ox_cVfVXfaxuWzhODEDH7tNj5bohCyN61bvhqa1IDT3BG9nNwWe9ocr1wCfv6WuQji" width="324" height="52" style="width: 324px; height: 52px;">- многочлен нестандартного вигляду.</p><p><em>Степенем многочлена стандартного вигляду</em> називають найбільший зі степенів одночленів, із яких складається многочлен. <em>Степенем довільного многочлена</em> називають степінь тотожно рівного йому многочлена стандартного вигляду.</p><p><strong><em>Наприклад</em>: степінь многочлена <img src="https://lh6.googleusercontent.com/2AmN81LGRwnk0OCCkW5HQ0ezvv7mlmH3jVWePba5BGqy4BWens2ykz3KJXFYfNkG8VrN66rPmGYngzSirSbQ8ScWeQttMj4NByokEyWhd1YeCUC20nvlsa0qxGTJw8uUNn_P5nKZeZRJe1be" width="359" height="57" style="width: 359px; height: 57px;">дорівнює степеню одночлена <img src="https://lh4.googleusercontent.com/p3PxQ81ks9ch8_pPGZSRCL05ruRrd3uRIEdI6i5kDQ1M9TyXOi4h6BHIorDcUtKfCIqbwg6mNx5X76kMhX8K5khBNxmQFREwg8zch_zjfYIKsjKB_XvdBB054cFfG2vusGqGYIJ1FOa9HCrq" alt="2{a^5}{b^5}">, тобто 5+5=10.</strong></p><p><strong><em>Завдання </em>Звести многочлен до стандартного вигляду<strong>:</strong></strong></p><p><img src="https://lh5.googleusercontent.com/N-36EWiFP3OgeZPxHGHZ6KGDb1J02dxDW8_PerG7SrxFl4H6op70HPJsnUOmVBjwkCEES1lNxuQnCFI1l0_N44HzEFcnhbUDobPoExKly546Kt7185m4mdgHDlTUDQPyVHyj_ihXQAC08bNL" width="415" height="53" style="width: 415px; height: 53px;">;</p><p><strong>Частина 4</strong></p><p><strong>Дії над многочленами</strong></p><p>При <em>додаванні</em> многочленів користуються правилом розкриття дужок: якщо перед дужками стоїть знак «+», то дужки можна опустити, зберігши знаки кожного одночлена.</p><p><strong><em> Наприклад</em>: </strong></p><p><img src="https://lh5.googleusercontent.com/UKIGWQYVbpR8No7qyy9Y6yhefusLyJ_P8FgoRQvEVBRYjD6PAOQ_8Ib0rzyXhvYzPxKVbnnssiGI-Ehq_HiCmFxwRbR-aeZ6h7lUmE7HWOofkIDeXQHYJtFnyoqaOWNr_ZBkp_kKhzSm2dQe"></p><p>.<strong><em>Завдання </em>Виконати дії: (x2+2xy+y2)+(2xy-x2-y2);</strong></p><p>При <em>відніманні</em> многочленів користуються правилом розкриття дужок: якщо перед дужками стоїть знак «-», то дужки можна опустити, змінивши знак кожного одночлена, що містився в дужках, на протилежний.</p><p><strong><em>Наприклад</em></strong></p><p><img src="https://lh3.googleusercontent.com/FvVjpPyVSgYCsint_3Sqxnp1jt-uz0XrtRvdSUu-cYdj7g9N4xMDJQHwNltNgGQncX5kBVBTNJIbZ0biUxA9f1Jmi2wdnP9RlOmts2giwccVGTRy2QDfqISHrX1gSw4Fp6bZkdwuADwyq7ba"></p><p><strong><em>Завдання </em>Виконати дії: : (2x2+4xy+3)-(xy-2x2-y2);</strong></p><p>Щоб <em>помножити одночлен на многочлен</em>, треба кожний член многочлена помножити на цей одночлен й одержані одночлени додати.</p><p><strong><em> Наприклад</em>:.<img src="https://lh3.googleusercontent.com/SwLyaPXrGVRwNTSKHva7LCkQVABU55tlFSE_-mVv_UeAjVkFeTw-RlJb9zG398iK0ck8DdFCGtKJQJIpdP5K0iHEBwtWzMGTqipqL3BVMlTwROA-Kg6H5mriSGl8yjqmvQoANYctbSJppl5e" width="523" height="64" style="width: 523px; height: 64px;"></strong></p><p><strong><em>Завдання</em> Виконати множення (3x+7y)·6a</strong></p><p>Щоб <em>помножити многочлен на многочлен</em>, треба кожний член одного многочлена помножити на кожний член другого многочлена й одержані многочлени додати.</p><p><img src="https://lh4.googleusercontent.com/sZSV8PKegNcwLjfqtcI2HHiSItTw8jfHxxdaAa2ilSvltcLJ0VSdtBWiQdsysVAWW5rHq_7m_VPOdyFHNupbO6OXbEy4t_QYJRU5pWp46lnqoNatN5482bxS651OIdq6ywAMT5CP7mEcKMwz"></p><p><strong><em>Завдання</em> Виконати множення (5a+7b)·(2+4a)</strong></p><p>Щоб <em>розділити многочлен на одночлен</em>, треба кожний член многочлена розділити на цей многочлен й одержані результати додати.</p><p><strong><em> Наприклад</em>: </strong></p><p><img src="https://lh5.googleusercontent.com/6bdWxYptY0TYsljY6NNuaycUqEGDyY2qxztyChV16zAlMdEDTZ5NRzWRU7MSnxNQJ8O8Yiu-nMqVyF16GFGjTseDNPho3_5UyY-cCZgZuvDB0pV8lbouTpir8MZjmn1Wrlx7FU0OXsrXUz6n"></p><p>.<em>Розкладанням многочлена на множники</em> називають запис многочлена у вигляді добутку многочленів.</p><p><strong><em>Наприклад</em>:.<img src="https://lh6.googleusercontent.com/YVNj6HD0IurL-vbr_hYk6szPWVG_-lQT5-1j8A2VAi_8P3OQ397Ntoqmb3_ZR_4f-05KPdn_FufD9i-hHvgQ_2BD9_6k8RD2-fqNFyFAmMajIoj1nOLY20jvEIrYwO_GrmoToBmhC0gAQfgd" width="364" height="53" style="width: 364px; height: 53px;"></strong></p><p>При <em>розкладанні многочлена на множники</em> використовують такі способи.</p><p>1. Винесення спільного множника за дужки.</p><p><strong><em>Наприклад</em>:<img src="https://lh5.googleusercontent.com/xldnR-qWBn_0YVVYxq72gMJJbXA762646zKdaMiT3F7oX0GpmdqPMX9VK8qnlY5hiPBT_Q1pdbdX5l0Ga3FOsER8IScUncfL1zRC-1ZefLi5kQj133pn2MhMhKPwnfHSg2U5FjkdXSTgBhNs" width="321" height="60" style="width: 321px; height: 60px;"></strong></p><p>2. Спосіб групування.</p><p><strong><em>Наприклад</em></strong></p><p><img src="https://lh5.googleusercontent.com/MRlFXF5Nl-wcRsbwzlNRla9UatNrGr8ajPoCeavs0Q9JJD6uALEqhxkbGM46gq4f2TfyV-n0dJqRAlD8KKZGQAngRie0aB-eaDFiiaGvU9rsQnUinGRsO44dRARdeyOY4GRPTKyk-kEJesch" alt="3x - 3y - {x^2} + xy = (3x - 3y) - ({x^2} - xy) = 3(x - y) - x(x - y) = (x - y)(3 - x)">.</p><p>3. Використання формул скороченого множення.</p><p>Формули скороченого множення: <br>a2-b2=(a-b)(a+b); <br>(a+b)2=a2+2ab+b2; <br>(a-b)2=a2-2ab+b2; <br>(a+b)3=a3+3a2b+3ab2+b3 або a3+b3+3ab(a+b); <br>(a-b)3=a3-3a2b+3ab2-b3 або a3-b3-3ab(a-b); <br>a3+b3=(a+b)(a2-ab+b2); <br>a3-b3=(a-b)(a2+ab+b2); <br>ax2+bx2+c=a(x-x1)(x-x2).</p><p><strong><em>Завдання</em> </strong></p><p>Спростити вираз та знайти результат: bc(11c-7b)-((b-2c)·(b2-5bc)+c3), якщо b=-1/2; c=3/2;</p>'),
(165, 91, 1, 1, '<p><strong>Частина 1</strong></p><p><strong>Натуральні числа </strong></p><p>Натуральні числа 1,2,3,… - це числа, що використовуються для рахування предметів або для вказування порядкового номера того чи іншого предмета серед однорідних предметів. Будь-яке натуральне число можна записати за допомогою десяти арабських цифр: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9. Число 0 не є натуральним числом. </p><p>Для читання натуральних чисел їх розбивають, починаючи справа, на групи по три цифри в кожній. Три перші цифри праворуч складають клас одиниць, три наступні – клас тисяч, потім йдуть класи мільйонів, мільярдів і т.д. Кожна із цифр класу називається його розрядом. </p><p>Із двох натуральних чисел менше те, яке при підрахунку називають раніше. Наприклад, число 8 менше від 12 (записують так: 8 &lt; 12). Коли одне число більше другого, це записують так: 386 &gt; 99. </p><p>Найменше натуральне число – 1. <br>Найбільшого натурального числа не існує. <br>Множину натуральних чисел позначають символом N.</p><p><br><br></p><p><strong>Числові вирази і числові рівності </strong></p><p>Запис, у якому числа з`єднані знаками дій, називають числовим виразом.<br>Наприклад, 10∙3+4; (60-2∙5):10.<br>Записи, у яких знаком рівності поєднано два числових вирази, називають числовими рівностями. Рівність має ліву і праву частини.</p><p>. </p>\r\n<p><strong>Порядок виконання арифметичних дій </strong></p><p>Додавання і віднімання чисел називають діями першого ступеня, а множення і ділення чисел – діями другого ступеня. <br>Якщо числовий вираз містить дії тільки одного ступеня, то їх виконують по порядку зліва направо. <br>Якщо ці вирази містять дії тільки першого і другого ступенів, то спочатку виконують дії другого ступеня, а потім – дії першого ступеня. <br>Якщо у виразі є дужки, то спочатку виконують дії в дужках. </p><p><br><strong><em>Наприклад</em>, 36: (10-4)+3∙5= 36:6+15 = 6+15 = 21. </strong></p><p><strong><em>Завдання</em><strong>: </strong>25: (10-5)+5∙7</strong></p>\r\n<p><strong>Додатні і від’ємні числа , цілі числа </strong></p><p>Числа бувають <strong>додатні і від’ємні, </strong>натуральні, цілі, раціональні, ірраціональні.</p><p>+5; +7; +0,23; +4, 59;<img src="https://lh5.googleusercontent.com/EzB_F_B52LyeuUF7Pt8uexLH6Xx8cug-MZ8ml7U5IW5KZm4Zfmqyc6IO6wYpacO06_2I6Zrvd468O2DYqmTnZfwqh3vg8KuvFjmQm5NGctKMCR-5Yh8GiFQA1UqmArPg4WxzQ1LOjNTsLMmc" width="101" height="160" style="width: 101px; height: 160px;">- додатні числа.</p><p>Додатні числа можна записати без знака, тобто замість +5; + 7; +0, 23 можна писати 5;7; 0, 23.</p><p>-1;-37;-0,2;<img src="https://lh4.googleusercontent.com/e6yWT3U16VR4ydrtm4iYJiATaph_l1Iq8VDImBEtwrDctzejUhsh0-ZEWI7VxpxB0A_LUdWlSivbv440lwGc9M6a7q8d1SvYD26WVLuouRxHOaQYcvEdUkEsVq9FCp5XxJAL0hlbHnj-O7e1" width="102" height="162" style="width: 102px; height: 162px;">- від’ємні числа.</p><p>Від’ємні числа не можна писати без знака.</p><p>Числа 1 і (-1), 5 і (-5), <img src="https://lh5.googleusercontent.com/GFnt15SNZEMOxYfHQ450ZaiAJPIkp7j5p07SZLyeD2YGG3-qzcsDR-3WnthR-1TQSsirWaDtUbeBh75mpAhweRVPI5m5dWMPNY7quBNnUqLE0-gVteMYoP4CTOEoXH-Dra1vbctiOj4LplzR" width="100" height="181" style="width: 100px; height: 181px;">і (<img src="https://lh6.googleusercontent.com/JSUDtYmewhENBtcBEJe6CYlUWbgsXYcLE0pztO4bvdt8ppXrYBMejObiz8OfwkL-d3ER6MixQsbVdMnln-LXErca7eoL9lX62FInL0SfRVnooBqnbr-VsLDXoWhF9vUn5HnKvidrRQJdGS0A" width="107" height="117" style="width: 107px; height: 117px;">) називаються <em>протилежними</em>. Загалом (+а) і (-а)-протилежні числа. Сума протилежних чисел дорівнює нулю, тобто (+a) + (-а)=0.</p><p>Цілі числа –це натуральні числа, протилежні їм числа і число 0.</p><p>0;<img src="https://lh4.googleusercontent.com/r83K_N1HF-JTLuB7nSAln-c_g0cMiRKyDCCgaVLLospMnd6BUdO3VhSHtrLT71c1rTZujhJWctffFoTA9iQCfbJoQEZYS1eIsTmSfyEF_ftOoMw6F6Yl52HuANxUiHP6jYgZbHmCGKurrRsW" width="102" height="79" style="width: 102px; height: 79px;">;<img src="https://lh6.googleusercontent.com/lnXcXFSj4IyWSRTPtlwrxxQU74f-b9ib43uWWBk4lFGa7MwS-QxfGhdP4etQ1HNiT-vgUiig5UMhBAH04dbmbiYWVU_mHvPmXEdp6sywT0Oi7eZH3cqf8hygHrkYWgjLvSXqUTEpL7Pt6M1U" width="104" height="76" style="width: 104px; height: 76px;">…-цілі числа.</p><p>Число 0 відокремлює додатні числа від від’ємних.</p><p><strong><em>Завдання </em>((451-17*3)*3-200):500+46*60</strong></p>\r\n<p><strong>Частина 2</strong></p><p><em>Раціональні числа</em> – числа, які можна подати у вигляді p/q, де p і q –будь-які цілі числа, причому q<img src="https://lh6.googleusercontent.com/YS03XElMJv0_kBLlbAUeMAEwmmt9OMhJV6RS4ZzaMUVmItQEla7qNJlpfQvgD0XXWA-FkiufY2DGVkvV-Y5aBdKVSBqtMnidm0Ofgtkpk2OWnwSxXDHjCWPDG2yLQMaHMEj5QuNtD8LaElC8" width="100" height="100" style="width: 100px; height: 100px;">0. Множину раціональних чисел позначають символом Q. Цілі числа і дроби і є раціональними числами.</p><p><strong><em>Наприклад</em>: -1, <img src="https://lh4.googleusercontent.com/eNZ0rEGC2M5vdknttGRxO_RBkr07VdqReMhLXcer12W0yxZg6ZU5z5W32W5CbnPlByCoeKubOVYuXz4kykeBeAN76mTzS3iVqU30kawltQ9VAAMoNCP01f4_9ldv1zdsnDs97LceTpa8rO59" width="101" height="71" style="width: 101px; height: 71px;"> - раціональні числа.</strong></p><p> Будь-яке раціональне число – нескінченний періодичний десятковий дріб.</p><p><em>Ірраціональні числа</em>- це числа, які не можна зобразити у вигляді відношення p/q (q<img src="https://lh6.googleusercontent.com/YS03XElMJv0_kBLlbAUeMAEwmmt9OMhJV6RS4ZzaMUVmItQEla7qNJlpfQvgD0XXWA-FkiufY2DGVkvV-Y5aBdKVSBqtMnidm0Ofgtkpk2OWnwSxXDHjCWPDG2yLQMaHMEj5QuNtD8LaElC8" width="100" height="104" style="width: 100px; height: 104px;">0) двох цілих чисел. Ірраціональні числа зображаються нескінченними, але неперіодичними десятковими дробами. Приклад ірраціональних чисел: <img src="https://lh3.googleusercontent.com/u-tBYSwUVTF4M0-YaAONDXU8zwkPDgd7hKgexP-sROiDHwc2dYxJcpjaMmEZhI-DoEqIsJM7BuvnQodiNWKGOz0yiFhLCgbuYRAyZJ5slnSCqkae5eVhIv49CoxaUq6SQWkB3TU_h1XcDBBX" width="102" height="95" style="width: 102px; height: 95px;">;<img src="https://lh6.googleusercontent.com/9JLAT4zHRcOXzPJHtMA5JNx-GZRuwsehg-FKNKckOgCFVnZojcLhxosdB5aFeBTwBQcQytX_3udu3h68UthS_VWd7Abuu-aBUCJHYazw1Edma62Q7h-GPrNhKjGFM67nQD7UooF-07hpWM-J" width="110" height="113" style="width: 110px; height: 113px;">;<img src="https://lh6.googleusercontent.com/8rGpmyHoubQBGQk1pglIkeigrxCrmCGBxr23xsQyDkN78qtRwLUEVW02bEHTwpTt8UQohF6f6dzWdRrgv7L95TADg2pZ7AvO62c5QGFJhM5lO4LYc3wf-b5ZbmBANkUiso7CvfL37jIfMiV0" width="101" height="101" style="width: 101px; height: 101px;">;<img src="https://lh4.googleusercontent.com/MiX7QJRzuesPOdRPDkDOIkLubg3KabmcyVb5siOMjVekI8lNJE9h10Fj21Ge04GQOkWV0ac6OfuOefGfmPCc6Ztj79YHjUee9Q3gnzcsAZGd-0dzBE2OiHgsFYF2uokmD_cIFicNrYmfyGA5" width="105" height="107" style="width: 105px; height: 107px;">-<img src="https://lh3.googleusercontent.com/J4d2R24FGdOLcbWuAVIyff9pJaeNzJ05LUftjul2OXqm1tVdlo8HlPueVKIEidaDyt8A-qsm2zYV-HxoeCl_IX6jviuiv2s5GwTxT-iWw9d-5AdoFcJrMKctO39EJeRTnvn1D9umgVplHbSm" width="100" height="94" style="width: 100px; height: 94px;"></p><p><strong><em>Завдання: </em>Серед чисел <img src="https://lh4.googleusercontent.com/9L3ZE2xNwIN_a0VeU7Yy7djpY6GTN4aSX6eRWnzRhJPh7Adz9hZqEqwBewDL1meCfFKlUtDaDYnkGRFKQs0PyKqRx5iT91w51nuQ2Q8RvUUI7qeX5XizXVwDimHxMQU1n75fsJ-G5fkmB_d4">; 0; 0,25; -2,(3); 0,818118111... (кількість одиниць, яка ділить вісімки, кожний раз збільшується на 1); 4,2(51); 217; n укажіть раціональні та ірраціональні.</strong></p>\r\n<p>Раціональні числа та ірраціональні числа утворюють множину <strong>дійсних чисел</strong>. Кожному дійсному числу відповідає єдина точка координатної прямої. яку називають <strong>числовою прямою</strong>.</p><p> Для числових множин використовуються позначення:</p><p>N - множина натуральних чисел;<br>Z - множина цілих чисел;<br>Q - множина раціональних чисел;<br>R - множина дійсних чисел.</p><p>ПОРІВНЯННЯ ДІЙСНИХ ЧИСЕЛ<strong>.</strong> </p><p>Якщо потрібно порівняти два дійсних числа а і b, то можна розглянути різницю а - b.</p><p>При цьому:</p><p>якщо а - b &gt; 0 , то а &gt; b;</p><p>якщо а - b = 0 , то а = b;</p><p>якщо а - b &lt; 0 , то а &lt; b.</p><p><strong><em>Приклад.</em> Порівняти: 1)<img src="https://lh3.googleusercontent.com/xwauSB6TLWgfYbyI6-PN8_to4knhylD9l-yusXsRD4FxJA_tBZvaYt4jMQ4r5makXlZ-jTxZvFYjYSNv-wfHp1BGzulOd8NOjED1d3GacETUdaBvZvAqyBxY-UaLIN0Cu8_m6MCtwvpjCe5y" width="100" height="269" style="width: 100px; height: 269px;"> і 0,67 2) <img src="https://lh3.googleusercontent.com/TV6j6RcZSgGUXVfb3ia94sSxant3i0BJLOr2_DfOHJEeJ5mJUiS5PHY5rYbYvzJ7NvNfFjtiP-NWY6Ez3XhV59suM8E34CyWhsIhpFCJeROAfZg2PcbLEjTsaJ6PP7w9l4FV8eOUXbmfi-0-" width="101" height="62" style="width: 101px; height: 62px;"> і <img src="https://lh3.googleusercontent.com/rFatEghhMEJq1U24i9_mYFK-lRi0_1bZjuIQ6j2PTC379jYZvG0Rw64sFsA4cHeBvP2BOAIVa5eVhwD1NiMdHC3Auf4sP-DneBuGJfhG5pySIEEIz7wQsQNyFow3kdA8nGDq2nSLM3CkQoLF" width="100" height="86" style="width: 100px; height: 86px;"></strong></p><p>Розв’язання:</p><p><img src="https://lh3.googleusercontent.com/T8WG5qSX6Ai2Paes-rcvwByetmVq-lLRyorsQBaluUVqIAwkudoRigsk_is4TQLldbqYWuGQDNkU1t2m_qN6QnPwboxHPseEaL-5KWK6O7OlNvUPDHvwX0yKqI5zcT5FJG4InSxS5Ab6EVnL"></p><p>тому <img src="https://lh6.googleusercontent.com/uD1433rrnCLYF-eXeJOW4VsZAjQ8vWcPf9Cr2S7ekFvKqLRbdnCj7Vke2-2uDS0KUyQT735YibEdWP6WoWiX-dwbA25w0Os_clXMCOsKRZlv1BwhtlV27gncprfCWL-H8fIl8GVWwzmcQV5z" width="127" height="54" style="width: 127px; height: 54px;"></p><p><strong><em>Завдання </em>Порівняти числа: а) 4/5 і 0,93;<strong> </strong>б) 1/2 і 0,5000.</strong></p>\r\n<p><strong> Означення, зображення та позначення числового проміжку.</strong></p><p>Дано таблицю, в якій відображено відповідність між умовою, зображенням на малюнку та позначенням.</p><table><colgroup><col><col><col><col></colgroup><tbody><tr><td><p>№</p></td><td><p>Умова</p></td><td><p>Зображення на малюнку</p></td><td><p>Позначення</p></td></tr><tr><td><p>1</p></td><td><p>х &lt; а</p></td><td><p><img src="https://lh3.googleusercontent.com/X77dWcFy7QG74mb_P1vUP9uBY1eY5QFzH8Jjyp3YRnIwpdX-cr8NFp9CrWMGXM-oFAoCVVJkZToQrQjrVLEC8JYHozhqjH9F7GSGqaUgUVBWqBwXBtwSYeT1zxaFMzXJXA3k5PXguuKSx953"></p></td><td><p>(-∞ ; а)</p></td></tr><tr><td><p>2</p></td><td><p>х ≤ а</p></td><td><p><img src="https://lh5.googleusercontent.com/u41p0WoSV3hwL4qyU18j9mYjpMFPvQw6OohYtrKOE_Reo4qUa5iPvvtKNQ6ccNyC4sz4DxL49ofrsb5mfExFcHby6VyKUQFFEHS_jiuBfJahQRK_raYh8b8i6ALjuHOEXZeHS_W9DQeCgLQp"></p></td><td><p>(-∞ ; а]</p></td></tr><tr><td><p>3</p></td><td><p>х &gt; а</p></td><td><p><img src="https://lh6.googleusercontent.com/OQC79Qrj3ZC5_ftB8b7QqHizkVWkTF5Z0Gcsn9Dhjgv6acBerTaXHL90PnlEkFrs4HAJoDfoxeOFMGJjJmgrqVXrUakG0CCCpzdsz_4B0_3eOkweahBIlbcAZLyPIW_p0tOBdGOVQABAsnuK"></p></td><td><p>(а; +∞)</p></td></tr><tr><td><p>4</p></td><td><p>х ≥ а</p></td><td><p><img src="https://lh3.googleusercontent.com/gKuMedn3IUnB39a0rbSjVvSnV5yP3RtQzcRW_udoUl0IkRKJXc0e-q6aUsTkUF2xekMHvRCC7FjhnMyM0Wp5XEovJYIlZs9Ur3t1-klkWZnRSN_tNNIZUMWPZ3Toqtf2vYWU8emMy_Zq1K1V"></p></td><td><p>[а;+∞)</p></td></tr><tr><td><p>5</p></td><td><p>а &lt; х &lt; b</p></td><td><p><img src="https://lh3.googleusercontent.com/uKCqBIzp2DvsCCHi164c0Wk3B9rwxve0taJKJFkH7o2WX9GYxKwi0Eg80EIaa8uh0YAHzvdbt00x1m-oyLb0xiWBPH5-tYw-Y-oBUObFZ09HNIrFEwQFMDjuQyibyY7AS4B_3pEnWjlULz1I"></p></td><td><p>(а; b)</p></td></tr><tr><td><p>6</p></td><td><p>а ≤ х &lt; b</p></td><td><p><img src="https://lh6.googleusercontent.com/D9avWKsIvJGbBruGU_YvQxfMxxop692ZLAx5rNClEIWxbJOGQOOpexFyPu-HvPhnlsLzmVZJesyRZTkmZKhyN68AAOe16t_MYj9XnQGOMf-JdRNicqzrdqutCHcyTuLqTAKPNEmwhkF0CO0l"></p></td><td><p>[а; b)</p></td></tr><tr><td><p>7</p></td><td><p>а &lt; х ≤ b</p></td><td><p><img src="https://lh4.googleusercontent.com/RsoUb6g0OGI2vqu5A8XecikGVt2PXW16d_1k_1HoMT-0yfoIjHBkhGun56JIA-hQXlbZPt2o9bJwxGxd5fyqeXUKp2cotOMkz3L6BzubGnlNdVMWraayS6-JAdNpu8jdDSAMTx6WWx7SgzpJ"></p></td><td><p>(а; b]</p></td></tr><tr><td><p>8</p></td><td><p>а ≤ х ≤ b</p></td><td><p><img src="https://lh5.googleusercontent.com/-UBJIH0dA3k8n9W9ctEmr8xHE-mXB7BL_eOEHI7wsvkqpPIPY_pzcz9cHW_tehkd490824fVw_p_x10RcladXv-HQ7bi-Etjrc4HWBkKbmeHin7pbYSv96RkNA_1OvlVdj21IGHrp40IkmaX"></p></td><td><p>[а; b]</p></td></tr></tbody></table><p><strong> Ознака подільності на 2</strong></p><p><strong>Число ділиться на 2</strong> тоді і тільки тоді, коли його остання цифра ділиться на 2, тобто є парною.</p><p>Нариклад:</p><p> 2, 8, 16, 24, 66, 150 — діляться на <strong>2</strong>, так як остання цифра цих чисел парна;<br>3, 7, 19, 35, 77, 453 — не діляться на <strong>2</strong>, так яка остання цифра цих чисел непарна. </p><p><strong>Ознака подільності на 3</strong></p><p><strong>Число ділиться на 3</strong> тоді і тільки тоді, коли сума його цифр ділиться на 3.</p><p>Нариклад:<br>471 — ділиться на <strong>3</strong>, так як 4+7+1=12, я число 12 ділиться на 3;<br>532 — не ділиться на <strong>3</strong>, так як 5+3+2=10, а число 10 не ділиться на 3. </p><p><strong>Ознака подільності на 4</strong></p><p><strong>Число ділиться на 4</strong> тоді и тільки тоді, коли дві його останні цифри складають число, яке ділиться на 4. <strong>Двозначне число ділиться на 4</strong> тоді і тільки тоді, коли подвоєне число десятків, складене з числом одиниць ділиться на 4.</p><p>Нариклад:<br>4576 — ділиться на <strong>4</strong>, так як число 76 (7·2+6=20) ділиться на 4;<br>9634 — не ділиться на <strong>4</strong>, так як число 34 (3·2+4=10) не ділиться на 4. </p><p><strong>Ознака подільності на 5</strong></p><p><strong>Число ділиться на 5</strong> тоді, коли його остання цифра дорівнює 0 або 5.</p><p>Нариклад:<br>375, 5680, 233575 — діляться на <strong>5</strong>, так як їх останні цифри дорівнюють 0 або 5;<br>9634, 452, 389753 — не діляться на <strong>5</strong>, так як їх останні цифри не дорівнюють 0 або 5. </p><p><strong>Ознака подільності на 6</strong></p><p><strong>Число ділиться на 6</strong> тоді і тільки тоді, коли воно ділиться і на 2, і на 3, тобто якщо воно парне і сума його цифр ділиться на 3.</p><p>Нариклад:<br>462, 3456, 24642 — діляться на <strong>6</strong>, так як вони діляться одночасно і на 2, і на 3;<br>861, 3458, 34681 — не діляться на <strong>6</strong>, так як 861 не ділиться на 2, 3458 не ділиться на 3, 34681 не ділиться на 2. </p><p><strong>Ознака подільності на 9</strong></p><p><strong>Число ділиться на 9</strong> тоді і тільки тоді, коли сума його цифр ділиться на 9.</p><p>Нариклад:<br>468, 4788, 69759 — діляться на <strong>9</strong>, так як сума їх цифр ділиться на 9 (4+6+8=18, 4+7+8+8=27, 6+9+7+5+9=36);<br>861, 3458, 34681 — не діляться на <strong>9</strong>, так як сума їх цифр не ділиться на 9 (8+6+1=15, 3+4+5+8=20, 3+4+6+8+1=22). </p><p><strong>Ознака подільності на 10</strong></p><p><strong>Число ділиться на 10</strong> тоді і тільки тоді, коли воно закінчується на нуль.</p><p>Нариклад:<br>460, 24000, 1245464570 — діляться на <strong>10</strong>, так як остання цифра цих чисел дорівнює нулю;<br>234, 25048, 1230000003 — не діляться на <strong>10</strong>, так як остання цифра цих чисел не дорівнює нулю.</p><p>натуральне число ділиться на <strong>25,</strong> якщо число, утворене двома його останніми цифрами, ділиться на 25.</p><p>натуральне число не ділиться на 25, якщо число, утворене двома його останніми цифрами, не ділиться на 25.</p><p>Наприклад:</p><p>57 375 ділиться на 25, оскільки 75 ділиться на 25;</p><p>438 635 не ділиться на 25, оскільки 35 не ділиться на 25.</p>\r\n<p><strong><em>Завдання </em><strong>:</strong>Виконати зазначенні дії: <img src="https://lh3.googleusercontent.com/jno_K98lmuaRUSeQkeSYiQgSqZXe1OWpPMeHjRY1u7YJhSXbTO9F8iOcPOEHYMHBTHtqKfHYbeAI-qbUhSVvKcpycIgfqq4CCZBs8lATBTgtngKiyh2y4m3LrznYUduvOUatsjZo36z1aTyU" width="222" height="51" style="width: 222px; height: 51px;">;</strong></p>\r\n<p><strong>Ділення натуральних чисел з остачею</strong></p><p> Якщо <em>a</em> ― ділене, <em>b</em> ― дільник і <em>a = bс + r</em>, де <em>b &gt; r</em>, то говорять, що при діленні числа <em>a</em> на число <em>b</em> маємо неповну частку <em>с</em> та остачу <em>r</em>:</p><p><img src="https://lh4.googleusercontent.com/LQWDYmBuaY2qlPk9p5eMLJRm4vcXLvruzaehzNzNMhHHEYEH1hO8zngPo25-0o9XkXrxqCBAT-xjrIZ0tD2DNo1DJ8AUmE7Myg0S1eX5c1igWVPz4OIu36vHKaDZhYFw6cxGikKFiL3mrnv9" alt="a:b = c(ostacha\\;r)">.</p><p><strong><em> Наприклад</em>: 10 : 4 = 2 (остача 2), 10 = 4 · 2 + 2.</strong></p><p> Ділення багатоцифрових чисел виконується «кутом».</p><p><strong><em> Наприклад</em>:</strong></p><p>113 сотень: 28 = 4 сотні (остача 1 сотня);</p><p>19 десятків: 28 = 0 десятків (остача 19 десятків);</p><p>196 : 28 = 7.</p><p><img src="https://lh4.googleusercontent.com/zIR1kDSWE85p2Omj1WPAZYA5Jyhng-WXSgVxbkPCOaC5ZtPW9oSjfhso5RJvllbPu3htdWV2MH5IW0IT6cKThLD2Qh1-L-vQqoFfPNz2sJmCOdK1YCSM5jukdEkM4S_v7ZOyvUAmZsikrwlH" width="111" height="95" style="width: 111px; height: 95px;"></p><p><strong><em>Завдання </em>Виконати дії та зробити перевірку:  </strong></p><p>а) 266:13; </p><p>б) 148:12; </p>'),
(166, 1, 28, 1, '\\[\\prod \\zeta \\mu \\rho \\sigma\\]\r\n'),
(167, 1, 29, 3, '<p>yh46j4j7ij</p><p>ujkj</p><p>6</p>'),
(168, 14, 3, 4, '<p> ''mode'' =&gt; ''popup'', //mode: ''popup'' or ''inline''</p><pre>''defaults'' =&gt; array( //default settings for all editable elements<br>''emptytext'' =&gt; ''Натисніть для редагування''<br>)<br> ),<br>),<br><br>// application-level parameters that can be accessed<br>// using Yii::app()-&gt;params[''paramName'']<br>''params''=&gt;array(<br> // this is used in teacher profile page<br>''adminEmail''=&gt;''Wizlightdragon@gmail.com'',<br>''languages''=&gt;array(''en''=&gt;''English'', ''ua''=&gt;''Ukrainian'', ''ru''=&gt;''Russian''),<br>//''imagesPath''=&gt;''http://localhost/IntITA/images'',<br>''imagesPath''=&gt;''http://intita.itatests.com/images'',<br>''avatarsPath''=&gt;''http://intita.itatests.com/avatars'',<br>''commonPath'' </pre>'),
(169, 14, 4, 3, '<p> ''mode'' =&gt; ''popup'', //mode: ''popup'' or ''inline''</p><pre>''defaults'' =&gt; array( //default settings for all editable elements<br>''emptytext'' =&gt; ''Натисніть для редагування''<br>)<br> ),<br>),<br><br>// application-level parameters that can be accessed<br>// using Yii::app()-&gt;params[''paramName'']<br>''params''=&gt;array(<br> // this is used in teacher profile page<br>''adminEmail''=&gt;''Wizlightdragon@gmail.com'',<br>''languages''=&gt;array(''en''=&gt;''English'', ''ua''=&gt;''Ukrainian'', ''ru''=&gt;''Russian''),<br>//''imagesPath''=&gt;''http://localhost/IntITA/images'',<br>''imagesPath''=&gt;''http://intita.itatests.com/images'',<br>''avatarsPath''=&gt;''http://intita.itatests.com/avatars'',<br>''commonPath'' </pre>'),
(170, 93, 1, 4, '<p>gjhgjhgjgjgjffgfhf</p>'),
(171, 93, 2, 7, '<p>yuyukuiuiujhjhjhjyhuhjhjh</p>'),
(172, 94, 1, 1, '<p>cgjhgjghkh</p>'),
(173, 94, 2, 4, '<p>hkhkvhklklhkhjkhjkkvhjkhj</p>'),
(174, 16, 1, 1, 'test'),
(180, 60, 1, 1, '<p>hghghghgfhghgfhg</p>'),
(181, 60, 2, 5, '<p>ghfghfhfhdfhgfhfhfhdghfh</p>'),
(182, 59, 1, 1, '\\[\\frac{t}{b}\\]\r'),
(183, 59, 3, 1, '<p>hhghhjjghhjghjyyhy</p>'),
(185, 100, 1, 1, '<p>Вступ.</p>'),
(187, 100, 3, 1, '<p>Ми з вами розпочинаємо новий курс із мови програмування С (<a href="http://uk.wikipedia.org/wiki/%D0%90%D0%BD%D0%B3%D0%BB%D1%96%D0%B9%D1%81%D1%8C%D0%BA%D0%B0_%D0%BC%D0%BE%D0%B2%D0%B0">англ.</a> літера “сі”). Заняття присвячене основним поняттям та знайомству з основами мови.\n</p>\n<p>Знання основ мови С допоможе вам:\n</p>\n<p>- краще зрозумти процеси, що відбуваються всередині комп’ютера (код, створений на С, найбільш зрозумілий для комп’ютера);\n</p>\n<p>-легше освоїти інші мови програмування (в т.ч. й РНР), оскільки С працює на більш низькому рівні, ніж більшість інших мов, і за допомогою С можна створювати компактні і швидкі програми.\n</p>\n<p>В рамках даного заняття ми освоїмо:\n</p>\n<ol>\n	<li>загальні правила написання тексту програми на мові С;</li>\n	<li>елементи синтаксису мови С, що дозволяють реалізовувати <strong><em>основні “три кити”</em>, на яких базується мистецтво програмування: <strong>присвоювання, повторювання (оператори циклів) та розгалуження (оператори умов)</strong>.</strong></li>\n</ol>'),
(188, 100, 6, 1, '<p>C — універсальна, <a href="http://uk.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D1%86%D0%B5%D0%B4%D1%83%D1%80%D0%BD%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F">процедурна</a> <a href="http://uk.wikipedia.org/wiki/%D0%9C%D0%BE%D0%B2%D0%B0_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F">мова програмування</a> загального призначення, розроблена у <a href="http://uk.wikipedia.org/wiki/1972">1972</a> році <a href="http://uk.wikipedia.org/wiki/%D0%94%D0%B5%D0%BD%D1%96%D1%81_%D0%A0%D1%96%D1%82%D1%87%D1%96">Денісом Рітчі</a> у <a href="http://uk.wikipedia.org/wiki/Bell_Labs">Bell Telephone Laboratories</a> з метою написання нею <a href="http://uk.wikipedia.org/wiki/%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D1%96%D0%B9%D0%BD%D0%B0_%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0">операційної системи</a> <a href="http://uk.wikipedia.org/wiki/UNIX">UNIX</a>.\n</p>\n<p>Та хоча С і було розроблено для написання <a href="http://uk.wikipedia.org/wiki/%D0%A1%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%BD%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BD%D0%B5_%D0%B7%D0%B0%D0%B1%D0%B5%D0%B7%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%BD%D1%8F">системного програмного забезпечення</a>, наразі вона досить широко використовується для написання <a href="http://uk.wikipedia.org/wiki/%D0%9F%D1%80%D0%B8%D0%BA%D0%BB%D0%B0%D0%B4%D0%BD%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BD%D0%B5_%D0%B7%D0%B0%D0%B1%D0%B5%D0%B7%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%BD%D1%8F">прикладного програмного забезпечення</a>.\n</p>Мова С імовірно, є найпопулярнішою у світі мовою програмування за кількістю вже написаного нею програмного забезпечення, доступного під <a href="http://uk.wikipedia.org/wiki/%D0%92%D1%96%D0%BB%D1%8C%D0%BD%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BD%D0%B5_%D0%B7%D0%B0%D0%B1%D0%B5%D0%B7%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%BD%D1%8F">вільними ліцензіями</a> коду та кількості програмістів, котрі її знають. Версії компіляторів для мови С існують для багатьох <a href="http://uk.wikipedia.org/wiki/%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D1%96%D0%B9%D0%BD%D0%B0_%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0">операційних систем</a> та <a href="http://uk.wikipedia.org/wiki/%D0%90%D1%80%D1%85%D1%96%D1%82%D0%B5%D0%BA%D1%82%D1%83%D1%80%D0%B0_%D0%95%D0%9E%D0%9C">апаратних архітектур</a>. C здійснила великий вплив на інші мови програмування, особливо на <a href="http://uk.wikipedia.org/wiki/C%2B%2B">C++</a>, яка спочатку проектувалася, як розширення для С, а також на <a href="http://uk.wikipedia.org/wiki/Java">Java</a> та <a href="http://uk.wikipedia.org/wiki/C_Sharp">C#</a>, які запозичили у <a href="http://uk.wikipedia.org/wiki/%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D0%B8_%D0%B2_C_%D1%82%D0%B0_C%2B%2B">С основний синтаксис</a>.');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(190, 100, 8, 1, '<ul>\n	<li>що потрібно для написання програми на мові С?</li>\n</ul>\n<p>а) звичайний текстовий редактор (наприклад, Notepad++);</p>\n<p>б) спеціалізоване програмне середовище (IDE - integrated development environment) - інтегроване середовище розробки, що поєднує в собі текстовий редактор і <em>компілятор</em> (програма, що переводить текст програми в код низького рівня або <em>машинний код</em>).</p>\n<ul>\n	<li>чи достатньо для того, щоб програма могла працювати, написати лише її текст?</li>\n</ul>\n<p>Ні, оскільки будь-яка операційна система “розуміє” лише машинний код. Тому для створення машинного коду, який відповідає тексту програми (і навіть для перевірки тексту на наявність синтаксичних чи логічних помилок), рано чи пізно знадобиться IDE.</p>\n<p><a href="http://codedchaos.blogspot.com/2011/04/c-ide.html"><strong>Поширені IDE для розробки С-програм</strong></a><u>:</u> <strong>Dev-C++, MinGW Developer Studio, Code::Blocks, Eclipse C/C++ Development Tools, NetBeans IDE, Microsoft Visual Studio Express, Qt Creator</strong> тощо.</p>\n<ul>\n	<li>в якому вигляді зберігаються тексти програм на С у файловій системі?</li>\n</ul>\n<p>Файли, в яких зберігаються тексти програм на С, мають звичайний текстовий формат, однак відрізняються від інших своїми розширеннями:</p>\n<p><strong>*.c</strong> - файл з текстом програми на класичній мові С;</p>\n<p><strong>*.cpp</strong> - файл з текстом програми, в якій використовуються можливості мови С++.</p>\n<p>Деякі файли спеціального призначення можуть мати розширення <strong>*.h, *.hpp</strong> (їх особливості будуть розглянуті згодом).</p>\n<ul>\n	<li>який загальний вигляд має текстовий варіант програми на С?</li>\n</ul>\n<p>Загальну структуру програми на мові С можна представити у наступному вигляді:</p>\n<p><strong><em><span style="color: rgb(31, 73, 125);">директиви_передпроцесора</span> </em><strong><em><span style="color: rgb(155, 187, 89);">// сукупність зовнішніх файлів, що містять додаткові об’єкти (стандартні типи даних, функції тощо), необхідні для роботи програми</span></em></strong></strong></p>\n<p><strong><em><span style="color: rgb(31, 73, 125);">визначення об”єктів;</span> </em><strong><em><span style="color: rgb(155, 187, 89);">// описання (оголошення) змінних, типів, процедур та функцій</span></em></strong></strong></p>\n<p><strong><span style="color: rgb(31, 73, 125);">void main ()</span></strong> <strong><span style="color: rgb(155, 187, 89);">// головна процедура (функція), що реалізує загальний алгоритм роботи програми</span></strong></p>\n<p><strong><span style="color: rgb(31, 73, 125);">{</span> </strong><strong><span style="color: rgb(155, 187, 89);">// початок головної програми</span></strong></p>\n<p><strong><em><span style="color: rgb(31, 73, 125);">визначення об”єктів;</span></em><strong><em><span style="color: rgb(31, 73, 125);"> </span><span style="color: rgb(155, 187, 89);">// змінні, процедури та функції можна оголошувати також в середині головної програми</span></em></strong></strong></p>\n<p><strong><em><span style="color: rgb(31, 73, 125);">виконувані_оператори;</span><span style="color: rgb(31, 73, 125);"> </span></em><strong><span style="color: rgb(155, 187, 89);">// послідовність дій, які виконує програма</span></strong></strong></p>\n<p><strong><span style="color: rgb(31, 73, 125);">}</span> </strong><strong><span style="color: rgb(155, 187, 89);">// кінець програми</span></strong></p>\n<p><u>Примітки:</u> 1) <strong><em>передпроцесор</em> - програма (складова IDE), яка здійснює попередню обробку тексту програми на С (перед тим, як “передати” її компілятору); <strong><span style="color: rgb(192, 80, 77);"><em>директиви_передпроцесора</em> </span>зазвичай вказують, які додаткові зовнішні об’єкти необхідно включити в кінцевий код програми;</strong></strong></p>\n<p>2) символ “<strong><span style="color: rgb(192, 80, 77);">//</span></strong>” означає <em>коментар</em> (відділяє допоміжний пояснюючий текст, який ігнорується компілятором); для багаторядкових коментарів використовується також конструкція <strong><span style="color: rgb(192, 80, 77);">/*...текст коментаря…*/</span></strong>;</p>\n<p>3) символи “<strong><span style="color: rgb(192, 80, 77);">{}</span></strong>” означають початок і кінець певного уособленого фрагмента програми (або головної програми в цілому); носять назву <em>операторні дужки</em>.</p>'),
(192, 100, 11, 1, '<p>Будь-яка мова (в т.ч. й мова програмування) характеризується власним особливим <em>синтаксисом</em> - сукупності правил для побудови коректних мовних конструкцій. Мова С - не виняток.</p><p>Синтаксис мови С ми будемо в основному розглядати на конкретних прикладах. Однак іноді також будемо використовувати певні умовні позначення (тобто - елементи формального опису). Ці умовні позначення відповідають загальноприйнятим правилам т.з. <em>розширеної форми Бекуса-Наура (БНФ):</em></p><ol><li>Символи в лапках <strong>“”</strong> відповідають елементам мови, які використовуються в текстах програм “<em>так, як пишуться</em>” (але - без лапок). Наприклад, <strong>“return”</strong> означає - в конструкції мови присутня команда <strong>return</strong>.</li><li>Терміни з кількох слів, записаних без пробілу, означають назви стандартних конструкцій мови. Наприклад, в загальному вигляді тексту програми (див. вище) - <strong><em>директиви_передпроцесора</em>.</strong></li><li>Квадратні дужки <strong>[ ] </strong>охоплюють т.з. <em>необов’язкові </em>елементи, які можуть бути відсутні або повторюватися лише 1 раз. Наприклад, <strong>“АВ”[“C”] </strong>означає, що може використовуватись елемент мови АВ або АВС.</li><li>Фігурні дужки <strong>{ }</strong> (<u>не плутати з операторними дужками!</u>) означають те саме, з тією різницею, що елемент мови <em>може повторюваися більше 1 разу</em>. Наприклад, <strong>“АВ”{“C”} </strong>означає, що може використовуватись елемент мови АВ або АВС, ABCC, ABCCC і т.д.</li><li>Символ <strong>“|”</strong> відповідає логічній операції АБО - тобто, розділяє певні можливі альтернативні значення елементів мови. Наприклад, <strong>“АВ”|“C”|”DEF”</strong> означає можливість використання як АВ, так і С або DEF.</li><li>Круглі дужки <strong>( )</strong> служать для групування елементів мови. Наприклад, <strong>“А”(“В”|“C”)”D”</strong> означає, що може використовуватись ABD або ACD.</li><li>Три крапки <strong>…</strong> означають деякі пропущені величини при перерахунку однотипних елементів.</li><li>Символ <strong>= </strong>означає “є, являється” тощо. Наприклад, <strong>літера = “А”|“В”|“C”</strong>.</li></ol><strong>Важливо!</strong> Слід мати на увазі що наведені умовні позначення <em>не є елементами синтаксису мови</em>, а лише використовуються <u>для його пояснення</u> <em>за межами прикладів текстів програм</em>.'),
(194, 100, 13, 1, '<p>А тепер розглянемо найпростіший приклад робочої програми на мові С. Одночасно почнемо знайомитися з елементами синтаксису мови С.</p>'),
(195, 100, 14, 4, '<p><span style="color: rgb(155, 187, 89);"></span><strong><span style="color: rgb(155, 187, 89);">// Підключити описання функцій стандартного вводу-виводу</span></strong></p><p><strong><span style="color: rgb(31, 73, 125);">#include &lt;stdio.h&gt;</span> </strong></p><p><strong><span style="color: rgb(155, 187, 89);">// Підключити описання математичних функцій</span> </strong></p><p><strong><span style="color: rgb(31, 73, 125);">#include &lt;math.h&gt;</span> </strong> </p><p><strong><span style="color: rgb(155, 187, 89);">// За необхідності підключаємо інші файли</span></strong><strong> </strong></p><p><strong><span style="color: rgb(31, 73, 125);">…</span> </strong></p><p><strong><span style="color: rgb(155, 187, 89);">// Текст головної програми</span></strong><strong> </strong></p><p><span style="color: rgb(31, 73, 125);"><strong>void main( ) </strong><strong> </strong></span></p><p><strong><span style="color: rgb(31, 73, 125);">{ </span></strong></p><p><strong><span style="color: rgb(31, 73, 125);"> float num; </span></strong><strong> </strong><strong><span style="color: rgb(155, 187, 89);">// описання змінних</span></strong></p><p> <strong><span style="color: rgb(155, 187, 89);">// Виконувані оператори</span></strong><strong><span style="color: rgb(155, 187, 89);"> та функції</span></strong></p><p><strong> </strong><strong><span style="color: rgb(31, 73, 125);">num = 2.345;</span> </strong><strong> </strong><span style="color: rgb(155, 187, 89);"><strong>/* Присвоїти змінній </strong><strong>num</strong><strong> </strong> </span></p><p><strong><span style="color: rgb(155, 187, 89);"> значення 2.345 */</span></strong><strong> </strong></p><p><strong> </strong><strong><span style="color: rgb(31, 73, 125);">printf( " sin(%f) = %f\\n", num, sin(num) );</span></strong><strong><span style="color: rgb(31, 73, 125);"> </span></strong><span style="color: rgb(155, 187, 89);"><strong>/* Вивести на екран значення синуса величини, присвоєної змінній </strong><strong>num</strong></span><strong><span style="color: rgb(155, 187, 89);"> */</span></strong></p><strong><span style="color: rgb(31, 73, 125);">} </span></strong>'),
(197, 100, 15, 5, '<p><br>\n</p>\n<p>1. Відкрийте обрану Вами IDE і в її вбудованому текстовому редакторі<strong><em> наберіть</em> (не скопіюйте, а саме наберіть!) текст наведеної вище програми (без коментарів).</strong>\n</p>\n<p>2. Збережіть набраний текст у файлі з деякою назвою.\n</p>\n<p>3. Скомпілюйте збережений файл (функція Compile або Build у вашій IDE).\n</p>\n<p>4. Допишіть в кінці (перед дужкою “<strong><span style="color: rgb(192, 80, 77);">}</span></strong>”) функцію <strong><span style="color: rgb(192, 80, 77);">getchar()</span></strong> (реагує на натискання клавіші Enter).\n</p>\n<p>5. Збережіть, скомпілюйте і запустіть програму на виконання (функція Run); проаналізуйте результат виконання у вікні консолі, яке відкриється. Щоб вийти з режиму консолі - натисніть Enter.\n</p>\n<p>6. Змініть в тексті програми число, яке присвоюється змінній <strong><span style="color: rgb(192, 80, 77);">num</span></strong>; знову скомпілюйте і запустіть, зробіть висновки з отриманого результату.\n</p>\n<p>7. Закоментуйте (поставте на початку “<strong><span style="color: rgb(192, 80, 77);">//</span></strong>”) другий рядок програми; збережіть і спробуйте скомпілювати; якщо компілятор видає помилку - приберіть внесений коментар і знову збережіть файл; зробіть висновки.\n</p>\n<p><u>Примітки: </u>а) пункти 1-3 при виконанні наступних завдань повинні виконуватись «по замовчуванню»;\n</p>\n<p>б) набирати вручну тексти програм рекомендується на початковому етапі освоєння мови програмування (в подальшому з метою економії часу фрагменти коду можна копіювати з існуючих файлів чи інших джерел);\n</p>\n<p>в) для перевірки роботи програми після внесених змін <u>обов’язково</u> потрібно <em>зберегти зміни</em> і <em>заново відкомпілювати </em>програму;\n</p>г) <em>коментування</em> фрагментів коду (за допомогою “<strong><span style="color: rgb(192, 80, 77);">//</span></strong>” або “<strong><span style="color: rgb(192, 80, 77);">/* */</span></strong>”) замість їх видалення може бути зручним з метою їх можливого швидкого відновлення.'),
(199, 100, 17, 1, '<p><strong><em>Ідентифікатор - </em>це послідовність букв, цифр і символів підкреслювання “_”, яка <em>починається із букви або символа підкреслювання</em>.</strong></p><p><u>Призначення ідентифікатора</u>: однозначне іменування змінних, констант, процедур, функцій та інших атрибутів, що вводяться в програму розробником.</p><p>Приклади ідентифікаторів: <strong><span style="color: rgb(192, 80, 77);">MAX_10, size30, _MIN, Time, time</span></strong><strong>.</strong></p><p><strong>Важливо: </strong>1) великі та малі літери сприймаються компілятором <em>по-різному</em> (тобто, в наведеному переліку два останні ідентифікатори вважаються <em>різними</em> в рамках фрагмента програми, виділеного операторними дужками “<strong><span style="color: rgb(192, 80, 77);">{ }</span></strong>” (т.з. <em>область видимості</em>);</p><p>2) довжина ідентифікатора <em>може бути довільною</em>, але компілятор сприймає <em>не більше 31 символу від початку ідентифікатора </em>(деякі старі версії - не більше 8 символів).</p><p><strong>Запитання</strong>: чи будуть розрізнятись в програмі ідентифікатори <strong><span style="color: rgb(192, 80, 77);">NUMBER_OF_ROOM</span></strong> та <strong><span style="color: rgb(192, 80, 77);">NUMBER_OF_TEST</span></strong>?</p>'),
(201, 100, 19, 1, '<p>Це один з найпростіших, і разом з тим - один з найбільш важливих і вживаних операторів.</p><p>Позначається символом “<strong><span style="color: rgb(192, 80, 77);">=</span></strong>” і означає <em>бінарну операцію</em> - за участю двох операндів: лівий (перед знаком “<strong><span style="color: rgb(192, 80, 77);">=</span></strong>”, зазвичай змінна) і правий (після знаку “<strong><span style="color: rgb(192, 80, 77);">=</span></strong>”, зазвичай значення або вираз).</p>'),
(202, 100, 20, 4, '<p>Нехай “<strong><span style="color: rgb(192, 80, 77);">w</span></strong>” - змінна, а “<strong><span style="color: rgb(192, 80, 77);">2,3+1</span></strong>”- арифметичний вираз. Запис <strong><span style="color: rgb(192, 80, 77);">w=2,3+1;</span></strong> означає операцію присвоювання змінній<span style="color: rgb(192, 80, 77);"> </span><strong><span style="color: rgb(192, 80, 77);">w</span></strong> значення виразу <strong><span style="color: rgb(192, 80, 77);">2,3+1</span></strong>.</p><p>Дана операція виконується в такій послідовності:</p><ul><li>якщо правий операнд є виразом, спочатку рахується його значення (результатом виразу виразу <strong><span style="color: rgb(192, 80, 77);">2,3+1</span></strong> буде число <strong><span style="color: rgb(192, 80, 77);">3,3</span></strong>);</li><li>в комірку пам’яті, виділену для змінної <strong><span style="color: rgb(192, 80, 77);">w</span></strong>, записується число <strong><span style="color: rgb(192, 80, 77);">3,3</span>.</strong></li></ul>'),
(203, 100, 21, 1, '<p><strong>Важливо: </strong> тип значення правого операнда<em> може не співпадати </em>з типом лівого операнда! В такому випадку при реальне значення, яке присвоюється змінній, модифікується шляхом <em>автоматичного перетворення (приведення) типу</em> значення виразу справа до типу змінної (докладніше буде розглянуто згодом).</p><br>Цілком припустимою є ситуація, коли вираз правого операнду <em>також містить операцію присвоювання</em>. Завдяки цьому <em>одним оператором присвоювання можна присвоїти значення декільком змінним</em> - <u>виконати т.з. “множинне” присвоювання.</u>'),
(204, 100, 22, 4, '<p>Запис <strong><span style="color: rgb(192, 80, 77);">v = j = k = 4 + 6.2;</span></strong> передбачає виконання наступних дій:</p><ul><li>розраховується вираз <strong><span style="color: rgb(192, 80, 77);">4 + 6.2</span> </strong>(одержуємо число <strong><span style="color: rgb(192, 80, 77);">10,2</span></strong><strong>);</strong></li><li>значення <strong><span style="color: rgb(192, 80, 77);">10,2</span></strong> присвоюється змінній <span style="color: rgb(192, 80, 77);"><strong>k</strong> </span>;</li><li>значення змінної <strong><span style="color: rgb(192, 80, 77);">k</span></strong> присвоюється змінній <strong><span style="color: rgb(192, 80, 77);">j</span></strong> ;</li><li>значення змінної <strong><span style="color: rgb(192, 80, 77);">j</span></strong> присвоюється змінній <strong><span style="color: rgb(192, 80, 77);">v</span></strong>.</li></ul>Таким чином, всі три змінні <strong><span style="color: rgb(192, 80, 77);">v, j</span> </strong>і<strong> <span style="color: rgb(192, 80, 77);">k</span> </strong>будуть дорівнювати числу <strong><span style="color: rgb(192, 80, 77);">10,2</span></strong>.'),
(205, 100, 24, 1, '<p>В мові С існує цілий набір “складових операцій присвоювання”,кожна з яких об”єднує певну бінарну логічну чи арифметичну операцію і власне присвоювання. Загальний вигляд оператора складового присвоювання можна представити так:</p><p><span style="color: rgb(192, 80, 77);"><strong>ім”я_змінної</strong> <strong><span style="color: rgb(0, 0, 0);">op</span> </strong></span><strong><span style="color: rgb(192, 80, 77);">= вираз;</span></strong></p><p>де <strong>op </strong> - одна з бінарних операцій. Для початку розглянемо найпростіші арифметичні операції: “<strong><span style="color: rgb(192, 80, 77);">*</span></strong>” - множення, “<strong><span style="color: rgb(192, 80, 77);">/</span></strong>” - ділення, “<strong><span style="color: rgb(192, 80, 77);">%</span></strong>” - остача від ділення цілих чисел, “<strong><span style="color: rgb(192, 80, 77);">+</span></strong>” - додавання, “<strong><span style="color: rgb(192, 80, 77);">-</span></strong>” - віднімання.</p><p>Фактично, оператор складового присвоювання <strong>реалізує дві операції</strong> :</p><ul><li>спочатку виконується <strong>op </strong>між величинами <strong><span style="color: rgb(192, 80, 77);">ім”я_змінної</span></strong> та<strong> <span style="color: rgb(192, 80, 77);">вираз</span></strong> <strong>;</strong></li><li>результат присвоюється змінній <strong><span style="color: rgb(192, 80, 77);">ім”я_змінної</span></strong>.</li></ul><strong>Важливо:</strong> змінна <strong><span style="color: rgb(192, 80, 77);">ім”я_змінної</span></strong> попередньо <u>має бути ініціалізована</u>!'),
(206, 100, 25, 4, '<p>Маємо рядок в програмі: <strong><span style="color: rgb(192, 80, 77);">x * = 2; z + = 4; i / = x + 4 * z;</span></strong></p><p>При виконанні кожного з цих операторів операндами для операції <strong>ор</strong> служать змінна з лівої частини і вираз з правої. Результат присвоюється змінній з лівої частини.</p><p>Таким чином, перший оператор рівнозначний запису: <strong><span style="color: rgb(192, 80, 77);">x=х*2</span></strong>; другий оператор - те саме, що<strong> <span style="color: rgb(192, 80, 77);">z=z+4</span></strong>.</p><p>Третій оператор - дещо складніший і передбачає наступну послідовність дій:</p><ul><li>розрахувати величину <strong><span style="color: rgb(192, 80, 77);">4 * z</span></strong>, результат додати до значення змінної <strong><span style="color: rgb(192, 80, 77);">x</span></strong> (згідно пріоритету виконання арифметичних операцій);</li><li>значення змінної <strong><span style="color: rgb(192, 80, 77);">i</span> </strong>поділити на число, одержане на попередньому кроці;</li><li>одержаний результат присвоїти змінній <strong><span style="color: rgb(192, 80, 77);">i</span></strong>.</li></ul><p>Таким чином, даний оператор складового присвоювання рівнозначний наступному оператору простого присвоювання:<span style="color: rgb(192, 80, 77);"> </span><strong><span style="color: rgb(192, 80, 77);"> i = i / ( x + 4 * z);</span></strong></p>В цьому записі дужки вводяться для забезпечення необхідної послідовності виконання елементарних операцій.'),
(207, 100, 26, 1, '<p><u>Примітка:</u> перейти від простого оператора присвоювання до складового можна лише у тих випадках, коли <em>лівий операнд</em> (змінна):</p><p>а) є складовим <em>правого операнда </em>в присвоюванні;</p><p>б) в рамках правого операнда - так само <em>залишається лівим операндом</em>.</p>Наприклад, не вдасться замінити складовими наступні прості оператори присвоювання: <strong><span style="color: rgb(192, 80, 77);">a = b / a; x = z % x;</span></strong>'),
(208, 100, 23, 5, '<p>1. Збережіть програму з попереднього завдання у файлі з іншою назвою.<br>\n</p>\n<p>2. Внесіть в текст програми зміни – після ініціалізації змінної num реалізуйте з нею складові операції присвоювання самої себе (щоб виконувались операції num = num + num; num = num * num та інші найпростіші арифметичні операції).<br>\n</p>\n<p>3 Функція printf( … ); (виведення синуса num) повинна виконуватись після кожної операції складового присвоюваня.<br>\n</p>'),
(209, 100, 32, 5, 'Модифікуйте наведений приклад таким чином, щоб оператор <strong><span style="color: rgb(192, 80, 77);">if-else</span></strong> був використаний <em>в скороченому вигляді</em> (без блоку “інакше”).'),
(211, 100, 4, 1, '<p><strong>Частина 1. Історія мови С</strong></p>'),
(212, 100, 7, 1, '<p><strong>Частина 2. Структура програми на С</strong></p>'),
(213, 100, 28, 1, '<p>В найпростішому варіанті програма реалізує т.з. <em>лінійний алгоритм</em>, тобто забезпечує послідовне виконання операторів. Однак в багатьох випадках виникає необхідність вибору деякого варіанту продовження роботи програми (в залежності від істинності чи хибності певних умов). Таким чином, постає задача реалізації <em>розгалуження</em> в програмі. Для цього широко застосовуються <strong><em>оператори умов</em> (або <strong><em>умовні оператори</em>).</strong></strong></p><p>В мові С існує два типи умовних оператоів:</p><ul><li>оператор <strong><span style="color: rgb(192, 80, 77);">if-else</span></strong> для вибору одного з двох варіантів;</li><li>оператор <strong><span style="color: rgb(192, 80, 77);">switch</span></strong> для вибору з кількох варіантів.</li></ul>\r\n<ol><li><u>Реалізація оператора </u><strong><span style="color: rgb(192, 80, 77);">if-else</span></strong><u>.</u></li></ol>Загальна структура оператора <strong><span style="color: rgb(192, 80, 77);">if-else</span></strong> має вигляд:'),
(214, 100, 29, 3, '<p><span style="color: rgb(79, 129, 189);"></span><strong><span style="color: rgb(79, 129, 189);">if ( умова )</span> </strong><strong><span style="color: rgb(155, 187, 89);">// заголовок з умовою</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">{</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">... </span></strong> <strong><span style="color: rgb(155, 187, 89);">// блок «якщо» — оператори, які виконуются,</span></strong></p><p><strong><span style="color: rgb(155, 187, 89);">// якщо умова в заголовку є істинною (виконується)</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">}</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">else</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">{</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">...</span> </strong> <strong><span style="color: rgb(155, 187, 89);">// блок «інакше» — оператори, які виконуються,</span></strong></p><p><strong><span style="color: rgb(155, 187, 89);">// якщо умова в заголовку є хибною (не виконується)</span></strong></p><strong><span style="color: rgb(79, 129, 189);">}</span></strong>'),
(215, 100, 30, 1, '<p>При описанні умови широко застосовуються знаки логічних відношень:</p><p><strong><span style="color: rgb(192, 80, 77);">&gt;, &lt;</span></strong> - більше, менше;</p><p><span style="color: rgb(192, 80, 77);"><strong>&gt;=, &lt;=</strong> </span>- більше або дорівнює, менше або дорівнює;</p><p><strong><span style="color: rgb(192, 80, 77);">==</span></strong> - дорівнює;</p><p><strong><span style="color: rgb(192, 80, 77);">!=</span></strong> - не дорівнює.</p>\r\n<p><u>Примітки: </u>1) якщо в разі <em>не виконання умови</em> <u>не потрібно</u> здійснювати якісь спеціальні дії - <u>блок “інакше” можна опустити</u>;</p>2) в мові С <u>будь-яке число, відмінне від 0,</u> означає “істину” (виконання умови), а 0 - “хибність” (не виконання).'),
(216, 100, 31, 4, '<p><strong><span style="color: rgb(155, 187, 89);">// визначення більшого з двох чисел</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">#include &lt;stdio.h&gt;</span></strong></p>\r\n<p><strong><span style="color: rgb(79, 129, 189);">main()</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">{</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">float A, B, Max; </span></strong><span style="color: rgb(155, 187, 89);"><strong>// </strong><strong>A</strong> <strong>і</strong> <strong>B</strong><strong> - числа, що порівнюються, </strong><strong>Max</strong></span><strong><span style="color: rgb(155, 187, 89);"> - допоміжна змінна</span></strong></p>\r\n<p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">printf("Input A and B : "); </span></strong> <strong><span style="color: rgb(155, 187, 89);">// підказка</span></strong></p><p style="margin-left: 20px;"><span style="color: rgb(79, 129, 189);"><strong>scanf ( "%f%f", &amp;A, &amp;B );</strong> </span><strong><span style="color: rgb(155, 187, 89);">// введення чисел з клавіатури</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">if ( A &gt; B )</span> </strong> <strong><span style="color: rgb(155, 187, 89);">// умова</span></strong></p><p style="margin-left: 40px;"><strong><span style="color: rgb(79, 129, 189);">Max = A; </span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">else</span></strong></p><p style="margin-left: 40px;"><strong><span style="color: rgb(79, 129, 189);">Max = B; </span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">printf ( "Max value is %f", Max ); </span></strong><span style="color: rgb(155, 187, 89);"><strong>// вивести на екран змінну </strong><strong>Max</strong></span><strong><span style="color: rgb(155, 187, 89);">, яка дорівнює більшому з 2-х введених чисел</span></strong><br></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">getchar();</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">}</span></strong></p><p><strong><br></strong></p>'),
(217, 100, 33, 1, '<p>В операторі <strong><span style="color: rgb(192, 80, 77);">if-else</span></strong> в блоки “якщо” та “інакше” можуть входити, зокрема, інші “вкладені” оператори <span style="color: rgb(192, 80, 77);"><strong>if-else</strong> </span>. В такому разі слід пам’ятати: <em>кожен оператор </em><strong><span style="color: rgb(192, 80, 77);">else</span></strong><em> відноситься до того оператора </em><span style="color: rgb(192, 80, 77);"><strong>if</strong></span><em><strong>, </strong>з яким у нього спільна умова</em><strong>. Для уникнення плутанини відповідний текст програми слід писати у стилі “сходинки”, зсуваючи внутрішні “вкладені” оператори вправо за допомогою табуляції (клавіша Tab).</strong></p>'),
(218, 100, 34, 4, '<p><span style="color: rgb(79, 129, 189);"><strong>...</strong></span></p><p><strong><span style="color: rgb(79, 129, 189);">if ( score &gt; 65 )</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">if ( score &gt; 90 )</span></strong></p><p style="margin-left: 40px;"><strong><span style="color: rgb(79, 129, 189);">printf ( "Ви отримали залік автоматично" );</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">else</span></strong></p><p style="margin-left: 40px;"><strong><span style="color: rgb(79, 129, 189);">printf ( "Вам слід пройти складання заліку" );</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">else</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">printf ( "Ви не допущені до заліку" );</span></strong></p><strong><span style="color: rgb(79, 129, 189);">…</span></strong>'),
(219, 100, 35, 1, '<p><u>Примітка:</u> якщо між операторними дужками “<strong><span style="color: rgb(192, 80, 77);">{ }</span></strong>” передбачається <em>лише один оператор</em> - їх можна опустити (див. останній зразок).</p>'),
(220, 100, 36, 5, '<p>1. Зробіть наведений фрагмент коду частиною програми з усіма необхідними атрибутами (директивами <strong><span style="color: rgb(192, 80, 77);">#include</span></strong>, головною функцією <strong><span style="color: rgb(192, 80, 77);">main()</span></strong>, оголошенням змінних, їх введенням з клавіатури тощо).</p><p>2. Відредагуйте програму до робочого стану (щоб при введенні певних значень видавала коректні результати).</p>3. Модифікуйте <u>всі</u> оператори умови до скороченого вигляду.'),
(221, 100, 37, 1, '<p>Особливий випадок застосування умовного оператора - наявність <em>складної умови. </em>В таких умовах <u>два і більше логічних відношень</u> поєднуються за допомогою <em>логічних операцій</em>:</p><p><span style="color: rgb(79, 129, 189);"><strong>( умова1 </strong><strong>&amp;&amp;</strong><strong> умова2 )</strong> </span>- <em><strong>операція “І” </strong></em><strong>(істинна</strong> <u><span>лише</span> при виконанні </u><em><u>одночасно обох умов</u></em><strong>);</strong></p><p><span style="color: rgb(79, 129, 189);"><strong>( умова1 </strong><strong>||</strong></span><strong><span style="color: rgb(79, 129, 189);"> умова2 )</span></strong> - <em><strong>операція “АБО”</strong> </em><strong>(істинна</strong> при виконанні <em>хоча б однієї умови</em><strong>);</strong></p><span style="color: rgb(79, 129, 189);"><strong>( </strong><strong>!</strong></span><strong><span style="color: rgb(79, 129, 189);"> умова )</span></strong> - <em><strong>операція “НЕ” (заперечення умови)</strong> </em>(“істину” змінює на “хибність” і навпаки).'),
(222, 100, 38, 4, '<p><span style="color: rgb(79, 129, 189);"><strong>#include &lt;stdio.h&gt;</strong></span></p><p><strong><span style="color: rgb(79, 129, 189);">main()</span></strong><br></p><p><strong><span style="color: rgb(79, 129, 189);">{</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">int age;</span><span style="color: rgb(155, 187, 89);"> </span></strong><strong><span style="color: rgb(155, 187, 89);">// ціле число - вік людини</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">printf ( "\\nВкажіть ваш вік: " ); </span></strong><strong><span style="color: rgb(155, 187, 89);">// підказка</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">scanf ( "%d", &amp;age );</span></strong><span style="color: rgb(155, 187, 89);"> </span><strong><span style="color: rgb(155, 187, 89);">// введення з клавіатури</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">if ( 25 &lt;= age &amp;&amp; age &lt;= 40 )</span><span style="color: rgb(155, 187, 89);"> </span></strong><strong><span style="color: rgb(155, 187, 89);">// складна умова</span></strong></p><p style="margin-left: 40px;"><strong><span style="color: rgb(79, 129, 189);">printf ( "Вітаємо! Вас запрошено на співбесіду" );</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">else</span></strong></p><p style="margin-left: 40px;"><strong><span style="color: rgb(79, 129, 189);">printf ( "Прикро, але Ви перевищили віковий ценз" );</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">getchar();</span></strong></p><strong><span style="color: rgb(79, 129, 189);">}</span></strong>'),
(223, 100, 39, 1, '<p><u></u><strong><u>Важливо</u>:</strong> при визначенні результату складної умови (“істина” чи “хибність”) слід суворо притримуватись наступного пріоритету логічних операцій і відношень:</p><ol><li>операції в дужках;</li><li>операція “НЕ”;</li><li>логічні відношення (більше, менше, дорівнює, не дорівнює тощо);</li><li>операція “І”;</li><li>операція “АБО”.</li></ol><em>Для зміни </em>порядку дій використовують дужки “<strong><span style="color: rgb(192, 80, 77);">()</span></strong>” (за аналогією арифметичних операцій).'),
(224, 100, 40, 5, '<p>В останньому прикладі замініть оператор <strong><span style="color: rgb(192, 80, 77);">else</span></strong> <u>коректною</u> умовою, альтернативною до попередньої.</p>'),
(225, 100, 10, 1, '<p><strong>Частина 3. </strong><strong>Правила формального опису мови програмування</strong></p>'),
(226, 48, 2, 5, '<p>jhgf</p>'),
(227, 73, 1, 1, '<p><a class="in-cell-link" href="https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5" target="_blank">https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5</a></p><p><a class="in-cell-link" href="https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5" target="_blank">https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5</a><span class="redactor-invisible-space"><br></span></p><p><span class="redactor-invisible-space"><a class="in-cell-link" href="https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5" target="_blank">https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5</a><span class="redactor-invisible-space"><br></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><a class="in-cell-link" href="https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5" target="_blank">https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5</a><span class="redactor-invisible-space"><br></span></span></span></p>'),
(228, 73, 2, 1, '<p><b>Дифференциа́льное уравне́ние</b> — <a href="https://ru.wikipedia.org/wiki/%D0%A3%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5" title="Уравнение">уравнение</a>, связывающее значение <a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%BE%D0%B4%D0%BD%D0%B0%D1%8F_%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8" title="Производная функции">производной</a> <a href="https://ru.wikipedia.org/wiki/%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F_(%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0)" title="Функция (математика)">функции</a> с самой функцией, значениями независимой переменной, числами (параметрами). Порядок входящих в уравнение производных может быть различен (формально он ничем не ограничен). Производные, функции, независимые переменные и параметры могут входить в уравнение в различных комбинациях или все, кроме хотя бы одной производной, отсутствовать вовсе. Не любое уравнение, содержащее производные неизвестной функции, является дифференциальным уравнением. Например, <img alt="\\ f''(x)=f(f(x))" src="https://upload.wikimedia.org/math/8/7/f/87f42703aac484c88d1841e8f584619b.png"> не является дифференциальным уравнением.<sup><a href="https://ru.wikipedia.org/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%BF%D0%B5%D0%B4%D0%B8%D1%8F:%D0%A1%D1%81%D1%8B%D0%BB%D0%BA%D0%B8_%D0%BD%D0%B0_%D0%B8%D1%81%D1%82%D0%BE%D1%87%D0%BD%D0%B8%D0%BA%D0%B8" title="Википедия:Ссылки на источники">[<i>источник не указан 230 дней</i>]</a></sup>\n</p>\n<p>Дифференциальное уравнение порядка выше первого можно преобразовать в систему уравнений первого порядка, в которой число уравнений равно порядку исходного уравнения.\n</p>\n<p>Современные быстродействующие ЭВМ эффективно дают численное решение обыкновенных дифференциальных уравнений, не требуя получения его решения в аналитическом виде. Это позволило некоторым исследователям утверждать, что решение задачи получено, если её удалось свести к решению <a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8B%D0%BA%D0%BD%D0%BE%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D0%B5_%D0%B4%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5" title="Обыкновенное дифференциальное уравнение">обыкновенного дифференциального уравнения</a>.\n</p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(229, 73, 3, 5, '<p><b>Дифференциа́льное уравне́ние</b> — <a href="https://ru.wikipedia.org/wiki/%D0%A3%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5" title="Уравнение">уравнение</a>, связывающее значение <a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%BE%D0%B4%D0%BD%D0%B0%D1%8F_%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8" title="Производная функции">производной</a> <a href="https://ru.wikipedia.org/wiki/%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F_(%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0)" title="Функция (математика)">функции</a> с самой функцией, значениями независимой переменной, числами (параметрами). Порядок входящих в уравнение производных может быть различен (формально он ничем не ограничен). Производные, функции, независимые переменные и параметры могут входить в уравнение в различных комбинациях или все, кроме хотя бы одной производной, отсутствовать вовсе. Не любое уравнение, содержащее производные неизвестной функции, является дифференциальным уравнением. Например, <img alt="\\ f''(x)=f(f(x))" src="https://upload.wikimedia.org/math/8/7/f/87f42703aac484c88d1841e8f584619b.png"> не является дифференциальным уравнением.<sup><a href="https://ru.wikipedia.org/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%BF%D0%B5%D0%B4%D0%B8%D1%8F:%D0%A1%D1%81%D1%8B%D0%BB%D0%BA%D0%B8_%D0%BD%D0%B0_%D0%B8%D1%81%D1%82%D0%BE%D1%87%D0%BD%D0%B8%D0%BA%D0%B8" title="Википедия:Ссылки на источники">[<i>источник не указан 230 дней</i>]</a></sup></p><p>Дифференциальное уравнение порядка выше первого можно преобразовать в систему уравнений первого порядка, в которой число уравнений равно порядку исходного уравнения.</p><p>Современные быстродействующие ЭВМ эффективно дают численное решение обыкновенных дифференциальных уравнений, не требуя получения его решения в аналитическом виде. Это позволило некоторым исследователям утверждать, что решение задачи получено, если её удалось свести к решению<a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8B%D0%BA%D0%BD%D0%BE%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D0%B5_%D0%B4%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5" title="Обыкновенное дифференциальное уравнение">обыкновенного дифференциального уравнения</a>.</p>'),
(230, 73, 4, 5, '<p><b>Дифференциа́льное уравне́ние</b> — <a href="https://ru.wikipedia.org/wiki/%D0%A3%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5" title="Уравнение">уравнение</a>, связывающее значение <a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%BE%D0%B4%D0%BD%D0%B0%D1%8F_%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8" title="Производная функции">производной</a> <a href="https://ru.wikipedia.org/wiki/%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F_(%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0)" title="Функция (математика)">функции</a> с самой функцией, значениями независимой переменной, числами (параметрами). Порядок входящих в уравнение производных может быть различен (формально он ничем не ограничен). Производные, функции, независимые переменные и параметры могут входить в уравнение в различных комбинациях или все, кроме хотя бы одной производной, отсутствовать вовсе. Не любое уравнение, содержащее производные неизвестной функции, является дифференциальным уравнением. Например, <img alt="\\ f''(x)=f(f(x))" src="https://upload.wikimedia.org/math/8/7/f/87f42703aac484c88d1841e8f584619b.png"> не является дифференциальным уравнением.<sup><a href="https://ru.wikipedia.org/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%BF%D0%B5%D0%B4%D0%B8%D1%8F:%D0%A1%D1%81%D1%8B%D0%BB%D0%BA%D0%B8_%D0%BD%D0%B0_%D0%B8%D1%81%D1%82%D0%BE%D1%87%D0%BD%D0%B8%D0%BA%D0%B8" title="Википедия:Ссылки на источники">[<i>источник не указан 230 дней</i>]</a></sup>\r\n</p>\r\n<p>Дифференциальное уравнение порядка выше первого можно преобразовать в систему уравнений первого порядка, в которой число уравнений равно порядку исходного уравнения.\r\n</p>\r\n<p>Современные быстродействующие ЭВМ эффективно дают численное решение обыкновенных дифференциальных уравнений, не требуя получения его решения в аналитическом виде. Это позволило некоторым исследователям утверждать, что решение задачи получено, если её удалось свести к решению<a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8B%D0%BA%D0%BD%D0%BE%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D0%B5_%D0%B4%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5" title="Обыкновенное дифференциальное уравнение">обыкновенного дифференциального уравнения</a>.\r\n</p>'),
(231, 73, 6, 1, '<p>vdvdfgdfgdf</p>'),
(232, 112, 1, 1, '<p>fffffffffffffssssssssssssss\n</p>'),
(233, 113, 1, 5, '<p>Задача 1</p>'),
(236, 112, 2, 5, '<p><span style="color: rgb(204, 193, 217);">11111111111111</span>\n</p>\n<p><span style="color: rgb(204, 193, 217);"><a href="http://www.yiiframework.com/doc/guide/1.1/ru/topics.auth">http://www.yiiframework.com/doc/guide/1.1/ru/topic...</a><br></span>\n</p>\n<p><span style="color: rgb(204, 193, 217);"><a href="http://www.yiiframework.com/doc/guide/1.1/ru/topics.auth">http://www.yiiframework.com/doc/guide/1.1/ru/topic...</a><span class="redactor-invisible-space"><br></span></span>\n</p>'),
(237, 112, 3, 1, '<p>аропропропр</p>'),
(238, 101, 1, 1, '<p>Вступ</p>'),
(239, 101, 2, 1, '<p>Тепер, ознайомившись із загальною структурою програми і основними принципами процесу програмування (присвоювання, розгалудження та повторювання), настав час заглибитись в інші тонкощі синтаксису мови С.</p><p>В рамках даного заняття ми освоїмо:</p><ol><li>основні типи даних, які підлягають обробці під час виконання програми;</li><li>правила оголошення і використання змінних;</li><li>основні операції над даними; суть поняття “оператор”;</li><li>правила запису виразів, що містять змінні, константи та операції над ними;</li><li>розберемося з пріоритетами виконання в програмі різних операцій;</li><li>вивчимо основні оператори, призначені для введення даних в змінні і їх виведення на екран;</li><li>і насамкінець - познайомимося з правилами оголошення і виконання типових дій над даними, що містяться в спеціальних структурах (“сховищах”) однотипних даних під назвою “масиви” (одно- і двовимірних).</li></ol>'),
(240, 101, 3, 1, '<p><strong>Частина 1. Типи даних</strong></p>'),
(241, 101, 4, 1, '<p>Будь-яка програма працює з <em>даними.</em> Дані, в свою чергу, зберігаються у пам’яті в двійковому коді (набір нулів і одиниць). Однак в залежності від того, працюємо ми з числами чи з текстом (а числа, в свою чергу, бувають цілі й дійсні), обробка цих даних буде відбуватись по-різному. Тому для програми важливо розрізняти <em>типи даних</em>, щоб застосовувати коректні і допустимі методи їх обробки.</p><p>Основними типами даних в програмуванні на мові С є наступні.</p><ul><li><strong>цілі числа</strong> :</li></ul><ul><li>призначені для виконання операцій з певною дискретною кількістю об’єктів;</li><li>можуть бути додатні й від’ємні: 3, 20000, -25 тощо;</li><li>в більшості випадків оголошуються як <strong><span style="color: rgb(192, 80, 77);">int</span></strong> : займають в пам’яті комірку розміром 4 байти, діапазон значень [-2147483648; 2147483647] (для 32-розрядної операційної системи);</li><li>дещо рідше застосовуються <strong><span style="color: rgb(192, 80, 77);">long (long int)</span></strong> (4 байти пам’яті) і <strong><span style="color: rgb(192, 80, 77);">short</span></strong> (2 байти пам’яті, діапазон значень [-32768; 32767]).</li></ul><p><u>Примітки: </u>а) тип <strong><span style="color: rgb(192, 80, 77);">int</span></strong> є <em>апаратно залежним</em> (його розмірність відповідає розрядності системи), в той час як <strong><span style="color: rgb(192, 80, 77);">long</span> </strong>і <strong><span style="color: rgb(192, 80, 77);">short</span></strong> - завжди фіксовані;</p><p>б) обробка даних типу <strong><span style="color: rgb(192, 80, 77);">int</span></strong> завжди здійснюється <em>швидше</em> в порівнянні з <strong><span style="color: rgb(192, 80, 77);">long</span> </strong>і <strong><span style="color: rgb(192, 80, 77);">short</span></strong>.</p><ul><li><strong>символи</strong> :</li></ul><ul><li>призначені для зберігання ASCII-кодів символів, дещо рідше - для представлення <em>цілих чисел</em> в діапазоні [-128; 127];</li><li>оголошуються як <strong><span style="color: rgb(192, 80, 77);">char</span></strong>; займають в пам’яті комірку розміром 1 байт.</li></ul>\r\n<ul><li><strong>дійсні числа</strong> :</li></ul><ul><li>призначені для виконання операцій з числами, якими вимірюються деякі <em>неперервні величини</em> (температура, відстань, швидкість тощо);</li><li>мають як цілу, так і дробову частину, можуть бути додатні й від’ємні: 354.3647537, 0.0048376, -10.7;</li><li>поділяються на три типи: <span style="color: rgb(192, 80, 77);"><strong>float</strong>, </span><strong><span style="color: rgb(192, 80, 77);">double</span></strong> і <strong><span style="color: rgb(192, 80, 77);">long double</span></strong>;</li><li>тип <strong><span style="color: rgb(192, 80, 77);">float</span> </strong>: зберігає числа в інтервалі [-3.4*10^38; 3.4*10^38], з точністю до 7 знаків після коми; займає в пам’яті комірку розміром 4 байти;</li><li>тип <strong><span style="color: rgb(192, 80, 77);">double</span></strong>: зберігає числа в інтервалі [-1.7*10^308; 1.7*10^308], з точністю до 15 знаків після коми; займає в пам’яті комірку розміром 8 байтів;</li><li>тип <strong><span style="color: rgb(192, 80, 77);">long double</span></strong>: як правило, має характеристики, аналогічні <strong><span style="color: rgb(192, 80, 77);">double</span></strong>, однак в різних компіляторах вони можуть відрізнятись.</li></ul>\r\n<ul><li><strong>логічні (булеві) величини</strong> :</li></ul><ul><li>використовуються для зберігання результатів різних логічних операцій типу “І”, “АБО”, “НЕ” і їх співвідношень;</li><li>характеризується <em>лише двома значеннями:</em> <strong><span style="color: rgb(192, 80, 77);">true</span> </strong>(істина) і <strong><span style="color: rgb(192, 80, 77);">false</span> </strong>(хибність);</li><li>оголошуються як <strong><span style="color: rgb(192, 80, 77);">bool</span></strong>; займають в пам’яті комірку розміром 1 байт.</li></ul><p><u>Примітка</u>: 1) теоретично розмір комірки із значенням типу <strong><span style="color: rgb(192, 80, 77);">bool</span></strong> має бути <strong>1 біт </strong>(1 або 0, що відповідає <strong><span style="color: rgb(192, 80, 77);">true</span> </strong>і <strong><span style="color: rgb(192, 80, 77);">false</span></strong>). Однак більшість компіляторів виділяють під величини <strong><span style="color: rgb(192, 80, 77);">bool</span></strong> реально <strong>1 байт</strong> з метою пришвидшення доступу;</p><p>2) зважаючи на 1), компілятор прирівнює до <strong><span style="color: rgb(192, 80, 77);">false</span> </strong>значення булевої комірки 0, а всі інші (ненульові) - до <strong><span style="color: rgb(192, 80, 77);">true</span></strong>.</p><strong>Важливо</strong>: допустимі діапазони цілочисельних типів можуть бути <em>змінені</em> за рахунок “примусового” виключення з них <em>від’ємних значень</em>. Такі типи оголошуються за допомогою ключового слова <strong><span style="color: rgb(192, 80, 77);">unsigned</span></strong>, а саме: <strong><span style="color: rgb(192, 80, 77);">unsigned char, unsigned int, unsigned short, unsigned long</span></strong>. Для величин цих типів <em>ліва границя</em> - <u>переміщується в 0</u>, а <em>права</em> - <u>збільшується вдвічі.</u>'),
(242, 101, 5, 1, '<p><strong>Частина 2. Змінні</strong>\n</p>'),
(243, 101, 6, 1, '<p>Щоб здійснювати обробку даних, які зберігаються в пам’яті - до них потрібно звертатись. В програмуванні це здійснюється шляхом “звертання по імені”. Кожній комірці пам’яті, що зберігає потрібну величину, присвоюється своє ім’я - така комірка стає <em>змінною</em>.</p><p><strong><em>Змінна</em> - це комірка в пам’яті, яка має своє ім’я і зберігає деяке значення. Значення змінної під час роботи програми може <u>змінюватись</u> (звідси й назва - “змінна”). Запис в комірку нового значення <u>стирає старе значення.</u></strong></p><p><u>Основні правила використання змінних в програмі на С:</u></p><p>а) кожна змінна перед використанням має бути <em>оголошена</em> (на початку програми або безпосередньо перед першим оператором з її участю);</p><p>б) оголошення змінної передбачає:</p><ul><li>вказати її тип;</li><li>за типом - ім’я змінної (одне або декілька через кому);</li></ul><p>в) при оголошенні змінну можна <em>ініціалізувати</em> - одразу присвоїти їй початкове значення;</p><p>г) якщо змінна <em>не ініціалізована</em> - в ній зберігається “сміття” (попереднє значення комірки).</p><u>Примітка</u>: імена змінних формуються за правилами створення <u>ідентифікаторів.</u>'),
(244, 101, 7, 4, '<p><strong>Приклад</strong> оголошення змінних:</p><p><strong><span style="color: rgb(79, 129, 189);">…</span> </strong></p><p><strong><span style="color: rgb(79, 129, 189);">int a;</span> </strong> <strong><span style="color: rgb(155, 187, 89);">// виділено комірку пам’яті під цілу змінну </span></strong><strong><span style="color: rgb(155, 187, 89);">a</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">float b, c;</span> </strong> <span style="color: rgb(155, 187, 89);"><strong>// аналогічно - для двох дійсних змінних </strong><strong>b</strong><strong> і </strong></span><strong><span style="color: rgb(155, 187, 89);">c</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">int Tu104, Il86=23, Yak42;</span> </strong> <strong><span style="color: rgb(155, 187, 89);">// три цілих змінних,</span></strong></p><p style="margin-left: 180px;"><span style="color: rgb(155, 187, 89);"><strong></strong><strong>// </strong><strong>Il86 </strong><strong>одразу ініціалізується числом </strong></span><strong><span style="color: rgb(155, 187, 89);">23</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">float x=4.56, y, z;</span> </strong> <strong><span style="color: rgb(155, 187, 89);">// три дійсних змінних,</span></strong></p><p style="margin-left: 120px;"><span style="color: rgb(155, 187, 89);"><strong>// </strong><strong>x</strong><strong> ініціалізується числом </strong></span><strong><span style="color: rgb(155, 187, 89);">4.56</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">char c, c2=''A'', m;</span></strong> <strong><span style="color: rgb(155, 187, 89);">// три символьних змінних, </span></strong></p><p style="margin-left: 120px;"><span style="color: rgb(155, 187, 89);"><strong>// </strong><strong>c2</strong><strong> ініціалізується символом </strong></span><strong><span style="color: rgb(155, 187, 89);">''A''</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">…</span> </strong></p><p><strong><br></strong></p>'),
(245, 101, 8, 1, '<p><strong>Частина 3. Операції і вирази</strong></p>'),
(246, 101, 9, 1, '<p>Після того, як змінні оголошені і проініціалізовані (виділені комірки в пам’яті з даними), над ними можна виконувати необхідні дії, які носять назву <em>операцій</em>.</p><p><strong><em>Операція</em> - окрема дія над даними, в результаті якої дані зазнають змін або утворюються нові дані.</strong></p><p>Кожній операції в мові програмування відповідає певний <em>знак операції</em> - символ або група символів, за якими компілятор визначає необхідні дії над даними.</p><p>Складовою будь-якої операції є <em>операнди</em> - змінні або величини в явному вигляді, поєднані відповідними значками операції.</p><p>За кількістю операндів розрізняють <em>унарні</em> (з одним операндом) і <em>бінарні</em> (з двома операндами) операції.</p><p>За <em>типом</em> виконуваних дій над операндами операції також класифікують на <em>арифметичні, логічні, операції відношення, бітові операції </em>тощо.</p><p><u>Примітка:</u> в рамках заняття 1 нами було розглянуто <em>операцію присвоювання</em>, а також основні арифметичні, логічні операції та операції відношення.</p>\r\n<p>Як бачимо, в рамках однієї операції можуть опрацьовуватись максимум дві змінні.</p><p>З метою більш комплексного опрацювання змінних в мовах програмування застосовуються <em>вирази.</em></p><strong><em>Вираз</em> - це будь-яка осмислена комбінація змінних, чисельних значень і операцій, яка призводить до розрахунку деякого нового значення.</strong>'),
(247, 101, 10, 4, '<p><strong>Приклади</strong> виразів в програмі на мові С:</p><p><strong><span style="color: rgb(79, 129, 189);">…</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">main()</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">{</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">…</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);"></span></strong><strong><span style="color: rgb(79, 129, 189);">b=a+15;</span>                </strong><span></span><strong><span style="color: rgb(155, 187, 89);">// простий вираз</span></strong></p><p style="margin-left: 40px;"><strong></strong></p><p><strong><span style="color: rgb(79, 129, 189);">…</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);"></span></strong><span style="font-size: 16px; line-height: 1.6em; color: rgb(79, 129, 189); background-color: initial;"><strong>c=(a-57)*b/3;</strong>     </span><strong><span style="color: rgb(155, 187, 89);">// складний вираз</span></strong></p><p style="margin-left: 40px;"><strong></strong></p><p><strong><span style="color: rgb(79, 129, 189);">… </span></strong></p><strong><span style="color: rgb(79, 129, 189);">}</span></strong>'),
(248, 101, 11, 1, '<p>В наведеному прикладі вирази <em>є правими операндами </em>операції присвоювання, а їх значення присвоюється змінним <strong><span style="color: rgb(192, 80, 77);">b</span></strong> і <strong><span style="color: rgb(192, 80, 77);">c</span></strong>.\n</p>\n<p><em>Простий вираз</em> містить лише деяку одну операцію (унарну чи бінарну), якщо таких операцій більше - маємо <em>складний вираз.</em>\n</p>'),
(249, 101, 12, 1, '<p><strong>Запитання: </strong>скільки операцій містить другий вираз у наведеному вище прикладі?</p>'),
(250, 101, 13, 5, '<p>1) оформіть наведений вище приклад як робочу програму (з виведенням на екран результату розрахунку складного виразу);</p><p>2) розбийте складний вираз на декілька простих;</p>3) запрограмуйте послідовно всі одержані прості вирази з виведенням кінцевого результату, порівняйте його з початковим результатом розрахунку складного виразу (змінна <strong><span style="color: rgb(192, 80, 77);">с</span></strong>).'),
(252, 81, 1, 1, '<p>chapter 1</p>'),
(254, 111, 1, 1, '\\[\\alpha \\zeta\\]\r\n'),
(256, 53, 3, 5, 'condition'),
(257, 115, 1, 1, '<p><span style="color: inherit;" class="MathJax_Preview"></span>\n</p>\n<div style="text-align: center;" class="MathJax_Display"><span style="" mathjax-element-1-frame"="" class="MathJax"><nobr><span style="width: 7.016em; display: inline-block;" role="math" id="MathJax-Span-1" class="math"><span style="background-color: rgb(128, 100, 162);"><span style="display: inline-block; position: relative; width: 6.25em; height: 0px; font-size: 112%;"><span style="position: absolute; clip: rect(1.823em, 1000em, 3.158em, -1000em); top: -2.79em; left: 0em;" rel="position: absolute; clip: rect(1.823em, 1000em, 3.158em, -1000em); top: -2.79em; left: 0em;"><span id="MathJax-Span-2" class="mrow"><span style="font-family: MathJax_Main;" id="MathJax-Span-3" class="mn">2</span><span style="font-family: MathJax_Main; padding-left: 0.222em;" id="MathJax-Span-4" class="mo">+</span><span style="font-family: MathJax_Main; padding-left: 0.222em;" id="MathJax-Span-5" class="mn">6</span><span style="font-family: MathJax_Main; padding-left: 0.222em;" id="MathJax-Span-6" class="mo">+</span><span style="padding-left: 0.222em;" id="MathJax-Span-7" class="texatom"><span id="MathJax-Span-8" class="mrow"><span id="MathJax-Span-9" class="mo"><span style="font-family: STIXGeneral,&quot;Arial Unicode MS&quot;,serif; font-size: 89%; font-style: normal; font-weight: normal;">а</span></span></span></span><span style="font-family: MathJax_Main; padding-left: 0.278em;" id="MathJax-Span-10" class="mo">=</span><span style="font-family: MathJax_Main; padding-left: 0.278em;" id="MathJax-Span-11" class="mn">12</span></span><span style="display: inline-block; width: 0px; height: 2.79em;"></span></span></span></span><span style="border-left: 0em solid; display: inline-block; overflow: hidden; width: 0px; height: 1.245em; vertical-align: -0.287em;"></span></span></nobr></span>\n</div>2+6+а=12\n<p><span style="color: inherit;" class="MathJax_Preview"><br></span>\n</p>2+6+а=12'),
(258, 115, 2, 1, '<p><span style="color: inherit;" class="MathJax_Preview"></span>\n</p>\n<div class="MathJax_Display MathJax_Processing"><span style="" ""="" "" class="MathJax"><nobr><span role="math" id="MathJax-Span-1" class="math"><span style="display: inline-block; position: relative; width: 0em; height: 0px; font-size: 112%;"><span style="position: absolute;"><span id="MathJax-Span-2" class="mrow"><span id="MathJax-Span-3" class="mstyle"><span id="MathJax-Span-4" class="mrow"><span style="font-size: 173%; font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-5" class="mi">f<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.06em;"></span></span><span style="font-size: 173%; font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-6" class="mi">k</span><span style="font-size: 173%; font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-7" class="mi">j</span><span style="font-size: 173%; font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-8" class="mi">f<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.06em;"></span></span><span style="font-size: 173%; font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-9" class="mi">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span style="font-size: 173%; font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-10" class="mi">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span style="font-size: 173%; font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-11" class="mi">h</span><span style="font-size: 173%; font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-12" class="mi">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span style="font-size: 173%; font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-13" class="mi">j</span><span style="font-size: 173%; font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-14" class="mi">f<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.06em;"></span></span><span style="font-size: 173%; font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-15" class="mi">h</span><span style="font-size: 173%; font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-16" class="mi">j</span><span style="font-size: 173%; font-family: MathJax_Math; font-style: italic;" id="MathJax-Span-17" class="mi">h</span></span></span></span></span></span></span></nobr></span>\n</div><span class="MathJax_Error">[Math Processing Error]</span>\\LARGE fkjfgghgjfhjh'),
(259, 115, 3, 1, '$\\LARGE 5+5=10$ '),
(278, 115, 4, 4, '<p>арспоо\n</p>'),
(279, 115, 5, 5, '<p>врпорпао\n</p>'),
(280, 115, 6, 1, 'прапор'),
(281, 115, 7, 1, '<p>рплолололол</p>'),
(282, 115, 8, 1, 'мт<p> иьтбтб</p>'),
(283, 115, 9, 1, '<p>тест</p><p>тест<br></p>'),
(284, 115, 10, 1, '/images/lecture/14a5df0eeabe83abff9b90c0af24813e.jpg"'),
(289, 80, 3, 2, '//www.youtube.com/embed/hVdq7P_MeY4"'),
(290, 80, 4, 5, '<p><strong>Частина 1. Тестове завдання.</strong></p><p>Що потрібно, щоб стати кваліфікованим програмістом</p><ol><li>Отримати освіту</li><li>Знати і розуміти основи математики.</li><li>Натхнення.</li><li>Працювати та отримувати фаховий досвід.</li><li>Постійно вдосконалюватись.</li></ol>'),
(293, 61, 1, 1, '$\\displaystyle \\prod$ '),
(294, 61, 2, 1, '\\[\\prod\\]\r\n'),
(295, 83, 2, 2, '//www.youtube.com/embed/fOW1aGjCumU"'),
(296, 84, 3, 2, '//www.youtube.com/embed/aRo5QkEQ7RE"'),
(298, 61, 3, 1, '\\[\\mathbb{P}\\prod \\bigcap\\]\r\n'),
(300, 85, 2, 2, '//www.youtube.com/embed/erknN5gvCjE"'),
(301, 86, 2, 2, '//www.youtube.com/embed/biMUfP8gL6E"'),
(302, 61, 4, 5, 'fnekwfn'),
(305, 117, 1, 1, '<p><strong>Що таке програмування?</strong></p>'),
(309, 117, 5, 1, '<p><strong>Що потрібно щоб стати програмістом?</strong></p>'),
(310, 117, 6, 1, '<p>У першу чергу, треба мати бажання, як і у будь-якій справі. Ще потрібно мати терпіння, адже програмування - кропітка робота. Для написання програми та досягнення певного результату може знадобитись багато часу, левова частка якого піде на тестування програми, пошук та виправлення помилок.</p>\n<p>Треба володіти математичними прийомами. Але програмування не потребує глибоких знань математики (окрім реалізації специфічних програм). Знання математики необхідно для логічного мислення, яке є основою розробки програмного забезпечення.</p>\n<p>Значний обсяг інформації щодо останніх технологій програмування викладено на англійською мовою. Бути в курсі останніх тенденцій необхідно для підтримки знань програміста у актуальному стані. Саме тому володіння англійською мовою життєво важливо для програміста, який бажає стати справжнім професіоналом своєї справи. Крім того, важливо знати, де і як знайти потрібну інформацію, адже пам’ятати все неможливо.</p>\n<p>Необхідно знати і розуміти принципи функціонування комп’ютера, адже це основний робочий інструмент програміста.</p>\n<p>І звичайно, потрібно знати мову програмування. А для того, щоб бути висококласним програмістом, потрібно знати не одну мову програмування, а певний набір (“стек” - від англійського слова stack - набір, пачка) технологій, які використовуються для вирішення завдань, що ставляться перед програмістами. В цей стек технологій входять мови програмування, технології, які застосовуються у програмуванні, технології по роботі з базами даних та інше. Наприклад, веб-програміст має знати та орієнтуватись у таких технологіях, як TML, CSS, JavaScript, PHP.</p>\n<p>На початку 70-х років вчений А. П. Єршов сказав: “Програміст має володіти здатністю першокласного математика до абстракції та логічного мислення у поєднанні з едісоновським талантом створювати все, що завгодно, з нуля та одиниці. Він має поєднувати акуратність бухгалтера з проникливістю розвідника, фантазію автора детективних романів з тверезою практичністю економіста.”<br></p>'),
(311, 117, 8, 1, '<p><strong>Що таке мова програмування.</strong></p>'),
(312, 117, 9, 1, '<p>Мова програмування (англ. Programming language) — це штучна мова, створена для передачі команд машинам, зокрема комп''ютерам. Мови програмування використовуються для створення<a href="https://uk.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%BF%E2%80%99%D1%8E%D1%82%D0%B5%D1%80%D0%BD%D0%B0_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B0"> програм</a>, котрі контролюють поведінку машин, та запису алгоритмів.\n</p>\n<p>Мову програмування визначає набір лексичних, синтаксичних і семантичних правил, що задають зовнішній вигляд програми і дії, які виконує комп''ютер під її управлінням.\n</p>\n<p>З часу створення перших програмованих машин було створено понад дві з половиною тисячі мов програмування. Щороку їх кількість поповнюється новими. Деякими мовами вміє користуватись тільки невелике число їх власних розробників, інші стають відомі мільйонам людей. Професійні програмісти зазвичай застосовують в своїй роботі декілька мов програмування.\n</p>\n<p>Мова програмування - це перш за все інструмент діяльності програміста. На мову програмування впливає характер задач, які вирішуються за допомогою цієї мови програмування. Неможна вивчати мову заради вивчення мови програмування. Неможливо вивчати мову програмування без поєднання з програмуванням.<br>\n</p>'),
(313, 117, 11, 1, '<p><strong>Якою має бути програма?</strong></p>'),
(314, 117, 12, 1, '<p style="text-align: justify;">При розробці програми програміст має намагатись створити програму яка буде відповідати наступним критеріям.</p>\n<p><strong><del></del>Ефективність</strong>: програма має виконувати покладені на неї задачі за оптимальну (тобто мінімально можливу) кількість часу, без використання надмірної кількості ресурсів комп’ютера.</p>\n<p style="text-align: justify;"><strong>Надійність</strong>: алгоритми програми мають бути розроблені таким чином, що результат роботи програми завжди був вірний.</p>\n<p style="text-align: justify;"><strong>Стійкість</strong>: при розробці програми мають бути враховані нестандартні ситуації, наприклад отримання помилкових даних (випадково чи у результаті дій зловмисників), недоступність необхідних ресурсів (наприклад пам''ять, локальна мережа).</p>\n<p style="text-align: justify;"><strong>Зручність</strong>: програма має бути максимально зручною та доступною для кінцевого користувача.</p>\n<p style="text-align: justify;"><strong>Переносимість</strong>: програма має працювати на різних комп’ютерах, операційних системах.</p>\n<p style="text-align: justify;"><strong>Масштабованість</strong>: програма має бути простою для подальшого супроводження та поліпшення.</p>'),
(315, 117, 15, 1, '<p><strong>Етапи програмування</strong></p>'),
(316, 117, 16, 1, '<p>Умовно процес програмування можна поділити на наступні етапи</p><p><strong>Постановка задачі, створення моделі програми.</strong></p><p style="margin-left: 20px;"> На цьому етапі програміст (команда програмістів) має описати задачу, визначитись з форматом вхідних та вихідних даних, створити певну логічну (математичну) модель програми.</p><p><strong>Планування та вибір методу рішення задачі.</strong></p><p style="margin-left: 20px;"> На цьому етапі обираються способи та підходи вирішення задачі, в залежності від розміру задачі та кількості розробників, виділяються окремі задачі, які виконуються окремими програмістами.</p><p><strong>Розробка алгоритму.</strong></p><p style="margin-left: 20px;"> Після визначення методів вирішення задач та виділення окремих підзадач, визначаються ефективні алгоритми функціонування різних частин програми. Відбувається узгодження взаємодії різних частин програми між собою та обираються оптимальні спосіб зберігання даних програми (як у оперативній пам’яті, так і у постійній).</p><p><strong>Кодування.</strong></p><p style="margin-left: 20px;"> Коли проведена попередня робота з розробки загальної схеми (архітектури) програми, визначені основні алгоритми за якими буде працювати програма, обрані найбільш доречні структури даних та способи зберігання інформації відбувається безпосередньо написання коду програми.</p><p><strong>Тестування.</strong></p><p style="margin-left: 20px;"> Після написання програми вона перевіряється з метою контролю якості програми: стійкості, надійності, зручності та інше.</p><p><strong>Аналіз результатів роботи програми, складання технічної документації.</strong></p><p style="margin-left: 20px;"> З початку процесу розробки програми складається технічна документація, на кожному етапі вона доповнюється, уточнюється. У результаті розробки програми має бути готова повноцінна технічна документація яка б дозволила у подальшому забезпечити розширення функціоналу програми (масштабованість).</p><p><strong>Подальше супроводження.</strong></p><p style="margin-left: 20px;"> Цей етап полягає у підтримці функціонуванні програми, виправлені помилок, які виявляються у процесі експлуатації програми та вдосконалення функціоналу (за необхідності)\r\n</p><p>Звичайно, в залежності від призначення програми, її масштабу та мети її роботи загальна схема розробки може бути значно простішою.\r\n</p>'),
(318, 118, 1, 1, '<p><strong>Функціонування комп’ютера.</strong></p>'),
(319, 118, 2, 1, '<p>Головне завдання комп’ютера - це обчислення. Інші операції і скільки-небудь значимі з точки зору потреб людини дії, виконувані на ньому - похідні. Структура обчислень, про яких йде мова, багаторівнева.</p><p>На самому низькому рівні мікросхеми комп’ютери "обробляють" біти - двійкові сигнали, що складаються з нулів і одиниць. Ніяких інших цифр на цьому рівні немає, і на ньому комп''ютер, швидше, не обчислює щось, а правильно розставляє послідовність нулів і одиниць. Для чого? Справа в тому, що 8 бітів утворять байт. Який, у свою чергу, стає основою наступного рівня обчислень. Нескладно підрахувати, що можлива кількість комбінацій бітів в одному байті - 256 тобто 2 в 8-й ступеня. Чому 2? Бо цифр в біті, як ми вже сказали вище, тільки дві - 0 і 1. На практиці об''єднання бітів в байти дозволяє "закодувати" в останніх якусь інформацію. Наприклад, букву, цифру або, скажімо, знак пунктуації. Як працює комп''ютер на цьому рівні? Він перетворює байти в практично значущі для людини об''єкти на екрані - текст, пікселі, складові зображення, звуки і т. д. </p><p>Наступний рівень - це обчислення, пов''язані з операціями з тією інформацією, що складена з байтів. Тобто якщо це текст, то це може бути його редагування, форматування, друк. Якщо музика або відео - відтворення, запис і т. п. Такі основні принципи того, як працює комп''ютер. Разом з тим, кожен з рівнів, зазначених вище, не існує окремо від іншого. </p>'),
(320, 118, 5, 1, '<p><strong>Історія створення комп’ютера. Нульове покоління обчислювальних машин.</strong></p>'),
(322, 118, 7, 1, '<p><img src="https://lh6.googleusercontent.com/_5jxHCSmJ0tPdAPpRAwNYtywd77qwkYzp7CR0qH7fv9O2YLJyiOMSf4Bn5yHHOcPkNIjZZqmKBaeTwDqXQkqygngpQATvyVXw7HgfmjvQtfMOICLYd-I2IaWQfEmD9gOA-KEICs"></p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(323, 118, 6, 1, '<p>Передумови до появи комп’ютера формувались, напевно з давніх часів. Зазвичай огляд історіх створення комп’юторів починають з обчислювальної машини Блеза Паскаля, яку він сконстроював у 1642 році. Ця машина могла виконувати лише операції додавання та віднімання. У 70 роках тогож століття Готфрід Вільгельм Лейбніц побудував машину, яка могла виконувати не тільки операції додавання та віднімання, а й множення та діленя.</p><p>У ХІХ столітті велики внесок у майбутнє обчислювальної техніки зробив Чарльз Беббідж. Його машина вміла тільки додавати та віднімати. Проте результат підрахунків видавлювався на мідній пластині - аналог сучасних засобів виводу інформації. За задумом машина була здатна ще робити операції множення та діленя, а також виконувати певні алгоритми, які були попередньо записані на перфокарті. Програми для цієї машини писала Ада Ловлейс (перший відомий програміст). Проте через технічні та фінансові складнощі задум так і не був реалізований.</p><p>У ХХ столітті автоматичні обчислювальні машини конструювали Конрад Зус, Джорж Стібіс, Джон Атанасов. Машина останнього включала прототип ОЗУ, та використовувала двійкову арифметику. Релейні комп’ютери Говарда Айкена “Марк І” та “Марк ІІ” були схожі за архітектурою аналітичної машини Беббіджа.</p>'),
(324, 118, 10, 1, '<p><strong>Історія створення комп’ютера. Перше покоління обчислювальних машин</strong></p>'),
(325, 118, 12, 1, '<p><img src="https://lh4.googleusercontent.com/VEldPfHmcvDRRWEtAxt1K_1gNICUYP-cvcTjc2nlFYswMdLBzt5fLnvLmBRdg5vewG3FoTtTEiUV9rYROYvwOB_T0i0SYeIGU3ylWbTUzHR2_1EJMkR3DbG_VWAOLaC2GqBqIzY">\n</p>'),
(326, 118, 11, 1, '<p>Комп''ютери на основі електронних ламп з''явилися в 40-х роках XX століття. Перша електронна лампа - вакуумний діод - була побудована Флемінгом лише в 1904 році, хоча ефект проходження електричного струму через вакуум був відкритий Едісоном у 1883 році.\n</p>\n<p>Незабаром Лі де Форрест винаходить вакуумний тріод - лампу з трьома електродами, потім з''являється газо електронна лампа. До 30-х років електронні вакуумні й газонаповнені лампи використовувалися головним чином в радіотехніці. Але в 1931 році англієць Вінні-Вільямс побудував (для потреб експериментальної фізики) лічильник електричних імпульсів, відкривши тим самим нову область застосування електронних ламп. Електронний лічильник складається з ряду тригерів. Тригер, винайдений М. А. Бонч-Бруєвич (1918) і - незалежно - американцями У. Ікклзом і Ф. Джорданом (1919), містить 2 лампи і в кожний момент може перебувати в одному з двох стійких станів; він представляє собою електронне реле . Подібно електромеханічного, воно може бути використано для зберігання однієї двійкової цифри.\n</p>\n<p>Використання електронної лампи в якості основного елемента ЕОМ створювало безліч проблем. Через те, що висота скляній лампи - 7 см, машини були величезних розмірів. Кожні 7-8 хв. одна з ламп виходила з ладу, а так як в комп''ютері їх було 15 - 20 тисяч, то для пошуку і заміни пошкодженої лампи було потрібно дуже багато часу. Крім того, вони виділяли величезну кількість тепла, і для експлуатації "сучасного" комп''ютера того часу були потрібні спеціальні системи охолодження.\n</p>\n<p>Щоб розібратися в заплутаних схемах величезного комп''ютера, потрібні були цілі бригади інженерів. Пристроїв введення в цих комп''ютерах не був, тому дані вносилися в пам''ять за допомоги з''єднання потрібного штеккер з потрібним гніздом.\n</p>\n<p>Прикладами машин I-го покоління можуть служити Mark 1, ENIAC, EDSAC (Electronic Delay Storage Automatic Calculator), - перша машина з збереженої програмою. UNIVAC (Universal Automatic Computer). Перший примірник Юнівака був переданий в Бюро перепису населення США. Пізніше було створено багато різних моделей Юнівака, які знайшли застосування в різних сферах діяльності. Таким чином, Юнівак став першим серійним комп''ютером. Крім того, це був перший комп''ютер, де замість перфокарт використовувалася магнітна стрічка.<br>\n</p>'),
(327, 118, 15, 1, '<p><strong>Історія створення комп’ютера. Друге покоління обчислювальних машин.</strong></p>'),
(328, 118, 17, 1, '<p><img src="https://lh4.googleusercontent.com/fq0lLoK3RWGhrceqGRzO7rG-MrSj7PhK1p2Kk152-ryPm7QvbmUGpjTL78kESWmRhp65wpBzWDHAcs31EJhnmqmK_eECuLjRaVCDHDQTUb9cxtIgcqbu9_7s3ANalXz71DGvgH8"></p>'),
(329, 118, 16, 1, '<p>1 липня 1948 на одній зі сторінок "Нью-Йорк Таймс", присвяченій радіо і телебаченню, було вміщено скромне повідомлення про те, що фірма "Белл телефон Лабораторіз" розробила електронний прилад, здатний замінити електронну лампу. Фізик-теоретик Джон Бардін і ведучий експериментатор фірми Уолтер Брайттен створили перший діючий транзистор. Це був точково-контактний прилад, в якому три металевих "вусики" контактували з бруском з напівпровідника - полікристалічного германію.</p><p>Перші комп''ютери на основі транзисторів з''явилися у кінці 50-х років, а до середини 60-х років були створені більш компактні зовнішні пристрої, що дозволило фірмі Digital Equipment випустити в 1965 р. перший міні-комп''ютер PDP-8 розміром з холодильник і вартістю всього 20 тис. доларів.</p><p>Створенню транзистора передувала наполеглива, майже 10-річна робота, яку ще в 1938 році почав фізик теоретик Вільям Шоклі. Застосування транзисторів в якості основного елемента в ЕОМ призвело до зменшення розмірів комп''ютерів у сотні разів і до підвищення їх надійності.</p><p>І все-таки самою дивовижною здатністю транзистора є те, що він один здатний трудитися за 40 електронних ламп і при цьому працювати з більшою швидкістю, виділяти дуже мало тепла і майже не споживати електроенергію. Одночасно з процесом заміни електронних ламп транзисторами вдосконалювалися методи зберігання інформації. Збільшився обсяг пам''яті, а магнітну стрічку, вперше застосовану в ЕОМ Юнівак, почали використовувати як для введення, так і для виводу інформації. А в середині 60-х років набуло поширення зберігання інформації на дисках. Великі досягнення в архітектурі комп''ютерів дозволило досягти швидкодії в мільйон операцій за секунду!</p><p>Прикладами транзисторних комп''ютерів можуть послужити "Стретч" (Англія), "Атлас" (США). У той час СРСР йшов у ногу з часом і випускав ЕОМ світового рівня (наприклад "БЕСМ-6").</p>'),
(330, 118, 20, 1, '<p><strong> Історія створення комп’ютера. Третє покоління обчислювальних машин.</strong></p>'),
(331, 118, 22, 1, '<p><img src="https://lh3.googleusercontent.com/WEKDNYBXLvwWyCuOHCDcMke3OABRjFFoKNCGwD3mxoUycr5_D7Eri-azhHPwuguHv9M_HxSAzK74yGa2NhbfuCWXtaKCBCS1jc5b6wuXtUip1QWY3rITPpjSWzPtF6D1QX8SOgk"></p>'),
(332, 118, 21, 1, '<p>Подібно до того, як поява транзисторів призвело до створення другого покоління комп''ютерів, поява інтегральних схем ознаменувало собою новий етап у розвитку обчислювальної техніки - народження машин третього покоління. Інтегральна схема, яку також називають кристалом, являє собою мініатюрну електронну схему, витравлених на поверхні кремнієвого кристала площею близько 10 мм2. Детальніше про інтегральних схемах тут.</p><p>Перші інтегральні схеми з''явилися в 1964 році. Спочатку вони використовувалися тільки в космічній і військовій техніці. Зараз же їх можна виявити де завгодно, включаючи автомобілі і побутові прилади. Що ж стосується комп''ютерів, то без інтегральних схем вони просто немислимі!</p><p>Поява інтегральних схем означало справжню революцію в обчислювальній техніці. Адже вона одна здатна замінити тисячі транзисторів, кожний з яких у свою чергу вже замінив 40 електронних ламп. Іншими словами, один крихітний кристал має такі ж обчислювальними можливостями, як і 30-тонний ЕНІАК. Швидкодія ЕОМ третього покоління зросло в 100 разів, а габарити значно зменшилися.</p><p>До всіх достоїнств ЕОМ третього покоління додалося ще й те, що їх виробництво виявилося дешевше, ніж виробництво машин другого покоління. Завдяки цьому, багато організацій змогли придбати і освоїти такі машини. А це, у свою чергу, призвело до зростання попиту на універсальні ЕОМ, призначені для вирішення різних завдань. Більшість створених до цього ЕОМ були спеціалізованими машинами, на яких можна було вирішувати завдання якогось одного типу.<br></p>'),
(333, 118, 25, 1, '<p><strong>Історія створення комп’ютера. Четверте покоління обчислювальних машин.</strong></p>'),
(334, 118, 27, 1, '<p><img src="https://lh5.googleusercontent.com/Kpa-gX19LFS0-4CxCFloXP1gSjeawlwKVspjYnH-eaS-yF226VLzwPIpJ9A3o0ZYGrBLLQH_ePjWkZmqokthl3xgk08O_mBnpjyfLbSsHqkwKZD3tMciE2h_rudAgLHPE-NYl1Y"></p>'),
(335, 118, 26, 1, '<p>Ви вже знаєте, що електромеханічні деталі рахункових машин поступилися місцем електронним лампам, які в свою чергу поступилися місцем транзисторам, а останні - інтегральних схем. Могло створиться враження, що технічні можливості ЕОМ вичерпані. Справді, що ж можна ще придумати?\n</p>\n<p>Щоб отримати відповідь на це питання, давайте повернемося до початку 70-х років. Саме в цей час була зроблена спроба з''ясувати, чи можна на одному кристалі розмістити більше однієї інтегральної схеми. Виявилося, можна! Розвиток мікроелектроніки призвело до створення можливості розміщувати на одному-єдиному кристалі тисячі інтегральних схем. Так, вже в 1980 році, центральний процесор невеликого комп''ютера виявився можливим розмістити на кристалі, площею всього в чверть квадратного дюйма (1,61 см2). Почалася епоха мікрокомп''ютерів.\n</p>\n<p>Яке ж швидкодію сучасної мікро-ЕОМ? Воно в 10 разів перевищує швидкодію ЕОМ третього покоління на інтегральних схемах, в 1 000 разів - швидкодію ЕОМ другого покоління на транзисторах та в 100 000 разів - швидкодія ЕОМ першого покоління на електронних лампах.\n</p>\n<p>Далі, майже 40 років тому комп''ютери типу Юнівак коштували близько 2,5 млн. доларів. Сьогодні ж ЕОМ зі значно більшою швидкодією, більш широкими можливостями, більш високою надійністю, істотно меншими габаритами і простіша в експлуатації коштує приблизно 1 000 доларів. Кожні 2 роки вартість ЕОМ знижується приблизно в 2 рази.\n</p>\n<p>Дуже велику роль у розвитку комп''ютерів зіграли дві нині гігантські фірми: Microsoft і Intel . Перша з них дуже сильно вплинула на розвиток програмного забезпечення для комп''ютерів, друга ж стала відома завдяки випускається їй кращим мікропроцесорах.<br>\n</p>'),
(336, 118, 30, 1, '<p><strong>Будова сучасного комп’ютера.</strong></p>'),
(337, 118, 32, 1, '<p><img src="https://lh4.googleusercontent.com/LV24Br4f9HdsfhTbJsE847xuNEhAp79UWcagWpgeX8_LTwb_yV50ZQ_S3aI0alD_QX1pCJCvSL7dqkjNXM9L010gec-fjWZCz5xxuA2O8LLwnA8rpbtBwi4XGGTDyv6efD-Rd9A"></p><p><img src="https://lh4.googleusercontent.com/VzfnnJ-ruOpXsoGAUA0K1nqv0KXAvi7RRoNZDJHOipwKo10LPuUy69Qj5ExB--41z2AKgT1X1IejkXI1l4l4CJaGcq33lgtkqTFB2HhmXbW5n9MACNKblOQmq1XeLitzpXR7L9I"></p>'),
(338, 118, 31, 1, '<p>Сучасний комп’ютер складається з наступних частин.</p><p>1. Материнська плата - це велика друкована плата, до якої під’єднуються всі інші компоненти комп’ютера. Вона поєднує між собою різні компоненти комп’ютера та узгоджує їх роботу. </p><p>2. Процесор (чи вірніше - мікропроцесор) - головна мікросхема комп''ютера, його "мозок". Це мікросхема, призначена для безпосереднього виконання дій з інформацією: арифметичних обчислень та логічної обробки.</p><p>3. Оперативна пам’ять - це пам’ять швидкого доступу, у яку завантажуються програми, які запущені зараз для швидкого доступу до даних цих програм. Вона є енергозалежною - тобто при виключені комп’ютера вона очищається.</p><p>4. Відеокарта - це пристрій який відповідає за виведення зображення на екран. Існують як зовнішні (дискретні) відеокарти так і внутрішні (інтегровані у материнську плату). </p><p>5. Жорсткий диск - це постійна пам’ять комп’ютера, на якій зберігаються користувацькі дані, не запущені у поточний момент програми. При виключенні комп’ютера всі дані на жорсткому диску залишаються.</p><p>Ці компоненти є обов’язковими та без них сучасні комп’ютери функціонувати не можуть.</p><p>Окрім того є інші компоненти які можна підключати до комп’ютера (або можуть бути реалізовані в складі материнської плати).</p><p>1. Мережева карта. За її допомогою комп’ютер можна під’єднати до мережі (як локальної так і мережі Інтернет).</p><p>2. Аудіокарта. Відповідає за виведення звуку на колонки/навушники або інший відповідний пристрій.</p><p>3. Монітор. Відображає поточку інформацію, яку отримує від відеокарти.</p><p>4. Клавіатура та миша. Звичні для нас пристрої введення інформації у комп’ютер. </p><p>5. Принтер. Пристрій якій здатен роздрукувати інформацію.</p><p>6. Сканер. За допомогою нього є можливість відсканувати зображення та зберегти його у електроному вигляді.</p><p>\r\n\r\n7. Інші пристрої. Існує величезна кількість пристроїв, які можна підєднати до комп’ютера. Для їх функціонування потрібне спеціальне програмне забезпечення - драйвера, які надають користувачу можливість працювати з пристроєм.<br></p>'),
(340, 117, 2, 2, '//www.youtube.com/embed/V3x2cHHEaKY'),
(341, 117, 4, 2, '//www.youtube.com/embed/yUtpOcX74ow'),
(343, 134, 1, 1, '\\[\\AA\\]\r'),
(344, 134, 2, 1, '$\\sum \\bigcap \\sum \\sum$'),
(345, 134, 3, 1, '\\[\\inline \\left ( \\prod \\right )\\]\r\n'),
(347, 134, 4, 1, '\\[\\huge 5+5=10\\] '),
(350, 134, 5, 12, 'Скільки ніг у корови?'),
(351, 134, 6, 5, '<p>вапвапвап</p>'),
(353, 73, 5, 12, 'fhkjgkgjkgjkgjk'),
(359, 137, 1, 1, '\\[\\prod \\beta \\varpi\\]\r\n'),
(361, 139, 1, 1, '\\[!@#$%%^&&*(()__+++__**&^%$#%#@#!))\\]\r\n'),
(363, 137, 2, 1, '\\[\\sum \\beta \\vartheta \\varpi\\]\r\n'),
(364, 139, 2, 1, '<p><span class="MathJax_Preview" style="color: inherit;"></span>\n</p>\n<div class="MathJax_Display"><span class="MathJax" id="MathJax-Element-4-Frame" style="" ""="" ""><span class="math" id="MathJax-Span-30" style="" ""="" ""><span class="noError" id="MathJax-Span-31" style="display: inline-block;">!@#@#$%^&amp;*()_+_)(*&amp;^%$#$@@!!))</span></span></span>\n</div>!@#@#$%^&amp;amp;*()_+_)(*&amp;amp;^%$#$@@!!))'),
(365, 139, 3, 1, '\\[!@#$#$%^&^*^*&(*&)(*_*_(_++(*)&(^*%$#$!#!#)))))\\]\r\n'),
(366, 139, 4, 1, '\\[!@#@#$%^&*()_+_)(*&^%$#$@@!!))\\]\r\n'),
(368, 100, 12, 1, '<p><strong>Частина 4. Правила запису програми на мові С</strong></p>'),
(369, 100, 16, 1, '<p><strong>Частина 5. Ідентифікатори мови С</strong></p>'),
(370, 100, 18, 1, '<p><strong>Частина 6. Оператор присвоювання</strong></p>'),
(371, 100, 27, 1, '<p><strong>Частина 7. Оператори умов</strong></p>'),
(372, 100, 41, 1, '<p>2. <u>Реалізація оператора </u><strong><span style="color: rgb(192, 80, 77);">switch</span></strong><u>.</u>\n</p>\n<p>Використовується в ситуаціях, коли:\n</p>\n<ul>\n	<li>необхідно зробити вибір з 2-х і більше варіантів;</li>\n	<li>критерій вибору - певне значення деякої цілої (тип <strong><span style="color: rgb(192, 80, 77);">int</span></strong>) чи символьної змінної (тип <strong><span style="color: rgb(192, 80, 77);">char</span></strong>).</li>\n</ul>'),
(373, 100, 42, 4, '<p><span style="color: rgb(79, 129, 189);"><strong>#include &lt;stdio.h&gt;</strong></span></p><p><strong><span style="color: rgb(79, 129, 189);">main()</span></strong><br></p><p><strong><span style="color: rgb(79, 129, 189);">{</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">char c; </span></strong><strong><span style="color: rgb(155, 187, 89);">// символьна змінна - критерій вибору</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(155, 187, 89);"><br></span></strong></p>\r\n<p style="margin-left: 20px;"><span style="color: rgb(79, 129, 189);"><strong>printf("\\nВведіть першу літеру:");</strong> </span><strong><span style="color: rgb(155, 187, 89);">// підказка</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">scanf("%c", &amp;c);</span> </strong><strong><span style="color: rgb(155, 187, 89);">// ввод літери з клавіатури</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">switch ( c )</span> </strong><strong><span style="color: rgb(155, 187, 89);">// заголовок оператора вибору</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">{</span> </strong> <strong><span style="color: rgb(155, 187, 89);">// тіло оператора вибору</span></strong></p><p style="margin-left: 40px;"><strong><span style="color: rgb(79, 129, 189);">case ''а'': printf("\\nАвстралія"); break;</span> </strong><strong><span style="color: rgb(155, 187, 89);">// при введенні літери “а”</span></strong></p><p style="margin-left: 40px;"><strong><span style="color: rgb(79, 129, 189);">case ''б'': printf("\\nБолгарія"); break;</span> </strong><strong><span style="color: rgb(155, 187, 89);">// при введенні літери “б”</span></strong></p><p style="margin-left: 40px;"><strong><span style="color: rgb(79, 129, 189);">case ''в'': printf("\\nВенесуела"); break; </span></strong><strong><span style="color: rgb(155, 187, 89);">// при введенні літери “в”</span></strong></p><p style="margin-left: 40px;"><strong><span style="color: rgb(79, 129, 189);">default: printf("\\nВаріанти відсутні");</span> </strong><strong><span style="color: rgb(155, 187, 89);">// в інших випадках</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">}</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">getchar();</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">}</span></strong></p>'),
(374, 100, 43, 1, '<p><strong><u>Важливо</u>:</strong> 1. Оператор <strong><span style="color: rgb(192, 80, 77);">break</span></strong> зазвичай <em>є обов’язковим</em> для виходу зі <strong><span style="color: rgb(192, 80, 77);">switch</span></strong> ; в разі його відсутності - при введенні, наприклад, літери ‘<strong><span style="color: rgb(192, 80, 77);">б</span></strong>’ на екран буде виведено:</p><p><strong><span style="color: rgb(192, 80, 77);">Болгарія</span></strong></p><p><strong><span style="color: rgb(192, 80, 77);">Венесуела</span></strong></p><p><strong><span style="color: rgb(192, 80, 77);">Варіанти відсутні</span></strong></p><p>Тобто, при знаходженні необхідного варіанту - <em>всі наступні варіанти з переліку реалізуються автоматично!</em></p><p>2. Мітка <strong><span style="color: rgb(192, 80, 77);">default</span></strong> спрацьовує, якщо значення критерію вибору не співпадає з жодним з варіантів.</p><p>3. При необхідності одному оператору можна ставити у відповідність <em>два варіанти вибору</em> (мітки).</p>'),
(376, 100, 44, 4, '<p><span style="color: rgb(79, 129, 189);"><strong>...</strong></span></p><p><strong><span style="color: rgb(79, 129, 189);">case ''а'':</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">case ''А'':</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">printf("\\nАвстралія"); break;</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">case ''б'':</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">case ''Б'':</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">printf("\\nБолгарія"); break;</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">...</span></strong></p><p><strong><br></strong></p>'),
(377, 100, 45, 5, '<p>Доповніть останній фрагмент коду іншими варіантами вибору (з попереднього прикладу), а також необхідними атрибутами програми; перевірте на коректність роботи.</p>'),
(378, 101, 14, 1, '<p>Для повного розуміння суті основних термінів мови програмування слід визначитись з поняттям <em>оператора</em>.</p><p><strong><em>Оператор - </em>це найменша виконувана одиниця програмного коду, яка є <em>вказівкою компілятору</em> на виконання певної дії (операції) або сукупності дій (операцій).</strong></p><p><em>Простий оператор</em> записується в один рядок і закінчується <em>крапкою з комою</em> “<strong><span style="color: rgb(192, 80, 77);">;</span></strong>”.</p><p><em>Складний оператор</em> включає в себе декілька логічно пов’язаних операторів, включених в <em>операторні дужки</em> “<strong><span style="color: rgb(192, 80, 77);">{ }</span></strong>” (крапка з комою після них не ставиться).</p><br><strong>Резюме:</strong> <em>оператор - </em>засіб представлення в програмі операцій та виразів у вигляді, “зрозумілому” для компілятора, і з метою їх виконання.'),
(379, 101, 15, 1, '<p><strong>Частина 4. Пріоритети операцій</strong></p>'),
(380, 101, 16, 1, '<p>За аналогією операцій в алгебрі, кожна операція в мові С характеризується певним <em>пріоритетом</em> стосовно прешочерговості виконання. Розуміння пріоритетів операцій сприяє коректному написанню коду програми з точки зору отримання бажаного результату її роботи.</p><p>Операції, освоєні нами на даний момент, можна згрупувати наступним чином (від найбільшого до найменшого ступеня їх пріоритету):</p><p><strong><em>1 рівень:</em> Унарні операції:</strong></p><p style="margin-left: 20px;"> “!” - логічне заперечення (“НЕ”)</p><p style="margin-left: 20px;"> “++” - інкремент (збільшення на 1)</p><p style="margin-left: 20px;"> “--” - декремент (зменшення на 1)</p><p><strong><em>2 рівень:</em> Арифметичні мультиплікативні:</strong></p><p style="margin-left: 20px;"> “*” - множення</p><p style="margin-left: 20px;"> “/” - ділення</p><p style="margin-left: 20px;"> “%” - остача від цілочисельного ділення</p><p><strong><em>3 рівень:</em> Арифметичні адитивні:</strong></p><p style="margin-left: 20px;"> “+” - додавання</p><p style="margin-left: 20px;"> “-” - віднімання</p><p><strong><em>4 рівень:</em> Відношення нерівності:</strong></p><p style="margin-left: 20px;"> “&gt;” - більше</p><p style="margin-left: 20px;"> “&lt;” - менше</p><p style="margin-left: 20px;"> “&gt;=” - більше або дорівнює</p><p style="margin-left: 20px;"> “&lt;=” - менше або дорівнює</p><p><strong><em>5 рівень:</em> Відношення рівності:</strong></p><p style="margin-left: 20px;"> “==” - дорівнює</p><p style="margin-left: 20px;"> “!=” - не дорівнює</p><p><strong><em>6 рівень:</em> “&amp;&amp;” - логічне “І”</strong></p><p><strong><em>7 рівень:</em> “||” - логічне “АБО”</strong></p><p><strong><em>8 рівень:</em> Операції присвоювання:</strong></p><p style="margin-left: 20px;"> “=” - присвоїти</p><p style="margin-left: 20px;"> “+=” - присвоїти з додаванням</p><p style="margin-left: 20px;"> “-=” - присвоїти з відніманням</p><p style="margin-left: 20px;"> “*=” - присвоїти з множенням</p><p style="margin-left: 20px;"> “/=” - присвоїти з діленням</p><p><u>Примітка:</u> операції <em>одного рівня</em> мають <em>однаковий пріоритет.</em></p>\r\n<p><strong>Важливо:</strong> 1) змінити пріоритет операції можна із застосуванням <em>круглих дужок</em> “<strong><span style="color: rgb(192, 80, 77);">( )</span></strong>”</p><p>2) в складних виразах (особливо - відношеннях) рекомендується використовувати круглі дужки “<strong><span style="color: rgb(192, 80, 77);">( )</span></strong>” <em>навіть там, де це не є обов’язковим</em>, з наступних причин:</p><ul><li>дужки <em>не спотворюють</em> вирази;</li><li>дужки <em>гарантують</em> правильний порядок обчислення виразу;</li><li>дужки <em>підвищують зрозумілість виразу</em> для інших.</li></ul>'),
(381, 101, 17, 1, '<p><strong>Частина 5. Оператори введення-виведення</strong></p>'),
(382, 101, 18, 1, '<p>Структуру <em>тіла</em> будь-якої програми можна представити наступним чином:</p><p><strong>…</strong></p><p><strong><span style="color: rgb(79, 129, 189);">main()</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">{</span></strong></p><p style="margin-left: 20px;"> <strong><span style="color: rgb(79, 129, 189);">оголошення_змінних;</span></strong></p>\r\n<p style="margin-left: 20px;"> <strong><span style="color: rgb(79, 129, 189);">введення_початкових_даних;</span></strong></p>\r\n<p style="margin-left: 20px;"> <strong><span style="color: rgb(79, 129, 189);">обробка_даних;</span></strong></p>\r\n<p style="margin-left: 20px;"> <strong><span style="color: rgb(79, 129, 189);">виведення_результатів;</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">}</span></strong></p>\r\n<p>Стандартна функція мови С, яка використовується для <em>введення </em>початкових даних з клавіатури, має вигляд:</p><p><strong><span style="color: rgb(192, 80, 77);">scanf(“формат”, список_змінних);</span></strong></p><p><strong><span style="color: rgb(192, 80, 77);">“формат”</span></strong> - рядок, який включає характеристики <em>кожної змінної</em> (специфікатори формату) зі <strong><span style="color: rgb(192, 80, 77);">списку_змінних</span></strong> стосовно їх вигляду на екрані при вводі (згідно їх типу);</p><p><strong><span style="color: rgb(192, 80, 77);">список_змінних</span></strong> - перелік (через кому) <em>посилань</em> (адрес) змінних, до яких будуть записуватись введені значення (наприклад, <strong><span style="color: rgb(192, 80, 77);">&amp;a, &amp;b</span>,...</strong>).</p><p><em>Під час роботи програми</em> введення даних за допомогою функції <strong><span style="color: rgb(192, 80, 77);">scanf()</span></strong> можна здійснювати двома способами:</p><ol><li>прописати всі значення <em>в одному рядку через пробіли</em>, в кінці - натиснути Enter;</li><li>натискати Enter окремо після кожного значення.</li></ol>\r\n<p><em>Виведення</em> результатів (або просто потрібного тексту - наприклад, підказки) здійснюється функцією:</p><p><strong><span style="color: rgb(192, 80, 77);">printf(“формат”, список_змінних);</span></strong></p><p>Параметри цієї функції дещо відрізняються від аналогічних в <strong><span style="color: rgb(192, 80, 77);">scanf()</span></strong>:</p><ul><li>в рядку <strong><span style="color: rgb(192, 80, 77);">“формат”</span></strong> допускається також прописувати будь-який текст, який потрібно вивести на екран;</li><li>змінні у <strong><span style="color: rgb(192, 80, 77);">списку_змінних</span></strong> <em>прописуються в явному вигляді</em> (<u>без посилань</u> <strong><span style="color: rgb(192, 80, 77);">&amp;</span></strong>);</li><li><strong><span style="color: rgb(192, 80, 77);">список_змінних</span></strong> може бути <em>взагалі відсутній</em>.</li></ul><br>Розберемо синтаксис даних функцій на конкретному прикладі:'),
(383, 101, 19, 4, '<p><span style="color: rgb(79, 129, 189);"><strong>#include &lt;stdio.h&gt;</strong></span></p><p><strong><span style="color: rgb(79, 129, 189);">main()</span></strong><br></p><p><strong><span style="color: rgb(79, 129, 189);">{</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">int a, b, c; </span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">printf ( "Введіть два цілих числа \\n" ); </span></strong><strong><span style="color: rgb(155, 187, 89);">// підказка</span></strong></p><p style="margin-left: 20px;"><strong></strong><strong><span style="color: rgb(79, 129, 189);">scanf ( "%d%d", &amp;a, &amp;b );</span> </strong> <strong><span style="color: rgb(155, 187, 89);">// введення даних</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">c = a + b;</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">printf ( "Результат: %d + %d = %d \\n", a, b, c ); </span><span style="color: rgb(155, 187, 89);">/</span></strong><strong><span style="color: rgb(155, 187, 89);">/ виведення результату</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">getchar();</span></strong></p><p><strong><span style="color: rgb(79, 129, 189);">}</span></strong></p>'),
(384, 101, 20, 1, '<p>Перша функція <strong><span style="color: rgb(192, 80, 77);">printf()</span></strong>, яка зустрічається в цій програмі, виводить на екран лише текст, вказаний в подвійних лапках (символ “ <strong><span style="color: rgb(192, 80, 77);">\\n</span></strong>” - т.з. <em>керуючий символ</em>, який після виведення тексту <em>переводить курсор на новий рядок</em>, <u>на екран не виводиться</u>).</p><p>У функції <strong><span style="color: rgb(192, 80, 77);">scanf()</span></strong> вказані т.з. <em>спеціфікатори формату</em> - символи, що відповідають типу вводимих змінних. В даному випадку <strong><span style="color: rgb(192, 80, 77);">%d%d</span></strong> - два специфікатори цілих чисел.</p><p><strong><span style="color: rgb(192, 80, 77);">&amp;a, &amp;b</span></strong> - перелік посилань(адрес) змінних, в які вводяться дані.</p><p><strong>Важливо:</strong> 1) дані вводяться в змінні <u>в тому порядку, в якому вони прописані у функції</u>;</p><p>2) кількість специфікаторів формату <u>повинна відповідати кількості вводимих змінних</u> (навіть, якщо всі вони - одного типу). Наприклад, при записі <strong><span style="color: rgb(192, 80, 77);">scanf ( "%d", &amp;a, &amp;b );</span></strong> <u>компілятор видасть помилку</u>.</p>\r\n<p><u>Примітка</u>: основними специфікаторами формату є наступні: <strong><span style="color: rgb(192, 80, 77);">%d</span></strong> - цілі числа, <strong><span style="color: rgb(192, 80, 77);">%f</span></strong> - дійсні числа, <strong><span style="color: rgb(192, 80, 77);">%с</span></strong> - поодинокі символи.</p>Формат функції <strong><span style="color: rgb(192, 80, 77);">printf()</span></strong> для вивдедення результату програми має особливості: окрім тексту в явному вигляді, параметр <strong>“<span style="color: rgb(192, 80, 77);">формат</span>”</strong> включає також <em>специфікатори формату</em>, які прописуються <u>в тих місцях, в яких повинні стояти значення змінних</u> з переліку <strong><span style="color: rgb(192, 80, 77);">списку_змінних</span></strong>. Відповідно, якщо в нашу програму було введено, скажімо значення <strong><span style="color: rgb(192, 80, 77);">a=2</span></strong> і <strong><span style="color: rgb(192, 80, 77);">b=-3</span></strong>, то результат буде виведено на екран у наступному вигляді: <strong><span style="color: rgb(192, 80, 77);">Результат: 2 + -3 = -1</span></strong>'),
(385, 101, 21, 5, '<p><br>\n</p>\n<p>Oрганізуйте введення чисел у показаній вище програмі за допомогою циклу:\n</p>\n<p>1) кожне число має вводитись на окремій ітерації циклу;\n</p>\n<p>2) використайте оператор <strong><span style="color: rgb(192, 80, 77);">switch()</span></strong> для вибору змінної, що вводиться на певній ітерації.\n</p>'),
(386, 136, 1, 12, 'Алгоритм — это:'),
(387, 136, 2, 12, 'Свойствами алгоритма являются:'),
(390, 136, 3, 12, 'Программа — это:'),
(393, 117, 3, 12, 'Що потрібно, щоб стати кваліфікованим програмістом?'),
(394, 117, 7, 12, 'Знання яких мов є життєво важливим для роботи програміста?'),
(395, 117, 10, 2, '//www.youtube.com/embed/Jsdn15AH4v4'),
(396, 117, 13, 2, '//www.youtube.com/embed/DEtHp4ZncDU'),
(397, 117, 14, 12, 'Програма має бути:'),
(398, 117, 17, 2, '//www.youtube.com/embed/tdsjQYP2TUA'),
(399, 117, 18, 12, 'До якого етапу відносится процес процес перетворення алгоритму на зрозумілу комп’ютері мову?'),
(400, 117, 19, 5, '<p> Що таке, на Вашу думку, програмування? Чому Вас це цікавить.?</p>'),
(402, 136, 4, 12, 'Программа-интерпретатор выполняет:'),
(404, 136, 5, 12, 'Программа-компилятор выполняет:'),
(405, 136, 6, 12, 'QBASIC — это'),
(406, 135, 1, 12, 'ffff'),
(407, 135, 2, 12, 'fghfghgfhfghgf'),
(408, 136, 7, 12, ' Алфавит языка QBASIC включает:'),
(409, 136, 8, 12, 'erterter'),
(411, 140, 2, 1, '<p>Спільним дільником кількох натуральних чисел називають число, на яке діляться всі ці числа націло.<br></p>\n<p><strong>Найбільший спільний дільник</strong> (НСД) — найбільше натуральне число, на яке без остачі ділиться кожне з даних.</p>\n<p><br></p>'),
(413, 88, 1, 1, '<p><strong>Курс</strong>: Інтернет-програміст</p><p><strong>Рівень:</strong> початківець</p><p><strong>Модуль</strong>: Елементарна математика </p><p><strong>Тип заняття:</strong> лекційно-практичне</p><p><strong>Тривалість:</strong> 45хв.</p><p><strong>Тема </strong><strong>: Дроби</strong></p><p><strong><br></strong></p>'),
(414, 88, 2, 4, '<p><strong>Вступ</strong></p>\r\n<p><strong>Частина 1</strong></p><p>Спільним дільником кількох натуральних чисел називають число, на яке діляться всі ці числа націло. </p><p><strong>Найбільший спільний дільник</strong> (НСД) — найбільше натуральне число, на яке без остачі ділиться кожне з даних. </p><p>Наприклад, НСД чисел 10; 40; 70 дорівнює десяти. </p><p>Щоб знайти НСД двох або кількох чисел, необхідно:</p><ul><li>розкласти дані числа на прості множники;</li><li>скласти добуток усіх спільних простих множників;</li><li>обчислити складений добуток.</li></ul><p>Два числа, найбільший спільний дільник яких дорівнює одиниці, називаються взаємно простими числами.</p>'),
(415, 136, 9, 12, 'В QBASIC существуют следующие типы данных:'),
(416, 88, 3, 4, '<p><strong><em>Завдання: </em>Знайти НСД(16,20,28)</strong></p>'),
(417, 88, 4, 1, '<p>Спільним кратним кількох натуральних чисел є число, яке ділиться на всі ці числа без остачі.\n</p>\n<p><strong>Найменше спільне кратне</strong> (НСК) — найменше натуральне число, яке ділиться на кожне з даних чисел.\n</p>\n<p>Наприклад, НСК чисел 10 і 15 дорівнює добутку чисел 2, 3 і 5 тобто дорівнює 30.\n</p>\n<p>Щоб знайти НСК двох чисел, необхідно:\n</p>\n<ul>\n	<li>розкласти дані числа на прості множники;</li>\n	<li>скласти добуток усіх простих множників;</li>\n	<li>обчислити складений добуток.</li>\n</ul>'),
(418, 136, 10, 12, 'Выберите правильно представленные числовые данные на QBASIC:'),
(419, 88, 5, 4, '<p><strong><em>Завдання </em>: Знайти НСК(2,3,4)=12</strong></p>'),
(420, 88, 6, 4, '<p><strong><em>Завдання </em>: Знайти НСД і НСК чисел 144, 1008, 1224.</strong></p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(421, 88, 7, 1, '<p><strong>Частина 2</strong></p><p>Звичайні дроби</p><p><em>Дробом </em>називається число представлене як результат операції ділення.</p><p><em>Звичайним дробом</em> називається число представлене у вигляді <img src="https://lh4.googleusercontent.com/4fjsbBeQVDE5-X7glizxpgVIs4rEtQ8RlDNYVpIIdqpnZDMdBQbSSqZ9HZhI0diIhNJyx590PPYGvxOGudZfzLZWC0yeIw-najMfpDw_RfHg-kwCCl471BohO2P6rkrTO-guOfki053WGgws" alt="{m}/{n}">, де: m - ціле, n - натуральне. Чисельником називається число або вираз, який стоїть над рискою дробу. Знаменником називається число або вираз, який стоїть під рискою дробу. </p><p>Ціле число можна представити звичайним дробом із знаменником 1.</p><p>Знаменник вказує на скільки рівних частин було розділено щось ціле, а чисельник вказує скільки таких частин було взято. Дріб <img src="https://lh3.googleusercontent.com/onASOrucPOZ5mUWAUnTs1mxBXV-8NY8pAlq1NL7zTZMzU_SKlr-Jy-ghjLcMU6T4Jk_0V-uFfhLp6s_tTkisgMzbpviMTz9eFD49AiaHvSOS0HhkXtCqu2VLykoSHO6Llk5hAF0WFRyx6t-c" alt="{2}/{3}">читається «Дві третіх» або «дві третини».</p><p>Правильні та неправильні дроби </p><p>Якщо у звичайному дробі чисельник менший від знаменника то дріб називається правильним. </p><p>Наприклад: <img src="https://lh6.googleusercontent.com/UrZeuTRh8W7IITHESOI83rGYsmL7bRei_PcRSuHSyXqLNU64C6YS0s1JBQLPlByccP5ek1l30RBmfYWBcZumDN9t7e-fxKhjh8XEe3LJUOQDWi0AuWkccoVp5YUN36H9WLShuee8E88R9aHC" alt="{4}/{5}">. Якщо у звичайному дробі чисельник більший від знаменника то дріб називається неправильним. Наприклад: <img src="https://lh4.googleusercontent.com/5GvP_vw8F-WM0BboyPd_pGRRgx73U9i31vLPX1__gsvKKzTlx7J9LdA29cfdonWvk79lngJIBzMNcxISC9AgD8g7u5Y5fPS5HRKUX10wp09ddMQPWrmhBoDSgFP6rf7CJRSglF_jOIOeghOI" alt="{7}/{4}">. </p><p>Неправильні дроби подають у вигляді мішаних чисел. </p><p>Для того, щоб перетворити неправильний дріб на мішане число, потрібно чисельник поділити на знаменник і окремо записати цілу частину, а остачу записати в чисельнику дробової частини</p><p>Наприклад, <img src="https://lh3.googleusercontent.com/9DJj1K7H5Koi2I-PeJLZGYtS4XZes9coXt4hByhAZRtiFSOIsUT5E1RgNOwCRRwJfEVKbVuMTShUob0azumCnBigBP2-HikpU2AuNz0R0jwORJjanJbZpcWkH32OY6tLtQREqG-BYubCiLUU" alt="{7}/{4}=1~{3}/{4}">. Читається «одна ціла три четвертих». Якщо у звичайному дробі чисельник рівний знаменнику то дріб можна замінити одиницею. І навпаки одиницю можна замінити дробом у якого чисельник та знаменник рівні.</p>\r\n<p>Два дроби називаються звичайно оберненими, якщо чисельник першого дробу дорівнює знаменнику другого і навпаки. </p>Тобто дроби <img src="https://lh6.googleusercontent.com/VW9ABehiRI4iwH5IRkDYd5FHpDaW3XrtZzYmzysJJCQCh8G5U_3IwmgxmJF1fepfJnJ6j6VkPlbtfWMQRm6yMhqKMlYIoaHLoVn6WRlsf2KmKtJjRc2betVPcgOWl25gUuTuqDhIVakRiB4N" alt="{5}/{11}">та <img src="https://lh6.googleusercontent.com/OJHAXs5MczRe50EK3FrunwNd4B0FL8igoDGXET8DxQBDzbGyEeAaiNHeWq60vM6o6VuqkeRUuDHNxq0mkZ4qM3fxFP6EaP64YljXgmb0udR_PIOYQ41jmi2HIt8elV1knAhvl4VxG18GhMj2" alt="{11}/{5}">є взаємно оберненими дробами.'),
(422, 88, 8, 1, '<p><strong>Частина 3</strong></p><p>Операції зі звичайними дробами</p><p><em>Розширення дробу</em></p><p>Значення дробу не змінюється, якщо його чисельник та знаменник помножити на одне і те ж число, відмінне від нуля. </p>'),
(423, 88, 9, 4, '<p>Приклад: <img src="https://lh3.googleusercontent.com/FIdaqNW8fVDeUh8xhmSyEecYCZ9cXYr_XDlWufRF-9D1Og28mMHW5HOXCyORxUO0s8ILhUzM1ij81XiU6KzTuNBIry8znpKHT8yqSPn462HBsdJ9ATtfuDAyIowCgqAwuFE6xBSCiildM1LE" alt="{2}/{3}={2*4}/{3*4}={8}/{12}"></p>'),
(424, 88, 10, 4, '<p><strong><em>Завдання: </em>Розширити </strong><img src="https://lh5.googleusercontent.com/0B53pM7jtq8wDrltDqG-K9-exK0CxlIbqehRwk4e_-PKoJglMNgK81D3E14_ecvQ-7nDzNiPatHwZ00UZmb3YO5nDTqazMnwGWHBrCegWuopnDNxWVuOFdo7-FP2fzpZ6OteNNlp8AmzDXmV" width="100" height="363" style="width: 100px; height: 363px;"><strong> дріб ;</strong></p>'),
(425, 88, 11, 1, '<p><em>Спрощення дробу</em></p><p>Значення дробу не змінюється, якщо його чисельник та знаменник поділити на одне і те ж число, відмінне від нуля.</p>'),
(426, 88, 12, 1, 'https://lh6.googleusercontent.com/aonaKVWSKcS0D5hXgUmQNStZJPuObGjt1IK95Tqh34F_CauYDbuHBQHrTyizEgU9fNM9Jx6soFv2XLsQ7hHmKViMcsdQQaMwb_9KIk9vcFxt4oq6XbhzRgoabcM9CPNhf0ypsBlOQ2fFMZBg'),
(427, 88, 13, 1, '<p><em>Скорочення дробу</em></p><p>Скороченням дробу називається спрощення дробу на НСД чисельника та знаменника. </p><p>Приклад: <img src="https://lh5.googleusercontent.com/z11qsgLj4OIyCpWv3lpMCTjAsCN_w5uNxPZbHcjJPrpf3n9YeQZz8tVa1iZvBtuA7r6pdOrxi2uMw-g9Asbcs1yVZ_cbnsH8GOzczUFBBc_YWJegZcpSXQTqQUiHTDnnv6RjSI3qOprdoV5r" alt="{12}/{16}={12:4}/{16:4}={3}/{4}"></p>'),
(428, 88, 14, 1, 'https://lh4.googleusercontent.com/TiqVFi7hZ-wOk4UoPraco1LN2QNOqvzKud6MvmiCWh9uVuPIp99DkGJclx7nMJ2SpUssavVoIofWWIa-xNcJp2TYVhGoYQQDvEYOADVcjpEeoH_VJOp6B5ZbTA-E1A3E3vBgJoMLR_s-FjXG'),
(429, 88, 15, 1, 'https://lh6.googleusercontent.com/rRhXFSS-VS1SNEEM4v1siEArAuUNF0Sle4LRTCORzji0fIkf8SCA10Cjugxb4JbyWWpLFaK0G6mpWIwtGIP3JMP08vuno_IWA2HcrRiQRBTzNrCbbr8XuvkMtYI5QhivpPmaDX8diAhJcI9n'),
(430, 88, 16, 1, '<p><strong><em>Завдання: </em>Виконати дії <strong><em></em></strong></strong></p><p><em>Множення дробів</em></p><p>Добутком двох дробів є дріб, чисельник якого дорівнює добутку чисельників, а знаменник — добутку знаменників.</p><p>Щоб помножити два дроби, потрібно:</p><p>1. перемножити чисельники і результат записати у чисельник;</p><p>2. перемножити знаменники і результат записати у знаменник.</p><p>Приклад: <img src="https://lh4.googleusercontent.com/n4646x4hLK7iLOYj2fwU--0105iQ7No20CQtl3nJ-rlBNO5JCeii9IBVKCmEp7m7O7Hqj4qHJGURWvRD0c7zU8XQ_rkhV1QrjfwvBaZlCF2qki0R1mY8B-nG7f8Q9lok50l7eVwO0Kvi7wlz" alt="{{1}/{3}}*{{4}/{5}}={1*4}/{3*5}=4/15"></p>'),
(431, 88, 17, 1, '<p><strong><em>Завдання: </em>Виконати дії </strong></p><p><em>Ділення дробів </em></p><p>Часткою двох дробів є добуток першого дробу на обернений другий. </p><p>Щоб поділити два дроби, потрібно:</p><p>1. другий дріб замінити оберненим до нього (у другому дробі поміняти місцями чисельник та знаменник);</p><p>2. помножити отримані дроби.</p><p>Приклад: <img src="https://lh5.googleusercontent.com/nBzK3N9c-C8EMu0sfuF8f6PEt6ivYP-3P1uWuPJ3eWApg82CIULv3jlKW41uw31EHIIoMkUvAV_-cDjSF0-70IYh6Chy8NYuYdXIn_pBVoF9rQgPYvO5db8UBWXsk4r1p6xY_u23v_68wwmk" alt="{{1}/{3}}:~{{4}/{5}}={1/3}*{5/4}=5/12"></p>'),
(432, 88, 18, 1, '<p><strong></strong><strong><em>авдання: </em>Виконати дію </strong></p><p><em>Порівняння звичайних дробів</em></p><p>З двох дробів із однаковим знаменником більшим є той в якого більший чисельник Приклад: <img src="https://lh4.googleusercontent.com/uU7pYVRiixnbRFF5X3h-nHfhLXFuUUCL7-67UrXzuU4ykUQzb6DB1k3D4vlpCLmir9Ib4KVwuVZqZiJ7-_ZWSmssmypv-bChLVyu9hPfMkBdAFEPhNKE3p78E1q9vCjH-jSP_OBofds_boSN" alt="5/7 data-verified=" redactor"="">3/7"&gt; З двох дробів із однаковим чисельником більшим є той в якого менший знаменник. Приклад: <img src="https://lh4.googleusercontent.com/gI2YNXAwK0y9wFlSk26UavIQRxvik2K5YWdgvTOBaOEi3LfBKtpBQ6HstiSQtk1pXbFrR5Cir4Hy23kIdOsR2gbxGSb7FdeksjuuGHDFUPODeM6ZROIxsPtuAl-Ls-fQULLHzCOz8OczhoKS" alt="5/7 data-verified=" redactor"="">5/9"&gt;</p><p><strong><em>Завдання: </em>Виконати дії </strong></p>'),
(433, 88, 19, 1, '<p><strong>Частина 3</strong></p><p><strong>Десяткові дроби</strong></p><p>Десятковим дробом називається спосіб представлення чисел у вигляді послідовності цифр розділених комою (у деяких країнах крапкою). </p><p>Наприклад дріб 12,345 читається "дванадцять цілих триста сорок п''ять тисячних".</p><p>В початок цілої частини і/або в кінець дробової частини можна дописувати скільки завгодно нулів. </p><p>Приклад: 00012,43500.</p><p>Скінченним десятковим дробом називається дріб, який містить скінченну кількість цифр після коми. Приклад: 12,435. </p><p>Нескінченним десятковим дробом називається дріб, який не містить скінченної кількості цифр після коми. Приклад: 12,435... </p><p>При <strong>додаванні (відніманні) десяткових дробів</strong> числа записують так, щоб однакові розряди були записані один під одним, а кома – під комою, і додають (віднімають) як натуральні числа</p><p>Щоб <strong>помножити один десятковий дріб на інший</strong>, потрібно виконати множення, не звертаючи уваги на коми, і в отриманому добутку відокремити праворуч комою стільки цифр, скільки їх стоїть після коми в обох множниках разом. Наприклад, <img src="https://lh6.googleusercontent.com/R3TeC0wJW7ovtSOuq_0rwbmzlV4Ep7tpcQa2COLuwbHvFOnRh7U5Q_t-1M1nmwSqupLvq81MFX0MER_ZOIQakJAWzmkSQfqkztpsnz-HmVdrgmmefOkYmLKUl6D-mOMeALE6yaP7DIHsklvw">.</p><p>Щоб <strong>помножити десятковий дріб на 10, 100, 1000 і т.д.,</strong> необхідно в цьому дробі перенести кому вправо на стільки цифр, скільки нулів у множника (дописавши у випадку необхідності до дробу праворуч певне число нулів). Наприклад: <img src="https://lh6.googleusercontent.com/W5VCSo6_rDyCu_UZJMHWw3RuKNGppo826HhdBD-OnOxljlQNKzTTPAzXNl_Nwpe6E0Y1uszTsDYIff59eDvhnSmv4UNK4sVdWM04JUl1-N-nfEBGr_3s_uMg2GCGc89V-I2NxDkL8xPMyBau">; <img src="https://lh3.googleusercontent.com/n-nNbWNto0_3HIB0TKKHx4YfjeH9agbYQEI_xDOBSTt6BPGdrNG4CGs2B0AMqdvGJxt-9nXRa5_64u6NjygKKF6AqNeLVR0V8LhJYJbYauaC2W435x1Voyx4i5IZeyIla3GaziYH9kM8fwjQ">.</p><p><strong>Ділення десяткового дробу на натуральне число</strong> виконується так само, як ділення натурального числа на натуральне, але кому в частці ставлять після того, як закінчено ділення цілої частини.</p><p>Розглянемо тепер <strong>ділення десяткового дробу на десятковий дріб</strong>. Нехай треба поділити 8,316 на 2,31. Для цього і в діленому, і в дільнику перенесемо кому вправо на стільки цифр, стільки їх є після коми в дільнику (в даному прикладі на дві). Іншими словами, помножимо ділене і дільник на 100 – від цього частка не зміниться. Тоді треба поділити дріб 831,6 на натуральне число 231, тобто задача зводиться до вже знайомого випадку.</p><p>Щоб <strong>поділити десятковий дріб на </strong><strong><img src="https://lh5.googleusercontent.com/f_QuRJkjBLfTJFHUUJseF8rdK6iEMAdvjS-qb9TkY3D_uVxMsmcfeQ0kIlGf5hm6upxBL2AXuyvzCTjhxaf8rDSMlDOVh8ng_brbu4X6VExviHNl36Yam0QqGkdja7bfDxywfXHiP_3v_EZY"></strong>, треба в цьому дробі перенести кому на <em>п</em> цифр вліво (при цьому у випадку необхідності зліва приписати потрібне число нулів).</p><p>Як для натуральних чисел ділення не завжди можна виконати, так його не завжди можна виконати й для десяткових дробів</p>'),
(436, 136, 11, 12, 'умова'),
(438, 136, 12, 5, 'dbkqckwc'),
(440, 100, 47, 1, '<ul>\n	<li><strong><em>для чого потрібні цикли в програмуванні?</em></strong></li>\n</ul>\n<p>Припустимо, що в прикладі програми, наведеному в ч. 4., значення змінної <strong><span style="color: rgb(192, 80, 77);">num</span></strong> потрібно вивести на екран більше, ніж 1 раз. Варіанти вирішення даної проблеми:\n</p>\n<p>а) прописати в тексті програми відповідну функцію потрібну кількість разів (<u>недолік</u> - невиправдане збільшення тексту програми, якщо необхідна кількість вимірюється десятками чи сотнями);\n</p>\n<p>б) застосувати певну компактну програмну конструкцію для багаторазового повторення певної дії (дій) - <u>цикл</u>.\n</p>\n<ul>\n	<li><strong><em>що таке цикли?</em></strong></li>\n</ul>\n<p><strong>Цикл - </strong>це послідовність команд (операторів), що виконується певну кількість разів.\n</p>\n<ul>\n	<li><strong><em>як реалізуються цикли в мові С?</em></strong></li>\n</ul>\n<p>Синтаксис мови С дає можливість використати декілька видів циклів.\n</p>\n<ol>\n	<li><u>Цикл з відомою кількістю повторень.</u></li>\n</ol>Використовується, коли кількість повторного виконання тих чи інших операцій відома наперед (альтернативна назва - цикл <strong><span style="color: rgb(192, 80, 77);">for</span></strong>).'),
(441, 100, 48, 4, '<p><strong><span style="color: rgb(79, 129, 189);">#include &lt;stdio.h&gt;</span> </strong><strong><span style="color: rgb(155, 187, 89);">// підключення стандартних функцій вводу-виводу</span></strong>\n</p>\n<p><br><strong></strong>\n</p>\n<p><strong><span style="color: rgb(79, 129, 189);">main()</span></strong>\n</p>\n<p><strong><span style="color: rgb(79, 129, 189);">{</span></strong>\n</p>\n<p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">int i; </span></strong><span style="color: rgb(155, 187, 89);"><strong>// змінна </strong><strong>і </strong><strong>- “лічильник” циклу (тип </strong><strong>int</strong></span><strong><span style="color: rgb(155, 187, 89);"> - ціле число)</span></strong>\n</p>\n<p style="margin-left: 20px;"><span style="color: rgb(79, 129, 189);"><strong>for ( i = 1; i &lt;= 10; i ++ ) </strong><strong><span style="color: rgb(155, 187, 89);">// заголовок циклу</span></strong></span>\n</p>\n<p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">{</span> </strong> <strong><span style="color: rgb(155, 187, 89);">// початок циклу</span></strong>\n</p>\n<p style="margin-left: 40px;"><strong><span style="color: rgb(79, 129, 189);">printf("Слава Україні! Героям слава!");</span><span style="color: rgb(155, 187, 89);"> </span></strong><strong><span style="color: rgb(155, 187, 89);">// тіло циклу - виведення на екран тексту в дужках</span></strong>\n</p>\n<p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">}</span> </strong> <strong><span style="color: rgb(155, 187, 89);">// кінець циклу</span></strong>\n</p>\n<p style="margin-left: 20px;"><strong><span style="color: rgb(79, 129, 189);">getchar();</span> </strong><strong><span style="color: rgb(155, 187, 89);">// функція для затримки програми (очікує натиснення клавіші Enter)</span></strong>\n</p><strong>}</strong>'),
(442, 100, 49, 5, '<p>1) реалізуйте останній фрагмент коду (створіть відповідний файл і відкомпілюйте);</p><p>2) змініть умову виконання циклу: початкове значення лічильника присвойте 0, а умову завершення встановіть «<strong>i </strong>суворо менше 7»; перевірте роботу програми (кількість дій, виконаних в циклі), результат поясніть.</p>'),
(443, 101, 22, 1, '<p><strong>Частина 6. Оператор переходу</strong>\n</p>'),
(446, 101, 23, 1, '<p>Як правило, всі оператори, прописані в тілі програми, виконуються в суворій послідовності один за одним. Однак існують випадки, коли алгоритмом передбачається порушення заданої послідовності. Це може бути повернення на певний оператор, який був виконаний раніше (без використання оператора циклу), або навпаки - “перескок” через кілька операторів вперед. Можливість таких дій передбачена за допомогою т.з. <strong><em>оператора безумовного переходу</em><em>.</em></strong></p><p>Синтаксис даного оператора має вигляд: <strong><span style="color: rgb(192, 80, 77);">goto &lt;мітка&gt;</span>;</strong></p><strong><span style="color: rgb(192, 80, 77);">&lt;мітка&gt;</span></strong> - це умовне позначення деякого іншого оператора в програми, на виконання якого програма переходить після вказівки <strong><span style="color: rgb(192, 80, 77);">goto</span></strong>.'),
(447, 101, 24, 1, '<p><strong><span style="color: rgb(79, 129, 189);">…</span></strong>\n</p>\n<p><span style="color: rgb(79, 129, 189);"><strong></strong><strong>main()</strong></span>\n</p>\n<p><strong><span style="color: rgb(79, 129, 189);"></span></strong><strong><span style="color: rgb(79, 129, 189);">{</span></strong>\n</p>\n<p style="margin-left: 20px;"><span style="color: rgb(79, 129, 189);"><strong> int n = 0; </strong></span>\n</p>\n<p style="margin-left: 20px;"><span style="color: rgb(79, 129, 189);"><strong> int lim = 50;</strong><strong><br></strong><strong> float s = 0;</strong><strong><br></strong> <strong><br></strong><strong>m1: </strong> <strong>++n;</strong><strong><br></strong><strong> </strong> </span><strong><span style="color: rgb(79, 129, 189);">if(n &lt; = lim)</span><span style="color: rgb(155, 187, 89);"> </span></strong><span style="color: rgb(155, 187, 89);"> </span><strong><span style="color: rgb(155, 187, 89);">// якщо умова виконується -</span></strong><strong><br></strong><strong> </strong> <strong><span style="color: rgb(79, 129, 189);">{</span></strong>\n</p>\n<p style="margin-left: 40px;"><span style="color: rgb(79, 129, 189);"><strong>s += n/(n + 5.0);</strong><strong><br></strong><strong> </strong> <strong>goto m1;</strong> </span><strong><span style="color: rgb(155, 187, 89);">// перехід на оператор, позначений міткою </span></strong><strong><span style="color: rgb(155, 187, 89);">m1</span></strong>\n</p>\n<p style="margin-left: 40px;"><strong></strong><strong><span style="color: rgb(79, 129, 189);">}</span></strong>\n</p><strong><span style="color: rgb(79, 129, 189);">}</span></strong>'),
(448, 73, 7, 5, 'nfjen'),
(449, 118, 3, 2, '//www.youtube.com/embed/HwCDrGOT9J8'),
(450, 118, 8, 2, '//www.youtube.com/embed/W8dhtHMPWWI"'),
(451, 118, 13, 2, '//www.youtube.com/embed/UZO2FPK5Qao"'),
(452, 118, 18, 2, '//www.youtube.com/embed/52Ch620itNs"'),
(453, 118, 23, 2, '//www.youtube.com/embed/cH2Hs9DVV1c"'),
(454, 118, 4, 12, 'Яка головна задача комп’ютера?'),
(455, 118, 9, 12, 'Які елементарні математичні операції не могла виконувати обчислювальна машина Блеза Паскаля?'),
(456, 118, 14, 12, 'Які проблеми створює використання електроних ламп у якості основного елемента ЕОМ?'),
(457, 118, 19, 12, 'Який винахід став найбільш значущим для подальшого розвитку комп’ютерної техніки?'),
(458, 118, 24, 12, 'Які переваги надає використання інтегральних мікросхем?'),
(459, 118, 29, 12, 'Оберіть правильну послідовність розвитку обчислювальних машин.'),
(461, 118, 34, 12, 'Що з переліченого відноситься до обов’язкових компонентів комп’ютера.'),
(462, 118, 28, 2, '//www.youtube.com/embed/785QVqE-GMI"'),
(463, 141, 1, 5, '<p>nfnbnbvn</p>'),
(464, 142, 1, 1, '                    <p>hjggjgh</p>                '),
(465, 142, 2, 4, 'yjhjgj'),
(466, 142, 3, 5, '<p>ukkjkfjfkj</p>'),
(467, 143, 1, 5, '<p>dghfjfh</p>'),
(468, 144, 1, 7, '<p>fgfg</p>'),
(469, 144, 2, 1, '<p>sgfgf</p>'),
(470, 144, 3, 1, '<p>fdghdghd</p>'),
(471, 144, 4, 12, '<p>rgdhgdjg</p>'),
(472, 118, 33, 2, '//www.youtube.com/embed/gRWIcgB2NY0"'),
(473, 145, 1, 5, 'ыапавп'),
(476, 145, 2, 5, '<p><br>\n</p>\n<p>            В трех ящиках 42 кг овощей. В первых двух вместе 27 кг. Сколько кг овощей в первом ящике, если во втором на 4 кг меньше чем в третьем? ghfje\n</p>'),
(477, 146, 2, 5, 'В трех ящиках 42 кг овощей. В первых двух вместе 27 кг. Сколько кг овощей в первом ящике, если во втором на 4 кг меньше чем в третьем?'),
(478, 146, 3, 5, 'Кролик Крош собрал 16 съедобных грибов и 9 поганок. Его друг Ежик собрал 7 съедобных грибов, а несъедобных на 4 меньше чем съедобных грибов. Сколько всего грибов собрали Крош и Ежик вместе, кто из них и на сколько собрал грибов больше?'),
(479, 146, 1, 5, '5+7='),
(480, 146, 4, 1, '                    \\[\\LARGE fhbdjkghdkgg\\left ( sfn\\alpha mg\\delta mgm\\zeta ,mb\\eta m \\right )\\]\r\n                '),
(481, 146, 5, 5, 'В одном альбоме у Саши было 8 марок, а в другом 7. Ему подарили еще 8 марок. Сколько марок стало у Саши?'),
(482, 146, 6, 5, 'cgjhvm'),
(483, 146, 7, 5, 'vhvh'),
(484, 146, 8, 12, '&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&'),
(485, 146, 9, 5, 'ф'),
(486, 147, 1, 5, 'аоаро'),
(487, 147, 2, 1, '                    \\[{\\color{Green} sfgdhdggf}\\]\r\n                '),
(488, 147, 3, 1, '                    \\[\\sin dg+\\cos dgdg=1\\]\r\n                '),
(489, 147, 5, 3, 'wrgtrgthdt'),
(490, 147, 4, 1, '<img src="/images/lecture/3f6bdf8204c12f32656eacea5dcc9188.jpg">'),
(491, 147, 6, 1, '<a target="_blank" href="http://mat-zadachi.ru/2-class/">Задачи</a>'),
(492, 147, 7, 12, '111111111111111111111111111111111111111111111111111111'),
(493, 148, 1, 12, 'РАПТР'),
(495, 138, 2, 1, '\\[\\mathbf{dhgjfjhjhjgk}\\]\r\n\\[\\mathbf{dhgjfjhjhjgk\\textit{hgjmmgmgm}}\\]\r\n'),
(496, 138, 1, 1, '\\[\\ast \\sqcap \\triangleright \\triangleleft \\bullet \\circ \\blacksquare \\square \\blacktriangle \\triangle \\cup \\triangle \\ominus\\]\r\n'),
(497, 73, 8, 5, 'yheryjyh'),
(498, 73, 9, 12, 'ju468ij478i'),
(500, 146, 10, 1, '<p>f1111\n</p>'),
(501, 146, 11, 1, '<p>6666\n</p>'),
(502, 138, 3, 1, '\\[\\]\r\n\\[\\]\r\n\\[\\]\r\n\\[\\begin{pmatrix}end{pmatrix}\\]\r\n\\[\\begin{pmatrix}end{pmatrix}\\]\r\n$5+5=10$ '),
(504, 73, 10, 12, 'condition'),
(505, 73, 11, 12, 'fearf'),
(506, 149, 2, 7, '<p><span style="background-color: rgb(229, 224, 236);">рьрьарьароочаророчор</span></p>'),
(507, 149, 3, 1, 'https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5<p>https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5</p><p>https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5<span class="redactor-invisible-space"></span><br></p>'),
(508, 149, 4, 1, '<p> <span class="line">Сижу за решеткой в темнице сырой.</span><br> <span class="line">Вскормленный в неволе орел молодой,</span><br> <span class="line">Мой грустный товарищ, махая крылом,</span><br> <span class="line">Кровавую пищу клюет под окном,</span>\r\n</p>\r\n<p> <span class="line">Клюет, и бросает, и смотрит в окно,</span><br> <span class="line">Как будто со мною задумал одно.</span><br> <span class="line">Зовет меня взглядом и криком своим</span><br> <span class="line">И вымолвить хочет: «Давай улетим!</span>\r\n</p>\r\n<p> <span class="line">Мы вольные птицы; пора, брат, пора!</span><br> <span class="line">Туда, где за тучей белеет гора,</span><br> <span class="line">Туда, где синеют морские края,</span><br> <span class="line">Туда, где гуляем лишь ветер... да я!...»</span>\r\n</p>\r\n<p>https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5<br><span class="line"></span>\r\n</p>'),
(509, 149, 5, 12, '1'),
(510, 149, 6, 1, '<p><u>https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5</u></p><p><u>https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5</u><span class="redactor-invisible-space"><br></span></p><p><span class="redactor-invisible-space"><u>https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5</u><span class="redactor-invisible-space"><br></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><u>https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5</u><span class="redactor-invisible-space"><br></span></span></span></p>'),
(511, 149, 7, 1, '<p><a href="http://pidruchniki.com/1883061748107/dokumentoznavstvo/gramatika">http://pidruchniki.com/1883061748107/dokumentoznav...</a></p><p><a href="http://pidruchniki.com/1883061748107/dokumentoznavstvo/gramatika">http://pidruchniki.com/1883061748107/dokumentoznav...</a><span class="redactor-invisible-space"><br></span></p><p><span class="redactor-invisible-space"><a href="http://pidruchniki.com/1883061748107/dokumentoznavstvo/gramatika">http://pidruchniki.com/1883061748107/dokumentoznav...</a><span class="redactor-invisible-space"><br></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><a href="http://pidruchniki.com/1883061748107/dokumentoznavstvo/gramatika">http://pidruchniki.com/1883061748107/dokumentoznav...</a><span class="redactor-invisible-space"><br></span></span></span></p>'),
(512, 149, 8, 1, '<h2>Граматика. Граматичне значення. Граматичні категорії</h2><h2>Граматика. Граматичне значення. Граматичні категорії</h2><h2>Граматика. Граматичне значення. Граматичні категорії</h2><h2>Граматика. Граматичне значення. Граматичні категорії</h2>'),
(513, 146, 12, 1, '\\[\\begin{pmatrix} 11 & 21& \\\\ 12& 21& \\end{pmatrix}\\]\r\n'),
(515, 149, 10, 12, 'апрапораоааооиариповио'),
(517, 150, 1, 1, '<p>ghghdfgdfgfdgsgdhgfhfghsgdhg</p>'),
(518, 150, 2, 1, '<p><span style="color: rgb(155, 187, 89); "></span>fxbvjb\n</p>'),
(519, 98, 1, 1, '<p><span style="color: rgb(155, 187, 89);">стит ии </span></p>'),
(520, 149, 9, 1, '<p>hjhjhjhkkjb</p>'),
(521, 149, 1, 1, '<p>  m, m,bnk,bnkbjl nkn;; k;k;</p>'),
(522, 150, 3, 1, '<p>gjhkgjkgjl jl</p><hr><p><br></p>'),
(523, 150, 4, 1, '<p>jvhkjbl</p>'),
(524, 150, 5, 12, 'тест'),
(525, 150, 6, 12, 'Переменная — это:'),
(526, 150, 7, 5, '<p>ывпар</p>'),
(527, 151, 1, 7, '<p>ыакрвпгоаншашг</p>'),
(528, 151, 2, 12, 'Имя переменной — это:'),
(529, 151, 3, 12, 'Белая береза Под моим окном Принакрылась снегом, Точно серебром.  На пушистых ветках Снежною каймой Распустились кисти Белой бахромой.'),
(530, 151, 4, 12, 'Белая береза Под моим окном Принакрылась снегом, Точно серебром.  На пушистых ветках Снежною каймой Распустились кисти Белой бахромой.'),
(531, 151, 5, 12, 'Белая береза Под моим окном Принакрылась снегом, Точно серебром.  На пушистых ветках Снежною каймой Распустились кисти Белой бахромой.'),
(532, 112, 4, 5, '<p>ьпьпоьспо</p>'),
(533, 53, 2, 1, '\\[5> 3; 6< 10; 8=8\\]\r\n'),
(534, 153, 1, 12, '???????????????????????????????????????????????????????????????????????????????????????????????????????/'),
(537, 154, 1, 12, '1212'),
(538, 155, 1, 12, 'sdfdsf'),
(539, 155, 2, 12, 'sdsd'),
(540, 156, 1, 12, 'Скільки н?іг у корови'),
(541, 156, 2, 12, 'QBASIC — это'),
(542, 156, 3, 12, 'QBASIC — это'),
(543, 156, 4, 12, 'QBASIC — это'),
(545, 100, 50, 1, '<p><u>Примітки</u>: а) <em>тіло циклу</em> - операції, які повторюються за його допомогою (розміщені між операторними дужками “<strong><span style="color: rgb(192, 80, 77);">{ }</span></strong>” - початком і кінцем циклу); аналогічно визначається також <em>тіло програми</em> в цілому;</p><p>б) хороший стиль написання тексту передбачає робити відступ (табуляцію) після кожної відкриваючої дужки “<strong><span style="color: rgb(192, 80, 77);">{</span> </strong>”.</p>\r\n<p>Конструкція <strong><span style="color: rgb(192, 80, 77);">for ( i = 1; i &lt;= 10; i ++ )</span></strong> розшифровується наступним чином:</p><ul><li>“лічильнику” <strong><span style="color: rgb(192, 80, 77);">i</span></strong> присвоюється початкове значення <strong><span style="color: rgb(192, 80, 77);">1</span></strong>;</li><li>після кожного одноразового виконання тіла циклу здійснюється <em>інкремент </em><strong><span style="color: rgb(192, 80, 77);">i</span></strong> (операція <strong><span style="color: rgb(192, 80, 77);">i ++</span></strong>) - збільшення лічильника на <strong><span style="color: rgb(192, 80, 77);">1</span></strong>;</li></ul>тіло циклу послідовно виконується доти, доки істинною є умова: <span style="color: rgb(192, 80, 77);"><strong>i &lt;= 10;</strong> </span>(значення лічильника не перевищує число <strong><span style="color: rgb(192, 80, 77);">10</span></strong>).'),
(546, 152, 1, 12, '1'),
(547, 136, 13, 12, 'выкфкфв'),
(548, 159, 1, 1, '<p>Заголовок 1<br></p>'),
(549, 159, 2, 12, 'рпа'),
(550, 159, 4, 4, '<p>Петя сорвал с одной яблони 12 яблок, а с другой 9. После того как он \r\nподелился с другом у него осталось 16. Сколько яблок Петя дал другу?</p>\r\n\r\n\r\n\r\n<blockquote class="otvet"><ul><p><b>Решение:</b></p><p>1) 12 + 9 = 21 (всего яблок сорвал Петя</p><p>2) 21 - 16 = 5</p><p>Выражение: (12 + 9) - 16 = 5</p><p>Ответ: Петя дал другу 5 яблок.</p>\r\n\r\n\r\n\r\n       </ul></blockquote>'),
(551, 159, 5, 7, '<p>В книге 14 стихотворений. Настя выучила 6, Катя 3, а Нина все остальные. Сколько стихотворений выучила Нина?</p>\r\n\r\n\r\n\r\n<blockquote class="otvet"><ul><b>Решение:</b>\r\n\r\n\r\n\r\n       <li>1) 6 + 3 = 9 (выучили Настя и Катя вместе)</li>\r\n\r\n\r\n\r\n       <li>2) 14 - 9 = 5</li>\r\n\r\n\r\n\r\n       <li>Выражение: 14 - (6 + 3) = 5</li>\r\n\r\n\r\n\r\n       <li>Ответ: Нина выучила 5 стихов.</li>\r\n\r\n\r\n\r\n     </ul></blockquote>'),
(552, 159, 6, 12, 'Текстовый редактор — это:'),
(553, 159, 3, 12, 'Ячейка электронной таблицы определяется:'),
(554, 100, 46, 1, '<p>Частина 8. Оператори циклів</p>'),
(603, 182, 1, 12, 'cbnmnm'),
(604, 140, 6, 1, '<p>Спільним кратним кількох натуральних чисел є число, яке ділиться на всі ці числа без остачі.</p>\n<p><strong>Найменше спільне кратне</strong> (НСК) — найменше натуральне число, яке ділиться на кожне з даних чисел.</p>\n<p>Наприклад, НСК чисел 10 і 15 дорівнює добутку чисел 2, 3 і 5 тобто дорівнює 30.</p>'),
(605, 140, 8, 4, '<p><strong><em>Завдання </em>: Знайти НСК(2,3,4)=12</strong></p>'),
(606, 140, 5, 4, '<p><strong><em>Завдання: </em>Знайти НСД(16,20,28)</strong></p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(608, 140, 9, 4, '<p><strong><em>Завдання </em>: Знайти НСД і НСК чисел 144, 1008, 1224.</strong></p>'),
(609, 140, 10, 1, '<p><strong>Частина 2</strong></p><p>Звичайні дроби</p><p><em>Дробом </em>називається число представлене як результат операції ділення.</p><p><em>Звичайним дробом</em> називається число представлене у вигляді <img src="https://lh4.googleusercontent.com/4fjsbBeQVDE5-X7glizxpgVIs4rEtQ8RlDNYVpIIdqpnZDMdBQbSSqZ9HZhI0diIhNJyx590PPYGvxOGudZfzLZWC0yeIw-najMfpDw_RfHg-kwCCl471BohO2P6rkrTO-guOfki053WGgws" alt="{m}/{n}">, де: m - ціле, n - натуральне. Чисельником називається число або вираз, який стоїть над рискою дробу. Знаменником називається число або вираз, який стоїть під рискою дробу. </p><p>Ціле число можна представити звичайним дробом із знаменником 1.</p><p>Знаменник вказує на скільки рівних частин було розділено щось ціле, а чисельник вказує скільки таких частин було взято. Дріб <img src="https://lh3.googleusercontent.com/onASOrucPOZ5mUWAUnTs1mxBXV-8NY8pAlq1NL7zTZMzU_SKlr-Jy-ghjLcMU6T4Jk_0V-uFfhLp6s_tTkisgMzbpviMTz9eFD49AiaHvSOS0HhkXtCqu2VLykoSHO6Llk5hAF0WFRyx6t-c" alt="{2}/{3}">читається «Дві третіх» або «дві третини».</p><p>Правильні та неправильні дроби </p><p>Якщо у звичайному дробі чисельник менший від знаменника то дріб називається правильним. </p>'),
(611, 140, 11, 4, '<p>Наприклад: <img src="https://lh6.googleusercontent.com/UrZeuTRh8W7IITHESOI83rGYsmL7bRei_PcRSuHSyXqLNU64C6YS0s1JBQLPlByccP5ek1l30RBmfYWBcZumDN9t7e-fxKhjh8XEe3LJUOQDWi0AuWkccoVp5YUN36H9WLShuee8E88R9aHC" alt="{4}/{5}">. Якщо у звичайному дробі чисельник більший від знаменника то дріб називається неправильним.</p>'),
(612, 140, 12, 4, '<p>Наприклад: <img src="https://lh4.googleusercontent.com/5GvP_vw8F-WM0BboyPd_pGRRgx73U9i31vLPX1__gsvKKzTlx7J9LdA29cfdonWvk79lngJIBzMNcxISC9AgD8g7u5Y5fPS5HRKUX10wp09ddMQPWrmhBoDSgFP6rf7CJRSglF_jOIOeghOI" alt="{7}/{4}">.</p>Неправильні дроби подають у вигляді мішаних чисел.'),
(613, 140, 13, 1, '<p>Для того, щоб перетворити неправильний дріб на мішане число, потрібно чисельник поділити на знаменник і окремо записати цілу частину, а остачу записати в чисельнику дробової частини</p>'),
(614, 140, 14, 4, '<p>Наприклад, <img src="https://lh3.googleusercontent.com/9DJj1K7H5Koi2I-PeJLZGYtS4XZes9coXt4hByhAZRtiFSOIsUT5E1RgNOwCRRwJfEVKbVuMTShUob0azumCnBigBP2-HikpU2AuNz0R0jwORJjanJbZpcWkH32OY6tLtQREqG-BYubCiLUU" alt="{7}/{4}=1~{3}/{4}">. Читається «одна ціла три четвертих».</p>'),
(615, 140, 15, 1, '<p>Якщо у звичайному дробі чисельник рівний знаменнику то дріб можна замінити одиницею. І навпаки одиницю можна замінити дробом у якого чисельник та знаменник рівні.</p>\r\n<p>Два дроби називаються звичайно оберненими, якщо чисельник першого дробу дорівнює знаменнику другого і навпаки. </p><p>Тобто дроби <img src="https://lh6.googleusercontent.com/VW9ABehiRI4iwH5IRkDYd5FHpDaW3XrtZzYmzysJJCQCh8G5U_3IwmgxmJF1fepfJnJ6j6VkPlbtfWMQRm6yMhqKMlYIoaHLoVn6WRlsf2KmKtJjRc2betVPcgOWl25gUuTuqDhIVakRiB4N" alt="{5}/{11}">та <img src="https://lh6.googleusercontent.com/OJHAXs5MczRe50EK3FrunwNd4B0FL8igoDGXET8DxQBDzbGyEeAaiNHeWq60vM6o6VuqkeRUuDHNxq0mkZ4qM3fxFP6EaP64YljXgmb0udR_PIOYQ41jmi2HIt8elV1knAhvl4VxG18GhMj2" alt="{11}/{5}">є взаємно оберненими дробами.</p>'),
(616, 140, 16, 1, '<p><strong>Частина 3</strong></p><p>Операції зі звичайними дробами</p><p><em>Розширення дробу</em></p><p>Значення дробу не змінюється, якщо його чисельник та знаменник помножити на одне і те ж число, відмінне від нуля. </p>'),
(617, 140, 17, 4, '<p>Приклад: <img src="https://lh3.googleusercontent.com/FIdaqNW8fVDeUh8xhmSyEecYCZ9cXYr_XDlWufRF-9D1Og28mMHW5HOXCyORxUO0s8ILhUzM1ij81XiU6KzTuNBIry8znpKHT8yqSPn462HBsdJ9ATtfuDAyIowCgqAwuFE6xBSCiildM1LE" alt="{2}/{3}={2*4}/{3*4}={8}/{12}"></p>'),
(618, 140, 18, 4, '<p><strong></strong></p><p><strong><em>Завдання: </em>Розширити дріб </strong><strong>;</strong></p>'),
(619, 140, 19, 1, '<p><em>Спрощення дробу</em></p><p>Значення дробу не змінюється, якщо його чисельник та знаменник поділити на одне і те ж число, відмінне від нуля. </p>'),
(620, 140, 20, 4, '<p>Приклад: <img src="https://lh6.googleusercontent.com/aonaKVWSKcS0D5hXgUmQNStZJPuObGjt1IK95Tqh34F_CauYDbuHBQHrTyizEgU9fNM9Jx6soFv2XLsQ7hHmKViMcsdQQaMwb_9KIk9vcFxt4oq6XbhzRgoabcM9CPNhf0ypsBlOQ2fFMZBg" alt="{12}/{16}={12:2}/{16:2}={6}/{8}"></p>'),
(621, 140, 21, 4, '<p><strong><em>Завдання: </em>спростити дріб <strong><em></em></strong></strong></p><p><strong><em><br></em></strong></p>'),
(622, 140, 22, 1, '<p><em>Скорочення дробу</em>Скороченням дробу називається спрощення дробу на НСД чисельника та знаменника.</p>'),
(623, 140, 23, 4, '<p>Приклад: <img src="https://lh5.googleusercontent.com/z11qsgLj4OIyCpWv3lpMCTjAsCN_w5uNxPZbHcjJPrpf3n9YeQZz8tVa1iZvBtuA7r6pdOrxi2uMw-g9Asbcs1yVZ_cbnsH8GOzczUFBBc_YWJegZcpSXQTqQUiHTDnnv6RjSI3qOprdoV5r" alt="{12}/{16}={12:4}/{16:4}={3}/{4}"></p>'),
(624, 140, 24, 4, '<p><strong><em>Завдання: </em>Скоротити дріб <strong><em></em></strong></strong></p><p><strong><em><br></em></strong></p>'),
(625, 140, 25, 1, '<p>Дріб називається нескоротним, якщо найбільший спільний дільник чисельника та знаменника дорівнює одиниці.</p>\n<p><em>Зведення дробів до спільного знаменника</em></p>\n<p>Спільним знаменником двох дробів називається НСК їх знаменників.</p>'),
(626, 140, 27, 4, '<p>Приклад: <img src="https://lh4.googleusercontent.com/TiqVFi7hZ-wOk4UoPraco1LN2QNOqvzKud6MvmiCWh9uVuPIp99DkGJclx7nMJ2SpUssavVoIofWWIa-xNcJp2TYVhGoYQQDvEYOADVcjpEeoH_VJOp6B5ZbTA-E1A3E3vBgJoMLR_s-FjXG" alt="{1}/{4}~i~{5}/{6};~right~HCK=12;~right"><img src="https://lh3.googleusercontent.com/wrSEcpJO3egzfV5Bh0Z86Y1Qlrr_wsWEWKGbIMFfaFyGw0TQiQmow2dtYborojsE_DiDcPymd8gY2IVGmGesq4-lMaiogbN67J_PXu8yi72TX3L9mmbLsIw5uczj9Ps3_oC9aWGC_31pOSps" alt="{1*3}/{12}~i~{5*2}/{12};~right~3/12~i~10/12"></p>'),
(627, 140, 28, 4, '<p><strong><em>Завдання:</em> Звести дроби до спільного знаменника </strong></p>'),
(628, 140, 29, 1, '<p><em>Додавання (віднімання) дробів</em></p>\n<p>Сумою (різницею) двох дробів, зі спільними знменниками є дріб, чисельник якого дорівнює сумі (різниці) чисельників, а знаменник дорівнює спільному знаменнику доданків.</p>'),
(629, 140, 31, 4, '<p>Приклад: <img src="https://lh6.googleusercontent.com/rRhXFSS-VS1SNEEM4v1siEArAuUNF0Sle4LRTCORzji0fIkf8SCA10Cjugxb4JbyWWpLFaK0G6mpWIwtGIP3JMP08vuno_IWA2HcrRiQRBTzNrCbbr8XuvkMtYI5QhivpPmaDX8diAhJcI9n" alt="3/7+2/7={3+2}/{7}=5/7">; <img src="https://lh6.googleusercontent.com/RIUt5rV1HpRCOPZOk0lkco9-yoNkM9kQumd56I2abbuvcinogUMaHU3rho57EnRC7u5MfRtW8O4iXiZ7cEJmV8QNzAptnOlQCZB07b-bq5i9VFkOT9Tn1yz5tHQBDOL5Fi3OxuAKDyLKyCM4" alt="~~~3/7-2/7={3-2}/{7}=1/7"></p>'),
(630, 140, 32, 4, '<p><strong><em>Завдання: </em>Виконати дії </strong></p>'),
(631, 140, 33, 1, '<p><em>Множення дробів</em></p>\n<p>Добутком двох дробів є дріб, чисельник якого дорівнює добутку чисельників, а знаменник — добутку знаменників.</p>'),
(632, 140, 35, 1, '<p>Приклад: <img src="https://lh4.googleusercontent.com/n4646x4hLK7iLOYj2fwU--0105iQ7No20CQtl3nJ-rlBNO5JCeii9IBVKCmEp7m7O7Hqj4qHJGURWvRD0c7zU8XQ_rkhV1QrjfwvBaZlCF2qki0R1mY8B-nG7f8Q9lok50l7eVwO0Kvi7wlz" alt="{{1}/{3}}*{{4}/{5}}={1*4}/{3*5}=4/15"></p>'),
(633, 140, 36, 4, '<p><strong><em>Завдання: </em>Виконати дії </strong></p>'),
(634, 140, 37, 1, '<p><em>Ділення дробів</em></p>\n<p>Часткою двох дробів є добуток першого дробу на обернений другий.</p>'),
(635, 140, 39, 1, '<p>Приклад: <img src="https://lh5.googleusercontent.com/nBzK3N9c-C8EMu0sfuF8f6PEt6ivYP-3P1uWuPJ3eWApg82CIULv3jlKW41uw31EHIIoMkUvAV_-cDjSF0-70IYh6Chy8NYuYdXIn_pBVoF9rQgPYvO5db8UBWXsk4r1p6xY_u23v_68wwmk" alt="{{1}/{3}}:~{{4}/{5}}={1/3}*{5/4}=5/12"></p>'),
(636, 140, 40, 4, '<p><strong><em>Завдання: </em>Виконати дію </strong></p>'),
(637, 140, 41, 4, '<p><em>Порівняння звичайних дробів</em></p>З двох дробів із однаковим знаменником більшим є той в якого більший чисельник Приклад: <img src="https://lh4.googleusercontent.com/uU7pYVRiixnbRFF5X3h-nHfhLXFuUUCL7-67UrXzuU4ykUQzb6DB1k3D4vlpCLmir9Ib4KVwuVZqZiJ7-_ZWSmssmypv-bChLVyu9hPfMkBdAFEPhNKE3p78E1q9vCjH-jSP_OBofds_boSN" alt="5/7 data-verified=" redactor"="">3/7"&gt; З двох дробів із однаковим чисельником більшим є той в якого менший знаменник.'),
(638, 140, 42, 4, '<p>Приклад: <img src="https://lh4.googleusercontent.com/gI2YNXAwK0y9wFlSk26UavIQRxvik2K5YWdgvTOBaOEi3LfBKtpBQ6HstiSQtk1pXbFrR5Cir4Hy23kIdOsR2gbxGSb7FdeksjuuGHDFUPODeM6ZROIxsPtuAl-Ls-fQULLHzCOz8OczhoKS" alt="5/7 data-verified=" redactor"="">5/9"&gt;</p>'),
(639, 184, 1, 1, '\\[\\beta \\mu \\mu \\tau \\rho \\iota \\nu \\tau \\rho \\nu \\rho \\varsigma\\]\r\n'),
(640, 140, 43, 4, '<p><strong><em>Завдання: </em>Виконати дії <img src="https://lh4.googleusercontent.com/IgA3D_kD_YO34QtSZ1PsbQx-Bk8quAGoK9JsL-oCl7g9ghv16Jb1IEOh79qbG_Ot3fXAgn3TKIP-Uw2_EZ_3H-P1GMmEw9XNgfv9ifjivjiW5Yy61lcPgC9fLlvDskvrOXBmvbS8KUeCF2vj" width="167" height="53" style="width: 167px; height: 53px;"></strong></p>'),
(641, 140, 45, 1, '<p><b>Д</b>есятковим дробом називається спосіб представлення чисел у вигляді послідовності цифр розділених комою (у деяких країнах крапкою).</p>'),
(642, 192, 1, 1, '<p><strong>Курс</strong>: Інтернет-програміст</p><p><strong>Рівень:</strong> початківець</p><p><strong>Модуль</strong>: Елементарна математика </p><p><strong>Тип заняття:</strong> лекційно-практичне</p><p><strong>Тривалість:</strong> 45хв.</p><strong>Тема : </strong>Одночлен і многочлени'),
(643, 192, 2, 1, '<p><strong>Вступ</strong></p><p>Мета заняття: розглянути поняття одночлена і многочленна, ознайомитися з основними формулами та діями над ними. Вивичення даної теми дасть можливість краще зрозуміти поняття переміної в програмуванні. </p><p><strong>Частина 1 </strong></p><p><strong>Буквені вирази. Числові значення буквених виразів</strong></p><p><em>Буквеним виразом</em> називають запис, у якому числа і букви з’єднано знаками дій.</p>'),
(644, 192, 3, 4, '<p><strong><em>Наприклад</em>: <img src="https://lh5.googleusercontent.com/MQX3rzdIlIenNh3KnLywaLpcb__lMxPsg3BkVnClC6DjRvBQ45QWYZbmsfBHV0Syr1Y54SBYaBCyfBmIo4hRSTQr2j57jUn39xQz_-u2TZzDCJ2pTkifBvly6HboiMgzA8bb_2yjDMeUpzKQ" width="185" height="55" style="width: 185px; height: 55px;">– буквені вирази.</strong></p>'),
(645, 192, 4, 1, '<p>Буквені вирази також називають <em>виразами зі змінними</em>, а букви – <em>змінними</em>. Якщо в буквений вираз замість букв підставити числа, то одержимо числовий вираз, значення якого називається <em>числовим значенням буквеного виразу при даних значеннях букв</em>.</p><p>Якщо вираз не містить ніяких інших дій, крім додавання, віднімання, множення, піднесення до натурального степеня і ділення, його називають <em>раціональним</em>.</p>'),
(646, 192, 5, 4, '<p><strong><em>Наприклад</em>: <img src="https://lh3.googleusercontent.com/NCT3H4wHcPLN8vRa654msu6Y_B-XRhaQiZoUcAY4NwISke4HjPSXlufLGUoMvyNWaMuZm45iv-AnjWn0l_-b9pKBAItdH33NEM16ccxmaaVjkROmc8YY-pBz7l9ZDrSpp1N4izRTzzZ_SEqI" alt="2xy + x,\\frac{{a + b}}{{a - b}},\\frac{{3xy}}{{x + y}}"> - раціональні вирази.</strong></p>'),
(647, 192, 6, 1, '<p>Раціональний вираз, який не містить ділення на вираз зі змінною, називають <em>цілим</em>.</p>'),
(648, 192, 7, 1, '<p><strong><em>Наприклад</em>, x+y, 2xy- цілі вирази.</strong></p>'),
(649, 192, 8, 1, '<p><strong>Одночлени</strong></p><p><strong><em>Одночленом</em> називається добуток чисел, змінних та їх натуральних степенів, а також самі числа, змінні та їх натуральні числа.</strong></p>'),
(650, 192, 9, 4, '<p><strong><em>Наприклад</em>: 5a,6b,3x,xyz – одночлени.</strong></p>'),
(651, 192, 10, 1, '<p><em>Одночлен стандартного вигляду</em> – одночлен, який містить тільки один числовий множник, що стоїть на першому місці, і степені з різними буквеними основами.</p>'),
(652, 192, 11, 4, '<p><strong><em>Наприклад</em>: <img src="https://lh3.googleusercontent.com/xdw6yrNgfBE_iesSz0Xc76tpC5VBT7bGp5TQrPmAfPsffc_0ZxrAnbndJe4LvLbe1CVQIirfi6lo0nPgeuAu6QiUknUayZGdTIfmkX6FrLVDE-xlZFH3GhbJ0PK58u8RFIUpfHe6VJNfGdAB" width="308" height="54" style="width: 308px; height: 54px;">- одночлени стандартного вигляду.</strong></p>'),
(653, 192, 12, 1, '<p><em>Коефіцієнтом одночлена</em> називають числовий множник одночлена стандартного вигляду.</p><p><strong><em>Наприклад</em>: коефіцієнтами одночленів <img src="https://lh4.googleusercontent.com/KA-CtiSgQUXq6319BqCc_m4jUybfDChJkBvYJRWpvPhAKA74Wdf94P-Q9P33SEAt7Sjp_qE3eLFiYb0oNOx_DsDp3OeefZRYTKmm_D30KNuiza2pyjXCd7Hv3R-KmZYzIEaHj4aN4hqIJK_u" width="270" height="52" style="width: 270px; height: 52px;"> є відповідно числа 5, -3, -1, 1. Коефіцієнти 1 та -1 в одночленах не записують.</strong></p>'),
(654, 192, 13, 4, '<p><strong><em>Завдання :</em> Знайдіть коефіцієнт одночлена <img src="https://lh4.googleusercontent.com/tdITxRJOhtt5I3TIpwLbhnCmJvegfFWrQkUEp0BHC9tiO4ofqzz4Mt0ToilO9g1MHHV85-s0NtphJ7uFoBPJOVknVPZygCskszOf9PsVdlhcJfcMmieHYRxsa9iADVKbo_C_VoAZIqj_eZVE" width="147" height="53" style="width: 147px; height: 53px;"></strong></p>'),
(655, 192, 14, 1, '<p>Щоб записати одночлен у стандартному вигляді, треба перемножити всі його числові множники й одержане число поставити на перше місце, а потім добутки однакових буквених множників записати у вигляді степенів.</p>'),
(656, 192, 15, 4, '<p><strong><em>Наприклад</em>:<img src="https://lh5.googleusercontent.com/4SLZSkUWIi9Z5Tx-c9ycuEFC1ZUdmZQ0PrzMcp0IJG1OCitnS-NuiThuH_hMAhkfagWFr9tnfrP9milOFjXRGedpw3ENDnqcmluf7e4odqjCfJwT3RRxYbezQBnqKFci0UlCWn0Nn1rzOIQu" width="436" height="51" style="width: 436px; height: 51px;"></strong></p>'),
(657, 192, 16, 1, '<p><em>Степенем одночлена</em> називають суму показників степенів усіх буквених множників, що входять до одночлена.</p>'),
(658, 192, 17, 4, '<p><strong><em>Наприклад</em>: степінь одночлена <img src="https://lh3.googleusercontent.com/pJyUdNH_ppClOKqUqNUhosEPRNlc-UL6YYnLJlVoH0z7mow1zGr_Lk5IgkKkKjtNjIz7lYKKr4B8DovbXT0K5TaFu9y1Q_UiELsoRw1ZlT6GQDejfpcNc1dAWulzV5umgsQQceMfZJo7v0DJ" width="114" height="60" style="width: 114px; height: 60px;"> дорівнює 3+1+6=10</strong></p>'),
(659, 192, 18, 1, '<p>Якщо одночленом є число, відмінне від нуля, то вважають, що його степінь дорівнює нулю<strong>.</strong></p><p><strong><br></strong></p>'),
(660, 192, 19, 1, '<p><strong>Частина 2</strong></p><p><strong>Дії над одночленами</strong></p><p>Щоб помножити одночлен на одночлен, треба перемножити їх коефіцієнти і перемножити степені з однаковими основами.</p>'),
(661, 192, 20, 4, '<p><strong><em>Наприклад</em>:<img src="https://lh6.googleusercontent.com/TJDrQxYCPC039rtH9KDVUK5ka6aVCH2qeCSsrkK921A7Ef2CmCaVmEomypjHG4jFJkQWStr5aYIZoPaeUZKsnUmVmC7e9X3sFfiBYMMzBYvYZ7uQ0n2Hs80mEXYiXTadSalfZiqYK0VVvhfr" width="440" height="52" style="width: 440px; height: 52px;"></strong></p>'),
(662, 192, 21, 4, '<p><strong><em>Завдання </em>Знайдіть значення виразу <img src="https://lh6.googleusercontent.com/rEkqKJYa7PtmhBVo5nVDsorubQNi5Jsy-UZm8xFJx9VnLyGG0zPmQirKB4Clu54piPu9uYdzP52b9yYr7nUSx2PLTJKQS7xChET7r89pQbNt5X4R4xDsukZJeUh3BzNg6V3iEjXBM_w1ykcr" width="180" height="51" style="width: 180px; height: 51px;"></strong></p>'),
(663, 192, 22, 1, '<p>Щоб піднести одночлен до степеня, треба піднести його коефіцієнт до цього степеня і помножити показник степеня кожної букви на показник степеня, до якого підноситься одночлен.</p>'),
(665, 192, 23, 4, '<p><strong><em>Наприклад</em>:<img src="https://lh5.googleusercontent.com/obiF6roMthkQf9APdGX8JjGqw1TpC9KhB87FS75bTydIu9BvENeGf93ZIe5j-w3UQcnHgZLZZSDYz0x1tCHuxhrr5idx4wuIKazXEMKXKJIRnGTdUhvWhd_CsqE1DD62h3noSNTYYsuQ482V" width="324" height="54" style="width: 324px; height: 54px;"></strong></p>'),
(666, 192, 24, 4, '<p><strong><em>Завдання </em>Знайти значення виразу <img src="https://lh6.googleusercontent.com/sOccAUX-QyYdFmaaEYR4W3SzmMDVmGOLSTXDi1PljFpIbKny4I0zudFifDi1C_tYa0e2fXggJVDNzG9FRrftdhKT7v_lIE0PifIhIX8PE9To07Lywmgv9PQpOnXxrBQNt9v36-nxfwArkzUD" width="278" height="52" style="width: 278px; height: 52px;"></strong></p>'),
(667, 192, 25, 1, '<p>Щоб поділити одночлен на одночлен, треба поділити коефіцієнт діленого на коефіцієнт дільника, до знайденої частки приписати множниками кожну змінну діленого з показником, що дорівнює різниці показників цієї змінної в діленому і дільнику.</p>'),
(668, 192, 26, 4, '<p><strong><em>Наприклад</em>: <img src="https://lh5.googleusercontent.com/vgVaIIvggEmtwsLd-XWN5u2IxA7rPxTwB_3sT45shNj3Do9gzQOMnoEwmUyKC_0dmfzcTMrgyVNSULqHWQ_oZfABsd3KpW8v33xEYYbPhr5jOycaI8LCSo-K_tNiVaYN4Kf0lEFW7We-bChH" width="658" height="50" style="width: 658px; height: 50px;"></strong></p>'),
(669, 192, 27, 4, '<p><strong><em>Завдання</em> Виконайте ділення.:<img src="https://lh5.googleusercontent.com/Hc4CCNhCvhNU1Aq4FPwfHF8Dc2rM8McHoAF1eqA8JLgyBgUOwgMKwzKHPQBh4EZx4pYc-RhG10TsmEMV_nZ3r7YRUTL78C00wKVhDV-szwHNMuS2lS9Ye31l4Nl8adiG6dDao7N-Iesm5l5H" width="108" height="56" style="width: 108px; height: 56px;"></strong></p>'),
(670, 192, 28, 1, '<p><strong>Частина 3</strong></p><p><strong>Многочлени</strong></p><em>Многочленом</em> називається алгебраїчна сума кількох одночленів.'),
(671, 192, 29, 4, '<p><strong><em>Наприклад</em>: <img src="https://lh3.googleusercontent.com/WztRDJTN6t-jtH7_JtFN3f8rZ_H-tUXoN8tRJkUrDVSnRyB-BgGiFfK8-gol2l8sPZI8f7bmdKON0b3zR4tQmMa9sBwH3HQQJavO-lr13S4Cb47bHp4iHYJwY-btZPs9gUMwMW8BqmERMu5q" width="375" height="50" style="width: 375px; height: 50px;">- многочлени.</strong></p>'),
(672, 192, 30, 1, '<p>Одночлени, з яких складається многочлен, називають його <em>членами</em>. Одночлен – окремий вид многочлена. Многочлен, який містить два або три доданки, називають відповідно <em>двочленом</em> або <em>тричленом</em>.</p>'),
(673, 192, 31, 4, '<p><strong><em>Наприклад</em>: <img src="https://lh5.googleusercontent.com/zQJzfDNg5Fu-GODtck3Pd8kYkL69SMoXB9zBPnZB-Spt1dFBLadaBA3yHcD1CVjq3nYcrkV-WjNQ8RjTIhtSWNG18byGAEEOmPBvzMQYnHlsbMYr8dS0uNWKNPcK55dw2qWPTYUQDbWaz5Bf" width="193" height="53" style="width: 193px; height: 53px;"> - двочлени; <img src="https://lh5.googleusercontent.com/Q92qPvIwfuxRzYXsECJSxLUE3h1eJnsX_syiGC1ypTn-LJNo3u2YdUoefW87B5mceqAQw9JVKRhpu3ViuZnH-4yoEpWBGk12ufIO7IWpQlvngMR3BjRGn9gWfAZVTx53ZdF8_xuE8CnwR8Rj" width="313" height="52" style="width: 313px; height: 52px;" rel="width: 313px; height: 52px;"> - тричлени.</strong></p>'),
(674, 192, 32, 1, '<p><em>Подібні члени многочлена</em> – це однакові одночлени, або одночлени, запис яких у стандартному вигляді відрізняється лише коефіцієнтами.</p>'),
(675, 192, 33, 4, '<p><strong><em>Наприклад</em>: у многочлені <img src="https://lh3.googleusercontent.com/GPbFjbajGKhcQFFu3o1Sm1GRzDJi1BcD09Hqe99Lfh7csDoR2O9tFr7ihbpd4XvHzvz2mFJ4Fy74XTWuCYlFONReQegBgFAxuwts3q6UXxh99YleiyWZ326xqnsA5hRrLOXYktABoUeMGqPf" alt="15{a^2}b + 3a{b^2} - 7{a^2}b + 5a{b^2}"> перший і третій, другий і четвертий члени подібні.</strong></p>'),
(676, 192, 34, 1, '<p><em>Зведення подібних членів</em> – це спрощення многочлена, коли алгебрагічна сума подібних членів замінюється одним членом. Щоб звести подібні члени, треба додати їх коефіцієнти і результат помножити на їх спільну буквену частину.</p>'),
(677, 192, 35, 4, '<p><strong><em>Наприклад</em>:<img src="https://lh5.googleusercontent.com/0C755I6ied7U84InOUURDEk1_U4ymhVfH9oQ8P3hRWo34mi12kP0YA0-25sejsInRTFYpxscTXmE4idmiAkyS8SKiDBzhcNnWk87zpshbrIsSSQhpbjC4SOMPRSjygdqbA66xRJhSolttiXl" width="698" height="58" style="width: 698px; height: 58px;"></strong></p>'),
(678, 192, 36, 4, '<p><strong><em>Завдання</em> Звести подібні члени<em><img src="https://lh3.googleusercontent.com/ucjDlNS93RVnG1JhTNgCRd4-0bKiwp0BDV0cmKhpDEpIBUZCQj3PqUW8biubHbddJqMFYaa1ELIiaakF4okN1sD-FDBbPn6rmR0dVrazD5uosiPpjSBSvuyGvlAmS7wG3S9N_PHuu5NqiFb2" width="435" height="53" style="width: 435px; height: 53px;"></em></strong></p><p><em><br></em></p>'),
(679, 192, 37, 1, '<p><em>Стандартний вигляд многочлена</em> – це запис многочлена, усі члени якого мають стандартний вигляд і серед них немає подібних.</p><p> <img src="https://lh4.googleusercontent.com/mIt7cdytxVCv_wg3TrsPEpZVL6F38eZOYXaSYlGeRxVTQqPJaCk_R-fMVzQEoUIBoowiUi3RQPGkiVX8e6EmawrSTYl-CjOhQnjaP_xsOn-TYpmOnziTOzhejASSu3n5POWBCgwB8ODtaYWR" width="361" height="54" style="width: 361px; height: 54px;">- многочлени стандартного вигляду, </p><p> <img src="https://lh3.googleusercontent.com/iXK8XrXK6YaD2Ma384tQUvox3pR1yQ6XUtmNDcb1CJpX5k97egYHHjfLq87I0TuI0dUERxFSOFOq26ox_cVfVXfaxuWzhODEDH7tNj5bohCyN61bvhqa1IDT3BG9nNwWe9ocr1wCfv6WuQji" width="318" height="52" style="width: 318px; height: 52px;">- многочлен нестандартного вигляду.</p><p><em>Степенем многочлена стандартного вигляду</em> називають найбільший зі степенів одночленів, із яких складається многочлен. <em>Степенем довільного многочлена</em> називають степінь тотожно рівного йому многочлена стандартного вигляду.</p>'),
(680, 192, 38, 4, '<p><strong><em>Наприклад</em>: степінь многочлена <img src="https://lh6.googleusercontent.com/2AmN81LGRwnk0OCCkW5HQ0ezvv7mlmH3jVWePba5BGqy4BWens2ykz3KJXFYfNkG8VrN66rPmGYngzSirSbQ8ScWeQttMj4NByokEyWhd1YeCUC20nvlsa0qxGTJw8uUNn_P5nKZeZRJe1be" width="321" height="51" style="width: 321px; height: 51px;">дорівнює степеню одночлена <img src="https://lh4.googleusercontent.com/p3PxQ81ks9ch8_pPGZSRCL05ruRrd3uRIEdI6i5kDQ1M9TyXOi4h6BHIorDcUtKfCIqbwg6mNx5X76kMhX8K5khBNxmQFREwg8zch_zjfYIKsjKB_XvdBB054cFfG2vusGqGYIJ1FOa9HCrq" alt="2{a^5}{b^5}">, тобто 5+5=10.</strong></p>'),
(681, 192, 39, 4, '<p><strong><em>Завдання </em>Звести многочлен до стандартного вигляду<strong>:</strong></strong></p><p><img src="https://lh5.googleusercontent.com/N-36EWiFP3OgeZPxHGHZ6KGDb1J02dxDW8_PerG7SrxFl4H6op70HPJsnUOmVBjwkCEES1lNxuQnCFI1l0_N44HzEFcnhbUDobPoExKly546Kt7185m4mdgHDlTUDQPyVHyj_ihXQAC08bNL" width="399" height="56" style="width: 399px; height: 56px;">;</p>'),
(682, 192, 40, 1, '<p><strong>Частина 4</strong></p><p><strong>Дії над многочленами</strong></p><p>При <em>додаванні</em> многочленів користуються правилом розкриття дужок: якщо перед дужками стоїть знак «+», то дужки можна опустити, зберігши знаки кожного одночлена.</p>'),
(683, 192, 41, 4, '<p><strong><em>Наприклад</em>:</strong></p><p><img src="https://lh5.googleusercontent.com/UKIGWQYVbpR8No7qyy9Y6yhefusLyJ_P8FgoRQvEVBRYjD6PAOQ_8Ib0rzyXhvYzPxKVbnnssiGI-Ehq_HiCmFxwRbR-aeZ6h7lUmE7HWOofkIDeXQHYJtFnyoqaOWNr_ZBkp_kKhzSm2dQe"></p>'),
(684, 192, 42, 4, '<p><strong><em>Завдання </em>Виконати дії: (x2+2xy+y2)+(2xy-x2-y2);</strong></p>'),
(685, 192, 43, 1, '<p>При <em>відніманні</em> многочленів користуються правилом розкриття дужок: якщо перед дужками стоїть знак «-», то дужки можна опустити, змінивши знак кожного одночлена, що містився в дужках, на протилежний.</p>'),
(686, 192, 44, 4, '<p><strong><em>Наприклад</em></strong></p><img src="https://lh3.googleusercontent.com/FvVjpPyVSgYCsint_3Sqxnp1jt-uz0XrtRvdSUu-cYdj7g9N4xMDJQHwNltNgGQncX5kBVBTNJIbZ0biUxA9f1Jmi2wdnP9RlOmts2giwccVGTRy2QDfqISHrX1gSw4Fp6bZkdwuADwyq7ba">'),
(687, 192, 45, 4, '<p><strong><em>Завдання </em>Виконати дії: : (2x2+4xy+3)-(xy-2x2-y2);</strong></p>'),
(688, 192, 46, 1, '<p>Щоб <em>помножити одночлен на многочлен</em>, треба кожний член многочлена помножити на цей одночлен й одержані одночлени додати.</p>'),
(689, 192, 47, 4, '<p><strong><em>Наприклад</em>:.<img src="https://lh3.googleusercontent.com/SwLyaPXrGVRwNTSKHva7LCkQVABU55tlFSE_-mVv_UeAjVkFeTw-RlJb9zG398iK0ck8DdFCGtKJQJIpdP5K0iHEBwtWzMGTqipqL3BVMlTwROA-Kg6H5mriSGl8yjqmvQoANYctbSJppl5e" width="602" height="62" style="width: 602px; height: 62px;"></strong></p>'),
(690, 192, 48, 4, '<p><strong><em>Завдання</em> Виконати множення (3x+7y)·6a</strong></p>'),
(691, 192, 49, 1, '<p>Щоб <em>помножити многочлен на многочлен</em>, треба кожний член одного многочлена помножити на кожний член другого многочлена й одержані многочлени додати.</p><p><img src="https://lh4.googleusercontent.com/sZSV8PKegNcwLjfqtcI2HHiSItTw8jfHxxdaAa2ilSvltcLJ0VSdtBWiQdsysVAWW5rHq_7m_VPOdyFHNupbO6OXbEy4t_QYJRU5pWp46lnqoNatN5482bxS651OIdq6ywAMT5CP7mEcKMwz"></p>'),
(692, 192, 50, 4, '<p><strong><em>Завдання</em> Виконати множення (5a+7b)·(2+4a)</strong></p>'),
(693, 192, 51, 1, '<p>Щоб <em>розділити многочлен на одночлен</em>, треба кожний член многочлена розділити на цей многочлен й одержані результати додати.</p>'),
(694, 192, 52, 4, '<p><strong><em>Наприклад</em>:</strong></p><p><img src="https://lh5.googleusercontent.com/6bdWxYptY0TYsljY6NNuaycUqEGDyY2qxztyChV16zAlMdEDTZ5NRzWRU7MSnxNQJ8O8Yiu-nMqVyF16GFGjTseDNPho3_5UyY-cCZgZuvDB0pV8lbouTpir8MZjmn1Wrlx7FU0OXsrXUz6n"></p>'),
(695, 192, 53, 1, '<p>.<em>Розкладанням многочлена на множники</em> називають запис многочлена у вигляді добутку многочленів.</p>'),
(696, 192, 54, 4, '<p><strong><em>Наприклад</em>:.<img src="https://lh6.googleusercontent.com/YVNj6HD0IurL-vbr_hYk6szPWVG_-lQT5-1j8A2VAi_8P3OQ397Ntoqmb3_ZR_4f-05KPdn_FufD9i-hHvgQ_2BD9_6k8RD2-fqNFyFAmMajIoj1nOLY20jvEIrYwO_GrmoToBmhC0gAQfgd" width="364" height="53" style="width: 364px; height: 53px;"></strong></p>'),
(697, 192, 55, 1, '<p>При <em>розкладанні многочлена на множники</em> використовують такі способи.</p><p>1. Винесення спільного множника за дужки.</p>'),
(698, 192, 56, 4, '<p><strong><em>Наприклад</em>:<img src="https://lh5.googleusercontent.com/xldnR-qWBn_0YVVYxq72gMJJbXA762646zKdaMiT3F7oX0GpmdqPMX9VK8qnlY5hiPBT_Q1pdbdX5l0Ga3FOsER8IScUncfL1zRC-1ZefLi5kQj133pn2MhMhKPwnfHSg2U5FjkdXSTgBhNs" width="304" height="53" style="width: 304px; height: 53px;"></strong></p>'),
(699, 192, 57, 1, '<p>2. Спосіб групування.</p>'),
(700, 192, 58, 4, '<p><strong><em>Наприклад</em></strong></p><p><img src="https://lh5.googleusercontent.com/MRlFXF5Nl-wcRsbwzlNRla9UatNrGr8ajPoCeavs0Q9JJD6uALEqhxkbGM46gq4f2TfyV-n0dJqRAlD8KKZGQAngRie0aB-eaDFiiaGvU9rsQnUinGRsO44dRARdeyOY4GRPTKyk-kEJesch" alt="3x - 3y - {x^2} + xy = (3x - 3y) - ({x^2} - xy) = 3(x - y) - x(x - y) = (x - y)(3 - x)">.</p>'),
(701, 192, 59, 1, '<p>3. Використання формул скороченого множення.</p><p>Формули скороченого множення: <br>a2-b2=(a-b)(a+b); <br>(a+b)2=a2+2ab+b2; <br>(a-b)2=a2-2ab+b2; <br>(a+b)3=a3+3a2b+3ab2+b3 або a3+b3+3ab(a+b); <br>(a-b)3=a3-3a2b+3ab2-b3 або a3-b3-3ab(a-b); <br>a3+b3=(a+b)(a2-ab+b2); <br>a3-b3=(a-b)(a2+ab+b2); <br>ax2+bx2+c=a(x-x1)(x-x2).</p>'),
(702, 192, 60, 4, '<p><strong><em>Завдання</em></strong></p><p>Спростити вираз та знайти результат: bc(11c-7b)-((b-2c)·(b2-5bc)+c3), якщо b=-1/2; c=3/2;</p>'),
(703, 193, 1, 1, '<p>Сьогодні все більше і більше ми чуємо фразу “база даних”, Але не до кінця розуміємо всю суть цього слова. Для Вас, як майбутніх програмістів, варто спочатку зрозуміти що це таке і з чим його їдять. Для початку звернемося до наукових джерел і дізнаємось про терміни які нам будуть необхідні для вивчення курсу. Отже, в науковій літературі можна зустріти наступні твердження.</p><p><strong>База даних </strong>- це впорядкований набір логічно взаємопов''язаних даних, що використовуються спільно та призначені для задоволення інформаційних потреб користувачів.</p><p><strong>База даних </strong>- це систематизоване сховище інформації.</p>'),
(704, 179, 1, 1, '\\[vhmv mvnmbn ,b, bm, bm, bm. mn. n,. n.n,.n.gkjhxkghbjkcghbghbcvh hdfkghdfkghdfkghdf fghdfkdfhbjcckhgcfhbfkhbkfghkfghfkjhbvb\\]\r\n\\[vhmv mvnmbn ,b, bm, bm, bm. mn. n,. n.n,.n.gkjhxkghbjkcghbghbcvh hdfkghdfkghdfkghdf fghdfkdfhbjcckhgcfhbfkhbkfghkfghfkjhbvb\\]\r\n'),
(706, 140, 1, 1, '<p><strong>Найбільший спільний дільник</strong> (НСД) </p>'),
(707, 140, 4, 1, '<p>Щоб знайти НСД двох або кількох чисел, необхідно:</p><ul><li>розкласти дані числа на прості множники;</li><li>скласти добуток усіх спільних простих множників;</li><li>обчислити складений добуток.</li></ul><p>Два числа, найбільший спільний дільник яких дорівнює одиниці, називаються взаємно простими числами.</p>'),
(708, 140, 3, 4, '<p>Наприклад, НСД чисел 10; 40; 70 дорівнює десяти.</p>'),
(709, 140, 38, 7, '<p>Щоб поділити два дроби, потрібно:</p><p>1. другий дріб замінити оберненим до нього (у другому дробі поміняти місцями чисельник та знаменник);</p><p>2. помножити отримані дроби.</p>'),
(710, 140, 34, 7, '<p>Щоб помножити два дроби, потрібно:</p><p>1. перемножити чисельники і результат записати у чисельник;</p><p>2. перемножити знаменники і результат записати у знаменник.</p>'),
(711, 140, 30, 7, '<p>Щоб додати (відняти) два дроби, потрібно:</p><p>1. якщо дроби мають різні знаменики - звести їх до <strong>спільного знаменника</strong>;</p><p>2. додати (відняти) чисельники дробів і результат записати у чисельник;</p><p>3. знаменником записати їх спільний знаменник.</p>'),
(712, 140, 26, 7, '<p>Щоб звести два дроби до спільного знаменника, потрібно:</p><p>1. знайти НСК двох знаменників;</p><p>2. знайти додаткові множники дробів поділивши знайдене НСК на кожен із знаменників;</p><p>3. помножити чисельник та знаменник кожного дробу (розширити дроби) на отримані додаткові множники.</p>'),
(713, 140, 44, 1, '<p><strong>Десяткові дроби</strong></p>'),
(714, 140, 46, 4, '<p><b>Д</b>есятковим дробом називається спосіб представлення чисел у вигляді послідовності цифр розділених комою (у деяких країнах крапкою).</p><p>Наприклад дріб 12,345 читається "дванадцять цілих триста сорок п''ять тисячних".</p><p><br></p><a name="newBlockForm"></a><p><a name="newBlockForm"></a></p><a name="taskForm"></a>'),
(715, 140, 47, 1, '<p>В початок цілої частини і/або в кінець дробової частини можна дописувати скільки завгодно нулів.</p><p><br></p>'),
(716, 140, 48, 4, '<p>Приклад: 00012,43500.</p><p><br></p>'),
(717, 140, 49, 1, '<p>Скінченним десятковим дробом називається дріб, який містить скінченну кількість цифр після коми. Приклад: 12,435.</p><p>Нескінченним десятковим дробом називається дріб, який не містить скінченної кількості цифр після коми. Приклад: 12,435...</p><p>При <strong>додаванні (відніманні) десяткових дробів</strong> числа записують так, щоб однакові розряди були записані один під одним, а кома – під комою, і додають (віднімають) як натуральні числа</p><p><br></p>'),
(718, 140, 50, 7, '<p>Щоб <strong>помножити один десятковий дріб на інший</strong>, потрібно виконати множення, не звертаючи уваги на коми, і в отриманому добутку відокремити праворуч комою стільки цифр, скільки їх стоїть після коми в обох множниках разом. <br></p>'),
(719, 140, 51, 4, '<p>Наприклад, <img src="https://lh6.googleusercontent.com/R3TeC0wJW7ovtSOuq_0rwbmzlV4Ep7tpcQa2COLuwbHvFOnRh7U5Q_t-1M1nmwSqupLvq81MFX0MER_ZOIQakJAWzmkSQfqkztpsnz-HmVdrgmmefOkYmLKUl6D-mOMeALE6yaP7DIHsklvw">.</p><p><br></p>'),
(720, 140, 52, 7, '<p>Щоб <strong>помножити десятковий дріб на 10, 100, 1000 і т.д.,</strong> необхідно в цьому дробі перенести кому вправо на стільки цифр, скільки нулів у множника (дописавши у випадку необхідності до дробу праворуч певне число нулів). Наприклад: <img src="https://lh6.googleusercontent.com/W5VCSo6_rDyCu_UZJMHWw3RuKNGppo826HhdBD-OnOxljlQNKzTTPAzXNl_Nwpe6E0Y1uszTsDYIff59eDvhnSmv4UNK4sVdWM04JUl1-N-nfEBGr_3s_uMg2GCGc89V-I2NxDkL8xPMyBau">; <img src="https://lh3.googleusercontent.com/n-nNbWNto0_3HIB0TKKHx4YfjeH9agbYQEI_xDOBSTt6BPGdrNG4CGs2B0AMqdvGJxt-9nXRa5_64u6NjygKKF6AqNeLVR0V8LhJYJbYauaC2W435x1Voyx4i5IZeyIla3GaziYH9kM8fwjQ">.</p><p><br></p>'),
(721, 140, 53, 1, '<p><strong>Ділення десяткового дробу на натуральне число</strong> виконується так само, як ділення натурального числа на натуральне, але кому в частці ставлять після того, як закінчено ділення цілої частини.</p><p>Розглянемо тепер <strong>ділення десяткового дробу на десятковий дріб</strong>. Нехай треба поділити 8,316 на 2,31. Для цього і в діленому, і в дільнику перенесемо кому вправо на стільки цифр, стільки їх є після коми в дільнику (в даному прикладі на дві). Іншими словами, помножимо ділене і дільник на 100 – від цього частка не зміниться. Тоді треба поділити дріб 831,6 на натуральне число 231, тобто задача зводиться до вже знайомого випадку.<br></p>'),
(722, 140, 54, 7, '<p>Щоб <strong>поділити десятковий дріб на </strong><strong><img src="https://lh5.googleusercontent.com/f_QuRJkjBLfTJFHUUJseF8rdK6iEMAdvjS-qb9TkY3D_uVxMsmcfeQ0kIlGf5hm6upxBL2AXuyvzCTjhxaf8rDSMlDOVh8ng_brbu4X6VExviHNl36Yam0QqGkdja7bfDxywfXHiP_3v_EZY"></strong>, треба в цьому дробі перенести кому на <em>п</em> цифр вліво (при цьому у випадку необхідності зліва приписати потрібне число нулів).</p><p><br></p>'),
(723, 140, 55, 1, '<p>Як для натуральних чисел ділення не завжди можна виконати, так його не завжди можна виконати й для десяткових дробів</p>'),
(724, 140, 7, 7, '<p>Щоб знайти НСК двох чисел, необхідно:</p><ul><li>розкласти дані числа на прості множники;</li><li>скласти добуток усіх простих множників;</li><li>обчислити складений добуток.</li></ul>'),
(725, 100, 9, 7, '<ul>\n	<li>що потрібно для написання програми на мові С?</li>\n</ul>'),
(726, 127, 1, 1, '<p><strong>Пристрої введення та виведення.</strong></p>'),
(727, 127, 2, 1, '<p>Однією з ключових складових комп’ютера є пристрою введення та виведення. За їх допомогою у комп’ютер можна внести дані та отримати результат.</p><p>Для введення інформації до пам’яті комп’ютера існують різні прист­рої. Найбільш універсальним пристроєм введення є клавіатура. До пристроїв введен­ня належать також маніпулятори типу миша, джойстик. Для оптичного зчи­ту­вання зображень і перетворення їх у цифровий код застосовуються ска­не­ри. Останнім часом використовуються цифрові ві­део­­камери та фотоапара­ти.</p>Основним пристроєм виведення інформації в ПК є монітор. Монітор служить для відображення на екрані графічної та символьної інформації. Для виведення інформації на папір використовують принтери.'),
(728, 127, 3, 12, 'Які з пристроїв призначені для введення інформації'),
(729, 127, 4, 1, '<p><strong>Клавіатура</strong></p>'),
(730, 127, 5, 1, '<p>Сучасна клавіатура – це складний пристрій, що дозволяє вводи­ти дані в ПК. Крім того, за допомогою клавіатури користувач може керувати роботою комп’ютера та різних додатків. Окрім панелі з клаві­шами, вона містить електронні схеми, які пере­тво­рюють натискання клавіш в двійкові коди.</p><p>Клавіші клавіатури можна розділити на декілька груп.</p><p>В центрі клаві­атури знаходяться алфавітно-цифрові клавіші. Ці клавіші мають подвійні позначки – верхні написи працюють, коли ми використовуємо латинські літери, а нижні, коли набираємо текст кіриличними літерами. При натис­нутій клавіші Shift набираються великі літери (тобто маємо верхній регістр клавіатури). Відпустивши клавішу Shift знову переходимо до набору малих літер. Набір малих літер відповідає нижньому регістру кла­віатури. Для переходу в верхній регістр можна використати клавішу Caps Lock. Натискання на цю клавішу перемикає режими нижнього та верх­нього регістрів.</p><p>Справа від алфавітно-цифрових клавіш розміщується група клавіш керування курсором (клавіші зі стрілками, Home, End, Page Up, Page Down). Клавіша Home повертає курсор на початок рядка, а End – на кінець рядка. Клавіші Page Up, Page Down забезпечують перегортання видимих частин сторінок документа.</p><p>В правій частині клавіатури розташовано цифрову клавіатуру. Ці клавіші використовуються для введення цифр та знаків арифметичних дій (в режимі Num Lock – світиться індикатор Num), або для керування курсором, якщо режим Num відключений.</p><p>Вище алфавітно-цифрового блока знаходяться функціональні клавіші F1 – F12. У кожному додатку цим клавішам відповідає різне призначення. F1 завжди використовується для виклику довідки.</p><p>Наведемо призначення спеціальних клавіш клавіатури:</p><p>Enter – введення команди;</p><p>Esc – скасування останньої дії, вихід з поточного режиму програми;</p><p>Del – видалення виділених об’єктів, або символу справа від курсору;</p><p>Backspace – видалення символу зліва від курсору;</p><p>Print Screen – копіювання вмісту екрана в буфер.</p><p>Всього клавіатура містить 101 клавішу. Останнім часом для роботи в ОС Windows розроблені зручні 104-клавішні клавіатури. На цих клавіа­турах є додаткові дві клавіші для виклику головного меню та клавіша виклику контекстного меню. В ноутбуках зазвичай використовується 88-клавішна клавіатура.<br></p>'),
(731, 127, 6, 1, 'https://lh5.googleusercontent.com/NWb8UC6SfqGjbyn8G4WWrkxWzvg7t4HK22GkeuzX1TeV2WVFn-Pxou2J0OWM3qbt3Pd5AvdjsyEtnXA1uKzqAPf26kJKvlvotw5xXucJ8su9emLXMqTMkT7_Mr81UmYuVMIjA2E"></p'),
(732, 127, 7, 12, 'На які блоки розділяють клавіші клавіатури?'),
(733, 127, 8, 1, '<p><strong>Миша.</strong></p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(734, 127, 9, 1, '<p>Миша разом з клавіатурою є невід’ємним атрибутом ПК. Без неї не мож­лива робота з більшістю сучасних додатків.</p><p>Миша – це пристрій для позиціонування курсору та керування роботою програм</p><p>Разом з переміщенням миші по екрану монітора рухається покажчик миші. Якщо покажчик миші навести на об’єкт, то можна виконати низку дій з об’єктом. Клацання лівою кнопкою миші призводить до виділення об’єкта, клацання правою кнопкою – до виклику контекстного меню.</p><p>Миші є оптико-механічні та оптичні.</p><p>Принцип роботи оптико-механічної миші є простим: отяжена кулька з гумовим покриттям котиться по пласкій поверхні і обертає 2 перпен­дику­лярно розміщених валики, які формують рух в системі „горизонтально-вертикально”. На кінці кожного валика є диск з малими дірками по колу. Це колесо крутиться між джерелом світла (світодіодом) і приймачем (фо­тот­ран­зистором). Інформація про довжину світлового імпульсу (чергуван­ням світла-темноти) перетворюється в електричні сигнали і дозволяє визначити швидкість переміщення курсору на екрані та його розміщення.</p><p>Оптичні миші. В ній установлений цифровий сигнальний процесор. Цей процесор в реаль­ному часі порівнює картинки, які поступають з мініатюрної відеокамери оптичного датчика. За результатами порівнянь визначається, в який бік і з якою швидкістю переміщається миша. В сучасних моделях оптичних мишей порівнюється від 1,5 до 6 тис. картинок за секунду). Саме такі оптичні миші нині найбільш популярні.</p><p>Більшість мишей підключаються до ПК за допомогою тонкого багато­жильного кабелю. Такий спосіб простий і дешевий, але зайвий провід на столі є небажаним, тому винайшли безпровідні миші.</p>При перегортанні документів необхідно постійно перемикати увагу з документа на смугу прокрутки (що є незручним). Можна для цього ско­рис­татися клавішами PgUp, PgDown. Але при перегляданні сайтів руку з миші забирати незручно, оскільки більшість операцій з гіпертекс­том виконується саме мишею. Тому такі функції стали виконувати миші зі скролінгом. Між двома кноп­ками миші є коліщат­ко, за допомогою якого можна прокручувати по вертикалі вміст актив­ного вікна. Така конструкція миші є нині фактичним стандартом.'),
(736, 127, 11, 12, 'Який тип комп’ютерних мишей сьогодні найбільш популярний.'),
(737, 127, 12, 1, '<p><strong>Інші пристрої введення.</strong></p>'),
(738, 127, 13, 1, '<p>Окрім клавіатури та миші існують різноманітні пристрої для введення інформації до комп’ютера.</p><p>Джойстик. Спеціальний пристрій введення, який зазвичай використовується для ігор. Його форма, розташування кнопок є більш зручним для ігор, ніж використання стандартної клавіатури.</p><p>Позиціонування курсору, окрім миші можливо за допомогою сенсорної панелі - невеликої ділянки корпусу, якій реагує на натискання пальцем та його переміщення. Використовується, зазвичай, в ноутбуках.</p><p>Сканер - спеціальний пристрій, який призначений для переведення зображень у електронний формат. За його допомогою здійснюється сканування різноманітних текстів, зображень, фотографій та іншої інформації та збереження. У подальшому за допомогою комп’ютера можна обробити цю інформацію з метою покращення якості зображення, розпізнавання тексту та інше.</p><p>Веб-камера. Дозволяє транслювати зображення у комп’ютер. За допомогою веб-камери, комп’ютера з виходом до Інтернету та спеціального програмного забезпечення можна поспілкуватись з людиною на іншому кінці світу, побачити її на моніторі комп’ютера.</p><p>Мікрофон. Дозволяє транслювати звук у електронний вигляд, зберегти його та обробити на комп’ютері.</p>Взагалі існує велика кількість пристроїв введення даних до комп’ютера. Для певних потреб можуть бути розроблені окремі пристрої введення. Наприклад для охоронної системи пристроєм введення буде набір датчиків руху.'),
(739, 127, 14, 12, 'Що б з цього Ви назвали пристроєм введення?'),
(740, 127, 15, 1, '<p><strong>Монітор</strong></p>'),
(741, 127, 16, 1, '<p>Основним пристроєм виведення інформації у сучасних комп’ютерів є монітор. Він дозволяє вивести інформацію з комп’ютера на екран у зручному для людини вигляді - тексту, зображень, відео та інше (згадаємо, що інформація у комп’ютері зберігається у вигляді 0 та 1).</p><p>Перші комп’ютерні монітори були основані на електронно-променевій трубці та являли собою досить великий пристрій. Зараз вони вже майже не використовуються. Зображення на таких моніторах формується за рахунок спрямування потоку електронів на внутрішню площину кінескопу, покриту шаром спеціального матеріалу, який при отриманні заряду (коли на шар потрапляє електрон) здатен світитись.</p><p>Найпоширеніша на сьогоднішній день технологія - рідкокристалічні монітори. На відміну від моніторів, основаних на електронно-проміневій трубці, вони є більш компактними та енергоефективними. Зображення на рідкокристалічних моніторах формується за рахунок зміни напруги на рідкому кристалі, в результаті чого рідкий кристал приймає іншу структуру та світло, яке проходить крізь кристал переломлюється по іншому та змінює колір.</p><p>Зображення для монітора формує спеціальний пристрій - відеокарта.  Відеокарта - це пристрій який відповідає за виведення зображення на екран. Існують як зовнішні (дискретні) відеокарти так і внутрішні (інтегровані у материнську плату). Відеокарта має свою оперативну пам’ять та процесор (внутрішні відеокарти використовують основний процесор) яка використовується для формування та обробки зображення, яке потрібно вивести на монітор.</p>'),
(742, 127, 17, 1, 'https://lh3.googleusercontent.com/tkRitJ-7mdFyf9_QkOUoi2tfKMqyP479kzs6Ut4jfsSq5c06nN3vmE2RWd1Z2hI9HqpJhSuJTFxP03AYeDCgIjlHBi2tI-zKMNL9z2FaN-KvaAxScBC8bNCTwk3tbloYIS8nyBs"></p'),
(743, 127, 18, 12, 'Без якого пристрою в комп’ютері неможлива робота монітору'),
(744, 127, 19, 1, '<p><strong>Принтер</strong></p>'),
(745, 127, 20, 1, '<p>Принтер - це пристрій якій слугує для виведення графічної інформації на папір. Це може бути текст, зображення, фотографії, різноманітні графіки та інше.</p><p>Існує 3 основні типи принтерів.</p><p>Матричний принтер. Він друкує за допомогою друкуючої головки. Головка принтера розташовується на каретці, що рухається по напрямних впоперек аркуша паперу; при цьому голки в заданій послідовності наносять удари по фарбувальній стрічці, фарба з якої відбивається на папері. Фактично, матричний принтер - найближчий нащадок друкарської машинки. Тільки у друкарській машинці за 1 раз друкувалась одна буква, а у матричному принтері - ряд крапок. Матричні принтери досить шумні, якість та швидкість друку низька. Проте вартість друку - дуже низька. Зараз майже не використовуються.</p><p>Струменевий принтер. Принцип дії струменевих моделей подібний до способу роботи матричних принтерів тим, що зображення на носії формується за рахунок точок. Проте замість головок з голками в струменевих апаратах використовується матриця, яка виконує друк за допомогою рідких барвників. Картриджі з барвниками можуть мати вбудовану друкувальну голівку. Є також і моделі, в яких друкувальна матриця являє собою деталь принтера, а змінні картриджі місять лише барвник. Якість зображення, яку виводить струменевий принтер досить висока, а з використанням спеціального паперу - надзвичайно висока. Є можливість друкувати велику кількість кольорів за рахунок перемішування базових фарб. Вартість друку висока. Недоліком є те, що чорнила можуть засихати у друкуючих головках, що може призвести аж до необхідності заміни друкуючої головки.</p><p>Лазерний принтер. При друку на лазерному принтері друкуючий барабан рівномірно заряджається статичним електричним зарядом, потім у потрібних місцях заряд знімається. На поверхню барабану наноситься “тонер” (спеціальний порошок), який притягується до розряджених ділянок барабану. Після цього друкуючий барабан прокатується по паперу та тонер залишається на папері, формуючи зображення. Після цього папір прогрівається щоб закріпити нанесений тонер. Якість та швидкість друку на лазерному принтері - висока. Вартість чорно-білого друку досить низька, кольоровий друк - дорожче. За рахунок швидкості та якості друку та низької вартості чорно-білого друку дуже поширені на сьогодні.</p><p>Існують спеціальні принтери - “плоттери”, які призначені для друку на дуже великих листах - широкоформатного друку.</p>Крім того є багатофункціональні пристрої, які поєднують у собі сканер та принтер, та за рахунок цього можуть слугувати копіром.'),
(746, 127, 21, 1, 'https://lh5.googleusercontent.com/okXe4Y4ogoDKFM7iWU7E1x09nJqNiUCbixX2IbEBaH_8v29hUqtepFr55EiarG6oMQvx68CW2InvLOB800rEaz4U0VjBLxqLzREt9mVXWfFzIYUqehIrUrROu_uNQJIECdO6X7g"></p'),
(747, 127, 22, 12, 'Пристрої виведення даних, що дозволяють одержувати копії документів на папері:'),
(748, 127, 23, 1, '<p><strong>Інші пристрої виведення.</strong></p>'),
(749, 127, 24, 1, '<p>Існує велика кількість інших пристроїв виведення.</p><p>Наприклад до пристроїв виведення відносять колонки (навушники) які слугують для виведення звукової інформації. Для обробки звукової інформації та перетворення її у аналоговий вид (якій розпізнається колонками) використовується аудіокарта. Аудіокарти, як і відеокарти, можуть буди вбудованими у материнську плату або зовнішніми.</p><p>Для презентацій та демонстрацій перед великою кількістю людей використовується проектор - пристрій якій формує зображення, яке може відображатись на будь-якій поверхні. Звичайно для комфортного перегляду потрібна біла рівна поверхня.</p><p>У навчальних цілях можуть використовуватись мультимедійні дошки, які можуть як відображати інформацію з комп’ютера, так і слугувати пристроєм введення - на них можна писати як на звичайних дошках.</p><p>Існують такі пристрої, які можуть одночасно слугувати і пристроєм введення і пристроєм виведення.</p><p>Наприклад дисковод. Пристрій для зчитування інформації з оптичних дисків. Існує також можливість записувати на диски.</p><p>Ще одним прикладом є модем або мережева карта. Мережева карта використовується для поєднання комп’ютерів у мережі, між комп’ютерами, які поєднані в одну мережу, може відбуватись обмін інформацією. Мережева карта одночасно приймає та передає інформацію. Модем використовується для з’єднання комп’ютера з мережею Інтернет.</p>'),
(750, 127, 25, 12, 'Дисковод - це пристрій для:'),
(751, 179, 2, 12, 'скільки?'),
(752, 131, 1, 1, '<p><strong>Що таке комп’ютерна пам’ять.</strong></p>'),
(753, 131, 3, 1, '<p>Комп''ю́терна па́м''ять — частина електроно-обчислювальних машин, призначена для прийому, зберігання та видачі даних. До даних відносятся як інформація, так і команди програм.</p><p>Комп''ютерна пам''ять — частина ЕОМ, фізичний пристрій для зберігання даних протягом певного часу. В основі роботи запам''ятовуючих пристроїв може лежати будь-який фізичний ефект, що забезпечує приведення системи до двох або кількох стійких станів. У сучасній комп''ютерній техніці часто використовуються фізичні властивості напівпровідників, коли проходження струму через напівпровідник або його відсутність трактується як наявність логічних сигналів 0 або 1. Стійкі стани, що визначаються напрямком намагніченості, дозволяють використовувати для зберігання даних різноманітні магнітні матеріали. Наявність або відсутність заряду в конденсаторі також може бути покладена в основу системи зберігання інформації.</p><p>Найпоширеніші засоби машинного зберігання даних, використовувані в персональних комп''ютерах: — це модулі оперативної пам''яті, а також тверді диски (вінчестери), дискети (гнучкі магнітні диски), CD або DVD диски, а також пристрої флеш-пам''яті.</p><p>Комп''ютерна пам''ять забезпечує підтримку однієї з найважливіших функцій сучасного комп''ютера, — здатність тривалого зберігання інформації.центральним процесором і пристрій, що запам''ятовує, є ключовими ланками архітектури фон Неймана.</p><p>Перші комп''ютери використовували пристрої, що запам''ятовують, виключно для зберігання оброблюваних даних. Їхні програми реалізовувалися на апаратному рівні у вигляді жорстких заданих виконуваних послідовностей. Будь-яке перепрограмування вимагало величезного обсягу ручної роботи з підготовки нової документації, перебудови блоків і пристроїв і т. п. Використання архітектури фон Неймана, що передбачає зберігання комп''ютерних програм і даних в загальній пам''яті, корінним чином змінило ситуацію.</p><p>Система зберігання інформації в сучасному цифровому комп''ютері заснована на двійковій системі числення. Числа, текстова інформація, зображення, звук, відео та інші форми даних представляються у вигляді послідовностей бітових рядків або бінарних чисел, кожне з яких складається зі значень 0 і 1. Це дозволяє комп''ютеру легко маніпулювати ними за умови достатньої ємності системи зберігання. </p>Дотепер створено безліч різноманітних пристроїв, призначених для зберігання даних, багато з яких засновано на використанні різноманітних фізичних ефектів. Універсального рішення не існує, кожне має ті або інші недоліки. Тому комп''ютерні системи зазвичай мають кілька видів систем зберігання, основні властивості яких обумовлюють їх використання і призначення.'),
(754, 131, 2, 12, 'У якому вигляді у пам’яті компьютера зберігається відео?'),
(755, 131, 4, 1, '<p><strong>Вимірювання розміру пам’яті комп’ютера.</strong></p>'),
(756, 131, 5, 1, '<p>Мінімальною одиницею комп’ютерної пам’яті є біт - значення 1 або 0 у двійковій системі. Найбільш зручною для процесора та комп’ютера одиницею інформації, яку він обробляє є байт, який складається з 8 бітів. Кількість можливих значень байта - 256</p><p> Для визначення різних розмірів обсягу пам’яти зазвичай використовуються перефікси для системи Сі. </p><p> 1 кілобайт  - 1000 байт = 10 у 3 степені байт</p><p> 1 мегабайт  - 1000 кілобайт = 10 у 6 степені байт</p><p> 1 гігабайт  - 1000 мегабайт = 10 у 9 степені байт</p><p> 1 терабайт  - 1000 гігабайт. = 10 у 12 степені байт</p><p>Проте, через те, що компьютери використовують двійкову систему числення, число 1000 не зручне для поділу пам’яті. Найближче значення - 1024, що дорівнює 2 у 10 степені. </p><p> Використання числа 1024 пов’язане з тим, що у комп’ютері використовується двійкова система числення та 1024 дорівнює 2 у десятій степені. </p><p> Тому, фактично існує дві системи префіксів для байтів - одна згідно стандартів системи Сі (де використовуються степені 10-ки), друга запропонована Міжнародною електротехнічною комісією (IEC - International Electrotechnical Commission). У другій системі використовуються приставки кібі-, мебі, гібі-, тебі.</p><p> 1 кібібайт  - 1024 байт = 2 у 10 степені байт</p><p> 1 мебібайт - 1024 кібібайт = 2 у 20 степені байт</p><p> 1 гібібайт  - 1024 мебібайт = 2 у 30 степені байт</p><p> 1 тебібайт  - 1024 гібібайт. = 2 у 40 степені байт</p><p> Хоча система, запропонована МЕК більше відповідає дійсності, вона не має широкого поширення та зазвичай використовуються звичайні префікси системи Сі. Зазвичай, коли говорять, що про обсяг пам’яті 1 кілобайт мають на увазі 1024 байтів.</p> Цим користуються виробники обладнання. Наприклад виробники жорстких дисків зазвичай вказують обсяг пам’яті у системі Сі, де приставка означає степень числа 10. Відповідно, коли виробник пише, що обсяг жорсткого диску складає, наприклад 1 кілобайт, то він фактично складається з 1000 байт, а не 1024. Зі збільшенням обсягу жорсткого диску похибка між “очікуваною” кількістю байт та фактичною збільшується. Наприклад для жорсткого диску обсягом 1 терабайт похибка складе приблизно 10%.'),
(757, 131, 6, 12, 'Скількі кілобайт у 1 мебібайті?'),
(758, 131, 7, 1, '<p><strong>Внутрішня пам’ять компьютера.</strong></p>'),
(759, 131, 8, 1, '<p>Комп’ютерна пам’ять діляться на внутрішню та зовнішню.</p><p>До внутрішньої пам’яті відносять кеш-пам’ять, оперативну пам’ять комп’ютера, постійну пам’ять комп’ютера. </p><p>Кеш-пам’ять знаходиться використовується як проміжна ланка для передачі даних до процесора. У сучасних процесорах виділяють три рівні кеш-пам’яті, кожен з яких ближче до процесора, а відповідно швидше та меньше за розміром. В залежності від рівня кеш-пам’яті розмір складає від декількох десятків кілобайт до декількох мегабайт. </p><p>Оперативна пам’ять. Це пам’ять комп’ютера, у яку завантажуються дані та програми які використовуються у поточний час, або використовувались нещодавно. У сучасних комп’ютерах встановлюють декілька гігабайт оперативної пам’яті.</p><p>Кеш-пам’ять та оперативна пам’ять є енергозалежними - тобто при відключеній їх від джерела енергії (при виключенні комп’ютеру) дані у них губляться, і їх неможливо відновити.</p>Постійна пам’ять. Це пам’ять, у якій зберігається так званий BIOS - програма, яка виконується одразу після включення комп’ютера та яка здійснює тестування апаратного забезпечення комп’ютера при кожному запуску, а також у свою чергу запускає операційну систему. Розмір постійної пам’яті невеликий - до декількох сотень кілобайт.'),
(760, 131, 10, 12, 'Який з цих типів внутріншньої пам’яті є енергонезалежним?'),
(761, 131, 9, 1, 'https://lh5.googleusercontent.com/eGYjW18i8srYP35N-fobrFE-Jjdy6ubM2LzCj7T_ne0uBBsC9aYHNEi-f-6SOfvz1A8AH_GAi1QX8CTuoOpoUFAM4fPufRzxxBHAeRPSTgurFu923VMlQWzIhkn9dTuBQyy3jcA"></p'),
(762, 131, 11, 1, '<p><strong>Зовнішня пам’ять компьютера</strong></p>'),
(763, 131, 12, 1, '<p>До зовнішньої пам’яті комп’ютера відносять.</p><p>Жорстки диски. “Вінчестер” Це основна пам’ять комп’ютера, у якій зберігається вся інформація - операційна система, програми, дані для програм та користувацька інформація. Розмір сучасних жорстких дисків складає від декількох сотень гігабайт до декількох терабайт. </p><p>По технології виготовлення існують накопичувачі на магнітних дисках та на основі мікросхем пам’яті (флеш-пам’яті).</p><p>Магнітні жорсткі диски використовуються досить давно - вже більше 30 років. Принцип їх робото полягає у намагнічені ділянок магнітних пластин. Зчитування даних відбувається за допомогою спеціальної головки, яка рухається надо поверхнею магнітних пластин. Під час роботи магнітні пластини обертаються, що дає змогу зчитуючій головці отримати доступ до будь-якої ділянки пластини у відносно короткий термін. Сучасні жорсткі дистки на основі магнітних пластин мають обсяг від декількох сотень гігабайт, до декількох терабайт. </p><p>Жорсткі диски та основі флеш-пам’яті (твердотілі жорсткі диски) працюють на основі енергонезалежних мікросхем пам’яті, у яких інформація зберігається у вигляді наявності або відсутності напруги у окремому блоці пам’яті. Відносно жорстких дисків на основі магнітних пластин вони мають суттєву перевагу у швидкості доступу до ділянки пам’яті. Немає необхідності у пошуку місця на магнітній пластині, де зберігається відповідна інформація та розміщення зчитуючої головки над потрібною ділянкою пластини. Крім того, за рахунок відсутності рухомих елементів, вони є більш надійними. Недоліками таких дисків є обмежений ресурс циклів запису у кожний окремий блок пам’яті та висока вартість. Обсяг сучасних твердотілих жорстких дисків складає декілька сотень гігабайт.</p><p>Флеш-пам’ять - звичні нам “флешки”, принцип функціонування яких полягає у використанні мікросхем пам’яті, як і у твердотілих жорстких дисках. Розмір сучасних “флешек” може досягати декількох сотень гігабайт.</p>Оптичні диски - CD, DVD, Blue-ray. Принцип їх функціонування полягає у випалювані певним чином ділянок диску щоб закодувати інфомацію у двійковому предсатвлені. DVD та Blue-ray диски можуть бути двошаровими. Обсяг пам’яті CD-диску - 700 мегабайт, DVD - 4,7 гігабайта для одношарового диску та біля 8,5 для одношарового диску, Blue-ray 7,8 для одношарового та 15,6 для двошарового диску.'),
(764, 131, 13, 1, 'https://lh4.googleusercontent.com/LJrn2_UE3XVL_Dp3cfx8WUM6cZVeA9h0SQXHK0_HX46TJBxmLMTye56R4SR__8pnf55_NRp-mmejFd3X0eJArs_oEJAzqAWrdPlJWe44fwKQLn-uu6e-5F0f7kahg_lWlNVRZKI"></p'),
(765, 131, 14, 12, 'Оберіть з переліку що не відноситься до пам’яті компьютера:'),
(766, 131, 15, 1, '<p><strong>Логічна організація пам’яті. Файлова система.</strong></p>'),
(767, 131, 16, 1, '<p>Інформація на ком’ютері зберігається у файлах. Кожен файл - окремий документ. Кількість файлів, які можуть зберігатись на диску дуже велика та залежить від його обсягу та файлової системи.</p><p>Файлова система - це спросіб організації даних, який використовується для збереження інфомації у файлах.</p><p>Файлові системи бувають:</p><p>ієрархічні - файли можуть розміщуватись у каталогах у вигляді ієрархічного дерева</p><p>кластерні - для організації однієї файлової системи використовується декілька фізичних носіїв, підключених для комп’ютера.</p><p>розподілені - одна файлова система організовується шляхом використання декількох комп’ютерів, об’єднанних у мережу.</p><p>Сучасні файлові системи на персональних компьютерах є ієрархічними. Зазвичай жорсткий диск компьютера розділяється на декілька логічних розділів. Для OS Windows це - диск С, диск D і т. д. (диски A та B зарезервовані для використання магнітних дискет, які зараз майже не використовуються). На кожному диску можуть бути файли та папки. Файли - це кінцевий елемент файлової системи. У папках у свою чергу можуть бути інші папки або файли. У одній папці не може бути два файли з однаковою назвою. Таким чином, повних шлях до файлу буде складатись з назви диску, всіх папок, які необхідно та назви файлу, розділених знаком “\\”: наприклад D:\\Фото\\Відпочинок\\Фото1.jpg.</p><p>Найпоширенішими файловими системами є:</p><p>FAT (FAT16, FAT32) - досить проста файлова система. Має обмеження на розміри диску та максимальний розмір файлу на диску (4 Гбайт). Розроблена компанією Microsoft.</p><p>NTFS - більш продвинута файлова система, ніж FAT. Має більші можливості щодо відмовостійкості та використання файлів. Також має обмеження на розмір файлу та кількість файлів на диску, проте ці обмеження досить великі. Максимальний розмір файлу - 264 байт, максимальний за розміром диск на сьогодні складає 10 Тб, що у 100 000 разів меньше.</p>ext (ext2, ext3, ext4) - файлова система розроблена для операційних систем родини Linux.'),
(768, 131, 17, 1, 'https://lh3.googleusercontent.com/zh64PgGuVzDjhnyQBz2Fik1i1dq3MCwTm-LCCEzeR_ebyXTcFCtwTOQzOvA_VB7LQ1cb_ih_ZDKY6qWrcID6WcfDE7i2fAF8jKypEqlChCLcr479EBqJSaNz9UmFt5ge2_0E2bA"></p'),
(769, 131, 18, 12, 'Які є файлові системи?'),
(770, 131, 19, 1, '<p><strong>Що таке програмне забезпечення</strong></p>'),
(771, 131, 20, 1, '<p>Програмне забезпечення - це набір програм, які керують роботою комп’ютеру. Без програмного забезпечення комп’ютер не зможе функціонувати, та не зможе виконувати свої функції.</p><p>Програмне забезпечення виконує наступні функції:</p><p>- керує апаратними ресурсами комп’ютера;</p><p>- забезпечує взаємодію комп’ютера та користувача.</p><p>Можливості сучасного програмного забезпечення настільки широкі, що можна знайти застосування комп’ютера у роботі, навчанні, побуті. Найбільш важливою якістю сучасного комп’ютера є його “дружність” по відноженню до користувача. Спілкування людини з комп’ютером стало простим, наочним та зрозумілим. Комп’ютер сам підсказує, що потрібно робити у тий чи іншій ситуації.</p><p>Якщо провести аналогію між людиною та комп’ютером то комп’ютер, який тільки зібраний з частин на заводі нагадує новороджене дитя, а встановлення та завантаження програмного забезпечення є аналогом процесу навчання людини та тримання досвіду.</p>Програмне забезпечення комп’ютера постійно вдосконалюється. Це є результат роботи програмістів та розвитку технологій програмування.. Вартість сучасного програмного забезпечення може перевищувати вартість апаратного забезпечення .'),
(772, 131, 21, 1, 'https://lh4.googleusercontent.com/_RXL3q13QS7AJcnCnn6wvlE-IOmlLlEyH4JXclq3efjCZZ6WL4s_Yf400m7pN286y4h57FQRiGVvxSDmvLwmd1hRiTnL7zAuWwN8SNvZG9aTUwmDWqDWvlQGLR5JxPH8huH1lzM"></p'),
(773, 131, 22, 12, 'Які функції виконує програмне забезпечення?'),
(774, 131, 23, 1, '<p><strong> Класифікація програмного забезпечення</strong></p>'),
(775, 131, 24, 1, '<p>Існує величезна кількість програмного забезпечення. Відповідно виникає питання щодо його класифікації.</p>\r\n<p>По цільовому призначенню програмне забезпечення поділяють на:</p><p><strong>Системне</strong>: програмне забезпечення яке керує роботою системи та її окремих складових частин. Наприклад операційна система, драйвера для апаратних частин комп’ютера.</p><p><strong>Прикладне</strong>: програмне забезпечення яке використовується для виконання прикладних задач кінцевих користувачів - написання тексту, обробка зображень, музики, відео та інші програми. </p><p><strong>Інструментальне</strong>: спеціальні програми, які слугують для розробки іншого програмного забезпечення.</p>\r\n<p>По способу розповсюдження та використання.</p><p><strong>Закриті.</strong> Це програмне забезпечення яке розповсюджується обмеженими каналами, зазвичай воно є платним та його використання вимагає придбання ліцензійної копії такого програмного забезпечення. Програмний код такого програмного забезпечення відсутній у загальному доступі та зазвичай є інтелектуальною власністтю.</p><p><strong>Відкриті.</strong> Це програмне забезпечення яке має відкритий програмний код. Він доступний для перегляду, вивчення та зміни та будь-хто з програмістів, хто має достатню кваліфікацію має можливість доопрацювати програму. З огляду на те, що програмний код доступний для широкого загалу, таке програмне забезпечення є безкоштовним.</p><p><strong>Вільні.</strong> Це програмне забезпечення, яке розповсюджується вільно, проте код програмного забезпечення не доступний для широкого загалу. Для використання цього програмного забезпечення не вимагається придбання ліцензійних копій.</p>\r\n<p>По ступеню перенесення.</p><p><strong>Кроссплатформене.</strong> Програмне забезпечення яке може бути запущенно на будь-якій операційній системі та у будь-якому програмному середовищі.</p><strong>Платформозалежне.</strong> Програмне забезпечення має обмежений та визначений перелік операційних систем на яких може працювати.'),
(776, 131, 25, 12, 'До якого класу програмного забезпечення можна віднести інтернет-браузер?'),
(777, 131, 26, 1, '<p><strong>Шкідливе програмне забезпечення.</strong></p>'),
(778, 131, 27, 1, '<p>Крім користного програмного забезпечення, яке дозволяє працювати з комп’ютером та виконувати різноманітні прикладні задачі існує шкідливе програмне забезпечення, так звані “віруси”.</p><p>Зловмисний програмний засіб або зловмисне програмне забезпечення (англ. Malware — скорочення від malicious — зловмисний і software — програмне забезпечення) — програмне забезпечення, яке перешкоджає роботі комп''ютера, збирає конфіденційну інформацію або отримує доступ до приватних комп''ютерних систем.</p><p>Шкідливі програми можуть потрапити на ваш комп''ютер, наприклад:</p><p>- із зловмисного сайту (наприклад, під час спроби завантажити зламану програму);</p><p>- зі спеціально створеного сайту, що містить шкідливий код;</p><p>- з відомого, легітимного сайту, на якому зловмисники встановили шкідливий код;</p><p>- через неперевірені флеш-носії та компакт-диски;</p><p>- з «сусіднього» комп''ютера в локальній мережі (актуально для провайдерів типу «домашня мережа», гуртожитків, інтернет-кафе, публічного wi-fi).</p><p>Шкідливе програмне забезпечення, встановлене на комп''ютері користувача, може перехоплювати паролі та іншу персональну інформацію, поширювати спам, атакувати інші комп''ютери в мережі. При підключенні до інтернету шкідливе програмне забезпечення вміє автоматично оновлюватися та отримувати команди від зловмисників. Таким чином вони непомітно керують захопленим комп''ютером. Сам користувач при цьому зазвичай навіть не підозрює, що його система використовується кимось ще.</p>Шкідливе програмне забезпечення часто заважає користувачеві нормально працювати — запуск шкідливих програм навантажує центральний процесор і уповільнює роботу іншого програмного забезпечення. Мережеві атаки з комп''ютера уповільнюють його зв''язок з інтернетом, збільшують об''єм трафіку, а з ним — і витрати на інтернет. Виявивши атаки з комп''ютера користувача, провайдер інтернету може відключити його від мережі. Зрештою, комп''ютер, який регулярно здійснює атаки, і його власник можуть викликати інтерес з боку правоохоронних органів.'),
(779, 131, 28, 1, 'https://lh4.googleusercontent.com/IBfPFcEyJorpyFveHgvzlGpOQARktIXgybykscVI0iuEFsfJXEcYeHxIw5dBeITuC3uDrXHQ1j_NPGJe2ea_6pie0Sz_ajMX_e6-FUV7Ct1uP-qi2epaWOtF-d8CVSfdc3t_1HM"></p'),
(780, 131, 29, 12, 'Шкідливе програмне забезпечення це:'),
(781, 131, 30, 1, '<p><strong>Види шкідливого програмного забезпечення.</strong></p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(782, 131, 31, 1, '<p>Зазвичай шкідливе програмне забезпечення поділяють на наступні види.</p><p>1. Вірус - комп''ютерна програма, яка має здатність до прихованого саморозмноження. Одночасно зі створенням власних копій віруси можуть завдавати шкоди: знищувати, пошкоджувати, викрадати дані, знижувати або й зовсім унеможливлювати подальшу працездатність операційної системи комп''ютера.</p><p>2. Хробак (мережний хробак) — тип шкідливих програм, що поширюються по мережних каналах, здатних до автономного подолання систем захисту автоматизованих і комп''ютерних мереж, а також до створення й подальшого поширення своїх копій, що не завжди збігаються з оригіналом, і здійсненню іншого шкідливого впливу. Може використовуватись для стеження за користувачем та збору інформації, для забезпечення віддаленого доступу до комп’ютеру без дозволу користувача.</p><p>3. Шпигунські програми це програмний продукт особливого виду, що встановлений і вживається без належного сповіщення користувача, його згоди і контролю з боку користувача, тобто несанкціоновано встановлений. Використовується для збору інформації з користувацького комп’ютера.</p><p>4. Рекламні програми - різновид шкідливого програмного забезпечення, яке зазвичай демонструє користувачу якусь рекламну інформацію, часто буває що блокує використання комп’ютера.</p>5. Троянські програми (англ. Trojan Horses, Trojans) — різновид шкідницького програмного забезпечення, яке не здатне поширюватися самостійно (відтворювати себе) на відміну від вірусів та хробаків, тому розповсюджується людьми. Може використовуватись для стеження за користувачем та збору інформації, для забезпечення віддаленого доступу до комп’ютеру без дозволу користувача.'),
(783, 131, 32, 12, 'Що з переліченого не є шкідливим програмним забезпеченням?'),
(784, 131, 33, 1, '<p><strong>Як уникнути шкідливих програм?</strong></p>'),
(785, 131, 34, 1, '<p>Щоб уникнути більшості зловмисного програмного забезпечення, треба будьти пильними, коли користуєтесь Інтернетом та флешками. Наведені нижче поради допоможуть розпізнати зловмисні програми та уникнути зламування та зараження вашого комп’ютера й облікових записів у мережі.</p><p>Веб-сайти. Не треба довіряти незнайомим сайтам. Якщо сайт виникає сумніви - залиште його і дізнайтеся про програмне забезпечення, яке потрібно встановити.</p><p>Електронні листи. Не довіряйте інформації, яку ви отримали в підозрілому електронному листі. Навіть електронний лист від знайомої людини може містити посилання на шкідливі програми або вкладені файли, якщо обліковий запис цієї людини зламали. Треба бути обережним, коли ви переходите за посиланнями, які отримали в електронному листі. Краще відкривати веб-сайти, ввівши адресу безпосередньо у веб-переглядачі.</p><p>Інше програмне забезпечення. При встановленні деяких програм, одночасно може завантажуватися шкідливе або оманливе ПЗ з Інтернету. Установлюючи програми, потрібно звертайти особливу увагу на вікна з повідомленнями та читайти текст, написаний дрібним шрифтом. Скасуйте встановлення, є будь-які сумніви..</p><p>Фізичні носії даних. Треба бути обережним також з дисками та флешками, які підключаються до комп’ютера, адже на них можуть бути шкідливі програми. Протрібно завжди перевіряти їх за допомогою спеціального програмного забезпечення. </p>Спливаючі вікна. Не треба довіряйти спливаючим вікнам, у яких просять завантажити програмне забезпечення. Ці вікна часто повідомляють, що комп’ютер заражено, і просять завантажити програми для захисту. Потрібно негайно закрийти таке вікно, не натискаючи область усередині нього.'),
(786, 129, 1, 1, '<p><strong>Принципи фон Неймана.</strong></p>'),
(787, 129, 2, 1, '<p>У 1946 році Д. фон Нейман, Г. Голдстайн та А. Беркс у спільній науковій праці виклали нові принципи побудови та функціонування ЕОМ. У подальшому, на базі цих принципів, вироблялись перші два покоління комп’ютерів. У пізніших поколіннях відбувались деякі зміни, проте принципи Неймана актуальні і сьогодні.</p><p>Фактично Нейман поєднав наукові розробки та відкриття багатьох інших вчених та сформулював на їх основі принципово нове.</p><p>Отже основні принципи фон Неймана.</p><p>1. Використання двійкової системи числення у обчислювальних машинах. Перевага над десятковою системою числення полягає у тому, що пристрій можна робити достатньо простим. Математичні та логічні операції у двійковій системі виконуються достатньо просто.</p><p>2. Програмне управління ЕОМ. Робота ЕОМ контролюється програмою, яка складається з набору команд. Команди виконуються послідовно. Фактично створення машини, яка здатна зберігати програму у пам’яті поклало початок тому, що ми сьогодні називаємо програмуванням.</p><p>3. Пам’ять комп’ютера використовується не тільки для зберігання даних, але й програм. При цьому команди та дані кодуються у двійковій системі числення - тобто спосіб запису однаковий. Саме тому у деяких ситуаціях над командами можна виконувати ті ж самі дії, що і над даними.</p><p>4. Комірки пам’яті ЕОМ мають адреси, які послідовно пронумеровані. У будь-який момент можна звернутись до будь-якої комірки пам’яті, знаючи її адресу. Цей принцип відкрив можливість використовувати зміні у програмуванні.</p><p>5. Можливість умовного переходу у процесі виконання програми. Не дивлячись на те, що команди виконуються послідовно, у програмах можливо реалізувати перехід до будь-якої ділянки коду.</p>Найголовнішим висновком цих принципів можна назвати те, що відтепер програма не була постійною частиною ЕОМ (як, наприклад, у калькулятора). Програму стало можливо змінити. А пристрій, звичайно, залишається незмінним.'),
(789, 129, 4, 12, 'Що з наведеного нижче не відповідає принципам фон Неймана?'),
(790, 129, 5, 1, '<p><strong>Як працює машина фон Неймана</strong></p>'),
(791, 129, 6, 1, '<p>Машина фон Неймана складається з запам’ятовуючого пристрою (пам’яті), арифметико-логічного пристрою, керуючий пристрій, а також пристрою вводу-виводу.</p><p> <img src="https://lh6.googleusercontent.com/Ynurfhl6h2V5OS8t9SOQ5TLTfmMxDUOGVoTprGW_i0HU31NhikOMo10NCP6fS4gAnAIJf7DOHUsr0YGY-FsgMA31T9d-RPOb2-tYPyp_TZptOwlKA1Sz17ggpim5Dd5Y2TTGrxM"></p><p>Програми та дані вводяться у пам’ять з пристрою вводу-виводу через арифметико-логічний пристрій. Всі команди записуються у сусідні комірки пам’яті, а дані для обробки можуть зберігатись у довільних комірках. У будь-якої програми остання команда має бути командою завершення роботи.</p><p>Для виконання будь-якої команди необхідно знати по-перше операцію яку слід виконати (з переліку можливих операцій на даному пристрої), адреси комірок пам’яті де зберігаються дані, над якими потрібно виконати операцію та адресу комірки куди необхідно записати результат виконання операції.</p><p>Арифметико-логічний пристрій виконує вказані командами операції над даними. Результат виводиться у пам’ять або на пристрій виводу. Принципова різниця між пам’яттю та пристроєм виводу полягає у тому, що у пам’яті дані зберігаються у зручному для комп’ютера вигляді, а на пристрій виводу (наприклад монітор.) дані поступають у зручному для людини вигляді.</p><p>Керуючий пристрій виконує функцію керування всіма складовими частинами комп’ютера. Він узгоджує процес взаємодії між різними складовими частинами пристрою. Керуючий пристрій містить спеціальний регістр (комірку), яка називається “лічильник команд”. Після завантаження програми та даних у пам’ять в лічильник команд записується адреса першої команди програми. Керуючий пристрій визначає операцію команди, “відмічає” у пам’яті дані, які потрібні для виконання команди та контролює її виконання. Операцію виконує арифметико-логічний пристрій або апаратні засоби комп’ютера.</p>Після виконання будь-якої команди лічильник команд змінюється на одиницю та, відповідно, вказує на наступну команду програми. Коли потрібно виконати команду, яка не слідує по порядку за поточною (умовний перехід згідно принципів фон Неймана) то спеціальна команда переходу зберігає адресу комірки, куди потрібно передати керування.'),
(792, 129, 7, 12, 'Оберіть вірні тези:'),
(793, 129, 8, 1, '<p><strong> Недоліки принципів фон Неймана.</strong></p>'),
(794, 129, 9, 1, '<p>Хоча принципи побудови ЕОМ фон Неймана використовуються і досі у сучасних комп’ютерах, є певні недоліки архітектури, яка була запропонована фон Нейманом.</p><p>До недоліків відносять.</p><p>Семантичний розрив. Арифметико-логічний пристрій має можливість виконувати дуже обмежений перелік команд та операцій низького рівня. Вимоги до програмного забезпечення та до його розробки значно збільшились у порівняні з часами фон Неймана. Сучасні мови програмування високого рівня значно підвищують продуктивність праці програміста за рахунок того, що одна команда мови високого рівня насправді може являти собою декілька сотень рядків команд мови низького рівня, яку розуміє процесор. Цей розрив вирішується на програмному рівні за допомогою компіляторів – спеціальних програм, які перетворюють код мови програмування високого рівня на набір машинних команд, які розуміє комп’ютер.</p><p>Розділення пам’яті та арифметико-логічного пристрою. Це вважається суттєвим недоліком архітектури фон Неймана. Недолік полягає у тому, що швидкість обробки даних арифметико-логічним пристроєм значно перевищує здатність пам’яті передавати інформацію до арифметико-логічного пристрою. Дана проблема вирішується за рахунок більш складної побудови пам’яті, де виділяється різна рівні пам’яті. Кожен наступний (ближчий до арифметико-логічного пристрою) рівень пам’яті працює з більшою швидкістю, проте більш дорогий, тому обсяг менший. У сучасний комп’ютерах виділяють оперативну пам''ять, та декілька рівнів кеш-памяті (до трьох рівнів).</p>Принцип послідовного виконання операцій. Архітектура фон Неймана є принципово послідовною. Це суттєво обмежує можливості з обробки даних та швидкість роботи системи в цілому. Даний недолік нівелюється у сучасних комп’ютерах за рахунок розміщення декількох арифметико-логічних пристроїв у одному комп’ютері (ядер процесора) та з допомогою почергового виконання команд різних програм на одному процесорі. У випадку виконання декількох програм на одному процесорі операційна система передає на виконання спочатку частину команд одної програми, потім – частину команд іншої. Це відбувається надзвичайно швидко, тому для кінцевого користувача це непомітно, та складається враження що комп’ютер виконує різні програми одночасно.'),
(795, 129, 10, 12, 'Які основні недоліки архітектури фон Неймана?'),
(796, 129, 11, 1, '<p><strong>Гарвардська архітектура комп’ютера</strong></p>'),
(797, 129, 12, 1, '<p>Говард Ейкен, професор Гарвардського університету, у 1930 роках запропонував архітектуру обчислювальної машини, яка принципово відрізнялась від архітектури фон Неймана. Принципова відмінність полягає у тому, що програма (алгоритм, інструкції) та данні для функціонування програми зберігаються окремо та поступають до обчислювального пристрою по різних каналах. Така архітектура була названа Гарвардською архітектурою та була вперше реалізована у одному з перших комп’ютерів Mark I.</p><p>Типові операції вимагають від будь-якого обчислювального пристрою декількох дій:</p><ul><li>вибір двох значень;</li><li>виконання дії;</li><li>збереження результату.</li></ul><p>Ідея, яка була реалізована Ейкеном, полягала у фізичному розділені ліній передачі команд та даних. У Mark I програми (інструкції) зберігались у вигляді перфорованої стрічки, а дані у релейному запам’ятовуючому пристрої. Це дозволяло одночасно пересилати та обробляти команди та дані. Завдяки цьому підвищилась загальна швидкодія комп’ютера.</p><p>З огляду на те, що програми та данні зберігаються на фізично різних носіях - формат їх зберігання не обов’язково мав бути однаковий (на відміну від архітектури фон Неймана).</p><p>Звичайно, такий підхід до архітектури створює певні проблеми при розробці виробництві комп’ютерів, адже треба передбачити різні шляхи доставки даних до обчислювального пристрою.</p>'),
(798, 129, 13, 1, 'https://lh3.googleusercontent.com/Q1Eqedz6Oxx0kKyw0BJFDOcgSkgUCY9g8TKsM07df6HUS4lPqlKZaobVRG1Nni8cStvE8w3UT6fS62W091O8FtLZVDNzvzJ2N_xw120wdEovAsjLG-UO9a_peGH5BF_68at1UVk"></p'),
(799, 129, 14, 12, 'Яка основна відміність Гарвадської архітектури від архітектури фон Неймана'),
(800, 129, 15, 1, '<p><strong>Модифікації гарвардської архітектури</strong><br></p>'),
(801, 129, 16, 1, '<p>Модифікована гарвардська архітектура.</p><p>Реалізація роздільного доступу до пам’яті (пам’яті даних та пам’яті команд) має очевидний недолік - висока вартість. Це обумовлено тим, що виробникам необхідно передбачити майже у двічі більше контактів на процесорі, ніж при архітектурі фон Неймана. Вирішенням цієї проблеми може бути розділення вхідного потоку на команди та дані всередині процесору.</p><p>Розширена гарвардська архітектура.</p><p>При здійсненні обчислень процесор робить дію, вхідні дані якої можна розділити на три складові: операція та дві її зміні (операнди). У розширеній гарвардській архітектурі для зберігання команди використовується кеш-пам’ять, при цьому обидва канали даних (канал даних та канал інструкції) залишаються вільними. Це дозволяє одночасно по двом каналам передати операнди для виконання операції.</p><br>Існують гібридні модифікації гарвардської архітектури та архітектури фон Неймана, які поєднують переваги обох систем. Такі процесори мають окрему кеш-пам’ять для інструкцій та даних, що дозволяє за один робочий так отримувати команду та дані для її виконання. Тобто ядро процесора побудовано на гарвардській архітектурі, проте програмна логіка залишається фон-неймановською, що значно спрощує програмування. Для передачі команд та даних використовується одна шина, що спрощує конструкцію процесорів.'),
(802, 129, 17, 12, 'Якій з наведених модифікацій гарвардської архітектури притаманне поєднання гарвардської аріхтектури ядра та використання логіки машини фон Неймана?'),
(803, 129, 18, 1, '<p><strong>Що таке процесор, його будова</strong></p>'),
(804, 129, 19, 1, '<p>Процесор – головна мікросхема комп''ютера, його "мозок". Це мікросхема, призначена для безпосереднього виконання дій з інформацією: арифметичних обчислень та логічної обробки.</p><p>Він дозволяє виконувати програмний код, що знаходиться у пам''яті і керує роботою всіх пристроїв комп''ютера. Чим вище швидкість роботи процесора, тим вище швидкодію комп''ютера.</p><p>Процесори перших комп''ютерів були громіздкими, займали цілі шафи і навіть кімнати та складалися з багатьох компонентів. На початку 1970-х років завдяки прориву а технології створення великих і надвеликих інтегральних схем стало можливим розташувати всі компоненти центрального процесора в одному напівпровідниковому пристрої. З''явилися так звані мікропроцесори. Наразі терміни «мікропроцесор» і «процесор» є синонімами, проте так було не завжди. Звичайні (великі) та мікропроцесорні ЕОМ співіснували протягом 10-15 років, і лише на початку 1980-х років мікропроцесори витіснили своїх старших братів. Саме перехід на мікропроцесори створив передумови для появи персональних комп''ютерів.</p><p>Фізично процесор являє собою пластину з кремнію з міліонами та міліардами транзисторів та каналів проходження сигналі.</p><br>Сьогодні основними виробниками процесорів є компанії Intel і Advanced Micro Devices (AMD), які тривалий час існують на ринку інформаційних технологій і проявили себе тільки з кращого боку. Природно, існують і інші виробники, але до рівня цих компаній-гігантів їм ще дуже далеко.'),
(805, 129, 20, 1, 'http://yak-prosto.com/images/3/e/yak-viznachiti-procesor.jpg"></p'),
(806, 129, 21, 12, 'Якій матеріал використовується для виробництва процесорів.'),
(807, 129, 22, 1, '<p><strong> Складові процесора. Робота процесора</strong></p>'),
(808, 129, 23, 1, '<p>Складові процесора</p><p>Ключовим компонентом процесора є арифметико-логічний пристрій, за допомогою якого, здійснює арифметичні і логічні операції. Всі дії виконуються у двійковій системі счислення. Ще одною складовою є пристрій керування який слугує для виконання команд і потоками даних у персональному комп’ютері. Крім того кожен процесор має спеціальні комірки, які називаються регістрами. Саме в цих регістрах містяться команди, які виконуються процесором, а також дані, якими оперують команди.</p><p>Процесор працює під кервування програми, яка знаходиться у оперативній пам’яті. </p><p>Блок керування передає до арифметико-логічного пристрою команду, яка міститься у комірці команд та дані, необхідні для її виконання до арифметико-логічного пристрою. Після цього блок керування збільшує лічильник команд.</p><p>Арифметико-логічний пристрій отримав команду та дані виконує дію та записує результат у вільний регістр. </p><p>Після цього блок керування знову передає команду та дані до арфиметико-логічного пристрою.</p>'),
(809, 129, 24, 12, 'Чи відповідає наведений опис складовхи процесора архітектурі фон Неймана?'),
(810, 129, 25, 1, '<p><strong> Основні технічні характеристики процесора</strong></p>'),
(811, 129, 26, 1, '<p>Кожен процесор має наступні технічні характеристики.</p><p>Тактова частота. Характеризує скільки елементарних операцій за одну секунду здійснює процесор та виміряється у Герцах. Сучасні процесори мають робоу тактову частоту 2.5 - 3.0 ГГц (2.5 - 3 мільярди операцій в секунду). </p><p>Розрядність. Визначає скільки байт за 1 такт (одну елементарну операцію) можна передати процесору. Також це означає скільки даних за один такт може обробити процесор. Сучасні комп’ютери мають шини розрядністю 64 біти (8 байт).</p><p>Розмір кеш-пам’яті. Кеш-пам’ять - це проміжна ланка між оперативною пам’яттю та регістрами процесора. У сучасних процесорах виділяють три рівні кеш-пам’яті, кожен з яких ближче до процесора, а відповідно швидше та меньше за розміром. Зменьшення розміру кеш-пам’яті різних рівнів обумовлено вартістю. Крім того недоцільно тримати велики й розмір пам’яті, якщо процесор не здатен обробити дані в цій пам’яті досить швидко. </p><p>Кількість ядер. Кожне ядро процесора являє собою логічно та фізично відокремлений процесор. Якщо у процесора декілька ядер - кожне здатне працювати паралельно. Це збільшує загальну швидкість системи та надає можливість одночасно виконувати різні команди.</p><br>Загальний принцип всіх характеристик - чим більше тим краще. Проте не слід забувати, що комп’ютер, і процесор зокрема, є складною системою, яка складається з багатьох компонент, тому всі технічні характеристики мають бути збалансовані для ефективного викорсистання комп’ютера в цілому.'),
(812, 129, 27, 12, 'Яку кількість інформації здатен обробити процесор, який має тактову частоту 100 Мгц та розрядність - 16 біт за 1 секунду?'),
(813, 130, 1, 1, '<p><strong>Що таке операційна система.</strong></p>'),
(814, 130, 2, 1, '<p>Як відомо, комп''ютер в сучасному вигляді з''явився далеко не відразу. Перші комп''ютери були дуже громіздкими і дорогими. Керувати ними могли виключно професіонали, які чітко розуміли усі тонкощі їх будови і роботи. Для керування комп''ютерами використовувалися спеціальні програми, що створювалися за допомогою двоїчного коду. Windows або чогось подібного тоді ще не існувало.</p><p>Відтоді багато що змінилося. Еволюцію пройшли як самі комп''ютери (апаратна їх частина), так і програми для них. Сьогодні дитина молодшого шкільного віку здатна за декілька хвилин навчитися вирішувати на комп''ютері завдання, які б раніше відняли чимало часу навіть у професіоналів. Взаємодія людини і комп''ютера стала настільки простою, що працювати з ним може будь-хто охочий. Використовуючи маніпулятор миша (чи простіше кажучи, мишку), ми можемо буквально "пальцем показувати" комп''ютеру, що і де треба скопіювати, перемістити, вирізати, замінити, перейменувати, відкрити, закрити і так далі. Комп''ютер розуміє усі ці наші жести, перекладаючи їх на зрозумілу для себе мову, самостійно виконуючи розрахунки, зберігаючи результати на жорсткому диску, правильно використовуючи при цьому ресурси процесора, оперативної пам''яті і інших пристроїв, що входять до складу системи, і не ставить ніяких зайвих питань. </p><p>Ніхто з нас вже навіть і не замислюється над тим, що ще зовсім недавно для того, щоб змусити комп''ютер виконати навіть елементарне завдання, треба було складати спеціальні алгоритми дій (програми). Це, у свою чергу, потребувало особливих знань, додаткових затрат часу і не приносило ніякого задоволення.</p><p>Сьогодні ж людина взаємодіє з комп''ютерним залізом не безпосередньо, а через спеціальний програмний прошарок, що бере на себе автоматичне вирішення усіх завдань із забезпечення злагодженої роботи обладнання комп''ютера (процесора, оперативної пам''яті, запам’ятовуючих пристроїв та ін.), а також дозволяє людині керувати ним зручним для себе способом.</p><p>Цим програмним прошарком є операційна система. </p>'),
(815, 130, 3, 12, 'Що таке операційна система?'),
(816, 130, 4, 1, '<p><strong>Функції операційної системи.</strong></p>'),
(817, 130, 5, 1, '<p>Операційна система комп''ютера вирішує три важливі завдання:</p><p>1) забезпечує функціонування апаратної частини комп''ютера як єдиного цілого, керує ресурсами процесора, оперативної пам''яті і інших пристроїв системи;</p><p>2) взаємодіє з користувачем, переводить його дії (команди) у зрозумілу комп''ютеру мову і примушує комп’ютер виконувати їх;</p><p>3) дозволяє пристосовувати комп''ютер до вирішення певного кола завдань шляхом встановлення відповідних програм і керування їх роботою.</p><p>Як і людський розум, операційну систему можна розвивати і удосконалювати, встановлюючи додаткові програми. У нашому прикладі ці програми можна порівняти зі своєрідними новими навичками і уміннями у людини. Наприклад, щоб навчити комп''ютер грати з вами в шахи, необхідно встановити в операційну систему відповідну програму - гру "Шахи". Щоб працювати з текстом, операційну систему необхідно доповнити текстовим процесором Word або якоюсь аналогічною програмою.</p><p>Одні і ті ж завдання можуть вирішуватися за допомогою різних програм. У користувача практично завжди є вибір. У Інтернеті існує досить багато каталогів програмного забезпечення. </p><p>Для кращого розуміння повідомлю, що при створенні комп''ютера порядок дій фахівця-комп''ютерника наступний:</p><p>1. Фізично скласти комп''ютер, з''єднавши у єдине ціле материнську плату, процесор, оперативну пам''ять і інші пристрої (створити тіло комп''ютера);</p><p>2. Встановити на комп''ютер операційну систему (забезпечити тіло інтелектом);</p><p>3. Встановити необхідні додаткові програми (розвиток навичок комп''ютера у потрібному користувачу напрямі).</p>'),
(818, 130, 6, 12, 'Які функції виконує операційна система?'),
(820, 130, 7, 1, '<p><strong>Історія створення операційних систем.</strong></p>'),
(821, 130, 8, 1, '<p>Перші комп’ютери взагалі не мали операційної системи. На початку 60-х років XX ст. їх було скомплектовано лише набором інструментів для розробляння, планування та виконання завдань. Проте вже до кінця 60-х років було розроблено близько ста операційних систем. Наприклад система Atlas, створена в Манчестерському університеті, системи CTTS та ITSS, створені вченими Массачусетського технологічного інституту та ін. Найбільш розвинуті операційні системи того часу, такі як OS/360 (продукт компанії IBM), SCORE (розробка компанії CDC) та MULTICS (розробляння цієї системи було завершено в 70-х роках спеціалістами компанії Bell Labs), передбачали можливість використання багатопроцесорних систем.</p><p>Спонтанний характер розробляння ОС призвів до наростання кризових явищ. Створювані операційні системи були достатньо складними та великими за розмірами, не використовували всіх можливих потужностей комп’ютерів, неоптимально виконувались або взагалі не працювали на менш потужних комп’ютерах. Проте головним недоліком було те, що всі створені ОС були повністю несумісними між собою. Тому в 1969 р. співробітники Массачусетського технологічного інституту Кен Томпсон, Деніс Рітчі та Брайан Керніган розробили та реалізували ОС UNIX. Вона була зручним інструментальним середови щем і стала прототипом єдиної ОС. Її можна було використовувати в різних обчислювальних системах та в разі потреби швидко перенести на іншу апаратну архітектуру.</p><p>Наприкінці 70-х років XX ст. співробітники Каліфорнійського університету в Берклі удосконалили початкові коди UNIX. Їх розробка отримала назву BSD) (Berkeley Systems Distribution).</p><p>Одну з найстаріших та найпоширеніших операційних систем - DOS було створено фірмою Майкрософт на замовлення корпорації IBM для встановлення на перші персональні комп’ютери. Найпоширенішою на сьогодні операційною системою є Windows (близько 90 % світового ринку настільних систем). Її первинно проектували як графічну надбудову над старим середовищем MS DOS. Ця система втрачає визначні позиції лише завдяки інтересу користувачів до UNIX-подібних систем з відкритими кодами. Їх на початку 90-х років XX ст. почав розробляти студент Гельсинкського університету Лінус Торвальдс. Він створив ядро поширеної сьогодні операційної системи GNU/Linux.</p><p>24 березня 2000 р. на ринку операційних систем з’явився ще один конкурент — ряд графічних операційних систем MacOS X, розроблених компанією Apple. </p>'),
(822, 130, 9, 12, 'Як називається перша створена Microsoft операційна система?'),
(823, 130, 10, 1, '<p><strong>Сьогодення операційних систем.</strong></p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(824, 130, 11, 1, '<p>Таким чином на сьогодні існує декілька родин операційних систем.</p><p>1. Родина операційних систем Microsoft Windows (це такі операційні системи як Windows XP, Windows 7, Windows 8, та найсучасніша - Windows 10).</p><p>Перевагою операційних систем Windows є їх надзвичайна поширеність - біля 90% користувацьких комп’ютерів використовують ту чи іншу операційну систему родини Windows. Завдяки цьому виробники обладнання при розробіці драйверів (спеціальні програми, які забезпечують взаємодію операційної системи та обладнання) у першу чергу розробляють драйвера для цієї операційної системи.</p><p>Недоліком є висока вартість ліцензійної копії операційної системи. Крім того, через широке поширення ціїє операційної системи є дуже багато шкидливого програмного забезпечення (віруси, трояни та інше), яке працює на цій операційній системи, тому, зазвичай, користувач має вживати додаткові заходи для захисту свого комп’ютера від такого програмного забезпечення.</p><p>2. Родина операційних систем, які основані на ядрі операційної системи Linux (Ubuntu, Red Hat Linux, Suse та багато інших).</p><p>Перевагою цих операційних систем є те що вони зазвичай безкоштовні (за виключенням деяких комерційних проектів), програмний код даних операційних систем зазвичай відкритий та користувач, який має відповідні знання може її дуже тонко налаштувати, або навіть допрацювати. Через вбудовані засоби безпеки у родині даних операційних систем існує дуже мало шкідливого програмного забезпечення, яке працює на цій операційній системі. </p><p>Недоліком є низька підтримка цих операційних систем з боку виробників обладнання. Операційні системи родини Linux дуже часто використовуються на серверах, оскільки вони є досить гнучкими у налаштуванні, мають вбудовані інструменти захисту від шкідливого програмного забезпечення та безкоштовними.</p><p>3. Родина операційних систем Mac OS. Ці операційні системи постачаються разом з комп’ютерами виробництва Apple. Вони є умовно-безкоштовними - вартість операційної системи фактично включена у вартість комп’ютера. Через те, що ці операційні системи розроблені виключно під комп’ютери виробництва Apple розповсюдження її досить обмежене.</p><p>Перевагою цієї операційної системи є те, що вона максимально оптимізована під конкретні характеристики комп’ютерів, на які вона встановлюється з урахуванням всіх особливостей конкретної архітектури обладнання.</p><p>4. Інші операційні системи. Крім найпоширеніших операційних систем існує велика кількість спеціалізованих операційних систем які розроблені для функціонування у конкретних ситуаціях. Наприклад для забезпечення роботи супер-комп’ютерів, спеціальних програмно-апаратних комплексів, які використовуються у науковій діяльності та інше. </p><p>5. Зараз є передумови для створення та розповсюдження хмарних операційних систем. Основна ідея такої системи — легкий перехід від одного комп''ютера до іншого. Тут можуть виникнути мимовільні аналогії з акаунтом соціальної мережі, який можна підвантажувати на будь-якому доступному терміналі з доступом до Мережі в незалежності від встановленої ОС. Приблизно така ідея і переслідується творцями цієї нової революційної операційної системи.</p>'),
(825, 130, 12, 12, 'Які переваги притаманні ОС родини Linux?'),
(826, 130, 13, 1, '<p><strong>Складові операційних систем.</strong></p>'),
(827, 130, 14, 1, '<p>Різні операційні системи мають однакову структуру, до скла­ду якої входять:</p><p>Ядро ОС, що є центральною частиною ОС. Воно забезпечує прикладним програмам координований доступ до ресурсів комп''ютера (процесорного часу, оперативної пам''яті, зовнішніх пристроїв уведення та виведення інформації), перекла­даючи їх команди з мови прикладних програм мовою двійкових кодів, яку розуміє комп''ютер.</p><p>Драйвери, які є програмами-перекладачами, що перекладають команди комп''ютера мовою певного пристрою (принтера, сканера, звукової або відеокарти) та навпаки. Без наявності драйверів функціонування підключених пристроїв неможливо.</p><p>Утиліти, що є набором допоміжних програм, призначених обслуговувати диски, перевіряти комп''ютер, налаштовувати певні параметри роботи. </p><p>Інтерфейс, що надає командний проце­сор, — правила взаємодії операційної систе­ми та користувача, які визначають зруч­ність роботи. Інтерфейс може бути у вигляді командної строки, та у графічному вигляді (наприклад робочий стіл ОС Windows). </p>'),
(828, 130, 15, 12, 'Що з переліченого не входить у структуру операційної системи?'),
(829, 180, 1, 12, '!!!!!!!!!!!!!!!!!!!1'),
(830, 180, 2, 12, 'Свойствами алгоритма являются:'),
(831, 180, 3, 12, 'Алгоритм может быть задан следующими способами:'),
(853, 133, 1, 1, '<p><strong>Що таке система числення</strong></p>'),
(854, 133, 2, 1, '<p>Під системою числення розуміють сукупність прийомів назви і запису чисел. Умовні знаки, що використовуються для позначення чисел називають цифрами.</p>\n<p>Існують позиційні, та непозиційні та змішані системи числення</p>\n<p>Загальноприйнятою система числення стала десяткова. Широке розповсюдження десяткова системи числення, пов’язане з тим що у людини 10 пальці на руках та ногах. Десяткова система числення є позиційною.</p>\n<p>Будь–яке число в ній подається за допомогою набору з десяти цифр: 0,1,2,3,4,5,6,7,8,9. Значення кожної цифри в запису числа залежить від позиції, яку вона займає в числі. Так, наприклад, в запису 555,5 цифра 5 зустрічається чотири рази, але в кожній позиції вона має різний сенс: крайня ліва цифра 5 означає кількість сотень і має значення 500, наступна цифра 5 означає кількість десятків, 5, яка стоїть перед комою, означає кількість одиниць і, нарешті, цифра 5 після коми – кількість десятих частин одиниці.</p>\n<p>Будь-яке число у десятковій системі можна представити у вигляді суми добутків цифри та числа 10 у степені позиції відповідної цифри у числі.</p>\n<p>Наприклад число 555,5 дорівнює 5 * 10<sup>2</sup> + 5 * 10<sup>1</sup> + 5 * 10<sup>0</sup> + 5 * 10<sup>-1</sup>.</p>\n<p>Зверніть увагу, що ступінь десятки для числа на першій позиції дорівнює 0.<br></p>\n<p>Базою десяткової системи є число 10.</p>\n<p>Загальна формула числа у будь-якій позиційній системі числення виглядає наступним чином:</p>\n<p>X = A<sub>n</sub><sub> </sub>* b<sup>n</sup> + … + A<sub>0</sub><sub> </sub>* b<sup>0</sup>, де:</p>\n<p style="margin-left: 40px;">Х - шукане число,</p>\n<p style="margin-left: 40px;">A<sub>n</sub> - цифра, яка знаходитися на позиції n (при цьому крайня права позиція рахується під номером 0,</p>\n<p style="margin-left: 40px;">b - основа системи числення (для десяткової - 10, для двійкової - 2 і так далі).</p>\n<p>Позиційних систем може існувати безліч, адже базою може виступати будь-яке натуральне число. Найбільш поширеними системами числення є десяткова, двійкова, та шістнадцяткова (дві останні широко використовуються у програмуванні).</p>\n<p>Для запису чисел використовуються спочатку звичні нам цифри десяткової системи числення 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, а у випадку, якщо їх не вистачає - застосовують літери.</p>\n<p>Наприклад для запису чисел шістнадцяткової системи використовують цифри 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 та букви A, B, C, D, E, F (перші шість літер англійського алфавіту). A переводиться у десяткову систему як A = 10, B = 11, і т. д. до F = 15.</p>'),
(857, 133, 3, 12, 'Оберіть, що входить в алфавіт вісімкової системи числення.'),
(858, 133, 4, 1, '<p><strong>Непозиційна система числення, змішана система числення.</strong></p>'),
(859, 133, 5, 1, '<p>У непозиційних системах числення величина, яку позначає цифра, не залежить від позиції її у числі. При цьому система може накладати обмеження на позиції цифр, наприклад, щоб вони були розташовані по спаданню, чи згруповані за значенням. Проте це не є принциповою умовою для розуміння записаних такими системами чисел.</p><p>Найпростішим прикладом непозиційної системи числення можна вважати відмітки на дереві, скелі, де кожна відмітка означає одиницю. Вочевидь це була перша система числення, якою оволоділи люди. </p><p>Типовим прикладом непозиційної системи числення є римська система числення, в якій у якості цифр використовуються латинські букви: I - одиниця, V - п’ять, X - десять, L - п’ятдесят, C - сто, D - п’ятсот, M - тисяча. Наприклад: VII = 5 + 1 + 1 = 7. Тут символи V і I означають 5 і 1, відповідно, незалежно від місця їх у числі.</p><p>Змішана система числення - це узагальнення системи числення з основою з послідовності чисел, що зростає за певною закономірністю.</p><p>Найвідомішим прикладом змішаної системи числення є представлення часу у вигляді кількості діб, годин, хвилин і секунд. При цьому величина d днів h годин m хвилин s секунд відповідає значенню d * 24 * 60 * 60 + h * 60 * 60 + m * 60 + s секунд.</p>'),
(860, 133, 6, 12, 'Чому у десятковій системі числення дорівнює число CCLV у римській системі числення?'),
(861, 133, 8, 1, '<p>Переведення цілого числа з десяткової системи числення у будь-яку іншу здійснюється шляхом послідовного ділення числа на основу нової системи числення. Ділення виконується до тих пір, поки остання частка не стане менше дільника. Отримані остачі від ділення, взяті у зворотному порядку, будуть значеннями розрядів числа в новій системі числення. Остання частка дає старшу цифру числа.<o:p></o:p></p>'),
(862, 133, 9, 4, '<p>24 в десяткові системі перевести у двійкову систему.</p>\n<p>(24)<sub>10</sub> = (?)<sub>2</sub><br></p>\n<p><sub></sub></p>\n<p><img src="/images/lecture/29bf210d7549e926c310c9bf699fc164.jpg"><br></p>\n<p><sub></sub></p>\n<p>(24)<sub>10</sub> = (11000)<sub>2</sub></p>'),
(863, 133, 7, 1, '<p><strong>Переведення цілого числа з десяткової системи числення.</strong></p>'),
(864, 133, 10, 4, '<p>143 в десяткові системі перевести у вісімкову систему.</p><p>(143)<sub>10</sub> = (?)<sub>8</sub></p><p><img src="/images/lecture/33bc7a373e88bf1414c66518a2f8df73.jpg"><br></p><p>(143)<sub>10</sub> = (217)<sub>8</sub></p>'),
(866, 133, 11, 4, '<p>(687)<sub>10</sub> = (?)<sub>16</sub></p><p><img src="http://intita.itatests.com/images/lecture/c86726da826e55f635c4509432c9dd0b.jpg"><br></p><p><sub></sub></p><p>(687)<sub>10</sub> = (2AF)<sub>16</sub></p>'),
(867, 133, 12, 12, 'Переведіть число 137 у десятковій системі числення у двійкову.'),
(868, 133, 13, 1, '<p><strong> Переведення з будь-якої позиційної системи числення у десяткову.</strong></p>'),
(869, 133, 14, 1, '<p>Для того, щоб перевести у десяткову систему будь-яке число з іншої системи необхідно розкласти таке число на суми порядків та скласти всі доданки.</p>'),
(870, 133, 15, 4, '<p>Перевести число (11000)<sub>2 </sub>у дестякову систему.</p><p>(11000)<sub>2 </sub>= 1 * 2<sup>4 </sup>+ 1 * 2<sup>3</sup> + 0 * 2<sup>2</sup> + 0 * 2<sup>1</sup> + 0 * 2<sup>0</sup> = 1 * 16 + 1 * 8 + 0 * 4 + 0 * 2 + 0 * 1 = 16 + 8 = 24.</p>'),
(871, 133, 16, 4, '<p>Перевести число (217)<sub>8 </sub>у десяткову систему числення.</p><p>(217)<sub>8</sub> = 2 * 8<sup>2</sup> + 1 * 8<sup>1 </sup>+7 * 8<sup>0 </sup>= 2 * 64 + 1 * 8 + 7 * 1 = 128 + 8 + 7 = 143</p>'),
(872, 133, 17, 4, '<p>Перевести число (2AF)<sub>16 </sub>у десяткову систему числення.</p>\n<p>(2AF)<sub>16 </sub>= 2 * 16<sup>2</sup> + 10 * 16<sup>1</sup> + 16 * 16<sup>0 </sup>= 2 * 256 + 10 * 16 +15 * 1 = 687</p>\n<p><br></p>\n<p>Примітка. Необхідно пам’ятати, що для шістнадцяткової системи численя цифра A відповідає десятковій 10, B - 11, C - 12, D - 13, E - 14, F - 15.<br></p>'),
(873, 133, 18, 12, 'Переведіть шістнадцяткове число 1DF у десяткову систему.'),
(874, 133, 19, 12, 'Переведіть число 125 у шістнадцятковій системі числення у вісімкову та систему.'),
(875, 132, 1, 1, '<p><strong>Що таке алгоритм.</strong></p>'),
(876, 132, 2, 1, '<p>Алгоритм (від латинської форми імені середньоазіатського математика аль-Хорезмі) – правило дій, послідовність проведення обчислювальних операцій, спосіб знаходження шуканого результату.<o:p></o:p></p><p>У традиційному трактуванні алгоритм – це точний набір інструкцій, що описують послідовність дій виконавця для досягнення результату рішення задачі за кінцевий час. У міру розвитку паралельності в роботі комп''ютерів слово «послідовність» стали замінювати більш загальним словом «порядок». Це пов''язано з тим, що якісь дії алгоритму повинні бути виконані тільки один за одним, але якісь можуть бути і незалежними. Раніше часто писали «алгорифм», зараз таке написання використовується рідко.<o:p></o:p></p><p>Часто в якості виконавця виступає деякий механізм (комп''ютер, токарний верстат, швейна машина), але поняття алгоритму необов''язково відноситься до комп''ютерних програм, так, наприклад, чітко описаний рецепт приготування страви також є алгоритмом – у такому випадку виконавцем є людина.<o:p></o:p></p><p>Поняття алгоритму – одне з основних у програмуванні та інформатики. Це послідовність команд, призначена виконавцеві, в результаті виконання якої він повинен вирішити поставлене завдання. Алгоритм повинен описуватися на формальній мові, що виключає неоднозначність тлумачення. Виконавець може бути людиною або машиною. Виконавець повинен уміти виконувати всі команди, складові алгоритм. Безліч можливих команд звичайно і спочатку суворо задано. Дії, що виконуються за цим командам, називаються елементарними.<o:p></o:p></p><p>Запис алгоритму на формальному мові називається програмою. Іноді саме поняття алгоритму ототожнюється з його записом, так що слова «алгоритм» і «програма» – майже синоніми. Невелике розходження полягає в тому, що під алгоритмом, як правило, розуміють основну ідею його побудови. Програма ж завжди пов''язана із записом алгоритму на конкретному формальному мові.<o:p></o:p></p>'),
(877, 132, 3, 12, '<p>Оберіть, що з наведеного можна назвати алгоритмом:</p>\r\n'),
(878, 132, 5, 1, '<p>Різні визначення алгоритму в явній чи неявній формі містять наступний ряд загальних вимог:</p><p><b><i>1.</i></b> <b><i>Зрозумілість</i></b>. Алгоритм має бути описаний у словах та командах які будуть зрозумілі виконавцю. </p><p><i>Наприклад:</i> Мамі потрібно купити в магазині їжу. Виконавцем цього алгоритму може бути хтось із родини: батько, син, маленька дочка тощо. Зрозуміло, що для тата достатньо сказати, які купити продукти, а далі деталізувати алгоритм не потрібно. Дорослому сину-підлітку необхідно детальніше пояснити в яких магазинах можна придбати потрібний товар, що можна купити замість відсутнього товару і таке інше. Маленькій дочці алгоритм необхідно деталізувати ще більше: де взяти сумку, щоб принести товар, яку решту грошей необхідно повернути з магазину, як дійти до магазину і як там поводитись (якщо дитина вперше йде за покупками).</p><p><b><i>2. Визначеність (однозначність)</i></b>. Команди, з яких складається алгоритм мають бути чітко визначені. Вони не можуть мати двозначного трактування. Наприклад, вказівки "почисти картоплю", "посоли за смаком", "прибери в квартирі" є неоднозначними, тому що в різних випадках можуть призвести до різних результатів. Крім того виконавець має розуміти що робити на наступному кроці. Наприклад: вас послали за яким-небудь товаром у магазин, та ще попередили "без (хліба, цукру і таке інше) не повертайся", а що робити, якщо товар відсутній? </p><p><b><i>3. Дискретність</i></b>. Як було згадано вище, алгоритм задає повну послідовність дій, які необхідно виконувати для розв''язання задачі. При цьому, для виконання цих дій їх розбивають у визначеній послідовності на прості кроки. Виконати дії наступного розпорядження можна лише виконавши дії попереднього. Ця розбивка алгоритму на окремі елементарні дії (команди), що легко виконуються даним виконавцем, і називається дискретністю.</p><p><b><i>4. Масовість.</i></b> Дуже важливо, щоб складений алгоритм забезпечував розв''язання не однієї окремої задачі, а міг виконувати розв''язання широкого класу задач даного типу. Наприклад, алгоритм покупки якого-небудь товару буде завжди однаковий, незалежно від товару, що купується. Або алгоритм прання не залежить від білизни, що переться, і таке інше. Отож, під масовістю алгоритму мається на увазі можливість його застосування для вирішення великої кількості однотипних завдань.</p><p><b><i>5. Результативність.</i></b> Взагалі кажучи, очевидно, що виконання будь-якого алгоритму повинне завершуватися одержанням кінцевих результатів. Тобто ситуації, що в деяких випадках можуть призвести до так званого "зациклення", повинні бути виключені при написанні алгоритму. Наприклад, розглянемо таку ситуацію: роботу дано завдання залишити кімнату (замкнутий простір), не виконуючи руйнівних дій. У цьому випадку, якщо роботу не дати вказівки відкрити двері (що, можливо, закриті), то спроби залишити приміщення можуть бути безуспішними.</p>'),
(879, 132, 4, 1, '<p><strong>Ознаки алгоритму.</strong></p>'),
(880, 132, 6, 12, 'Які є вимоги до алгоритму?'),
(881, 132, 7, 1, '<p><strong>Словесний спосіб запису алгоритму.</strong></p>'),
(882, 132, 8, 1, '<p>Існує кілька методів запису алгоритмів, вибір яких залежить від виконавця та того, хто його задає.</p><p>Першій спосіб - це словесний опис алгоритму. Словесний спосіб запису заснований на тій чи іншій природній мові спілкування. Однак словесний запис алгоритму відрізняється від звичайних мовних конструкцій ретельнішим добором слів і фраз, який не допускає повторень або двозначного тлумачення. Крім того, у запису алгоритму можуть використовуватися математичні символи і вирази.</p><p>Словесний запис найчастіше застосовується на початковому етапі вивчення алгоритмів і призначається для використання алгоритму людиною. Однак ця форма запису алгоритму має два істотних недоліки. По-перше, вона недостатньо наочна і, по-друге, її важко безпосередньо перекласти мовою програми.</p>'),
(883, 132, 9, 4, '<p>Приклад.</p><p>Алгоритм приготування яєчні з 2 яєць.</p><ol><li>Поставити сковороду на плиту.</li><li>Покласти на сковороду шматочок вершкового масла.</li><li>Увімкнути конфорку.</li><li>Почекати, поки масло на сковороді розтане.</li><li>Кожне з 2 яєць розбити, а його вміст вилити на сковороду.</li><li>Посолити.</li><li>Почекати, поки загусне білок.</li><li>Вимкнути конфорку.</li></ol>'),
(884, 132, 10, 12, 'Чи відповідає наведений алгоритм всім ознакам з попереднього заняття.'),
(885, 132, 11, 1, '<p><strong>Запис алгоритму у вигляді таблиць, формул, схем, малюнків.</strong></p>'),
(886, 132, 12, 1, '<p>Другий спосіб - це подача алгоритму у вигляді таблиць, формул, схем, малюнків тощо. Наприклад, всіх вас вчили в дитячому садочку правилам поведінки на дорозі. І найкраще діти, вочевидь, сприймають алгоритм, що поданий у вигляді схематичних малюнків. Дивлячись на них, дитина, а потім і доросла людина, відпрацьовує ту лінію поведінки, що їй пропонується. Аналогічно можна навести приклади алгоритмів, що записані у вигляді умовних позначок на купленому товарі, щодо його користування (заварювання чаю, прання білизни тощо). В математиці наявність формул дозволяє розв''язати задачу, навіть "не використовуючи слів".</p>'),
(887, 132, 13, 1, 'https://lh4.googleusercontent.com/pxa2li33K53EMt0nRcMnEqIGQ5R-OE0LIhtKeIIHqaM6Yqb-Qf6QFqxFSqDGgZGsSey-2TXeCyTbL84TACh7uiIiMERIh8Vn8fZuOTN9CW2U5LLoGQAmriDHwKYqBL84eFhP-OE"></p'),
(888, 132, 14, 1, '<p><strong>Запис алгоритму у вигляді </strong><strong>блок-схеми</strong><strong>.</strong></p>'),
(889, 132, 15, 1, '<p><strong></strong></p><p>Третій спосіб - запис алгоритмів за допомогою блок-схеми. Цей метод був запропонований в інформатиці для наочності представлення алгоритму за допомогою набору спеціальних блоків. Основні з цих блоків наступні:</p>\r\n<p><img src="https://lh4.googleusercontent.com/uKqVTV4F84Y64gyLldJOEzFuT9gy9SnxquSXqXZwHdwTgEQx1ele7OpyhYI3VVgX_qVFT4MTOwH-atELizYZcrW2zjwZfv5T_xpV60Uoxv16PdZ0ApOlDswEMHC4o2fRw4kqyBM"></p><p><img src="https://lh3.googleusercontent.com/YTfpnxXAh0GMhF33eqlAGMQMTf2qMZutziAZvZc47ONfnzTqCRYrHnMxnxK3nygh9Jl3xXOiDZjHn-CwHYw4fZ2-qgc6i7Llyp2-y4RtWE_wDYT4N0yYEs243aemhYyTEVLOJOI"></p>'),
(890, 132, 16, 4, '<p>Використовуючи дані блоки, можна подати, наприклад, алгоритм чищення картоплі в такому вигляді:<br></p>\n<p><img src="/images/lecture/2a8e59311e47628591c8b1cb0a865681.jpg"></p>'),
(891, 132, 18, 1, '<p>Четвертий спосіб - навчальні алгоритмічні мови (псевдокоди). Ці мови мають жорстко визначений синтаксис і вже максимально наближені до машинної мови (мови програмування). Але створені вони з навчальною метою, тому мають зрозумілий для людей вигляд. Таких псевдокодів зараз існує велика кількість, починаючи з графічних середовищ "Алгоритміка", "Роботландія", "Лого-світи", "Черепашка" тощо і закінчуючи текстовими "національними" реалізаціями алгоритмічних мов, подібних до Паскаля. Ці псевдокоди мають програмну реалізацію і дуже широко застосовуються на етапі навчання основам програмування.</p>'),
(892, 132, 17, 1, '<p><strong>Запис алгоритму у вигляді </strong><strong>алгоритмічної пови (псевдокоду)</strong><strong>.</strong></p>'),
(893, 132, 19, 4, '<p>Алгоритм здіснення дзвінка по мобільному телефону.</p>\r\n<ol><li>Початок.</li><li>Розблокувати телефон..</li><li>Відкрити адресну книгу.</li><li>Обрати потрібний контакт.</li><li>Натиснути кнопку “Виклик”.</li><li>Після завершення розмови натиснути кнопку “Відбій”</li><li>Заблокувати телефон.</li><li>Кінець.</li></ol>\r\n<p> Зверніть увагу, що завджи необхідно чітко визначати початок та кінець алгоритму.</p>'),
(894, 132, 20, 1, '<p><strong>Запис алгоритму на мові програмування.</strong></p>'),
(895, 132, 21, 1, '<p>П''ятий спосіб максимально наближений до комп''ютера - це мови програмування. Справа в тому, що найчастіше в практиці виконавцем створеного людиною алгоритму являється машина і тому він повинен бути написаний мовою, зрозумілою для комп''ютера, тобто мовою програмування.</p>'),
(896, 132, 22, 4, '<p>Найпростіша програма мовою C. Виводить на екран фразу “Hello, World!”.</p>\r\n<p>#include &lt;stdio.h&gt;<br>int main ()<br></p><p style="margin-left: 20px;"> {</p><p style="margin-left: 40px;">printf ("Hello, World!");<br>  return 0;</p><p style="margin-left: 20px;">}</p>'),
(897, 125, 1, 1, '<p><strong>Що таке технологія програмування.</strong></p>'),
(898, 125, 2, 1, '<p>“Технологія програмування” - сукупність дій, необхідних для створення програмного забезпечення. Іншими словами під технологією програмування ми будемо розуміти тут як технологію розробки програмних засобів, починаючи з моменту зародження ідеї та закінчуючи створенням необхідної технічної документації. Кожен процес у цій сукупності базується на використанні методів та засобів, наприклад комп’ютеру.</p>\n<p>Як і у будь-якому виді діяльності у програмуванні існує своя технологія: це знання, правила, навички та інструменти, які дозволяють отримати гарантовано якісний результат. Але лише виконання певних правил не дає гарантію якісного результату. Це пояснюється специфікою програмування.</p>\n<p>По-перше, це не наука, де знання формули надає можливість вирішити задачу, підставив первинні дані та отримав результат.</p>\n<p>По-друге, ці правила необхідно виконувати не стільки на папері, скільки у голові.</p>\n<p>Тобто технологія програмування - це, швидше, спосіб організації процесу обмірковування програми, ніж її запис. Відповідно, якщо програміст, який пише програму думає, то він вже притримується якоїсь технології програмування, навіть не підозрюючи цього. Найпростіший метод полягає у написанні програми одразу з початку до кінця, без використання будь-яких загальних принципів - “як бог на душу покладе”.</p>\n<p>Найперша технологія - метод “північно-західного” кута (мається на увазі лист паперу або екран дисплею).</p>\n<p>Програма пишеться одразу від початку до кінця, без використання будь-яких загальних принципів. Цей метод можливо застосувати лиже для невеликих програм та модулів, які не будуть мати широкого практичного застосування або будуть застосовуватись у вузькому колі для рішення специфічних завдань “на швидку руку”.</p>'),
(899, 125, 3, 12, 'Як називається найпростіша технологія розробки програми?'),
(900, 125, 5, 1, '<p>Процедурне програмування - технологія програмування при якій оператори, які виконуються послідовно можна зібрати у окремі частини (підпрограми), тобто більш крупні цілісні частини коду.</p><p>Дані підпрограми називають функціями та процедурами. Для них передбачається можливість передачі даних у функцію/процедуру та отримання результату. До виконання функції або процедури можна повернутись декілька разів з різних частин програми. </p><p>Виконання програми зводиться до послідовного виконання команд з метою зміни первинних даних таким чином, щоб отримати необхідний результат. Таким чином, з точки зору програміста є програма та дані. Програма поступово змінює стан даних.</p><p>Процедурна мова дозволяє програмісту визначити кожен крок у процесі рішення задачі. Особливістю таких мов програмування є те, що задачі розбиваються на кроки та вирішуються крок за кроком. </p><p>Прикладами процедурних мов програмування є такі мови як Basic, Fortran, Pascal, C.</p>'),
(901, 125, 4, 1, '<p><b>Процедурне програмування.</b></p>'),
(902, 125, 6, 12, 'У чому полягає суть процедурного програмування.'),
(903, 125, 7, 1, '<p><strong>Деякі поняття структурного програмування. Модульне програмування.</strong></p>'),
(904, 125, 8, 1, '<p>Модульне програмування на рівні файлів - це можливість розділити повний текст програми на декількох різних файлів, та працювати над ними незалежно один від одного. Принцип модульності розповсюджується не тільки на програми, але й на дані - будь-який набір параметрів, який характеризує логічний чи фізичний об’єкт має бути представлений у програмі як окрема структурна одиниця.</p><p>Зразком принципу модульності є бібліотека стандартних функцій. Вона, як правило, забезпечує повний набір параметризованих дій, використовуючи загальні структури даних. Бібліотеки являють собою програми, незалежно розроблені та розміщені у каталог бібліотек.</p>'),
(905, 125, 9, 12, 'Інженери виготовляють космічний корабель. Це високотехнологічне виробництво, та до складу космічного корабля входить велика кількість різноманітних пристроїв та приладів. Двигун, наприклад, виготовляється на одному заводі. Корпус – на іншому. Паливні баки – на третьому, а електроніка – на четвертому. Чи можна це назвати модульною розробкою?'),
(906, 125, 10, 1, '<p><strong>Деякі поняття структурного програмування. Низхідне програмування.</strong></p>'),
(907, 125, 11, 1, '<p>Низхідне програмування. Низхідне проектування програми полягає у тому, що розробка іде від загального неформального формулювання якоїсь дії програми на природній мові, до заміни її однією з трьох формальних конструкцій мови програмування:</p><p>простої послідовності дій</p><p>конструкції вибору або оператору “Якщо …. то….”</p><p>конструкції повторення або циклу.</p><p>На першому етапі розробки кодується та тестується головний модуль програми, який відповідає за логіку роботи всієї програми в цілому. Решта модулів змінюється “заглушками”, які імітують роботу цих модулів. Використання “заглушок” необхідно для того, щоб на самому ранньому етапі проектування можна було перевірити працездатність головного модуля. На останніх етапах проектування всі “заглушки” поступово замінюються робочими модулями.</p><p>Перевагою цього методу є те, що на самому початку налагоджується головний модуль програми, тобто її логіка.</p><p>Недоліками є те що необхідно робити “заглушки” та те, що до самого останнього етапу проектування незрозумілий розмір програмного комплексу та його експлуатаційні характеристики, за які, як правило, відповідають модулі самого низького рівня.</p><p>Низхідне проектування по своїй природі є покроковим, тому що передбачає кожен раз заміну одного словесного формулювання на єдину конструкцію мови. Але у процесі розробки програми, можуть бути і інші кроки, пов’язані з деталізацією самого словесного формулювання у більш детальне.</p><p>Низхідне покрокове проектування програми не дає гарантії отримання “правильної” програми, але при виявлені тупикової ситуації дозволяє повернутись до одного з верхніх кроків деталізації.</p>'),
(908, 125, 13, 1, '<p><b><strong>Деякі поняття структурного програмування. </strong>Висхідне програмування.</b></p>'),
(909, 125, 14, 1, '<p>На противагу низхідному програмуванню існує метод висхідного програмування. На першому етапі розробляються модулі найбільш низького рівня. На наступному - вони поєднуються, підключаються до модуля більш високого рівня та перевіряється їх працездатність. На завершальному етапі розробляється головний модуль, який відповідає за логіку роботи всього програмного комплексу.</p><p>Перевагою висхідного методу є те, що немає необхідності писати “заглушки”, недоліком є те, що головний модуль розробляється на останньому етапі, що може призвести до необхідності переробки модулів низького рівня.</p><p>На практиці застосовується обидва методи. Низхідне проектування частіше застосовується при розробці нового програмного комплексу, а висхідне - при модифікації існуючого комплексу.</p><p>Якщо згадати етапи програмування, які розглядались у попередніх темах, можна відмітити, що розглянуті технології програмування мають відношення до 3 етапу програмування - розробка алгоритму.</p>'),
(910, 125, 16, 1, '<p><b>Структурне програмування.</b></p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(911, 125, 17, 1, '<p>Структурне програмування - модульне низхідне покрокове проектування алгоритму та структур даних.</p><p>При низхідній покроковій деталізації програми необхідні для роботи структури даних та змінні з’являються по мірі переходу від неформальних визначень до конструкцій мови програмування, тобто процеси деталізації алгоритму та даних ідуть паралельно. Однак це стосується у першу чергу окремих місцевих змінних та внутрішніх параметрів. Проте з загальної точки зору дані завжди первині по відношенню до алгоритму. Саме тому спосіб організації даних у програмі більш суттєво впливає на її алгоритм, ніж будь-що інше. Через це процес проектування структур даних повинен випереджати процес проектування алгоритму їх обробки.</p><p>Технологія структурного програмування була розроблена на прикінці 60-х років Едсгером Дейкстрою. </p><p>У ранніх процедурних мовах для переходу на іншу ділянку коду використовувався оператор безумовного переходу “goto”. Його використання значно погіршувало розуміння коду, та могло створити певні помилки, які дуже важко знайти.</p><p>Розробка структурного програмування значно вплинула на розвиток програмування адже крім іншого підходу до розробки програми було запропоновано операції без яких не уявляється будь-яка сучасна програма - цикли, які дозволяють постійно виконувати ті ж самі команди до виконання певної умови, оператори умовного переходу “якщо … то … інакше”. Це суттєво спростило написання програми та покращує розуміння коду програми. </p>'),
(912, 125, 18, 1, '<p><b>Об’єктно-орієнтоване програмування.</b></p>'),
(913, 125, 19, 1, '<p>Об’єктно-орієнтоване програмування - це технологія програмування основними елементами якої є об’єкти та класи.</p><p>Клас у програмуванні - це певний набір властивостей та правил поведінки цих властивостей. Клас можна порівняти з кресленням якогось виробу, наприклад автомобілю. Є загальна схема побудову автомобілю - у нього мають бути двері, вікна, колеса, двигун та інші властивості. </p><p>Об’єкт - це вже створений клас. При створені класу задаються конкретні характеристики цього об’єкту які мають відповідати властивостям класу. Так, якщо продовжувати аналогію з автомобілем, при створенні об’єкту необхідно вказати яка кількість дверцят буде, як розташовані вікна, якого кольору автомобіль, технічні характеристики двигуна на інше. </p><p>Крім того у класі описуються певні внутрішні механізми взаємодії властивостей, або алгоритми зміни стану об’єкту. Наприклад якщо передбачено розрахунок відстані, яку може проїхати автомобіль, то у випадку зміни деяких властивостей (швидкість, залишок палива та інше) відстань, яку може проїхати автомобіль, буде змінюватись. Кінцевому користувачеві немає потреби замислюватись як це розраховується. У нього є певні засоби отримати поточну інформацію про максимальну можливу відстань. </p><p>Технологія об’єктно-орієнтованого програмування є однією з найбільш поширений у сучасному програмуванні. Використання вже готових класів та об’єктів дозволяє значно підвищити ефективність роботи програміста - адже програміст замість того, щоб описувати алгоритм якісь рутинних дій, може скористатись вже готовим класом та приділити більше уваги розробці програми.</p>'),
(915, 125, 21, 1, '<p>Інкапсуляція. Це означає що від кінцевого користувача об’єкту прихована реалізація внутрішніх алгоритмів класу. Є тільки механізми доступу до властивостей класу та механізми їх зміни. При розробці класу це дозволяє перевіряти коректність ведених даних. Крім того це забезпечує єдину точку доступу до властивості класу, яку значно легше контролювати - перевіряти коректність введення даних, їх відповідність іншим даним та граничним зазначенням.</p><p>Успадкування. Кожен клас може бути нащадком іншого класу. Це дозволяє на базі вже існуючого класу, з певним набором методів створити свій клас, який буде мати додаткові методи.</p><p>Поліморфізм. Це означає залежність поведінки від класу, в якому ця поведінка викликається, тобто, два або більше класів можуть реагувати по різному на однакові повідомлення. Це спричинене зміною в одного з класів якогось методу(процедури, функції), шляхом запису іншого алгоритму. Як приклад, деяка комп''ютерна програма при натисканні клавіші Esc завершить роботу, інша ж програма після натискання кнопки Esc тільки відкриє меню даної програми.</p>'),
(916, 125, 20, 1, '<p><b>Основні поняття об’єктно-орієнтованого програмування.</b></p>'),
(917, 125, 12, 12, 'Технологія низхідного програмування передбачає:'),
(918, 125, 15, 12, 'Технологія висхідного програмування передбачає:'),
(919, 125, 22, 12, 'Завдяки чому поява структурного програмування суттєво вплинула на розвиток програмування?'),
(920, 125, 23, 12, 'Що дає програмісту технологія об’єктно-орієнтованого програмування?'),
(921, 125, 24, 12, 'Що означає успадкування у розрізі об’єктно-орієнтованого програмування?'),
(922, 126, 1, 1, '<p><strong>Що таке мова програмування</strong></p>'),
(923, 126, 2, 1, '<p>Самому написати програму в машинному коді (на машинній мові) складно. Машинний код прийнятний, коли програма невеличка і немає необхідності в операціях ручного введення-виведення. Тому сьогодні практично усі програми створюються за допомогою мов програмування. Теоретично програму можна скласти за допомогою природної людської мови, але автоматичне переведення такої програми у машинний код поки що неможливо з причини неоднозначності природної мови.</p><p>Мови програмування - штучні мови. Від природних вони відрізняються обмеженим числом "слів", значення яких зрозумілі транслятору, і дуже строгими правилами записування команд (операторів).</p><p>Сукупність правил записування операторів утворюють синтаксис мови програмування, а зміст кожної команди і інших конструкцій мови - його семантику.</p><p>Порушення форми записування програми приводить до того, що транслятор не може зрозуміти призначення оператора і видає повідомлення про синтаксичну помилку, а правильно записане, але яке не відповідає алгоритму використання команд мови приводить до логічної помилки.</p>'),
(924, 126, 3, 12, 'Що таке мова програмування?'),
(925, 126, 4, 1, '<p><strong>Історія мов програмування. Машина мова програмування.</strong></p>'),
(926, 126, 5, 1, '<p>Перші програми полягали у встановленні перемикачів на контрольній панелі комп’ютера у певне положення. Зрозуміло, що такі програми мали дуже обмежені можливості, та не могли бути довільно змінені для вирішення задачі іншої по суті.</p><p>Наступним етапом розвитку мов програмування стала машина мова. Фактично вона являла собою набір елементарних команд, які знає процесор, який їх виконує та набір даних, які задаються процесору у вигляді адреси комірки пам’яті, яку потрібно використати. Прикладом елементарної команди може бути команда зчитування певної ділянки пам’яті для подальших обрахунків.</p><p>Програмувати на машині мові можна лише досконало знаючи внутрішню будову процесора та комп’ютера. Програми, написані на машинній мові дуже складні для розуміння програмістом. Ще одним недоліком є те, що набір команд специфічен для кожного типу процесора, та не завжди можна запустити одну й ту саму програму написану на машинній мові на іншому виді процесору.</p>'),
(927, 126, 6, 4, '<p>Програма для процесорів архітектури x86 та операційної системи MS-DOS має наступний вигляд у шістнадцятковій системі. Програма виводить на екран фразу «Hello world!»</p><p>BB 11 01 B9 0D 00 B4 0E 8A 07 43 CD 10 E2 F9 CD 20 48 65 6C 6C 6F 2C 20 57 6F 72 6C 64 21</p>'),
(928, 126, 7, 12, 'Чому використання машинної мови незручно для програмування.'),
(929, 126, 8, 1, '<p><strong>Історія мов програмування. </strong><strong>Мова асемблера. </strong></p>'),
(930, 126, 9, 1, '<p>З розвитком комп’ютерної техніки та зростали і запити на розробку програмного забезпечення. Воно становилось все більш складним та вирішувало все більш складні задачі. Зі збільшенням розміру програм, які написані на машинному коді, вони становились громіздкими та незручними для розуміння. Крім того з’явилось більше різних процесорів з різними командами.</p><p>Щоб програмування мало більш уніфікований вигляд були розроблені спеціальні програми - асемблери. Їх завдання було перекласти команди асемблерної мови на мову машинних кодів.</p><p>Це важно назвати мовою програмування у сучасному розумінні, проте використання команд асемблера спростило написання програм та покращило розуміння написаного коду, що дозволяє його видозмінювати та вдосконалювати. Код написаний на мові асемблера можна було виконувати на різних архітектурах. Він візуально більш зручний для розуміння та структурований.</p>'),
(931, 126, 10, 4, '<p>Програма для процесорів архітектури x86 та операційної системи MS-DOS має наступний вигляд на асемблерній мові. Програма виводить на екран фразу <strong>«Hello world!»</strong></p>\n<p>mov   bx, 0111h<br> mov   cx,  000Dh<br> mov    ah,  0Eh<br> mov    al,   [bx]<br> inc       bx<br> int       10h<br> loop   0108<br> int       20h<br> HW     db   ''Hello, World!''</p>'),
(932, 126, 11, 12, 'Що таке асемблер?'),
(933, 126, 12, 1, '<p><strong>Історія мов програмування. Мови високого рівня.</strong></p>'),
(934, 126, 13, 1, '<p>Наступний крок був зроблений у 1954 році, коли була почата розробка мови програмування FORTRAN (FORmula TRANslator). Перший компілятор з’явився у 1957 році. Після нього з’явились такі мови високого рівня як LISP, ALGOL 58, FACT.</p><p>Мови високого рівня імітують природні мови використовуючи певні слова звичайної мови та загальноприйняті математичні символи. Використання зрозумілих для людини слів дозволяє просто виразити складну послідовність дій на машинній мові.</p><p>У подальшому появились такі мови програмування як COBOL, Pascal та C.</p>'),
(935, 126, 14, 4, '<p>Програма на мові програмування FORTRAN, яка виводить на екран повідомлення Hello, World!</p>\n<p><br></p>\n<p>program hello</p>\n<p style="margin-left: 20px;"> print *, "Hello World!"</p>\n<p> end program hello</p>\n<p><br></p>\n<p>І така ж програма на мові C</p>\n<p><br></p>\n<p>#include &lt;stdio.h&gt;</p>\n<p> int main (void)</p>\n<p style="margin-left: 20px;"> {</p>\n<p style="margin-left: 40px;">printf ("Hello, World!");</p>\n<p style="margin-left: 40px;">return 0;</p>\n<p style="margin-left: 20px;"> }</p>'),
(936, 126, 15, 12, 'Розробка мов програмування високого рівня призвела до'),
(937, 126, 16, 1, '<p><strong>Історія мов програмування. Структурне програмування.</strong></p>'),
(938, 126, 17, 1, '<p>З часом задачі, які ставились перед програмістами, становились все більш та більш складними. Виробництво комп’ютерів становилось дешевше, відтак більша кількість установ та організацій могли собі дозволити використання комп’ютерів для вирішення поточних задач. У зв’язку з цим зростав попит на програмістів та на складні програми. А отже виникла потреба у підвищенні продуктивності праці програмістів. Це призвело до розробки структурного програмування.</p><p>Батьком цієї концепції вважається Едсгер Дейкстра. Суть її полягає у тому, що програму можна розбити на блоки, кожен з яких виконує одну окрему завершену дію (вона може складатись з багатьох команд мови програмування). Такі блоки отримали назву процедур або функцій. Їх особливістю є те, що їх можна викликати декілька разів з різних ділянок програми, що спрощує код програми. Також процедури та функції характеризуються тим, що у них можна передати дані, з якими вони будуть працювати, та при кожному виклику ці дані можуть бути різні.</p><p>Ще однією можливістю структурного програмування є поєднання пов’язаних між собою даних у одну структуру і подальша робота з цими даними як з одним цілим.</p><p>Наприклад, щоб зберігати час потрібні окремі змінна для годин, хвилин та секунд. У подальшому, щоб використати ці дані, необхідно мати доступ до кожної з цих змінних. При поєднанні їх у єдину структуру в функцію потрібно передати тільки цю структуру.</p><p>Принципи структурного програмування використовуються і по нині.</p>'),
(939, 126, 18, 12, 'Що є особливістю структурного програмування.'),
(940, 126, 19, 1, '<p><strong>Історія мов програмування. Об’єктно-орієнтоване програмування.</strong></p>'),
(941, 126, 20, 1, '<p>Комп’ютери продовжували вдосконалюватись та дешевшати. Їх все більше використовували для вирішення ненаукових задач, з’явились персональні комп’ютери. Відповідно програмісти розробляли все більш різноманітні та складні програми. І знову з’явилась необхідність підвищити продуктивність праці програміста. Так з’явилось об’єктно-орієнтоване програмування - ООП. Воно стало логічним продовженням структурного програмування.</p><p>Якщо у структурному програмуванні окремо існували структури даних та процедури, то ООП поєднало це у одній сутності - класі.</p><p>У класу є його поля, які являють собою дані структури та є методи класу, які є функціями, що працюють даними кожного окремого класу.</p><p>Клас у програмуванні - це певний набір властивостей та правил поведінки цих властивостей. Клас можна порівняти з кресленням якогось виробу, наприклад автомобілю. Є загальна схема побудову автомобілю - у нього мають бути двері, вікна, колеса, двигун та інші властивості.</p><p>Об’єкт - це вже створений клас. При створені класу задаються конкретні характеристики цього об’єкту які мають відповідати властивостям класу. Так, якщо продовжувати аналогію з автомобілем, при створенні об’єкту необхідно вказати яка кількість дверцят буде, як розташовані вікна, якого кольору автомобіль, технічні характеристики двигуна на інше.</p><p>Крім того у класі описуються певні внутрішні механізми взаємодії властивостей, або алгоритми зміни стану об’єкту. Наприклад якщо передбачено розрахунок відстані, яку може проїхати автомобіль, то у випадку зміни деяких властивостей (швидкість, залишок палива та інше) відстань, яку може проїхати автомобіль, буде змінюватись. Кінцевому користувачеві немає потреби замислюватись як це розраховується. У нього є певні засоби отримати поточну інформацію про максимальну можливу відстань.</p><p>Технологія об’єктно-орієнтованого програмування є однією з найбільш поширений у сучасному програмуванні. Використання вже готових класів та об’єктів дозволяє значно підвищити ефективність роботи програміста - адже програміст замість того, щоб описувати алгоритм якісь рутинних дій, може скористатись вже готовим класом та приділити більше уваги розробці програми.</p>'),
(942, 126, 21, 12, 'Чому об’єктно-орієнтоване програмування є логічним продовженням структурного програмування?'),
(943, 126, 22, 1, '<p><strong>Застосування сучасних мов програмування.</strong></p>'),
(944, 126, 23, 1, '<p>Існує велика кількість мов програмування. Є мови які розроблені для специфічної мети та не можуть бути використані для інших цілей. Є мови які не мають широкого поширення та використовуються тільки ентузіастами та розробниками цієї мови. А є мови які дуже поширені та використовуються повсякденно у великій кількості проектів.</p><p>Велика кількість мов програмування викликана тим, що для різних цілей використовуються різни мови програмування.</p><p>Веб-програмування, розробка сайтів. Одна з найбільш поширених сфер застосування програмістів. Розробка сайтів вимагає з одного боку розробку користувацького інтерфейсу - те, що буде бачити користувач при відкритті сайту. Для цього використовуються такі технології та мови як HTML, CSS, JavaScript. З іншого боку для функціонування складного сайту потрібно розробити його зворотнью сторонку - “начинку”, де буде здійснюватись обробка інформації, забезпечуватись її зберігання та інше. Для цього найчастіше використовуються Ruby On Rails, PHP, JavaScript, Java.</p><p>Розробка користувацьких додатків. В залежності від платформи, на яку вони розраховані можуть використовуватись різні мови. Так для додатків на операційну систему Windows можна використовувати мови програмування C++, C#, Java. Для ОС Linux - C++, Java. Для пристроїв на операційній системі Mac OS та iOS - використовується Objective-C, SWIFT. Для операційної системи Android - Java.</p><p>Розробка ігор та 3D-моделювання. Для цих цілей зазвичай використовують мови програмування C#, C++, C. </p>'),
(945, 126, 24, 12, 'Що з переліченого використовується для веб-програмування.'),
(946, 126, 25, 1, '<p><strong>Середовища програмування.</strong></p>'),
(947, 126, 26, 1, '<p>Початковий код програми являє собою текст у файлі. Щоб перетворити його у код, зрозумілий для комп’ютера використовуються спеціальні програми - компілятори. Звичайно програміст може відкрити будь-який текстовий редактор, написати код, зберегти файл та використовуючи компілятор перетворити його на машинний код. Проте це незручно, та такий підхід не є продуктивним.</p><p>Щоб підвищити продуктивність праці програмістів існує цілий клас програм, які називаються середовищами розробки. Це інструмент, який допомагає програмісту більш ефективно працювати. Під час написання коду у середовищі розробки постійно з’являються підказки які функції можна використати, які типи змінних можна передати у функцію та інше. Використання середовища програмування надає можливість швидкого доступу до довідкової інформації, адже неможливо пам’ятати все.</p><p>Інструменти середовища розробки дозволяють виявляти помилки у програмах - зупинити роботу програми можна на будь-якому рядку коду, та передивитись поточний стан змінних. Це суттєво полегшує працю програміста.</p><p>Сучасне промислове програмування неможливо уявити без використання середовища розробки.</p><p>Серед найбільш вживаних середовищ розробки можна вділити такі, як XCode, MS Visual Studio, Qt Creator, NetBeans, Eclipse, IntelliJ IDEA та інші.</p><p>Кожне середовище розробки має підтримувати всі стандарти мови програмування, на якій воно дозволяє програмувати, а з метою розширення популярності середовища розробки виробники додають свої бібліотеки, які розширюють можливості мови.</p>'),
(948, 126, 27, 12, 'Що таке середовище програмування.'),
(949, 126, 28, 1, '<p><strong>Стандартизація мов програмування.</strong></p>'),
(950, 126, 29, 1, '<p>Розробників програмного забезпечення, яке використовується програмістами досить багато. І не завжди всі компанії автори засобів розробки однаково реалізовували ту чи іншу мову програмування. Це призводило до того, що код, написаний у одному середовищі розробки не компілювався у іншому.</p><p> У зв’язку з цим виникла необхідність стандартизації синтаксису мов програмування. Спочатку це відбувалось на рівні окремих виробників середовищ розробки. Але при виході нової версії необхідно узгоджувати зміни, щоб вони підтримувались різними компіляторами.</p><p> Наступним кроком стало створення організацій, які займаються розробками стандартів, при цьому не займаються їх реалізацією. Такий підхід дозволяє стандартизувати мову програмування на глобальному рівні, вчасно підтримувати стандарт актуальним. Компанії-розробники середовищ розробки забезпечують підтримку загальноприйнятого стандарту, проте можуть додавати свої бібліотеки та можливості, які і відрізняють різні середовища розробки.</p><p> Організації які займаються розробкою стандартів:</p><ul><li>Американський національний інститут стандартів ANSI (American National Standards Institute)</li><li>Інститут інженерів по електротехніці та електроніці IEEE ( Institute of Electrical and Electronic Engineers)</li><li>Організація міжнародних стандартів ISO (International Organization for Standardization).</li></ul>'),
(951, 126, 30, 12, 'Чому важлива стандартизація мов програмування?'),
(952, 126, 31, 1, '<p><strong>Виключення можливостей мови, які визнані застарівшими.</strong></p>'),
(953, 126, 32, 1, '<p>Мови програмування еволюціонують, та з часом з’являються нові можливості, старі відпадають. Але неможливо виключити старі можливості, оскільки потрібно забезпечувати сумісність зі старими версіями. З іншого боку залишати всі старі можливості тільки з метою підтримки - нераціонально, адже це призведе до ускладнення компілятора.</p><p> Якщо якась можливість визнається застарівшою вона спочатку відмічається у документації яка “не рекомендована до використання”. Це означає, що її можна використовувати, але не рекомендується.</p><p> У наступному стандарті ця можливість відмічається як “застарівша”. Це означає, що компілятор її виконує, проте використовувати її неможна.</p><p> Через декілька стандартів така можливість виключається та спроби скомпілювати код з використанням старих можливостей призведуть до помилки компіляції.</p>'),
(954, 126, 33, 12, 'Оберіть вірний «життєвий цикл» можливості мови програмування.'),
(955, 131, 35, 12, 'k'),
(956, 117, 20, 1, '<p>b vb</p>'),
(958, 117, 21, 1, '<p>Hello!\r\n</p>'),
(959, 207, 2, 1, '<p>Hello! This is a first page block!</p>'),
(960, 207, 1, 1, '<p>Hello! This is a second block!</p>'),
(964, 210, 1, 1, '<p>test</p>'),
(965, 211, 1, 1, '<p>Сьогодні все більше і більше ми чуємо фразу “база даних”, Але не до кінця розуміємо всю суть цього слова. Для Вас, як майбутніх програмістів, варто спочатку зрозуміти що це таке і з чим його їдять.</p>\n<p>Для початку звернемося до наукових джерел і дізнаємось про терміни які нам будуть необхідні для вивчення курсу. Отже, в науковій літературі можна зустріти наступні твердження.</p>\n<p><strong>База даних</strong> - це впорядкований набір логічно взаємопов''язаних даних, що використовуються спільно та призначені для задоволення інформаційних потреб користувачів.</p>\n<p><strong>База даних</strong> - це систематизоване сховище інформації певної предметної галузі, до якого можуть мати доступ різні користувачі для вирішення своїх завдань.</p>\n<p>Робота бази даних забезпечується за допомогою системи керуванням бази даних.</p>\n<p><strong>Система керування базою даних</strong> - це комп''ютерна програма чи комплекс програм, що забезпечує користувачам можливість створення, збереження, оновлення, пошук інформації та контролю доступу в базах даних.</p>\n<p>Для початку, представте собі бібліотеку. Це є велика будівля в якій зберігаються книги. От дану сукупність книг можна назвати базою даних. Для даної бази даних є приміщення, шафи та полиці де зберігаються книги. Також є персонал який обслуговує дану бібліотеку, систематизує і роскладає по полицях усі книги. Персонал бібліотеки є своєрідною системою керування базою даних.</p>\n<p>За типами бази даних поділяють на ієрархічні, мережні і реляційні моделі.</p>\n<p><strong>Ієрархічна модель БД</strong>. (представляє собою структуру даних, які впорядковані за підля­ганням від загального до конкретного, нагадує «дерево», має складові: рівень, вузол, зв''язок. Модель працює за таким принципом: кілька вузлів нижчого рівня з''єднуються за допомогою зв''язку з одним вузлом вищого рівня. Прикладом можна відмітити родове дерево, де є посилання з одної особи/таблиці на іншу.</p>\n<p><strong>Мережна модель БД</strong>. Загальним виглядом на схожа на ієрархічну. Має такі самі складові структури. Між елементами структури зв''язок довільний обмежений кількістю елементів.</p>\n<p><strong>Реляційна модель БД</strong> Модель побудована на взаємовідношеннях між складовими структури. Складається з таблиць взаємопов’язаних між собою.</p>\n<p>Реляційна модель виявилась самою стійкою та оптимальною і пережила своїх двох попередниць. Тому надалі ми будемо говорити лише про реляційні моделі баз даних.</p>\n<p>Назва «реляційна» (relational) пов''язана з тим, що кожен запис у таблиці даних містить інформацію, яка стосується (related) якогось конкретного об''єкта. Крім того, зв''язані між собою (тобто такі, що знаходяться в певних відношеннях — relations) дані навіть різних типів в моделі можуть розглядатися як одне ціле.</p>\n<p>Таблиця має такі властивості:</p>\n<ul>\n	<li>кожний елемент таблиці являє собою один елемент даних;</li>\n	<li>повторювані групи відсутні;</li>\n	<li>усі стовпці в таблиці однорідні; це означає, що елементи стовпця мають однакову природу;</li>\n	<li>стовпцям присвоєні унікальні імена;</li>\n	<li>у таблиці немає двох однакових рядків.</li>\n</ul>\n<p>Порядок розміщення рядків і стовпців у таблиці довільний; таблиця такого типу називається відношенням. У сучасній практиці для рядка використовується термін «запис», а для стовпця термін «поле».</p>\n<p>Основною відмінністю пошуку даних в ієрархічних, мережних і реляційних базах даних є те, що ієрархічні і мережні моделі даних здійснюють зв''язок і пошук між різними об''єктами за структурою, а реляційні — за значенням ключових атрибутів (наприклад, можна знайти всі записи, значення яких у полі «номер будинку» дорівнює 3, але не можна знайти 3-й рядок).</p>\n<p>Оскільки реляційна структура досить проста, вона дозволяє реалізовувати невеликі і прості (і тому легкі для створення) бази даних, навіть персональні, сама можливість реалізації яких ніколи навіть і не розглядалася в системах з ієрархічною чи мережною моделлю.</p>\n<p>Недоліком реляційної моделі даних є надмірність по полях (для створення зв''язків між різними об''єктами бази даних).</p>\n<p>Практично всі існуючі на сьогодні комерційні бази даних і програмні продукти для їх створення використовують реляційну модель даних.<br></p>'),
(966, 212, 1, 3, '<p>afvjahegfv</p>'),
(967, 212, 2, 1, '<p>fawfnjn</p>'),
(968, 212, 3, 4, '<p>cacfb an,edf c,a</p>'),
(969, 212, 5, 7, '<p>fadfknadkcfs</p>'),
(970, 212, 4, 4, '<p>qdqrjhbrf</p>'),
(971, 213, 1, 1, '<p>Вступ</p><p>Частина 1</p>Натуральні числа'),
(972, 213, 2, 1, '<p>Натуральні числа 1,2,3,… - це числа, що використовуються для рахування предметів або для вказування порядкового номера того чи іншого предмета серед однорідних предметів. Будь-яке натуральне число можна записати за допомогою десяти арабських цифр: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9. Число 0 не є натуральним числом.</p><p>Для читання натуральних чисел їх розбивають, починаючи справа, на групи по три цифри в кожній. Три перші цифри праворуч складають клас одиниць, три наступні – клас тисяч, потім йдуть класи мільйонів, мільярдів і т.д. Кожна із цифр класу називається його розрядом. </p><p>Із двох натуральних чисел менше те, яке при підрахунку називають раніше. Наприклад, число 8 менше від 12 (записують так: 8 &lt; 12). Коли одне число більше другого, це записують так: 386 &gt; 99. </p>Найменше натуральне число – 1. <br>Найбільшого натурального числа не існує. <br>Множину натуральних чисел позначають символом N.'),
(973, 213, 3, 1, '<p>Числові вирази і числові рівності </p><p>Запис, у якому числа з`єднані знаками дій, називають числовим виразом.<br>Наприклад, 10∙3+4; (60-2∙5):10.<br></p><p>Записи, у яких знаком рівності поєднано два числових вирази, називають числовими рівностями. Рівність має ліву і праву частини.</p>'),
(974, 213, 4, 1, '<p>Порядок виконання арифметичних дій</p><p>Додавання і віднімання чисел називають діями першого ступеня, а множення і ділення чисел – діями другого ступеня. <br>Якщо числовий вираз містить дії тільки одного ступеня, то їх виконують по порядку зліва направо. <br>Якщо ці вирази містять дії тільки першого і другого ступенів, то спочатку виконують дії другого ступеня, а потім – дії першого ступеня. <br>Якщо у виразі є дужки, то спочатку виконують дії в дужках. </p>'),
(975, 213, 5, 4, '<p><em>Наприклад</em>, 36: (10-4)+3∙5= 36:6+15 = 6+15 = 21. </p>'),
(976, 213, 6, 4, '<p><em>Завдання</em>: 25: (10-5)+5∙7</p>'),
(977, 213, 7, 1, '<p>Додатні і від’ємні числа , цілі числа</p><p>Числа бувають додатні і від’ємні, натуральні, цілі, раціональні, ірраціональні.</p><p>5; +7; +0,23; +4, 59;- додатні числа.</p><p>Додатні числа можна записати без знака, тобто замість +5; + 7; +0, 23 можна писати 5;7; 0, 23.</p><p>1;-37;-0,2;- від’ємні числа.</p><p>Від’ємні числа не можна писати без знака.</p><p>числа 1 і (-1), 5 і (-5), і () називаються <em>протилежними</em>. Загалом (+а) і (-а)-протилежні числа. Сума протилежних чисел дорівнює нулю, тобто (+a) + (-а)=0.</p><p>Цілі числа –це натуральні числа, протилежні їм числа і число 0.</p><p>Число 0 відокремлює додатні числа від від’ємних.</p>'),
(978, 213, 8, 4, '<p><em>Завдання </em>((451-17*3)*3-200):500+46*60</p>'),
(979, 213, 9, 1, '<p>Частина 2</p><p><em>Раціональні числа</em> – числа, які можна подати у вигляді p/q, де p і q –будь-які цілі числа, причому q не лорівнює 0. Множину раціональних чисел позначають символом Q. Цілі числа і дроби і є раціональними числами.</p>'),
(980, 213, 10, 4, '<p><em>Наприклад</em>: -1, <img src="https://lh4.googleusercontent.com/eNZ0rEGC2M5vdknttGRxO_RBkr07VdqReMhLXcer12W0yxZg6ZU5z5W32W5CbnPlByCoeKubOVYuXz4kykeBeAN76mTzS3iVqU30kawltQ9VAAMoNCP01f4_9ldv1zdsnDs97LceTpa8rO59" width="106" height="93" style="width: 106px; height: 93px;"> - раціональні числа.</p>'),
(981, 212, 6, 1, '<p><a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5">https://ru.wikipedia.org/wiki/Дифференциальное_уравнение</a></p>'),
(982, 212, 7, 4, '<p>арпрарапрап</p>'),
(986, 235, 1, 1, '<p>Тема : Натуральні числа</p><p>Вступ</p><p>Частина 1</p>Натуральні числа'),
(987, 235, 2, 1, '<p>Натуральні числа 1,2,3,… - це числа, що використовуються для рахування предметів або для вказування порядкового номера того чи іншого предмета серед однорідних предметів. Будь-яке натуральне число можна записати за допомогою десяти арабських цифр: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9. Число 0 не є натуральним числом. </p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(988, 235, 3, 1, '<p>Для читання натуральних чисел їх розбивають, починаючи справа, на групи по три цифри в кожній. Три перші цифри праворуч складають клас одиниць, три наступні – клас тисяч, потім йдуть класи мільйонів, мільярдів і т.д. Кожна із цифр класу називається його розрядом. </p>'),
(989, 235, 4, 1, '<p>Із двох натуральних чисел менше те, яке при підрахунку називають раніше. Наприклад, число 8 менше від 12 (записують так: 8 &lt; 12). Коли одне число більше другого, це записують так: 386 &gt; 99. </p>'),
(990, 235, 5, 1, '<p>Найменше натуральне число – 1. </p><p>Найбільшого натурального числа не існує. <br>Множину натуральних чисел позначають символом N.</p>'),
(991, 235, 6, 1, '<p>Числові вирази і числові рівності</p><p>Запис, у якому числа з`єднані знаками дій, називають числовим виразом.<br>Наприклад, 10∙3+4; (60-2∙5):10.<br>Записи, у яких знаком рівності поєднано два числових вирази, називають числовими рівностями. Рівність має ліву і праву частини.</p>'),
(992, 235, 7, 1, '<p>Порядок виконання арифметичних дій Додавання і віднімання чисел називають діями першого ступеня, а множення і ділення чисел – діями другого ступеня. <br>Якщо числовий вираз містить дії тільки одного ступеня, то їх виконують по порядку зліва направо. <br>Якщо ці вирази містять дії тільки першого і другого ступенів, то спочатку виконують дії другого ступеня, а потім – дії першого ступеня. <br>Якщо у виразі є дужки, то спочатку виконують дії в дужках. </p>'),
(993, 235, 8, 4, '<p><em>Наприклад</em>, 36: (10-4)+3∙5= 36:6+15 = 6+15 = 21.</p>'),
(994, 235, 9, 4, '<p><em>Завдання</em>: 25: (10-5)+5∙7</p>'),
(995, 235, 10, 1, '<p>Додатні і від’ємні числа , цілі числа</p><p>Числа бувають додатні і від’ємні, натуральні, цілі, раціональні, ірраціональні.</p>'),
(996, 102, 1, 1, '<p>Як відомо, метою застосування парадигми структурного програмування є підвищення продуктивності праці програмістів. Особливо це є актуальним при розробці великих і складних програмних комплексів.</p>\n<p>В свою чергу, основою структурного програмування в плані формування програмного коду є поділ програми на процедури і функції. Крім того, використання процедур і функцій має наступні переваги:</p>\n<ul>\n	<li>скорочення кількості помилок при написанні коду;</li>\n	<li>спрощення процесу налагодження програми;</li>\n	<li>полегшення модифікації і супроводу розробленого програмного забезпечення.</li>\n</ul>\n<ul>\n	<li><em></em></li>\n</ul>'),
(997, 252, 1, 1, '<p>wqdq3rвввввввввРедак!!!!</p>'),
(998, 252, 2, 3, '<p>erfqefq4e111111авіі</p>'),
(999, 252, 3, 4, '<pre>                frefqerfqe4f     \\[+\\frac{3}{8}\\]\n</pre>'),
(1000, 252, 4, 1, '\\[\\gamma \\pi \\tau \\rho \\rho\\]\r\n'),
(1001, 252, 5, 7, '                de'),
(1002, 252, 6, 12, 'frqfe'),
(1003, 117, 22, 1, '<p>Вставте слово&nbsp;<input name="hello" type="text" value="Hello world" /></p>\n'),
(1004, 214, 1, 1, '<p>Відношення – це двовимірна (плоска) таблиця, що складається зі стовпців та стрічок. </p>'),
(1005, 254, 1, 1, '<p>На попередньому занятті ми розглянулі більш загальні поніття які стосуються бази даних. Сьогодні ж розглянемо більш конкретні поняття і уже з більшою кількістю прикладів. Отже почнемо.</p><p><strong>Відношення</strong> – це двовимірна (плоска) таблиця, що складається зі стовпців та стрічок. </p><p><strong>Атрибут</strong> – це поіменований стовпець відношення (таблиці). Кортеж – це стрічка відношення (таблиці).</p><p><strong>Домен</strong> – це набір допустимих значень одного чи декількох атрибутів (стовпців). Кожен домен утворює значення одного типу даних, наприклад, числового чи символьного.</p>'),
(1006, 254, 2, 1, '<p>Як бачимо з рисунку, домен визначає для атрибута (стовпця) його тип даних (цілочисельний, стрічковий, дата, число з плаваючою комою, логічний, бінарний тощо), розмір (для стрічкових та бінарних) та перелік допустимих значень (на основі обмежень).</p>\n<p><strong>Заголовок відношення</strong> – опис структури відношення (таблиці) разом зі специфікацією доменів та будь-якими іншими обмеженнями можливих значень атрибутів (стовпців). Заголовок складається з імені відношення (таблиці) та імен стовпців, які входять у цю таблицю.</p>\n<p>Тіло відношення складається з набору стрічок таблиці.</p>\n<p><strong>Степінь відношення</strong> (таблиці) визначається кількістю атрибутів (стовпців), які він містить. Відношення тільки з одним атрибутом має степінь 1 та називається унарним відношенням. Відношення з двома атрибутами називається бінарним, відношення з трьома атрибутами – тернарним, а для відношення з більшою кількістю атрибутів використовується термін n-арне. Визначення степені відношення є частиною заголовку відношення.</p>\n<p>Кардинальність – це кількість кортежів (стрічок), що міститься у відношенні (таблиці) та є властивістю тіла відношення, і визначається поточним станом відношення у довільно взятий момент.</p>\n<p>Реляційна база даних – це набір нормалізованих відношень, які розрізняються за іменами.</p>\n<p>Реляційні ключі дають можливість унікальної ідентифікації кожного окремо кортежу (стрічки) відношення (таблиці) за значеннями одного чи декількох атрибутів (стовпців). У реляційній БД може існувати декілька видів ключів:</p>\n<p>1. Потенційні (Candidate Key):</p>\n<p>а) Первинні (Primary Key);</p>\n<p>б) Альтернативні (Alternate Key) або Вторинні (Secondary Key), або Унікальні (Unique Key).</p>2. Зовнішні (Foreign Key).'),
(1007, 102, 2, 4, '<pre><p>Приклад коду функції</p><p><span style="color: rgb(31, 73, 125);">int Sum(int a,int b)</span>  <span style="color: rgb(118, 146, 60);">// заголовок функції Sum</span> </p><p><span style="color: rgb(31, 73, 125);">{</span>  <span style="color: rgb(118, 146, 60);">// int a,int b - параметри, що передаються під час виклику</span></p><p> int c=0;<span style="color: rgb(118, 146, 60);"> </span><span style="color: rgb(118, 146, 60);">// локальна змінна (область видимості - дана функція)</span></p>\r\n<p><span style="color: rgb(31, 73, 125);"> c=a+b; </span></p><p> return c;<span style="color: rgb(118, 146, 60);"> </span><span style="color: rgb(118, 146, 60);">// значення, яке повертається функцією</span></p><p>}</p></pre>'),
(1008, 252, 7, 1, '\\[+\\frac{3}{8}\\]\r\n'),
(1009, 102, 3, 4, '<pre><b> </b>\n</pre>'),
(1010, 102, 4, 4, '<pre>\n</pre>'),
(1011, 102, 5, 4, '<pre>\n</pre>'),
(1012, 102, 6, 1, '<p>Допускається використовувати функції, що не повертають ніяких значень - їх зазвичай називають <em>процедури</em>.</p><p><u>Головна відмінність процедур від функцій</u>: <em>мета функції</em> - порахувати деяке значення (<u>одне!</u>) і повернути його в “місце виклику”, тоді як <em>головне для процедури</em> - виконати якусь дію (сукупність дій).</p><u>Важливо</u>: в мові C, з точки зору компілятора, <u>процедури теж формально вважаються функціями</u>, які повертають спеціальне значення, що належить до типу <span style="color: rgb(192, 80, 77);">void</span> (символізує відсутність результату).'),
(1013, 102, 7, 4, '<pre><p>Приклад коду процедури</p><p><span style="color: rgb(31, 73, 125);">void Sum ( int a, int b)</span><span style="color: rgb(118, 146, 60);"> // заголовок процедури з параметрами</span></p><p><span style="color: rgb(31, 73, 125);">{  </span></p><p><span style="color: rgb(31, 73, 125);"> int c=0; </span></p><p><span style="color: rgb(31, 73, 125);"> c = a + b;  </span></p><p><span style="color: rgb(31, 73, 125);"> printf (“Summa = %d”, c);</span></p><p><span style="color: rgb(31, 73, 125);">}</span></p></pre>'),
(1014, 102, 8, 1, '<p><br></p>\n<ul>\n	<li><em></em></li>\n</ul>'),
(1015, 102, 9, 1, '<p>По мірі зростання складності задач, розмір програм, що їх реалізують, стає завеликий, а список команд - занадто громіздкий. Для зручності та читабельності таких програм їх код розділяють на менші логічні частини - <em>функції</em>.</p><p>В ідеальному випадку для функції притаманно:</p><p>- виконання певної завершеної послідовності дій;</p><p>- яскраво виражений зв’язок з іншими функціями програми.</p>\r\n<p><u>Зверніть увагу: </u>в будь-якій програмі на С завжди присутня як мінімум одна функція з ім”ям main() (головна функція). Саме з цієї функції, в якому б місці програми вона не знаходилась, розпочинається виконання програми.</p>\r\n<p>В загальному випадку, функція містить деякий код. Цей код може викликатися на виконання як з головної, так і будь-якої іншої функції, створеної розробником (загальноприйнята назва - <em>функція користувача</em>).</p><p>Будь-яка функція характеризується такими атрибутами:</p><ul><li>ім”я функції;</li><li>параметри або аргументи (не обов’язково);</li><li>тіло функції;</li><li><u>головний атрибут</u> - <em>значення, яке повертається.</em></li></ul>'),
(1016, 102, 10, 1, '<p>Для зручності, в подальшому будемо користуватися лише терміном “функція” (є більш універсальним).</p><p>Розглянемо <em>три основні поняття</em>, пов”язані з використанням функцій в мові С:</p><ol><li><em>визначення</em> функції - опис дій, які виконує функція (<em>тіло функції</em>);</li><li><em>оголошення</em> функції - задання форми звернення до функції (<em>прототип</em> <em>функції</em>, по суті - її заголовок);</li><li><em>виклик</em> функції - оператор, що <em>реалізує</em> звернення до функції.</li></ol>\r\n<p><em>Тіло функції</em> (за аналогією до головної програми-функції main(), циклів, операторів умов тощо) - послідовність операторів, що реалізують алгоритм її роботи; обмежуються операторними дужками “<span style="color: rgb(192, 80, 77);">{ }</span>”.</p>\r\n<p><em>Прототип функції</em> - по суті її заголовок, який прописується <u>перед функцією<strong> </strong></u><u><strong>main()</strong></u>, і схематично має вигляд: <span style="color: rgb(192, 80, 77);">type_func Name_func(type_param1, type_param2, ...);</span></p><p><span style="color: rgb(192, 80, 77);">type_func</span> - тип значення, що повертається функцією;</p><p><span style="color: rgb(192, 80, 77);">Name_func</span> - ім’я (ідентифікатор) функції;</p><p><span style="color: rgb(192, 80, 77);">type_param1, type_param2</span> - типи вхідних параметрів функції.</p><p><u>Зверніть увагу:</u> 1) в кінці прототипу <u>обов’язково</u> ставиться <em>крапка з комою</em> “<span style="color: rgb(192, 80, 77);">;</span>” ;</p><p>2) імена <em>вхідних параметрів</em> у прототипі можна <u>не вказувати</u> (достатньо лише їх типів).</p><p><u>Важливо:</u> 1) <em>визначення функції</em> (прописання її заголовку з усіма вхідними параметрами і тіла) може бути зроблено <u>як до, так і після головної функції </u><u>main()</u>. В першому випадку прототип задавати не потрібно, в другому - потрібно обов’язково.</p>\r\n<p><em>Виклик функції </em>з потрібного місця програми (іншої функції) здійснюється шляхом вказання її імені з усіма <u>значеннями</u> вхідних параметрів, що використовуються під час виконання функції:</p><p><span style="color: rgb(192, 80, 77);">var1 = func_Name(param1, param2, ...)</span>; - у випадку функції, що повертає значення;</p><p><span style="color: rgb(192, 80, 77);">proc_Name(param1, param2, ...);</span> - у випадку процедури.</p><p>Величини <span style="color: rgb(192, 80, 77);">param1, param2</span> повинні мати<u> той самий тип, що й відповідні аргументи функції, в яку вони передаються. </u></p><p>2) якщо функція повертає значення, то воно в її тілі визначається командою (оператором) <span style="color: rgb(192, 80, 77);">return var_ret; </span>де <span style="color: rgb(192, 80, 77);">var_ret</span> - відповідне значення або <em>змінна</em>, яка його містить;</p>3) оператор <span style="color: rgb(192, 80, 77);">return</span> є також ознакою <u>завершення виконання функції і виходу з неї.</u>'),
(1017, 102, 11, 4, '<pre><p><span style="color: rgb(0, 0, 0);">Приклад коду з викликом функції</span></p><p><span style="color: rgb(31, 73, 125);">#include &lt;stdio.h&gt;</span></p>\r\n<p><span style="color: rgb(31, 73, 125);">int Sum(int ,int ); </span><span style="color: rgb(155, 187, 89);">// прототип функції</span></p><p><span style="color: rgb(31, 73, 125);">...</span></p><p><span style="color: rgb(31, 73, 125);">main()</span></p><p><span style="color: rgb(31, 73, 125);">{</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> int s;</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> s = Sum(5,3);</span> <span style="color: rgb(155, 187, 89);">// виклик функції</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);">printf(“Summa = %d”, s);</span></p><p><span style="color: rgb(31, 73, 125);">...</span></p><p><span style="color: rgb(31, 73, 125);">}</span></p>\r\n<p><span style="color: rgb(31, 73, 125);">int Sum(int a,int b)</span></p><p><span style="color: rgb(155, 187, 89);">// визначення функції</span></p><p><span style="color: rgb(31, 73, 125);">{ </span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> int c=0; </span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> c=a+b; </span></p><p style="margin-left: 20px;"> <span style="color: rgb(31, 73, 125);">return c;</span><span style="color: rgb(155, 187, 89);"> </span><span style="color: rgb(155, 187, 89);">// значення, яке повертається функцією</span></p><span style="color: rgb(31, 73, 125);">}</span></pre>'),
(1018, 102, 12, 1, '<p>Як можна судити з попередніх прикладів, синтаксис передачі значень параметрів до функції в цілому зрозумілий і простий. Однак ця простота очевидна, коли в операторі виклику функції в якості її параметрів вказуються <em>константи</em> (тобто - конкретні значення). Передавання у функцію параметрів у вигляді<em> змінних</em> має певні особливості.Розглянемо наступний приклад: числа для знаходження суми вводяться з клавіатури, а у функцію суми в якості параметрів передаються відповідні змінні.</p>'),
(1019, 102, 13, 4, '<pre><p>Приклад коду з передачею у функцію змінних</p><p><span style="color: rgb(31, 73, 125);">#include &lt;stdio.h&gt;</span></p>\r\n<p><span style="color: rgb(31, 73, 125);">int Sum(int ,int ); </span><span style="color: rgb(155, 187, 89);">// прототип функції</span></p><p><span style="color: rgb(31, 73, 125);">...</span></p><p><span style="color: rgb(31, 73, 125);">main()</span></p><p><span style="color: rgb(31, 73, 125);">{</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> int a, b, s;</span></p>\r\n<p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> printf(“Введіть два цілих числа: ”);</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> scanf(“%d%d”, &amp;a, &amp;b);</span> <span style="color: rgb(155, 187, 89);">// вводимо числа з клавіатури</span></p><p style="margin-left: 20px;"> <span style="color: rgb(31, 73, 125);">s = Sum(a, b); </span><span style="color: rgb(155, 187, 89);">// викликаємо функцію з передачею введених змінних</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);">printf(“Summa %d + %d = %d”, a, b, s);</span><span style="color: rgb(31, 73, 125);"> </span><span style="color: rgb(155, 187, 89);">// виводимо результат</span></p><p>...</p><p>}</p>\r\n<p><span style="color: rgb(31, 73, 125);">int Sum(int a,int b) </span> <span style="color: rgb(155, 187, 89);">// визначення функції</span></p><p><span style="color: rgb(31, 73, 125);">{ </span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> int c=0; </span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> c=a+b; </span><span style="color: rgb(155, 187, 89);">// знаходимо суму аргументів</span></p><p style="margin-left: 20px;"> <span style="color: rgb(31, 73, 125);">return c;</span><span style="color: rgb(155, 187, 89);"> </span><span style="color: rgb(155, 187, 89);">// повертаємо результат у програму</span></p><p><span style="color: rgb(31, 73, 125);">}</span></p></pre>'),
(1020, 102, 14, 1, '<p>Маємо наступну ситуацію:</p><ul><li>імена змінних, що передаються, і параметрів функції - <em>однакові</em> ;</li><li>по факту - це <em>різні змінні</em> з різною областю видимості (в пам’яті для них виділяються різні комірки).</li></ul>'),
(1021, 102, 15, 1, '<p>Коли в програмі спрацьовує оператор виклику функції, значення змінних, що в неї передаються, <em>копіюються</em> в змінні функції (фактично - локальні змінні). Надалі ці пари змінних використовуються <u>незалежно</u> (відповідно в головній програмі і функції).Вказану особливість продемонструємо наступним прикладом:</p>'),
(1022, 102, 16, 4, '<pre><p><span style="color: rgb(79, 129, 189);">#include &lt;stdio.h&gt;</span></p>\r\n<p><span style="color: rgb(31, 73, 125);">int Sum(int ,int );</span><span style="color: rgb(31, 73, 125);"> </span><span style="color: rgb(155, 187, 89);">// прототип функції</span></p><p><span style="color: rgb(31, 73, 125);">...</span></p><p><span style="color: rgb(31, 73, 125);">main()</span></p><p><span style="color: rgb(31, 73, 125);">{</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> int a, b, s;</span></p>\r\n<p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> printf(“Введіть два цілих числа: ”);</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> scanf(“%d%d”, &amp;a, &amp;b); </span><span style="color: rgb(155, 187, 89);">// вводимо числа з клавіатури</span></p><p style="margin-left: 20px;"> <span style="color: rgb(31, 73, 125);">s = Sum(a, b);</span> <span style="color: rgb(155, 187, 89);">// викликаємо функцію з передачею введених змінних</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);">printf(“Summa %d + %d = %d”, a, b, s); </span><span style="color: rgb(155, 187, 89);">// виводимо результат</span></p><p><span style="color: rgb(31, 73, 125);">...</span></p><p><span style="color: rgb(31, 73, 125);">}</span></p>\r\n<p><span style="color: rgb(31, 73, 125);">int Sum(int a,int b)</span><span style="color: rgb(31, 73, 125);"> </span><span style="color: rgb(155, 187, 89);"> // визначення функції</span></p><p><span style="color: rgb(31, 73, 125);">{ </span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> int c=0; </span></p><p style="margin-left: 20px;"> <span style="color: rgb(31, 73, 125);">a++; b++; </span><span style="color: rgb(149, 55, 52);">/</span><span style="color: rgb(149, 55, 52);">/ інкрементуємо одержані аргументи</span></p><p style="margin-left: 20px;"> <span style="color: rgb(31, 73, 125);">c=a+b; </span><span style="color: rgb(155, 187, 89);">// знаходимо суму аргументів</span></p><p style="margin-left: 20px;"> <span style="color: rgb(31, 73, 125);">return c; </span>/<span style="color: rgb(155, 187, 89);">/ повертаємо результат у програму</span></p><span style="color: rgb(31, 73, 125);">}</span></pre>'),
(1023, 102, 17, 1, '<p>Припустимо, що з клавіатури ми ввели наступні числа: <span style="color: rgb(192, 80, 77);">a=5</span> і <span style="color: rgb(192, 80, 77);">b=3</span>, які й передаються у функцію. <u>В рамках функції відбувається наступне</u>:</p><ul><li>значення переданих змінних копіюються у відповідні параметри:<span style="color: rgb(192, 80, 77);"> a=5</span> і <span style="color: rgb(192, 80, 77);">b=3</span>;</li><li>в результаті інкременту <em>змінюються копії переданих змінних (</em><em>змінні </em><u><span style="color: rgb(192, 80, 77);">a</span></u><u> і </u><u><span style="color: rgb(192, 80, 77);">b</span> </u><em>головної програми не змінюються!!!</em><em>)</em>:<span style="color: rgb(192, 80, 77);"> a=6</span> і <span style="color: rgb(192, 80, 77);">b=4</span>;</li><li>знаходиться сума інкрементованих змінних (<span style="color: rgb(192, 80, 77);">6+4=10</span>) і присвоюється змінній<span style="color: rgb(192, 80, 77);"> с=10</span>, яка і повертається в основну програму (присвоюється змінній <span style="color: rgb(192, 80, 77);">s=10</span>);</li><li>результат виводиться у вигляді: Summa <span style="color: rgb(192, 80, 77);">5 + 3 = 10</span> - що “трохи” не відповідає дійсності. Причина цього в наступному: <em>значення аргументів функції суми змінились локально (в рамках своєї області видимості), а в головній програмі лишились без змін.</em></li></ul>\r\n<p>Розглянута ситуація є наслідком <em>передавання аргументів за значенням </em>зі створенням їх локальних копій (незалежних змінних).</p><p>З іншого боку, <u>очевидною є й перевага </u>такого способу передавання аргументів:<u> </u><em><u>функція працює з копіями аргументів і не змінює “оригінали” - вони захищені від “несанкціонованого доступу” з функцій</u></em><em><u>.</u></em></p>'),
(1024, 102, 18, 1, '<p>Альтернативою попереднього способу передавання параметрів у функції є <em>передавання за посиланням.</em></p><p><u>Головна відмінність:</u> у функцію передається <em>адреса змінної-аргумента в пам’яті.</em></p><p>Наслідок - <em>функція має </em><em>прямий доступ</em><em> до значень аргументів.</em></p>Ознака передавання аргументу за посиланням - символ “<strong><span style="color: rgb(192, 80, 77);">&amp;</span></strong>” перед ім’ям змінної в переліку аргументів функції:'),
(1025, 102, 19, 3, '<p><span style="color: rgb(31, 73, 125);"></span><span style="color: rgb(31, 73, 125);">int Sum(int &amp;a, int &amp;b) </span> <span style="color: rgb(155, 187, 89);">// &amp;a i &amp;b - посилання на змінні, що вказуються при виклику функції: s = Sum(a, b);</span></p><p><span style="color: rgb(31, 73, 125);">{ </span></p><p><span style="color: rgb(31, 73, 125);"> …</span><span style="color: rgb(155, 187, 89);"> // тіло функції лишається без змін</span></p><span style="color: rgb(31, 73, 125);">}</span>'),
(1026, 102, 20, 1, '<p>При такому способі передавання аргументів функція буде працювати наступним чином:</p><ul><li>отримується <em>безпосередній доступ</em> до значень змінних-аргументів <em>за їх адресами</em> &amp;a і &amp;b;</li><li>під час інкременту <em>змінюються значення переданих змінних (тобто, </em><em>змінних </em><u>a</u><u> і </u><u>b </u><em>головної програми !!!</em><em>)</em>: a=6 і b=4;</li><li>знаходиться сума інкрементованих змінних (6+4=10) і присвоюється змінній с=10, яка і повертається в основну програму (присвоюється змінній s=10);</li><li>результат виводиться у вигляді: Summa 6 + 4 = 10 - що виглядає тепер цілком коректно.</li></ul><p><u>Важливо!</u> Якщо при описанні функції в переліку аргументів, що передаються <em>за посиланням</em>, вказати <em>інші ідентифікатори</em> - результат буде той самий, що й при співпадінні імен ідентифікаторів! Причина цього - <u>функція доступається до значень вхідних аргументів за їх адресами, які залишаються без змін.</u></p>'),
(1027, 102, 21, 4, '<pre><p>Приклад передавання аргументів за посиланням</p><p>int Sum(int &amp;x, int &amp;y)<span style="color: rgb(155, 187, 89);">  // &amp;x i &amp;y - посилання на змінні, що вказуються при виклику функції: s = Sum(a, b);</span></p><p><span style="color: rgb(155, 187, 89);">// відповідно, &amp;x забезпечує доступ до значення за адресою змінної a</span></p><p><span style="color: rgb(155, 187, 89);">// &amp;y забезпечує доступ до значення за адресою змінної b</span></p><p>{ </p><p> … <span style="color: rgb(155, 187, 89);">// в тілі функції a і b замінюємо на x i y</span></p><p>}</p></pre>'),
(1028, 102, 22, 1, '<p>Областю видимості змінної (ідентифікатора) називається частина програми, в якій на дану змінну (ідентифікатор) можна коректно посилатись.</p>\r\n<p><em>Існує чотири області видимості змінної:</em></p><ul><li>функція;</li><li>файл;</li><li>прототип функції;</li><li>блок (параметри функції).</li></ul><br>До області видимості “функція” жорстко прив’язані ідентифікатори типу <em>мітка</em> (наприклад, “point1:”, “point2:” тощо). Як відомо, мітки використовуються в операторах switch (оператор умови) і goto (оператор переходу). Їх можна використовувати <em>в будь-якому місці функції</em>, в якій вони з’явилися (зокрема, головній функції main()), але на них <em>не можна посилатись за межами “рідної” функції</em><p>.</p>'),
(1029, 102, 23, 1, '<p>Мова йде про файл, що містить текст всієї програми. Відповідно, якщо в програмі деяка змінна оголошена <em>за межами будь-якої функції</em> (в т.ч main()), - кажуть, що вона існує <em>на зовнішньому рівні.</em> Така змінна “розпізнається” в усіх функціях (від місця її оголошення і до кінця програми).</p><p>Зазвичай на зовнішньому рівні прописуються <em>функції і їх прототипи.</em></p><u>Важливо:</u> використанням <em>звичайних змінних</em> з областю видимості “файл” <u>зловживати не слід!</u>'),
(1030, 102, 24, 1, '<p>До даної області видимості прив’язуються виключно ті ідентифікатори, які прописуються в списку параметрів прототипу функції (в круглих дужках “()” після імені функції).</p><p>Слід пам’ятати наступні особливості описання прототипів функцій:</p><ul><li>в списку параметрів прототипу <em>не обов’язково</em> вказувати їх імена - достатньо лише типи;</li><li>якщо імена параметрів прототипу все ж вказані - <em>вони ігноруються компілятором</em>.</li></ul><p>Звідси - висновок: <u>імена ідентифікаторів прототипу можна використовувати </u><em>в будь-якому місці програми</em><u> (в якості імен інших ідентифікаторів), не остерігаючись конфлікту імен.</u></p><p><u><br></u></p>'),
(1031, 102, 25, 1, '<p>Термін “блок” означає область програми, обмежену операторними дужками “{ }”. Для ідентифікатора, оголошеного в межах деякої такої області (<em>на внутрішньому рівні</em>), область видимості “блок” має межі “<em>оголошення ідентифікатора - … - }</em>”.</p><p>Найпоширенішими різновидами ідентифікаторів з областю видимості “блок” є:</p><ul><li>змінні, оголошені в тілі деякої функції;</li><li>параметри функції (прописуються в дужках “()” після імені функції).</li></ul>'),
(1032, 102, 26, 4, '<pre><p>Приклад використання прототипів функцій та змінних на зовнішньому рівні</p><p>#include &lt;iostream&gt;  <span style="color: rgb(155, 187, 89);">// підключаємо бібліотеку спеціальних функцій</span></p><p><span style="color: rgb(155, 187, 89);">вводу-виводу</span></p><p>void a (void);  // прототип функції</p><p>void b (void);  //прототип функції</p><p>void c (void);  //прототип функції</p>\r\n<p>int x = 1;  // змінна в області видимості “файл”</p>\r\n<p>void main()</p><p>{</p><p>...</p><p style="margin-left: 20px;">b(); // функція b() використовує змінну х з області видимості “файл”</p><p>...</p><p>}</p>\r\n<p>void b(void)<br></p><p>{</p><p style="margin-left: 20px;">cout &lt;&lt; "\\n змінна зовнішнього рівня х = " &lt;&lt; x&lt;&lt; " при вході у функцію b() \\n”;</p><p style="margin-left: 20px;">x *= 10;  // модифікація змінної зовнішнього рівня</p><p style="margin-left: 20px;">cout &lt;&lt; "змінна зовнішнього рівня х = " &lt;&lt; x &lt;&lt; " при виході з функції b() \\n";</p><p>}</p></pre>'),
(1033, 102, 27, 4, '<pre><p>Приклад використання ідентифікаторів з областю видимості "блок"</p><p>#include &lt;iostream&gt; </p><p>void a (void);  // прототип функції</p><p>void b (void);  //прототип функції</p><p>void c (void);  //прототип функції</p><p>int x = 1;  // змінна в області видимості “файл”<br></p><p>void main()</p><p>{</p><p style="margin-left: 20px;">int x = 5; // змінна в області видимості “блок” (зовнішній блок функції main())</p><p style="margin-left: 20px;">cout &lt;&lt; "змінна х в зовнішній області видиомості main() = "&lt;&lt; x&lt;&lt;’\\n’;</p><p style="margin-left: 20px;">{ // початок нової області видимості (внутрішній блок функції main())</p><p style="margin-left: 40px;">int x = 7;</p><p style="margin-left: 40px;">cout &lt;&lt; "змінна х у внутрішній області видимості main() = "&lt;&lt; x&lt;&lt;’\\n’;</p><p style="margin-left: 20px;">} // кінець нової області видимості (внутрішнього блоку функції main())</p><p style="margin-left: 20px;">cout &lt;&lt; "змінна х в зовнішній області видиомості main() = "&lt;&lt; x&lt;&lt;’\\n’;</p><p style="margin-left: 20px;">a();  // функція а() має змінну х з власної області видимості “блок”</p><p style="margin-left: 20px;">c();  // функція c() використовує змінні х з різних областей видимості (“файл” і “блок”)</p><p>...</p><p>}</p><p>void a(void)</p><p>{</p><p style="margin-left: 20px;">int x = 25; // змінна з областю видимості “блок”</p><p style="margin-left: 20px;">cout &lt;&lt; "\\n змінна х функції а() = " &lt;&lt; x&lt;&lt; " після входу у функцію";</p><p style="margin-left: 20px;">x++; // модифікація змінної внутрішнього рівня</p><p style="margin-left: 20px;">cout &lt;&lt; "\\n змінна х функції а() = " &lt;&lt; x&lt;&lt; " перед виходом з функції \\n";</p><p>}</p><p>void c(void)</p><p>{</p><p style="margin-left: 20px;">cout &lt;&lt; "\\n змінна зовнішнього рівня х = " &lt;&lt; x &lt;&lt; " при входi у функцію с() \\n”;</p><p style="margin-left: 20px;">x += 15; // модифікація змінної зовнішнього рівня</p><p style="margin-left: 20px;">cout &lt;&lt; "змінна зовнішнього рівня х = " &lt;&lt; x &lt;&lt; " після модифікації в с() \\n";</p><p style="margin-left: 20px;">int x = 77; // початок дії області видимості змінної внутрішнього рівня х </p><p style="margin-left: 20px;">cout &lt;&lt; "\\n змінна внутрішнього рівня х = " &lt;&lt; x &lt;&lt; " після оголошення в с()";</p><p style="margin-left: 20px;">x--;  // модифікація змінної внутрішнього рівня</p><p style="margin-left: 20px;">cout &lt;&lt; "\\n змінна внутрішнього рівня х = " &lt;&lt; x &lt;&lt; " перед виходом з функції с() \\n";</p><p>}</p></pre>'),
(1034, 102, 28, 1, '<p>Підсумувавши матеріал частин 7-10, можна зробити висновок про те, що всі змінні (ідентифікатори) програми на С поділяються на 2 основні категорії:</p><ul><li>локальні змінні — оголошуються <em>всередині деякого блоку</em> (функції) і не доступні поза її межами;</li><li>глобальні змінні — оголошуються <em>поза всіма функціями</em> і доступні в будь-якому місці програми.</li></ul><p>З метою ефективного і коректного використання змінних в програмі слід пам’ятати наступні особливості і дотримуватися правил:</p><ul><li><em>Глобальна змінна</em> існує від моменту її оголошення і <em>знищується після завершення роботи програми</em>.</li><li><em>Локальна змінна</em> існує в тому блоці (функції), де вона оголошена, і <em>видаляється після виконання блоку (функції)</em>.</li><li><em>імена змінних</em> в межах блоку <em>повинні бути унікальними тільки в “своєму” блоці</em>.</li><li>якщо в межах блоку викликається глобальна змінна, ім’я якої співпадає з однією з локальних - для запобігання конфлікту імен її слід викликати через <em>оператор глобальної області видимості</em> “::” (наприклад, ::x=5;).</li><li>з метою уникнення плутанини і конфлікту імен змінних різних областей видимості <u>слід старатись уникати використання глобальних змінних!</u></li></ul>'),
(1035, 101, 25, 1, '<p>В даному прикладі показано, як за допомогою goto організовано звичайний цикл. Мітка <span style="color: rgb(192, 80, 77);">m1</span> є тим орієнтиром, який вказує, з якого місця послідовність певних дій має повторюватися (в даному випадку - циклічне обчислення деякої суми).</p>\r\n<p><u>Примітка:</u> оскільки мова С достатньо оснащена ефективними засобами структурного програмування (в т.ч. операторами циклів), рекомендується <u>по можливості уникати використання оператора </u><u><span style="color: rgb(192, 80, 77);">goto</span></u> (і<u>ноді наявність його в програмі вважається “поганим тоном”</u>).</p>'),
(1036, 256, 1, 4, '<pre><ol><li><strong>vvvvvvvv</strong></li></ol></pre>'),
(1037, 256, 2, 7, '<p><del>ssssssssssssssssssss</del></p>'),
(1038, 256, 3, 1, '\\[\\prod\\]\r\n'),
(1039, 256, 4, 12, 'смсвмсмс'),
(1040, 103, 1, 1, '<p>Механізм використання покажчиків суттєво виділяє мову С серед інших (зокрема, Visual Basic і Java, в яких даний механізм відсутній взагалі). Їх застосування дозволяє значно підвищити ефективність програм, що реалізують, зокрема, задачі, пов’язані з:</p><ul><li>використанням функцій з аргументами, що передаються до них і змінюються всередині цих функцій;</li><li>створенням складних структур даних (зв’язний список, бінарне дерево тощо);</li><li>виділенням пам’яті (в умовах її обмеженості) для масивів, доступом до їх елементів;</li><li>передачею масивів (як чисельних, так і символьних) для обробки у спеціальні функції.</li></ul>Іншим засобом підвищення ефективності програм є механізм рекурсії - можливість функції викликати на виконання саму себе.'),
(1041, 103, 2, 1, '<p>Первинним поняттям в контексті проблеми освоєння механізмів роботи з покажчиками є поняття <em>адреси.</em></p><p><em>Адреса </em>- це числовий ідентифікатор будь-якого байта пам’яті, що використовується для завантаження і роботи програми, або до якого програма має доступ (аналогія - адреси будинків на вулицях). Фактично, будь-яка функція і будь-яка змінна програми характеризуються деякою <em>початковою</em> <em>адресою</em> (оскільки в абсолютній більшості випадків займають більше 1 байта).</p><p><em>Покажчиком</em> називається <em>змінна</em>, в якій зберігається <em>адреса іншої змінної</em> (або початкового байта деякої ділянки пам’яті). Специфіка оголошення покажчиків серед загальної сукупності змінних програми має наступний вигляд:</p>'),
(1042, 103, 3, 3, '<p>char* pC;</p><p>int* pI;</p>float* pF;'),
(1043, 103, 4, 1, '<p><br>В даному прикладі знак "*" є ознакою змінної-покажчика. Відповідні рядки слід розуміти так, що в програмі оголошені:</p><p>pC - змінна, що містить адресу деякого символу;</p><p>pI - змінна, що містить адресу деякого цілого числа;</p><p>pF - змінна, що містить адресу деякого реального числа.</p><p> Компілятор аналогічно сприйме оголошення покажчика із знаком біля імені змінної (наприклад, int *pI). Однак з метою чіткого розділення імен змінних і типів, на які вони вказують, більш доцільно користуватись попередньою формою запису.</p>'),
(1044, 103, 5, 1, '<p>Під <em>адресною арифметикою</em> зазвичай розуміють сукупність можливих дій над покажчиками. При цьому ці дії фактично виконуються над адресами, що в них зберігаються.</p><p><strong>Присвоювання</strong> (в т.ч. шляхом <em>взяття адреси</em>): будь-яке число, що присвоюється покажчику, інтерпретується як значення деякої адреси пам’яті.</p><p> Також можна присвоювати реальні адреси (наприклад, інших змінних, в т.ч. покажчиків) за допомогою операції <em>взяття адреси</em>:</p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(1045, 103, 6, 3, '<p>int *a, *b, *c ; <span style="color: rgb(155, 187, 89);">// допустимий спосіб оголошення трьох різних покажчиків на змінні типу int</span></p><p>int N;</p>\r\n<p>a = &amp;N; <span style="color: rgb(155, 187, 89);">// &amp;N - взяття адреси, за якою зберігається змінна N, і її присвоєння покажчику a (типи a і N повинні співпадати !)</span></p><p>b = &amp;c; <span style="color: rgb(155, 187, 89);">// покажчику b присвоєно адресу, за якою зберігається покажчик c</span></p>'),
(1046, 103, 7, 1, '<p><strong></strong><span><strong>Важливо:</strong> </span>початкова ініціалізація покажчиків є в багатьох випадках <em>необхідною</em>. Адже при оголошенні (за аналогією звичайних змінних) в покажчик за умовчанням записується деяка <em>випадкова</em> адреса. Ця адреса може знаходитись як в області коду програми, так і в області коду операційної системи. ЇЇ ненавмисне використання може призвести до “падіння” як програми, так і ОС.</p>'),
(1047, 103, 8, 12, 'Який з покажчиків у наведеному фрагменті коду лишився неініціалізованим?'),
(1048, 103, 9, 1, '<p>Цю дію також називають <strong>непрямою адресацією</strong>. Вона є “рятівною”, зокрема, у випадку, коли ім’я деякої змінної не відоме, але відома її адреса (збережена в покажчику). Синтаксично для цього використовується вже знайомий знак “<span style="color: rgb(192, 80, 77);">*</span>”, але трохи в іншому контексті:</p>'),
(1049, 103, 10, 3, '<p><span style="color: rgb(31, 73, 125);">int* uk;</span></p><p><span style="color: rgb(31, 73, 125);">int n;</span></p><p><span style="color: rgb(31, 73, 125);">int m=5;</span></p>\r\n<p><span style="color: rgb(31, 73, 125);">uk = &amp;m;</span><span style="color: rgb(155, 187, 89);"> </span><span style="color: rgb(155, 187, 89);">// покажчик uk ініціалізується адресою змінної m</span></p><p><span style="color: rgb(31, 73, 125);">n = *uk;</span> <span style="color: rgb(155, 187, 89);">// змінна n приймає значення, на яке вказує покажчик uk (тобто значення змінної m), шляхом його розіменування (*uk) - еквівалентно n = m, n прийме значення 5</span></p><p>*uk = -10;<span style="color: rgb(155, 187, 89);"> </span><span style="color: rgb(155, 187, 89);">// до змінної m побічно (через покажчик на її адресу uk шляхом його розіменування *uk) записується нове значення - еквівалентно m = -10 (має місце непряма адресація)</span></p>'),
(1050, 103, 11, 1, '<p><u>Важливо: </u>знак “<strong><span style="color: rgb(192, 80, 77);">*</span></strong>” в оголошенні покажчика і в операції його розіменування має <em>принципово різне</em> значення.</p><p>В першому випадку - створюється змінна, що зберігає адресу, за якою містяться дані певного типу.</p><p>В другому випадку - ми отримуємо безпосередній доступ до цих даних (їх значень без використання імені) з можливістю їх використання. Дані можуть навіть перезаписуватися іншими даними відповідного типу.</p>'),
(1051, 257, 1, 4, '<pre><p>gikguoholvhllhlv</p></pre>'),
(1052, 103, 12, 1, '<p>При виконанні даних операцій фактично відбувається зсув адреси на одну із сусідніх комірок.</p><p>Синтаксично ці дії прописуються аналогічно відповідним операціям зі звичайними цілими змінними. Насправді ж в результаті їх виконання значення адреси, що зберігається в покажчику, збільшується/зменшується НА КІЛЬКІСТЬ БАЙТ, що відповідають типу величини, на яку вказує покажчик:</p>'),
(1053, 257, 2, 7, '<p>cvmvk jkbj</p>'),
(1054, 257, 3, 1, '\\[fxfjxj\\]\r\n'),
(1055, 103, 13, 3, '<p>int* pI;</p><p>… // не забуваємо про ініціалізацію покажчикa!</p><p>pI++; // пост-інкремент покажчика - зсуває поточну адресу вперед на розмір цілого числа (4 байти)</p><p>pI +=4; // поточна адреса зсувається вперед на 4х4=16 байт</p><p>--pI; // пре-декремент покажчика - поточна адреса зсувається назад на (4 байти</p>pI -=3; // поточна адреса зсувається назад на 3х4=12 байт'),
(1056, 103, 14, 1, '<p>Якщо покажчик на об’єкт одного типу привести до іншого типу (не змінюючи при цьому самих даних, на які він вказує) - це однозначно вплине на інтерпретацію даних:</p>'),
(1057, 103, 15, 3, '<p>int* p;</p><p>int i=0x8e41; // шістнадцяткове число - еквівалент десяткового -29119</p>\r\n<p>p = &amp;i; // ініціалізуємо покажчик</p><p>printf(“%d\\n”, *p); // розіменовуємо покажчик - на екрані з’явиться -29119</p><p>printf(“%d\\n”, *((char*)p)); // (char*)p - приводимо покажчик р до типу char (символ, 1 байт замість 4-х)</p>// *((char*)p) - розіменовуємо результат, на екрані - значення одного (молодшого) байта записаного числа: 65 (шістнадцяткове 41)'),
(1058, 103, 16, 1, '<p>Альтернативна назва - <em>блокування</em>. Здійснюється звичайним присвоюванням покажчику значення NULL. В результаті - покажчик стає недійсним, спроба щось по ньому записати призводить до “падіння” програми:</p>'),
(1059, 103, 17, 3, '<p><span style="color: rgb(31, 73, 125);">char* pC;</span></p><p><span style="color: rgb(31, 73, 125);">… </span></p><p><span style="color: rgb(31, 73, 125);">pC = NULL;</span> <span style="color: rgb(155, 187, 89);">// блокуємо покажчик</span></p><p><span style="color: rgb(31, 73, 125);">… </span></p><p><span style="color: rgb(31, 73, 125);">*pC = ‘A’; </span>/<span style="color: rgb(155, 187, 89);">/ недопустимо ! (спроба записати символ за невизначеною адресою)</span></p>'),
(1060, 103, 18, 1, '<p>В першу чергу, пригадаємо надзвичайно важливу особливість синтаксису роботи з масивами: <em>ім’я масиву містить його адресу </em>(!!!). Отже, ця змінна є по суті покажчиком на початковий елемент масиву. Даний факт обумовлює суттєву синтаксичну схожість як традиційних засобів роботи з масивами, так і застосування з цією метою покажчиків.</p>\n<p>Переконаємося в цьому, порівнявши наступні два приклади.<br></p>'),
(1061, 103, 19, 4, '<pre><p>Приклад традиційної ініціалізації та виведення елементів масиву</p><p><span style="color: rgb(31, 73, 125);">#include &lt;iostream.h&gt;</span></p>\r\n<p><span style="color: rgb(31, 73, 125);">main()</span></p><p><span style="color: rgb(31, 73, 125);">{</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> int mas[5] = {24, 34, 86, 33, 90};</span></p>\r\n<p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> for (int i=0; i&lt;5; i++) {</span></p><p style="margin-left: 40px;"><span style="color: rgb(31, 73, 125);"> cout &lt;&lt; mas[i] &lt;&lt; endl;</span> <span style="color: rgb(155, 187, 89);">// виводимо елементи масиву по черзі через прямий доступ за індексом</span><span style="color: rgb(192, 80, 77);"> і</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"> }</span></p><p><span style="color: rgb(31, 73, 125);">}</span></p></pre>'),
(1062, 103, 20, 4, '<pre><p>Приклад роботи з масивом з використанням механізму покажчиків</p><p><span style="color: rgb(31, 73, 125);">#include &lt;iostream.h&gt;</span></p>\r\n<p><span style="color: rgb(31, 73, 125);">main()</span></p><p><span style="color: rgb(31, 73, 125);">{</span></p><p><span style="color: rgb(31, 73, 125);"> int mas[5] = {24, 34, 86, 33, 90};</span></p>\r\n<p><span style="color: rgb(31, 73, 125);"> for (int i=0; i&lt;5; i++) {</span></p><p><span style="color: rgb(31, 73, 125);"> cout &lt;&lt; *(mas+i) &lt;&lt; endl; </span><span style="color: rgb(155, 187, 89);">// доступ до елементів масиву здійснюємо за адресою mas і її зсувом на кількість байт, що відповідає типу і (співпадає з типом mas)</span></p><p> <span style="color: rgb(31, 73, 125);">} </span><span style="color: rgb(155, 187, 89);">// *(mas+i) - розіменовуємо покажчик на кожен наступний елемент масиву</span></p><span style="color: rgb(31, 73, 125);">}</span></pre>'),
(1063, 103, 21, 1, '<p>Якщо проаналізувати обидва приклади, то легко переконатися, що в обох випадках результат роботи програми буде аналогічним.</p><p>Те саме можна отримати, оголосивши покажчик на масив в явному вигляді:</p>'),
(1064, 103, 22, 4, '<pre><p>Приклад використання явного покажчика на масив<br></p><p>#include &lt;iostream.h&gt;</p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;"> int mas[5] = {24, 34, 86, 33, 90};</p><p style="margin-left: 20px;"> int* p;  // спеціально введений покажчик</p><p style="margin-left: 20px;"> p = mas;  // ініціалізація покажчика</p>\r\n<p style="margin-left: 20px;"> for (i=0; i&lt;5; i++) {</p><p style="margin-left: 40px;"> cout &lt;&lt; *(p++) &lt;&lt; endl; // розіменовуємо покажчик, виводимо елемент, переводимо покажчик на наступний елемент</p><p style="margin-left: 20px;"> }</p><p>}</p></pre>'),
(1065, 103, 23, 12, 'Чи зміниться результат роботи програми, якщо замість постінкремента покажчика (p++) використати преінкремент (++p)?'),
(1066, 103, 24, 1, '<p>Як можна зробити висновок з попередніх занять, при оголошенні масиву для розміщення його елементів виділяється чималий сегмент пам’яті (відповідно кількості елементів). І добре, якщо розмірність (кількість елеменів) масиву відома заздалегідь. Однак уявімо ситуацію: є файл з числами (у великій кількості), які потрібно відсортувати і знову записати у файл. Зрозуміло, що тут найкраще підходить механізм сортування чисел як елементів масиву. Однак що робити, якщо розмірність масиву невідома? (в нашому випадку - не відомо, скільки точно у файлі чисел)</p><p>Вихід із ситуації - використання т.з. <em>динамічних масивів</em> (змінної розмірності). Ідентифікатором такого масиву слугує <em>змінна-покажчик</em> на початок масиву, а необхідний обсяг пам’яті виділяється, щойно програмі стане відомо кількість елементів у ньому (в процесі роботи може змінюватись як в більший, так і менший бік).</p><p>Таким чином, використання динамічних масивів передбачає:</p><p>а) <em>оголошення ідентифікатора-покажчика</em>: int* mas (в даному випадку - для масиву цілих чисел);</p><p>б) <em>виділення пам’яті під масив і ініціалізація покажчика</em>: mas = new int [N], де N - змінна, що містить розмірність масиву (<u>на момент виконання операції повинна бути визначена!</u>);</p><p>в) після використання масиву - <em>звільнення пам’яті</em>: delete [ ] mas.</p><p><u>Важливо:</u> ігнорування останньої операції може призвести до “падіння” програми. Причина - виділена раніше пам’ять буде залишатись “поміченою” (прив’язаною до покажчика) і недоступною для інших змінних та програм. Після кількох подібних виділень вона може просто вичерпатись.</p><p>Доступ до окремих елементів масиву при цьому здійснюється традиційно:<span style="color: rgb(192, 80, 77);"> mas[i]</span>, оскільки в усьому іншому “природа” статичних і динамічних масивів однакова.</p>Продемонструємо описані особливості на наступному прикладі.'),
(1067, 103, 25, 4, '<pre><p>Приклад роботи з динамічним масивом</p><p>#include &lt;iostream.h&gt; // підключаємо бібіліотеки</p><p>#include &lt;stdio.h&gt; // вводу-виводу</p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;"> int N; // розмір масиву</p><p style="margin-left: 20px;"> int* mas;  // ідентифікатор масиву</p><p style="margin-left: 20px;"> printf(‘Size of array: ’);</p><p style="margin-left: 20px;"> scanf(‘%d’, &amp;N); // вводимо розмір масиву (обов’язково більше нуля!)</p><p style="margin-left: 20px;"> mas = new int [N];  // ініціалізація ідентифікатора і виділення пам’яті</p><p style="margin-left: 20px;"> if (mas==NULL) { // перевірка на успішність виділення пам’яті</p><p style="margin-left: 40px;"> printf(‘Memory allocation error!’);</p><p style="margin-left: 40px;"> return; // вихід з програми в разі збою виділення пам’яті</p><p style="margin-left: 20px;">}</p><p style="margin-left: 20px;">for (i=0; i&lt;N; i++) {</p><p style="margin-left: 40px;"> cout &lt;&lt; “mas[” &lt;&lt; i &lt;&lt; “]=”; // вводимо елементи масиву з клавіатури</p><p style="margin-left: 40px;">cin &gt;&gt; mas[i] &gt;&gt; endl; // до кожного елемента динамічного масиву звертаємось, як і до звичайного статичного</p><p style="margin-left: 20px;"> }</p><p>… // працюємо з масивом</p><p style="margin-left: 20px;">delete [ ] mas; // звільняємо виділену пам’ять по завершенні використання масиву</p>} <span style="color: rgb(155, 187, 89);">// при цьому значення покажчика mas не змінюється! (але використовуватися він вже не може - при необхідності потрібна переініціалізація)</span></pre>'),
(1068, 235, 11, 1, '<p>5; +7; +0,23; +4, 59; <a href="https://www.codecogs.com/eqnedit.php?latex=+\\frac{3}{8}" target="_blank"><img src="https://latex.codecogs.com/gif.latex?+\\frac{3}{8}" title="+\\frac{3}{8}"></a> - додатні числа.</p>'),
(1069, 103, 26, 1, '<p>Вузько математичний термін <em>рекурсія</em> в загальному випадку означає <em>процедуру визначення певного об’єкта через самого себе.</em></p><p>Простими прикладами використання рекурсії можуть слугувати наступні:</p><ol><li>побудова нескінченної множини - наприклад, ряду натуральних чисел:</li></ol><ul><li>початкове значення ряду: x(1) = 1;</li><li>кожне наступне значення: x(n+1) = x(n)+1 (дана операція відбувається <em>рекурсивно - </em>тобто, на кожному кроці повторюєтся, спираючись на раніше отримане значення);</li></ul><p>2) розрахунок факторіалу натурального числа n! = 1∙2∙...∙(n-1)∙n:</p><ul><li>0! = 1 (умовне припущення);</li><li>n! = n∙(n-1)! (аналогічно - кожен наступний розрахунковий крок передбачає виконання цієї ж функції з іншим аргументом).</li></ul>\r\n<p>З т.з. використання рекурсії в програмуванні, зазвичай даний прийом використовується наступним чином:</p><p>а) певна послідовність операцій оформлюються у вигляді процедури (функції);</p><p>б) у потрібному місці в тілі функції прописується виклик її самої.</p><p>Відповідно, функція, яка в процесі роботи викликає сама себе, називається <em>рекурсивною.</em></p><p>Обидві наведені вище задачі можуть бути розв’язані за допомогою рекурсивних функцій. При цьому друга матиме розв’язок без особливих застережень. В першій - потрібно встановити певне обмеження (скажімо, на загальну кількість чисел ряду). Причина - <u>необхідність дотримуватися “золотого правила”</u>:</p><ul><li><em>рекурсивна процедура (функція) </em><em>обов’язково</em><em> повинна містити умову, за якої рекурсія припиняється (новий виклик процедурою/функцією самої себе не відбувається).</em><span></span></li></ul>'),
(1070, 103, 27, 4, '<pre><p>Приклад функції визначення факторіалу натурального числа</p>\r\n<p>int Factorial ( int n ) // розрахнок значення n!</p><p>{</p><p style="margin-left: 20px;">if ( n &lt;= 0 ) return 1; // умова завершення рекурсії</p><p style="margin-left: 20px;">else return n*Factorial(n-1); // рекурсивний виклик функції самої себе</p><p>} // підсумковий результат буде дорівнювати n*(n-1)*...*1</p></pre>'),
(1071, 103, 28, 1, '<p>На програмному рівні рекурсивне виконання функції/процедури проявляється в наступному:</p><ul><li>в пам’яті зберігається поточний результат роботи функції;</li><li>створюється новий набір локальних змінних (для нового виклику, щоб не “затерти” змінні поточного виклику)</li></ul>'),
(1072, 103, 29, 1, '<p>Задача <em>пошуку</em> деякого об’єкту (об’єктів) серед множини подібних також може бути вирішена із застосуванням рекурсії. Простий приклад - визначення кількості повторень деякого слова в реченні (рядку). Процедура такого пошуку передбачатиме кроки:</p><ul><li>знайти перше задане слово в рядку (якщо не знайшли - вихід з процедури);</li><li>підрахунок загальної кількості слів: 1 + кількість слів в “недослідженій” частині рядка. Рекурсія буде здійснювати аналогічний пошук в “обрізаному” рядку.</li></ul>Реалізацію даної процедури можна здійснити із застосуваням <em>покажчиків</em> на адреси рядка і шуканого слова:'),
(1073, 103, 30, 4, '<pre><p>Приклад рекурсивного пошуку</p><p>int NumWord(char* sent, char* word ) // sent - рядок, word - слово, яке шукаємо</p><p>{</p><p>char* p = strstr(sent, word); // шукаємо перше слово в рядку за допомогою функції strstr</p><p>if ( ! p ) return 0; // якщо p==NULL (слово не знайдено) - повертаємо результат 0 і виходимо з функції</p><p>return 1 + NumWord(p+strlen(word), word); // в протилежному випадку - повертаємо 1 (слово знайдено) і повторно викликаємо функцію для пошуку в решті рядка (пересуваємо покажчик на кількість байт, що дорівнює величині слова <span style="color: rgb(192, 80, 77);">strlen(word)</span>)</p><p>}</p></pre>'),
(1074, 103, 31, 1, '<p>Результат такого пошуку (кількість знайдених слів) буде фактично дорівнювати кількості викликів функції самої себе (не рахуючи виклик з основної програми).</p>'),
(1075, 103, 32, 1, '<p>Як можна бачити з наведених прикладів, <em>головною перевагою використання рекурсивних функцій </em>є можливість створення більш компактних варіантів деяких стандартних алгоритмів, які передбачають ітеративне виконання ряду операцій. Наприклад, це стосується деяких алгоритмів сортування елементів масиву.</p><p>Разом з тим, кожен новий виклик рекурсивної функції спричиняє:</p><ul><li>виділення додаткової пам’яті для зберігання нових локальних змінних і результату;</li><li>затрати часу на виклик, роботу функції і повернення результатів.</li></ul><p>Вказані особливості однозначно можна віднести до <em>недоліків</em> цього підходу.</p><p>Щоб мінімізувати можливі негативні наслідки, слід дотримуватись наступного правила:</p><em><ul><li><em>глибина рекурсії</em> (кількість її вкладених викликів) повинна бути <em>достатньо малою.</em></li></ul></em><em></em>'),
(1076, 103, 33, 1, '<p>Припустимо, що умова виходу з рекурсії прописана чітко і теоретично рано чи пізно повинна спрацювати. Однак на практиці глибина рекурсії може виявитися занадто великою, як результат - пам’ять ПК вичерпується до настання моменту виконання умови припинення рекурсії.</p><p>З метою уникнення подібних ситуацій слід завжди притримуватися ще одного “золотого правила”:</p><ul><li>якщо задача може бути легко розв’язана без використання рекурсії - <em>рекурсію використовувати не потрібно.</em></li></ul>Покажемо, як можна реалізувати розрахунок факторіалу натурального числа без використання рекурсії.'),
(1077, 103, 34, 4, '<pre><p>Приклад визначення факторіалу натурального числа без рекурсії</p><p>int Factorial ( int n ) <span style="color: rgb(155, 187, 89);">// розрахнок значення n!</span></p><p>{</p><p style="margin-left: 20px;">int i, fact = 1;</p><p style="margin-left: 20px;">for ( i = 2; i &lt;= n; i ++ )</p><p style="margin-left: 40px;">fact *= i;</p><p style="margin-left: 20px;">return fact;</p><p>}</p></pre>'),
(1078, 103, 35, 1, '<p>Крім того, така функція працює ще й набагато швидше, ніж її рекурсивний аналог</p>'),
(1079, 103, 36, 12, 'Чи коректним буде результат роботи нерекурсивної функції факторіалу в разі передачі в неї параметра (n=0)?'),
(1080, 257, 4, 3, '<p>fujygiigixg</p>'),
(1081, 257, 0, 2, 'https://www.youtube.com/watch?v=sy76tKgiq8o'),
(1082, 104, 1, 1, '<p>В загальному випадку рядки (рядкові змінні) слугують для зберігання і обробки деякого тексту. Крім того, в процесі роботи програми деякі дані, які передаються між її різними модулями, досить часто перетворюються в звичайні рядки (послідовності символів) з метою певного проміжного аналізу чи інших причин.Величини типу “рядок” за своєю суттю принципово відрізняються від інших, розглянутих раніше (зокрема, чисельних величин). Це обумовлює специфіку операцій, що можуть над ними виконуватись, а також особливості зберігання, доступу та інші нюанси.</p>'),
(1083, 104, 2, 1, '<p>Раніше було розглянуто т.з. <em>символьний тип даних </em>(char). Значення змінних даного типу в найпростішому випадку представляють собою поодинокі символи типу ‘x’, ‘Г’, ‘8’ (не число “вісім”, а саме символ!), ‘ ’ (символ “пробіл”) тощо. Кожна подібна змінна займає в пам’яті 1 байт. На практиці ж частіше виникає потреба користуватись і проводити маніпуляції із <em>сукупністю символів</em>. Кожна така сукупність інтерпретується як <em>символьний рядок</em> і потребуює пам’яті прямо пропорційно кількості символів. Також його невід’ємним атрибутом є спеціальний символ ‘\\0’, який автоматично приєднується в кінці (і означає <em>кінець рядка</em>)<em>.</em></p><ul><li><strong>символьний рядок</strong> - це сукупність (послідовність) символів, яка завжди закінчується символом ‘\\0’ (символ з кодом “нуль”, зображення не має).</li></ul>\r\n<p>Базуючись на вже знайомому синтаксисі, будемо оголошувати символьний рядок як <em>масив символів</em>: <strong><span style="color: rgb(31, 73, 125);">char str[47];</span></strong> </p><p>Число в дужках - максимально можлива кількість символів (довжина рядка); <em>реально можна ввести на 1 символ менше вказаної довжини </em>(за рахунок символа ‘\\0’).</p><p>Початкова ініціалізація рядків здійснюється традиційно:</p>\r\n<p><strong><span style="color: rgb(31, 73, 125);">char str[47] = “Hello world!”;</span></strong></p>\r\n<p>При цьому можливі наступні ситуації:</p><ul><li><em>рядок коротший за задану кількість символів і змінна </em><em>str </em><em>глобальна</em><em>: </em>невикористані символи <u>заповнюються нулями</u>;</li><li><em>рядок коротший за задану кількість символів і змінна </em><em>str </em><em>локальна</em><em>: </em>невикористані символи <u>заповнюються “сміттям</u>”;</li><li><em>рядок довший за задану кількість символів</em>: відбудеться вихід за межі виділеної під рядок пам’яті з можливими небажаними наслідками.</li></ul><p>Задля уникнення останньої ситуації кількість символів у дужках можна опускати:</p><p><strong><span style="color: rgb(31, 73, 125);">char str[] = “Hello world!”;</span></strong></p><p>Компілятор в такому разі <em>автоматично</em> підрахує довжину рядка, виділить відповідну кількість пам’яті плюс 1 байт (символ ‘\\0’) і заповнить її вказаним рядком.</p><p>Аналогічно компілятор спрацює і в разі використання покажчика на рядок:</p><p><strong><span style="color: rgb(31, 73, 125);">char* str = “Hello world!”;</span></strong></p><p>Якщо відомо, що рядок не буде змінюватись в процесі роботи програми - доцільно оголосити його <em>константою</em>:<br></p><strong><span style="color: rgb(31, 73, 125);">const char HW[] = “Hello world!”;</span></strong>'),
(1084, 104, 3, 12, 'Який сегмент пам’яті (кількість байт) буде “прив’язаний” до покажчика char* str = “Hello world!”?'),
(1085, 104, 4, 1, '<p>Введення і виведення рядків - найбільш типові (базові) операції над ними.</p><p>Розглянемо їх реалізацію за допомогою спеціальних функцій бібліотеки iostream в С++:</p><ul><li>введення: cin &gt;&gt; str;</li><li>виведення: cout &lt;&lt; str;</li></ul>'),
(1086, 104, 5, 4, '<pre><p>Приклад застосування бібліотеки &lt;iostream&gt; для введення-виведення рядків</p><p>#include &lt;iostream&gt;</p>\r\n<p>int main()</p><p>{</p><p style="margin-left: 20px;"> const int MAX = 80; // оголошуємо константу - максимальну довжину рядка</p><p style="margin-left: 20px;"> char str[MAX]; </p><p style="margin-left: 20px;"> cout &lt;&lt; “Input string: ”; // виводимо підказку</p><p style="margin-left: 20px;"> cin &gt;&gt; str; // програма готова до введення (в кінці - натиснути Enter)</p><p style="margin-left: 20px;">cout &lt;&lt; “You’ve input: ” &lt;&lt; str &lt;&lt; endl; // вивести введений рядок на екран</p><p>}</p></pre>'),
(1087, 104, 6, 1, '<p><strong></strong><span><strong>Важливо:</strong></span> 1) в С++ відсутній внутрішній механізм контролю розміщення елементів за межі масиву (в даному випадку - символьного);</p><p>2)наслідок - введення рядка, довшого, ніж величина MAX-1, може призвести до “затирання” частини пам’яті за межами виділеного буфера (з усіма витікаючими наслідками);</p><p>3) спосіб уникнути цього - додатковий контроль довжини рядка, який можна реалізувати так:</p><ul><li>підключити додаткову бібліотеку <span style="color: rgb(192, 80, 77);">&lt;iomanip&gt;</span>;</li><li>при введенні рядка застосувати функцію <span style="color: rgb(192, 80, 77);">setw(MAX)</span>, яка чітко встановлює кількість елементів, що може прийняти буфер:</li></ul><p><strong><span style="color: rgb(31, 73, 125);">cin &gt;&gt; setw(MAX) &gt;&gt; str;</span></strong></p><p>В цьому випадку в рядок може бути введено не більше, ніж MAX-1 символ, в протилежному випадку “зайві” символи будуть просто проігноровані програмою.</p>'),
(1088, 104, 7, 1, '<p>Альтернативний спосів введення-виведення - скористатись функціями класичної бібліотеки мови С <span style="color: rgb(192, 80, 77);">stdio.h:</span></p><ul><li>введення: scanf(“%s”, str); (%s - ознака формату рядкової змінної);</li><li>виведення: printf(“%s”, str);</li></ul>'),
(1089, 104, 8, 4, '<pre><p>Приклад застосування бібліотеки &lt;stdio.h&gt; для введення-виведення рядків</p><p><strong><span style="color: rgb(31, 73, 125);">#include &lt;stdio.h&gt;</span></strong></p>\r\n<p><strong><span style="color: rgb(31, 73, 125);">int main()</span></strong></p><p><strong><span style="color: rgb(31, 73, 125);">{</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(31, 73, 125);">const int MAX = 80;</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(31, 73, 125);">char str[MAX];</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(31, 73, 125);">printf("Input string: ");</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(31, 73, 125);">scanf("%s", str);</span></strong></p><p style="margin-left: 20px;"><strong><span style="color: rgb(31, 73, 125);">printf("You’ve input: %s", str);</span></strong></p><p><strong><span style="color: rgb(31, 73, 125);">}</span></strong></p></pre>'),
(1090, 104, 9, 1, '<p>Функції cin &gt;&gt; і scanf() забезпечують введення символів <em>до появи першого пробілу</em> (!!!). Тобто, спроби ввести рядок “Hello world!” в результаті виведення прийнятого рядка в обох випадках дадуть “Hello”. Уникнути даної незручності дозволяють інші функції, які дають можливість вводити будь-які символи до натиснення Enter :</p><ul><li>з бібліотеки &lt;iostream&gt; - cin.get(str, MAX); (фактично замінює рядок коду cin &gt;&gt; setw(MAX) &gt;&gt; str;)</li><li>з бібліотеки &lt;stdio.h&gt; - gets(str);</li></ul>\r\n<p>Більш простим аналогом функції printf() є puts(str), яка після виведення <em>автоматично переводить курсор на новий рядок</em> (без необхідності використання службового символа ‘\\n’, на відміну від printf()).</p>\r\n<p>Однак функція printf() володіє засобами додаткового форматування рядків під час виведення на екран (відповідні атрибути вказуються після знаку %):<br></p>\r\n<table><colgroup><col><col><col></colgroup><tbody><tr><td><p>Приклад</p></td><td><p>Результат</p></td><td><p>Коментар</p></td></tr><tr><td><p>printf(“[%s]”, “Hello”);</p></td><td><p>[Hello]</p></td><td><p>Виділено мінімально необхідну кількість позицій для рядка</p></td></tr><tr><td><p>printf(“[%7s]”, “Hello”);</p></td><td><p>[ Hello]</p></td><td><p>Виділено 7 позицій, рядок рівняється по <em>правій</em> стороні області виведення</p></td></tr><tr><td><p>printf(“[%-7s]”, “Hello”);</p></td><td><p>[Hello ]</p></td><td><p>Виділено 7 позицій, рядок рівняється по <em>лівій</em> стороні області виведення</p></td></tr><tr><td><p>printf(“[%3s]”, “Hello”);</p></td><td><p>[Hello]</p></td><td><p>Оскільки рядок не вміщується у відведені 3 символи - область виведення автоматично збільшується до мінімально необхідної</p></td></tr></tbody></table>'),
(1091, 104, 10, 1, '<p>Більшість спеціальних функцій, призначених для обробки рядкових змінних в С++, зібрані в бібліотеку <span style="color: rgb(192, 80, 77);">&lt;string.h&gt;</span>. Відповідний заголовочний файл підключається в програмі. Слід мати на увазі, що некоректне використання цих функцій може нести різного роду небезпеку для роботи програми. Адже при цьому не контролюється достатність виділення пам’яті для початкового і можливих новоутворених рядків.</p><p>Для <em>визначення довжини рядка</em> використовується функція: <span style="color: rgb(31, 73, 125);">strlen(str) </span>- повертає кількість символів у рядку <em>без врахування кінцевого</em> ‘\\0’.</p>'),
(1092, 104, 11, 4, '<pre><p>Приклад визначення довжини рядка</p><p>#include &lt;stdio.h&gt;</p><p>#include &lt;string.h&gt; // бібліотека рядкових функцій</p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;">int strln; // оголошуємо змінну - довжину рядка (кількість символів)</p><p style="margin-left: 20px;">char str[] = "Hello world!"; // оголошуємо масив нефіксованого розміру і одразу ініціалізуємо</p><p style="margin-left: 20px;">strln = strlen(str); // визначаємо довжину рядка</p><p style="margin-left: 20px;">printf ( "Length of string %s is %d", str, strln ); // виводимо результат</p><p>}</p></pre>'),
(1093, 258, 1, 1, '<p>Доброго дня!\r\n</p>\r\n<p><strong><em>Мета</em> </strong>сьогоднішнього заняття є дослідження роботи, особливості та створення транзакцій в MySQL.\r\n</p>\r\n<p>Пропоную на сьогодні Вам стати адміністратором інтернет магазину з продажу книг. У нашому магазині є користувачі які купують товари, переглядають їх наявність, характеристики і т.д. Також, обов`язковою особливістю інтернет магазину є можливість оформлення заявок онлайн.\r\n</p>\r\n<p>Отже перейдемо до створення таблиць.\r\n</p>\r\n<p><em>CREATE TABLE shop_user(</em>\r\n</p>\r\n<p><em> id INT AUTO_INCREMENT PRIMARY KEY,</em>\r\n</p>\r\n<p> <em>name VARCHAR(30) NOT NULL,</em>\r\n</p>\r\n<p> <em>money DOUBLE DEFAULT NULL</em>\r\n</p>\r\n<p><em>);</em>\r\n</p>\r\n<p><em>INSERT INTO shop_user VALUES(NULL,''Misha'',''45''),(NULL,''Petya'',''45''),(NULL,''Vasya'',''45''),(NULL,''Yulia'',''45''),(NULL,''Katya'',''45'');</em>\r\n</p>\r\n<p>В результаті ми отримаємо таблицю яка зображена на малюнку нижче.\r\n</p>'),
(1094, 258, 2, 1, '<p>Також нам необхідно мати таблицю в якій будуть записуватись заявки на придбання книг.</p>\n<p>CREATE TABLE goods(</p>\n<p>id INT AUTO_INCREMENT PRIMARY KEY,</p>\n<p>id_user INT DEFAULT NULL,</p>\n<p>codename VARCHAR(10) DEFAULT NULL,</p>\n<p>name VARCHAR(30) DEFAULT NULL</p>\n<p>money DOUBLE DEFAULT NULL</p>\n<p>);</p>\n<p>В таблиці goods колонка id_user це поле яке посилається на <em>shop_user.id</em> , codename це код товару, name це назва товару, money - вартість товару.</p>\n<p>Отже, якщо користувач купує товар, то з його рахунку списуєтсья n-кількість грошей з shop_user.money  і створюється відповідна заявка в таблиці goods в яку записується ця n-кількість грошей.</p>\n<p>Тепер припустимо, що другий запит не виконався. Цьому можуть посприяти різні технічні причини, збої і т.д. Ще тепер робити? Виходить що гроші з рахунку система зняла, а заявку на придбання книги так і не оформила. Якщо користувач у нас мільонер, то він не буде турбуватись про це, а просто ще раз оформить заявку. Середньо статистична людина на Вашу поштову скриньку не лише листа зі скаргою відправить. Тому це є проблемою.</p>\n<p>Чому це відбуваєтсья і як цього уникнути?</p>\n<p>Всі ці питання і проблеми можуть вирішити транзакції.</p>\n<p>Якщо звернутись до всемогучого Гугла, то одним із визначень транзакції буде наступне.</p>\n<p>Транзакція (англ. transaction) — група послідовних операцій з базою даних, яка є логічною одиницею роботи з даними. Транзакція може бути виконана або цілком і успішно, дотримуючись цілістності даних і незалежно від інших транзакцій, що йдуть паралельно, або не виконана зовсім, і тоді вона не може справити ніякого ефекту. Транзакції оброблюються транзакційними системами, в процесі роботи яких створюється історія транзакцій.</p>\n<p>MySQL.</p>\n<p>Транзакції підпорядковуються стандарту ACID.</p>\n<p>Атомарність (Atomicity). Транзакція має тип "все або нічого", і, що б не сталося, користувач повинен знати, в якому стані знаходиться його транзакція.</p>\n<p>Узгодженість (Consistency). Транзакція, що досягає свого нормального завершення (EOT - end of transaction, завершення транзакції) і, тим самим, що фіксує свої результати, зберігає узгодженість бази даних. Іншими словами, кожна успішна транзакція за визначенням фіксує тільки допустимі результати. Ця умова є необхідною для підтримки довговічності.</p>\n<p>Ізоляція (Isolation). Події, що відбуваються всередині транзакції, повинні бути приховані від інших одночасно виконуваних транзакцій. Якби ця умова не виконувалася, то з причин, згаданим вище, транзакцію було б неможливо повернути до свого початку. Для досягнення ізоляції використовуються методи, звані синхронізацією.</p>\n<p>Довговічність (Durability). Після того, як транзакція завершилася і зафіксувала свої результати в базі даних, система повинна гарантувати, що ці результати переживуть будь-які наступні збої. Оскільки відсутня будь-яка область управління, що охоплює набори транзакцій, у системи управління базами даних (СКБД) немає ніякого контролю поза межами кордонів транзакцій. Тому користувачеві повинно гарантуватися, що якщо система повідомляє йому про те, що щось сталося, то це "щось" дійсно відбулося. Оскільки за визначенням будь-яка (успішно завершена - С.К.) транзакція є коректною, результати неминуче з''являються некоректних транзакцій (тобто транзакцій, що містять помилкові дані), можуть бути усунені лише відповідної "контр" -транзакціей (countertransaction).</p>\n<p>Ці чотири властивості - атомарность, узгодженість, ізоляція і довговічність (ACID) - описують основні риси парадигми транзакцій, які впливають на багато аспектів розробки систем баз даних.</p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(1095, 258, 3, 1, '<p>Тепер повертаючись до нашої бази, придбання книги на рівні запитів виглядатиме наступним чином.</p><p>UPDATE shop_user SET money=30 WHERE id=''l'';</p><p>INSERT INTO goods (id_user,codename,name,money) VALUES(''1'',''1234567'',''MySQL book'',''15'');</p><p>Тобто, перший запит знімає кошти або присвоює залишок користувачу який здійснював операцію. Наступною Командою в базу буде створення відповідної заявки в таблицю заявок <em>goods</em>.</p><p>Тепер припустимо, що через певні технічні причини, наприклад, відсутній сервер, збій в мережі, збій в БД і другий запит не пройшов. Тобто, з користувача кошти зняли, але заявку не було оформлено. Чому це відбувається?</p><p>Все в тому, що кожен запит у базу даних це транзакція. Транзакції виконуються автоматично і зазвичай більшість програмістів навіть не турбуються питанням як проходят запити до БД.</p><p>MySQL підтримує транзакції тільки у двох типах таблиць: InnoDB i BDB. Також варто відмітити, що таблиці типу InnoDB підтримують функціональність зовнішнього ключа, то дані таблиці являються кращим варіантом для реалізаціх реляційної БД, а також безпечними в плані транзакцій. По замовчуванню таблиці MySQL створюються типу InnoDB.</p><p>Тепер подивіться які типи таблиць у вас є в базі даних через PhpMyAdmin.</p><p>Результа має бути наступним.</p><p>Отже наші таблиці являються необхідного для нас типу. Тепер, нам необхідно об`єднати в одну транзакцію. Якщо усі запити будут виконуватись так як необхідно, то зберегти результати запитів. Якщо один із запитів не правильно відпрацював, тоді необхідно таблицю вернути у тому вигляді яка вона була до транзакції.</p>Дана операція повинна виглядати наступним чином.'),
(1096, 258, 4, 1, '<p>Тепер повертаючись до нашої бази, придбання книги на рівні запитів виглядатиме наступним чином.\r\n</p>\r\n<p>UPDATE shop_user SET money=30 WHERE id=''l'';\r\n</p>\r\n<p>INSERT INTO goods (id_user,codename,name,money) VALUES(''1'',''1234567'',''MySQL book'',''15'');\r\n</p>\r\n<p>Тобто, перший запит знімає кошти або присвоює залишок користувачу який здійснював операцію. Наступною Командою в базу буде створення відповідної заявки в таблицю заявок <em>goods</em>.\r\n</p>\r\n<p>Тепер припустимо, що через певні технічні причини, наприклад, відсутній сервер, збій в мережі, збій в БД і другий запит не пройшов. Тобто, з користувача кошти зняли, але заявку не було оформлено. Чому це відбувається?\r\n</p>\r\n<p>Все в тому, що кожен запит у базу даних це транзакція. Транзакції виконуються автоматично і зазвичай більшість програмістів навіть не турбуються питанням як проходят запити до БД.\r\n</p>\r\n<p>MySQL підтримує транзакції тільки у двох типах таблиць: InnoDB i BDB. Також варто відмітити, що таблиці типу InnoDB підтримують функціональність зовнішнього ключа, то дані таблиці являються кращим варіантом для реалізаціх реляційної БД, а також безпечними в плані транзакцій. По замовчуванню таблиці MySQL створюються типу InnoDB.\r\n</p>\r\n<p>Тепер подивіться які типи таблиць у вас є в базі даних через PhpMyAdmin.\r\n</p>\r\n<p>Результа має бути наступним.\r\n</p>\r\n<p>Отже наші таблиці являються необхідного для нас типу. Тепер, нам необхідно об`єднати в одну транзакцію. Якщо усі запити будут виконуватись так як необхідно, то зберегти результати запитів. Якщо один із запитів не правильно відпрацював, тоді необхідно таблицю вернути у тому вигляді яка вона була до транзакції.\r\n</p>Дана операція повинна виглядати наступним чином.'),
(1097, 258, 5, 1, '<p>Тепер повертаючись до нашої бази, придбання книги на рівні запитів виглядатиме наступним чином.\r\n</p>\r\n<p>UPDATE shop_user SET money=30 WHERE id=''l'';\r\n</p>\r\n<p>INSERT INTO goods (id_user,codename,name,money) VALUES(''1'',''1234567'',''MySQL book'',''15'');\r\n</p>\r\n<p>Тобто, перший запит знімає кошти або присвоює залишок користувачу який здійснював операцію. Наступною Командою в базу буде створення відповідної заявки в таблицю заявок <em>goods</em>.\r\n</p>\r\n<p>Тепер припустимо, що через певні технічні причини, наприклад, відсутній сервер, збій в мережі, збій в БД і другий запит не пройшов. Тобто, з користувача кошти зняли, але заявку не було оформлено. Чому це відбувається?\r\n</p>\r\n<p>Все в тому, що кожен запит у базу даних це транзакція. Транзакції виконуються автоматично і зазвичай більшість програмістів навіть не турбуються питанням як проходят запити до БД.\r\n</p>\r\n<p>MySQL підтримує транзакції тільки у двох типах таблиць: InnoDB i BDB. Також варто відмітити, що таблиці типу InnoDB підтримують функціональність зовнішнього ключа, то дані таблиці являються кращим варіантом для реалізаціх реляційної БД, а також безпечними в плані транзакцій. По замовчуванню таблиці MySQL створюються типу InnoDB.\r\n</p>\r\n<p>Тепер подивіться які типи таблиць у вас є в базі даних через PhpMyAdmin.\r\n</p>\r\n<p>Результа має бути наступним.\r\n</p>\r\n<p>Отже наші таблиці являються необхідного для нас типу. Тепер, нам необхідно об`єднати в одну транзакцію. Якщо усі запити будут виконуватись так як необхідно, то зберегти результати запитів. Якщо один із запитів не правильно відпрацював, тоді необхідно таблицю вернути у тому вигляді яка вона була до транзакції.\r\n</p>Дана операція повинна виглядати наступним чином.'),
(1098, 258, 6, 1, '<p>Тепер повертаючись до нашої бази, придбання книги на рівні запитів виглядатиме наступним чином.\r\n</p>\r\n<p>UPDATE shop_user SET money=30 WHERE id=''l'';\r\n</p>\r\n<p>INSERT INTO goods (id_user,codename,name,money) VALUES(''1'',''1234567'',''MySQL book'',''15'');\r\n</p>\r\n<p>Тобто, перший запит знімає кошти або присвоює залишок користувачу який здійснював операцію. Наступною Командою в базу буде створення відповідної заявки в таблицю заявок <em>goods</em>.\r\n</p>\r\n<p>Тепер припустимо, що через певні технічні причини, наприклад, відсутній сервер, збій в мережі, збій в БД і другий запит не пройшов. Тобто, з користувача кошти зняли, але заявку не було оформлено. Чому це відбувається?\r\n</p>\r\n<p>Все в тому, що кожен запит у базу даних це транзакція. Транзакції виконуються автоматично і зазвичай більшість програмістів навіть не турбуються питанням як проходят запити до БД.\r\n</p>\r\n<p>MySQL підтримує транзакції тільки у двох типах таблиць: InnoDB i BDB. Також варто відмітити, що таблиці типу InnoDB підтримують функціональність зовнішнього ключа, то дані таблиці являються кращим варіантом для реалізаціх реляційної БД, а також безпечними в плані транзакцій. По замовчуванню таблиці MySQL створюються типу InnoDB.\r\n</p>\r\n<p>Тепер подивіться які типи таблиць у вас є в базі даних через PhpMyAdmin.\r\n</p>\r\n<p>Результа має бути наступним.\r\n</p>\r\n<p>Отже наші таблиці являються необхідного для нас типу. Тепер, нам необхідно об`єднати в одну транзакцію. Якщо усі запити будут виконуватись так як необхідно, то зберегти результати запитів. Якщо один із запитів не правильно відпрацював, тоді необхідно таблицю вернути у тому вигляді яка вона була до транзакції.\r\n</p>Дана операція повинна виглядати наступним чином.'),
(1099, 104, 12, 1, '<p>Реалізується за допомогою функції:<strong> </strong><span style="color: rgb(192, 80, 77);"><strong>strcmp(str1, str2)</strong></span> - повертає різницю між кодами <u>перших неоднакових символів</u>, що стоять на ідентичних позиціях у вказаних рядках (мають однакові індекси символьних масивів). <em>В разі відсутності розбіжностей (два однакові рядки) - повератє 0</em></p>'),
(1100, 104, 13, 4, '<p>#include &lt;stdio.h&gt;</p>\n<p>#include &lt;string.h&gt;</p>\n<p>int main()</p>\n<p>{</p>\n<p style="margin-left: 20px;">char str1[] = "Australia"; // ініціалізуємо</p>\n<p style="margin-left: 20px;">char str2[] = "Austria"; // два рядки</p>\n<p style="margin-left: 20px;">if ( 0 == strcmp(str1,str2) ) // якщо рядки однакові -</p>\n<p style="margin-left: 40px;">printf("String %s is identical to %s", str1, str2); // констатуємо це</p>\n<p style="margin-left: 20px;">else printf("String %s is not identical to %s", str1, str2); // інакше - заперечуємо</p>}'),
(1101, 104, 14, 1, '<p><u>Важливо: </u>оскільки порівняння відбувається <em>по кодах </em>символів - однакові літери <em>в різних регістрах</em> будуть ідентифікуватись <em>як різні</em>.</p>\n<p><u>Примітка 1. </u>Результат, що повертається даною функцією, <em>може бути як додатним, так і від’ємним</em>. Це залежить, наприклад, від того, яка серед літер, в яких сталася розбіжність, стоїть в алфавіті раніше - відповідно, код такої літери буде менший. Дана особливість може бути використана при сортуванні рядків.</p><u>Примітка 2. </u>Інший типовий приклад застосування даної функції - <em>перевірка коректності введеня реєстраційних даних користувача</em> (логін, пароль тощо).\n<p><br></p>\n<p>Також є можливість здійснювати <em>порівняння </em><em>частини </em><em>рядків:</em> <span style="color: rgb(192, 80, 77);"><strong>strcmp(str1, str2, n)</strong></span> - працює аналогічно до попередньої, однак <em>порівнює лише </em><em>n </em><em>перших символів у обох рядках</em>.</p>'),
(1102, 104, 15, 1, '<p>Функція <em>копіювання рядків:</em> <strong><span style="color: rgb(192, 80, 77);">strcpy(str1, str2)</span></strong> - присвоєння рядковій змінній str1 (рядок-приймач) значення, що зберігається в змінній str2 (рядок-джерело).</p><p><u>Важливо:</u></p><ul><li>в переліку аргументів функції змінна-приймач завжди стоїть раніше, ніж змінна-джерело;</li><li>небезпека застосування функції може полягати в тому, що рядковому масиву str1 <em>при оголошенні буде виділено недостатньо пам’яті </em>(!!!)</li></ul>'),
(1103, 104, 16, 4, '<pre><p>#include &lt;stdio.h&gt;</p><p>#include &lt;string.h&gt;</p>\r\n<p>int main()</p><p>{</p><p style="margin-left: 20px;">char s1[50], s2[10];</p><p style="margin-left: 20px;">printf(“Input string: ”);</p><p style="margin-left: 20px;">gets(s1);  // вводимо рядок, слідкуємо - щоб не більше 49 символів!</p><p style="margin-left: 20px;">strcpy ( s2, s1); // в рядок s2 (приймач) копіюється рядок s1 (джерело)</p><p style="margin-left: 20px;">printf(“Result of copiing: ”);</p><p style="margin-left: 20px;">puts ( s2 ); // виводимо рядок s2, курсор автоматично - на новий рядок</p><p>}</p></pre>'),
(1104, 252, 8, 1, '<p>hjfhgdgdgfsgfhmhk.kghghfdgsgdnhjjfhggdfgdfffgdhf</p>'),
(1105, 252, 9, 12, 'jhhfhfh'),
(1106, 104, 17, 1, '<p>Є можливість також скопіювати рядок-джерело в рядок-приймач, починаючи з будь-якого символа (попередні символи залишаються без змін): <span style="color: rgb(192, 80, 77);"><strong>strcpy ( s1+n, s2);</strong></span> </p><p>n - по суті, кількість байт, на яку зсувається покажчик, що вказує на початок рядкового масиву-приймача (тобто, переноситься на символ з індексом n). При цьому <u>важливо:</u></p><ul><li>слідкувати, щоб не вийти за межі масиву-приймача;</li><li>якщо в рядкові-приймачеві менше n символів - функція не спрацює.<span></span></li></ul>'),
(1111, 104, 18, 1, '<p>Функція, що реалізує дану операцію, має наступний синтаксис:</p><p><span style="color: rgb(192, 80, 77);">strncpy(str1, str2, n)</span> - копіює n перших символів з рядка str2 в початкові n позицій рядка str1 (існуючі початкові n символів рядка str1 при цьому “затираються” новими).</p><u><strong>Важливо:</strong></u> дана функція <strong>не вставляє в кінець рядка-приймача символ ‘\\0’ (!!!)</strong>'),
(1113, 104, 19, 4, '<pre><p>#include &lt;stdio.h&gt;</p><p>#include &lt;string.h&gt;</p>\r\n<p>int main()</p><p>{</p><p style="margin-left: 20px;">char s1[] = "Go Home!";</p><p style="margin-left: 20px;">char s2[10];</p>\r\n<p style="margin-left: 20px;">strncpy ( s2, s1, 2 ); // скопировать 2 символа из s1 в s2</p><p>// puts ( s2 ); - помилка! (оскільки відсутній символ кінця рядка ''\\0'' - функція виведе рядок s2 і всі символи, що містяться в пам’яті за ним, поки не зустріне ''\\0'')</p><p style="margin-left: 20px;">s2[2] = ''\\0''; // додаємо символ кінця рядка</p><p style="margin-left: 20px;">puts (s2); // результат - рядок “Go”</p><p>}</p></pre>'),
(1114, 104, 20, 1, '<p>Здійснюється функцією<em>:</em> <strong><span style="color: rgb(192, 80, 77);">strcat(str1, str2)</span></strong> - додає рядок-джерело str2 в кінець рядка-приймача str1 з автоматичним записом ‘\\0’ в кінці результуючого (об’єднаного) рядка.</p><p><u><strong>Важливо:</strong></u> рядок-приймач повинен мати достатньо місця (виділеної пам’яті), щоб вмістити результат об’єднання (!!!)</p>'),
(1115, 104, 21, 4, '<pre><p>#include &lt;stdio.h&gt;</p><p>#include &lt;string.h&gt;</p>\r\n<p>int main()</p><p>{</p><p style="margin-left: 20px;">char str1[50] = "I want, ";</p><p style="margin-left: 20px;">char s2[] = "I can, ";</p><p style="margin-left: 20px;">char s3[] = "I will!";</p><p style="margin-left: 20px;"><br></p>\r\n<p style="margin-left: 20px;">strcat ( s1, s2 ); // дописати рядок s2 в кінець s1</p><p style="margin-left: 20px;">puts ( s1 ); // результат попередньої операції - "I want, I can, "</p><p style="margin-left: 20px;">strcat ( s1, s3 ); // дописати рядок s3 в кінець s1</p><p style="margin-left: 20px;">puts ( s1 ); // результуючий рядок - "I want, I can, I will!"</p><p>}</p></pre>'),
(1116, 104, 22, 1, '<p>Наступна група команд призначена для пошуку в існуючих рядках одного або декількох символів (розташованих поруч):</p><ul><li><em>пошук першого заданого символу </em><em>від початку рядка</em><em>:</em> <span style="color: rgb(192, 80, 77);"><strong>strchr(str, symbol)</strong></span> - повертає значення покажчика на перший знайдений в рядку str символ symbol (якщо немає - NULL);</li><li><em>пошук першого заданого символу </em><em>від кінця рядка:</em><span style="color: rgb(192, 80, 77);"><strong> strrchr(str, symbol)</strong></span> - працює аналогічно (тільки в протилежному напрямку);</li><li>пошук заданого рядка меншого розміру (підрядка) в рядкові більшого розміру: <strong><span style="color: rgb(192, 80, 77);">strstr(str1, str2)</span></strong> - аналізує підрядок str2, шукає аналогічну послідовність символів у рядку str1 і в разі знаходження - повертає значення покажчика на початок підрядкa str2 в рядкові str1 (в протилежному випадку - NULL)</li></ul>'),
(1117, 104, 23, 4, '<pre><p>#include &lt;stdio.h&gt;</p><p>#include &lt;string.h&gt;</p>\r\n<p>int main()</p><p>{</p><p style="margin-left: 20px;">char str1[], str2[];  // основний рядок і підрядок</p><p style="margin-left: 20px;">char symb;  // символ для пошуку в основному рядку</p><p style="margin-left: 20px;">char* p;  // покажчик на знайдений символ чи підрядок</p><p style="margin-left: 20px;"><br></p>\r\n<p style="margin-left: 20px;"> printf (“Input main string: ”);</p><p style="margin-left: 20px;"> gets(str1[]);</p><p style="margin-left: 20px;"> printf (“Input sub-string: ”);</p><p style="margin-left: 20px;"> gets(str2[]);</p><p style="margin-left: 20px;">printf (“Input target symbol: ”);</p><p style="margin-left: 20px;"> scanf(“%c”, symb);</p>\r\n<p style="margin-left: 20px;">p = strchr(s1, symb); // пошук символу від початку основного рядка</p><p style="margin-left: 20px;">if ( p != NULL ) {  // якщо символ знайдено</p><p style="margin-left: 40px;">printf("First symbol %c: number %d \\n", symb, p - str1);</p><p>// номер символу в рядку - різниця покажчиків на символ і початок рядку</p><p style="margin-left: 40px;">p = strrchr(str1, symb); // пошук символу з кінця основного рядка</p><p>// якщо він в рядку один-єдиний - результат співпаде з попереднім пошуком</p><p style="margin-left: 40px;">printf("Last symbol %c: number %d \\n", symb, p - str1);</p><p style="margin-left: 20px;">}</p><p style="margin-left: 20px;">else printf("There is not symbol %c in our main string", symbol);</p><p style="margin-left: 20px;">p = strstr( str1, str2); // пошук підрядка str2 в основному рядку str1</p><p style="margin-left: 20px;">if ( p != NULL )  // якщо підрядок знайдено</p><p style="margin-left: 40px;">printf("There is substring %s in our main string", s2);</p><p style="margin-left: 20px;">else printf("There is not substring %s in our main string", s2);</p><p>}</p></pre>'),
(1118, 104, 24, 1, '<p><em>Форматування рядка - </em>представлення його у вигляді, необхідному для подальшого (можливо - нестандартного) використання.</p><p>Реалізується функцією: <strong><span style="color: rgb(192, 80, 77);">sprintf(str, [text+format], [variables])</span></strong> - записує результат форматування тексту, числових даних тощо в рядкову змінну str.</p>'),
(1119, 104, 25, 3, '<p>char str[80]; // допоміжний рядок</p><p>int x, y;</p><p>… // змінні x, y набувають певних значень</p>sprintf (str, "X=%d, Y=%d", x, y); // аналогічно printf(), тільки результат буде не на екрані, а в змінній str'),
(1120, 104, 26, 1, '<p><em>Читання з рядка - </em>присвоєння певним змінним значень, які є частиною рякда.</p><p>Реалізується функцією: <span style="color: rgb(192, 80, 77);"><strong>sscanf(str, [format], &amp;[variables])</strong></span> - записує за адресами змінних [variables] їх значення, прочитані послідовно з рядка str згідно формату (типу змінних) [format].</p>'),
(1122, 104, 27, 3, '<p>char str[80]; // допоміжний рядок</p><p>int x, y;</p><p>… // припустимо, що в рядок str прочитано дані з файлу</p><p>sscanf (str, "%d%d", &amp;x, &amp;y); // аналогічно scanf(), тільки значення вводяться не з клавіатури, а з рядкової змінної str</p><p>printf ( "x = %d, y = %d", x, y );  // значення змінних, що містились у файлі, виводимо на екран</p>'),
(1123, 259, 0, 2, '//www.youtube.com/embed/5Z4_RLP7ytQ\n'),
(1124, 104, 28, 1, '<p>Як і будь-які змінні простих типів, рядки можуть виступати в якості параметрів процедур і функцій. При цьому завжди потрібно пам’ятати важливу особливість:</p><ul><li>при передачі рядків до процедур\\функцій завжди передається <em>адреса їх початку</em>, жодні локальні копії рядків не створюються.</li></ul><p>Таким чином, всі зміни, що відбуваються з рядками в процедурі\\функції, будуть актуальними і в основній програмі. Тобто, при виході з процедури\\функції програма продовжить працювати вже зі зміненим рядком.</p><p>Оголошувати рядки як параметри процедури\\функції можна двома основними способами:</p>а) у вигляді звичайного символьного масиву;'),
(1125, 104, 29, 4, '<pre><p>Приклад процедури посимвольного копіювання рядків (варіант 1)</p><p>void copy1 ( char str1[], char str2[] )</p><p>{</p><p style="margin-left: 20px;">int i = 0; // лічильник символів</p><p style="margin-left: 20px;">while ( str2[i] ) { // поки не досягнуто символа ‘\\0’ (кінець рядка)</p><p style="margin-left: 40px;">str1[i] = str2[i]; // копіюємо поточний символ рядка str2 на відповідну позицію в рядок str1</p><p style="margin-left: 40px;">i ++;</p><p style="margin-left: 20px;">}</p><p style="margin-left: 20px;">str1[i] = ''\\0''; // додаємо завершальний символ</p><p>}</p></pre>'),
(1126, 104, 30, 1, '<p>б) у вигляді явного покажчика на перший символ рядка.</p>'),
(1127, 104, 31, 4, '<pre><p>Приклад процедури посимвольного копіювання рядків (варіант 2)</p><p>void copy2 ( char* str1, char* str2 )</p><p>{</p><p style="margin-left: 20px;">while ( *str1++ = *str2++ );</p><p>}</p><p><span style="color: rgb(155, 187, 89);">// послідовність дій, що відбуваються в єдиному рядку процедури:</span></p><p><span style="color: rgb(155, 187, 89);">// 1. розіменовуються (символ *) комірки пам’яті, на які вказують покажчики обох рядків - відкривається доступ до їх вмісту</span></p><p><span style="color: rgb(155, 187, 89);">// 2. поточний символ рядка str1 (на який вказує покажчик) “затирається” відповідним символом рядка str2</span></p><p><span style="color: rgb(155, 187, 89);">// 3. проводиться перевірка, чи не записано в рядок str1 символ ‘\\0’ (кінець рядка): якщо ні - повертається значення true, якщо так - повертається значення false</span></p><p><span style="color: rgb(155, 187, 89);">// 4. обидва покажчики пересуваються на адресу наступного символа в рядках (постінкремент адреси ++, відповідно до адресної арифметики)</span></p><span style="color: rgb(155, 187, 89);">// 5. якщо результат умови в дужках true, - кроки 1-4 повторюються, якщо false  - цикл припиняється</span></pre>'),
(1128, 104, 32, 1, '<p>Як бачимо, результат роботи обох варіантів процедури - абсолютно ідентичний. Однак у варіанті 2 тіло процедури вмістилося в один рядок. Це стало можливим за рахунок застосування покажчиків, які забезпечують значно більшу “свободу дій”, ніж традиційний синтаксис роботи з масивами.</p>'),
(1129, 259, 9, 7, '<p>оьмр\r\n</p>\r\n<p>орпра\r\n</p>\r\n<p>орпрарп\r\n</p>\r\n<p>тарарвпав\r\n</p>\r\n<p>оррпарарппвпвп\r\n</p>'),
(1130, 259, 10, 7, '<p>По свидетельству А. П. Шан-Гирея, стихотворение написано Лермонтовым во время одного из арестов (на этот раз, за стихи на смерть Пушкина). Камерой служила одна из комнат верхнего этажа Главного штаба. Лермонтов там будто бы написал 4 стихотворения (данное утверждение спорно). Писал спичкой, вином и печной сажей на серой бумаге, в которой ему приносили хлеб. После освобождения Лермонтов был отправлен в ссылку.</p>'),
(1131, 259, 8, 12, 'Алфавит языка QBASIC включает:'),
(1132, 259, 11, 12, 'Тест'),
(1133, 259, 12, 1, '<p>І я не я, і ти мені не ти. </p><p> Скриплять садів напнуті сухожилля. <br> Десь грає ніч на скринці самоти. <br> Десь виє вовк по нотах божевілля. <br> Бере голодну тугу — як з ножа. <br> Дзвенять світів обледенілі дзбани. <br> І виє вовк. І вулиця чужа <br> в замет сміється чорними зубами. <br> І виє вовк, ночей моїх соліст… <br> Заклацав холод іклами бурульок. <br> Вповзає вовк і тягне мерзлий хвіст, <br> в сузір’ї Риб вловивши кілька тюльок. <br> Ти, вовче, сядь. Ти на порозі ляж. <br> Ти розкажи свою пригоду вовчу. <br> А смушки скинь. Навіщо камуфляж? <br> Ти краще вий. А я собі помовчу. <br> Погрійся тут, моя нічна мано, <br> хоч ми із казки вибули за віком, <br> аж поки ранок в чорне доміно <br> зіграє з нами вогниками вікон. <br> аж поки сонце перепалить пруг <br> і сплачуть пітьму стріхи тонкосльозі… <br> Лежить овеча шкура завірюх… <br> І скімлить пес розумний на порозі… </p>'),
(1134, 105, 1, 1, '<p>Зберігання даних, необхідних для роботи програми, лише за допомогою змінних не завжди є зручним - особливо, коли обсяг цих даних є завеликим. Також не завжди виправданим є постійно (під час роботи програми) тримати у змінних (фактично - у пам’яті) дані, які потрібні лише в певні моменти часу. Доцільніше задавати значення змінним по мірі необхідності. З іншого боку, постійні зупинки програми для присвоєння змінним необхідних значень (наприклад, введення з клавіатури) - не вихід із ситуації. Адже це призводить до збільшення часу роботи програми, плюс імовірності помилкового введення через “людський фактор”. Ситуацію “рятують” файли в якості пасивних “сховищ” даних. Оскільки ці дані зберігаються на певному зовнішньому носієві (диску). При звертанні до них виникає необхідність виконання додаткових специфічних операцій (відкриття, читання, запис, закриття тощо). Найбільш загальновикористовуваним (в даному контексті) типом файлів є текстові файли.</p>'),
(1135, 105, 2, 1, '<p>В широкому розумінні, файл - це спосіб зберігання даних на фізичному пристрої. Таким чином, це поняття може підійти як до певної області даних на диску, так і до деякого терміналу (монітор, принтер тощо). Ми будемо обмежуватись більш вузькою характеристикою даного поняття:</p><ul><li>файл - поіменований набір байт, що зберігаються на деякому носії інформації.</li></ul><p>Отже, будь-який файл повинен характеризуватись такими атрибутами, як:</p><ul><li>ім’я файлу - сукупність його назви та розширення (наприклад, file.dat, де file - назва, dat - розширення);</li><li>повне ім’я файлу - повний шлях до директорії його розташування (наприклад, D:\\data\\file.dat).</li></ul><p>Як відомо, ім’я надається файлу користувачем, який його створює (і може бути легко змінене). Розширення файлу залежить від того, в якому вигляді дані зберігаються у файлі (можливості зміни розширення обмежені). Існує досить велика кількість стандартних розширень. Зокрема, файли, що містять код програм на мовах С\\С++\\С#, можуть мати розширення .c, .cpp, .cxx, .cc, .h, .hpp, .hxx, .cs. Незважаючи на це, всі файли прийнято поділяти на <em>два основні типи</em> (згідно природи даних, що в них містяться):</p><ul><li>текстові файли - файли, що складаються з будь-яких символів. Їх особливості:</li></ul><ul><li>символи організуються в <em>рядки</em>, кожен з яких закінчується спеціальним символом “кінець рядка”;</li><li>атрибут кінця файлу в цілому - спеціальний символ “кінець файлу”;</li><li>вміст файлу можна подивитись за допомогою будь-якого текстового редактора;</li><li>при записі до текстового файлу всі дані перетворюються (і зберігаються) до символьного типу (тип char).</li></ul><ul><li>двійкові файли - інформація в них записується і читається у вигляді блоків певного розміру, в яких можуть зберігатись <em>дані будь-якого вигляду і структури</em>.</li></ul>При роботі програм з файлами часто використовується поняття <em>потоку</em> як спеціального типу даних, який надається так званим файловим змінним. Відповідно, <em>текстовий потік - </em>це послідовність символів, частина яких при відображенні не відтворюються (зокрема, вже згадані символи кінця рядку та файлу). <em>Двійковий потік</em> - послідовність байт, що однозначно відповідають структурі даних, записаних до двійкового файлу.'),
(1136, 105, 3, 1, '<p>Незалежно від типу файлу, з яким працюєш, завжди доводиться виконувати операції:</p><ul><li><em>відкриття файлу</em> (для безпосереднього доступу до необхідних даних чи з метою їх редагування, доповнення тощо);</li><li><em>закриття файлу</em> (з метою, як мінімум, звільнення пам’яті в разі завершення роботи з файлом).</li></ul><p>Синтаксис мови С++ передбачає використання наступної конструкції для роботи з файлом безпосередньо з програми:</p><p><strong><span style="color: rgb(192, 80, 77);">FILE* myfile;</span></strong></p><p>яка носить назву <em>дескриптор файлу</em> і представляє собою покажчик на спеціальну <em>структуру</em> FILE </p><p><u>Примітка: </u>структура - особливий тип даних, який буде вивчатися пізніше. В даному випадку - це спеціальний сегмент даних з інформацією про файл, до якого буде відкриватись доступ в програмі - повне ім’я, тип та інші атрибути.</p><p>Оголошений таким чином дескриптор слугує для звернення до необхідного файлу при виконанні наступних основних операцій:</p><ul><li><em>відкриття файлу</em>: fopen("[name]", "[mode]"); де name - повне ім’я файлу, mode - режим роботи з файлом (читання, запис та їх модифікації);</li><li>читання з файлу: fscanf(myfile, "%s", ptr); де ptr - змінна, в яку буде зчитано інформацію з файла;</li><li>запис до файлу: fprintf(myfile, "%s", ptr); в даному випадку змінна ptr вже містить дані, які будуть записані до файлу;</li><li><em>закриття файлу</em>: fclose("[name]");</li></ul><p><u>Важливо: </u>а) перед читанням чи записом до файлу потрібно, щоб він був відкритий у відповідному режимі (із значенням параметра mode==”r” або mode==”w”);</p><p>б) після спроби відкриття файлу слід завжди перевіряти її успішність! (тобто, чи покажчик myfile!=NULL).</p><p>Існують наступні режими відкриття файлів (значення параметра mode):</p>\r\n<table><colgroup><col><col></colgroup><tbody><tr><td><p>mode</p></td><td><p>Описання</p></td></tr><tr><td><p>r</p></td><td><p>Відкрити файл тільки для читання</p></td></tr><tr><td><p>w</p></td><td><p>Відкрити файл тільки для запису</p></td></tr><tr><td><p>a</p></td><td><p>Відкрити файл для запису в кінець (дозапис)</p></td></tr><tr><td><p>r+</p></td><td><p>Відкрити файл для читання і запису (<u>лише для існуючих файлів!</u>)</p></td></tr><tr><td><p>w+</p></td><td><p>Відкрити файл для запису і читання</p></td></tr><tr><td><p>a+</p></td><td><p>Відкрити файл для запису в кінець (дозапис) і читання</p></td></tr></tbody></table><p><u>Важливо: </u>а) використання режимів r та r+ допустимо лише для існуючих фізичних файлів;</p><p>б) при використанні режимів w(w+) або a(a+) якщо файл з вказаним ім’ям не існує - він буде створений!</p><p>в) відкриття <em>існуючого</em> файлу в режимі w(w+) передбачає насправді виконання наступних операцій: знищення файлу - створення нового файлу - відкриття на запис.</p>\r\n<p><em>Чому обов’язково здійснювати закриття файлу?</em></p><p>а) <em>в режимі запису: </em>дані спочатку потрапляють в буфер (спеціальне поле-рядок структури FILE), і лише після його переповнення автоматично записуються у файл. Якщо проігнорувати fclose("[name]"); - останні дані “зависнуть” у буфері і не потраплять до файлу (тобто, команда fclose здійснює примусове “звільнення” буфера у файл);</p><p>б) <em>в режимі читання: </em>обмежується доступ до файлу з інших програм (наприклад, у Windows відкритий файл недоступний для знищення, переміщення і переіменування);</p>в) незалежно від режиму, будь-яка ОС має обмеження на кількість одночасно відкритих файлів; відповідно, при досягненні максимально допустимої кількості інші файли будуть просто недоступні.'),
(1137, 105, 4, 4, '<pre><p>#include &lt;stdio.h&gt; // ця бібліотека підключає структуру FILE<br></p><p>// запишемо до файлу турнірну таблицю змагань</p><p>main()</p><p>{</p><p style="margin-left: 20px;"> int score;  // кількість очок у команди</p><p style="margin-left: 20px;"> char team[15]; // назва команди</p><p style="margin-left: 20px;"> FILE* myfile; // оголошуємо десриптор файлу</p><p style="margin-left: 20px;"><br></p>\r\n<p style="margin-left: 20px;"> if ((myfile = fopen("table.txt","w")) == NULL) // відкриваємо файл в режимі запису</p><p> // в разі неуспішного відкриття\\створення - виводимо повідомлення</p><p style="margin-left: 40px;"> printf("It is impossible to open or create file \\n");</p><p style="margin-left: 20px;"> else{</p><p style="margin-left: 40px;"> while (score != 0){</p><p style="margin-left: 60px;"> scanf ("%d%s", &amp;score, team); </p><p> // вводимо з клавіатури кількість очок і назву команди</p><p style="margin-left: 60px;">  fprintf(myfile,"%d %s\\n", score, team);</p><p> // введені дані записуються в буфер\\файл</p><p style="margin-left: 40px;"> }</p><p style="margin-left: 20px;"> }</p><p style="margin-left: 20px;"> fclose(myfile);// після введення всіх даних - закриваємо файл</p><p>}</p></pre>'),
(1138, 105, 5, 1, '<p>Констатуємо особливості розглянутих операцій введення-виведення у файл:</p><ul><li>запис/читання файлу здійснюється лише послідовно;</li><li>операція читання/запису завжди здійснюється від поточної позиції в потоці, що відповідає файлу;</li><li>початкова позиція встановлюється при відкритті потоку(файлу), і відповідає початковому або кінцевому байту потока (в залежності від режиму відкриття);</li><li>дані потоку під час роботи концентруються в буфері;</li><li>дані, що передаються, підлягають форматуванню.</li></ul><p>Тобто, при стандартному підході “свобода дій” з даними файлів є дещо обмеженою.</p><p><em>Нижній рівень</em> допустимих операцій з файлами передбачає можливість застосування засобів <em>прямого доступу до пам’яті. </em>Як наслідок - обмін з файлами (периферійнми пристроями) відбувається шляхом безпосередньої <em>реалізації функцій операційної системи </em>(<u>системних викликів</u>).</p><p>Характерні властивості засобів прямого доступу до файлів:</p><ul><li>відсутня буферизація даних при передаванні в програму або з програми у файл;</li><li>дані завжди перебувають в машинному коді, не перетворюючись в текстовий формат;</li><li>є можливість вільно “рухати” покажчик поточної позиції - переміщувати його в потоці на потрібний байт;</li><li>доступ до файлу здійснюється через спеціальний <em>файловий дескриптор</em> - <em>ціле число, що характеризує розміщення інформації про відкритий файл у внутрішніх таблицях операційної системи.</em></li></ul>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(1139, 105, 6, 1, '<p>Для використання системних викликів в програмі слід підключити бібліотеку &lt;io.h&gt;. А необхідність їх застосування може виникнути при розробці <em>власних</em> (нестандартних) підсистем введення-виведення.</p><ul><li>відкриття файлу для читання-запису: </li></ul><p><strong><span style="color: rgb(192, 80, 77);">int open(const char *filename, int oflags [,int sflags]);</span></strong> - повертає невід’ємне ціле значення (файловий дескриптор) і встановлює покажчик на початок файлу в разі <em>успішного </em>відкриття (в протилежному випадку - повертає -1).</p><p><u>Параметри функції</u>:</p><p>filename - покажчик на рядок, що містить ім’я файлу (з використанням символу “прямий слеш” “/”);</p><p>oflags - доступний тип операції (одна або декілька констант, визначені в файлі &lt;fcntl.h&gt;);</p><p>sflags - необов’язковий параметр, що визначає тип доступу до файлу (одна або декілька констант, визначені в файлі &lt;sys\\stat.h&gt;).</p><ul><li>відкриття файлу для розділеного доступу:</li></ul><p><strong><span style="color: rgb(192, 80, 77);">int sopen(const char *filename, int oflags, int shflags [,int sflags])</span></strong>; - діє аналогічно попередній, але застосовується для вказання операційній системі алгоритму роботи, якщо до файлу одночасно звертаються декілька користувачів.</p><p><u>Параметри функції</u>:</p><p>filename, oflags, sflags - див. попередню функцію;</p><p>shflags - встановлює тип розділеного доступу до файлу (одна чи декілька констант, визначені у файлі &lt;fcntl.h&gt;).</p><ul><li>створення нового файлу:<strong><span style="color: rgb(192, 80, 77);"> int open(const char *filename, int sflags);</span></strong> - створює новий файл з іменем filename  в разі відсутності і “обнуляється” (із знищенням всіх даних) в разі існування вказаного файлу.</li></ul><p><u>Параметри</u> - аналогічні функції open.</p><ul><li>закриття файлу: <strong><span style="color: rgb(192, 80, 77);">close(int fd);</span></strong></li></ul><p><u>Параметр </u>fd - файловий дескриптор.</p><ul><li>читання з файлу:<strong><span style="color: rgb(192, 80, 77);"> int read(int fd, char *buffer,int count);</span></strong> - повертає кількість фактично прочитаних байт.</li></ul><p><u>Параметри:</u></p><p>fd - файловий дескриптор;</p><p>buffer - адреса структури-буфера (визначається користувачем), де будуть розміщені успішно зчитані дані;</p><p>count - кількість байт, необхідних для зчитування (визначається користувачем).</p><ul><li>запис у файл:<strong><span style="color: rgb(192, 80, 77);"> int wrete(int fd, char *buffer,int count);</span></strong> - повертає кількість фактично переданих до файлу байт.</li></ul><u>Параметри </u>- аналогічні попередній.'),
(1140, 105, 7, 1, '<p>Покажемо, яким чином текстові файли можуть бути використані при введенні\\виведенні даних в такі конструкції, як одновимірні\\двовимірні масиви.</p><p><u>Примітка.</u> З метою успішної обробки даних текстового файлу - вони повинні в ньому відділятися один від одного <em>пробілами</em> (або символом “\\n” - “кінець рядка”).</p>'),
(1141, 105, 8, 4, '<pre><p>Приклад введення, обробка і виведення до масиву фіксованого розміру</p><p>#include &lt;stdio.h&gt;</p>\r\n<p>const int N = 10; // розмірність масиву (кількість чисел у файлі)</p><p><br></p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;">int i, a[N];</p><p style="margin-left: 20px;">FILE *fp;  // покажчик на файл</p><p style="margin-left: 20px;"><br></p>\r\n<p style="margin-left: 20px;">fp = fopen( "input.dat", "r" ); // відкриваємо файл в режимі читання</p><p style="margin-left: 20px;">if ( fp == NULL ) {  // якщо файл не існує -</p><p style="margin-left: 40px;">printf("Файл з таким іменем відсутній");</p><p style="margin-left: 40px;">return 1;  // вихід з програми (функції main()), 1 - умовний код помилки</p><p style="margin-left: 20px;">}</p><p style="margin-left: 20px;">for ( i = 0; i &lt; N; i ++ ) // якщо файл відкрився успішно -</p><p style="margin-left: 40px;">if ( 0 == fscanf(fp, "%d", &amp;a[i]) ) { // по черзі читаємо з нього числа і записуємо в масив, якщо натрапляємо на \\0 (кінець файлу) або нечислові дані (не відповідають формату %d, відповідно функція fscanf() повертає кількість вдало зчитаних даних 0) -</p><p style="margin-left: 60px;">printf("Даних у файлі не вистачає");</p><p style="margin-left: 60px;">break; // виходимо з циклу (завершуємо читання)</p><p style="margin-left: 20px;">}</p><p style="margin-left: 20px;">fclose ( fp );  // закриваємо файл</p><p style="margin-left: 20px;">for ( i = 0; i &lt; N; i ++ ) // опрацьовуємо дані масиву</p><p style="margin-left: 40px;">a[i] = a[i]*2;</p><p style="margin-left: 20px;">fp = fopen( "output.dat", "w" ); // відкриваємо інший файл в режимі запису</p><p style="margin-left: 20px;">for ( i = 0; i &lt; N; i ++ )  // по черзі записуємо в нього всі елементи масиву</p><p style="margin-left: 40px;">fprintf ( fp, "%d\\n", a[i] ); // в стовпчик (за допомогою \\n)</p><p style="margin-left: 20px;">fclose ( fp ); // закриваємо поточний файл</p><p>}</p></pre>'),
(1142, 105, 9, 4, '<pre><p>Приклад обробки масиву даних невідомого розміру)</p><p><span></span>// файл input.dat містить пари чисел (х,у), записані в стовпчик</p><p>// знайти суму кожної пари, результат х+у записати в стовпчик у файл output.dat</p><p>#include &lt;stdio.h&gt;</p><p><br></p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;">int n, x, y, sum;</p><p style="margin-left: 20px;">FILE *fin, *fout;  // оголошуємо два покажчики, оскільки одночасно доведеться працювати з двома файлами</p><p style="margin-left: 20px;"><br></p><p style="margin-left: 20px;">fin = fopen( "input.dat", "r" ); // відкрити файл на читання</p><p style="margin-left: 20px;">fout = fopen( "output.dat", "w" ); // відкрити файл на запис</p><p>…  // перевіка на відсутність помилок при відкритті файлів</p><p style="margin-left: 20px;">while ( 1 ) {  // цикл до примусового виходу з нього</p><p style="margin-left: 40px;">n = fscanf ( fin, "%d%d", &amp;x, &amp;y ); // зчитуємо з файлу input.dat пару чисел, при цьому фіксуємо кількість вдало зчитаних чисел</p><p style="margin-left: 40px;">if ( n &lt; 2 ) break;  // якщо вдало зчитано менше, ніж 2 числа (кінець файлу або натрапили на некоректні дані) - примусовий вихід з циклу</p><p style="margin-left: 40px;">sum = x + y; // знаходимо суму зчитаної пари</p><p style="margin-left: 40px;">fprintf ( fout, "%d\\n", sum ); // результат вносимо у файл output.dat</p><p style="margin-left: 20px;">}</p><p style="margin-left: 20px;">fclose ( fout ); // закриваємо</p><p style="margin-left: 20px;">fclose ( fin ); // обидва файли</p><p>}</p></pre>'),
(1143, 105, 10, 4, '<pre><p>Приклад читання даних з файлу в двовимірний масив</p><p>#include &lt;stdio.h&gt;</p>\r\n<p>const int M = 5; // кількість рядків</p><p>const int N = 4;  // кількість стовпців</p><p><br></p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;">int i, j, a[M][N];</p><p style="margin-left: 20px;">FILE *fp;</p><p style="margin-left: 20px;"><br></p>\r\n<p style="margin-left: 20px;">fp = fopen("input.dat", "r");</p><p>…  // перевіка на відсутність помилки при відкритті файлу</p><p style="margin-left: 20px;">for ( i = 0; i &lt; M; i ++ )  // цикл по рядкам</p><p style="margin-left: 40px;">for ( j = 0; j &lt; N; j ++ )  // цикл по стовпцям</p><p style="margin-left: 60px;">if ( 0 == fscanf(fp,"%d",&amp;a[i][j]) ) {// читаємо дані в масив а[i][j], одночасно перевіряємо, чи не натрапили на кінець файлу або на некоректні дані</p><p style="margin-left: 80px;">puts("Даний у файлі не вистачає");</p><p style="margin-left: 80px;">fclose ( fp ); // закриваємо файл через помилку</p><p style="margin-left: 80px;">return 1;  // вихід з програми через помилку</p><p style="margin-left: 60px;">}</p><p style="margin-left: 20px;">fclose ( fp ); // закрити файл після успішного зчитування даних</p><p>…  // обробка зчитаної матриці</p><p>}</p></pre>'),
(1144, 105, 11, 1, '<p>При роботі з файлами, що містять символьні рядки, функція fscanf() має специфіку - <u>вона читає окремі слова (послідовності символів до пробілу).</u></p>'),
(1145, 105, 12, 4, '<pre><p>#include &lt;stdio.h&gt;</p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;">char s[80];</p><p style="margin-left: 20px;">FILE *fp;</p><p style="margin-left: 20px;"><br></p>\r\n<p style="margin-left: 20px;">fp = fopen ( "input.dat", "r" );</p><p style="margin-left: 20px;">fscanf ( fp, "%s", s );</p><p style="margin-left: 20px;">printf ( "Слово, прочитане з файлу - %s", s );</p><p style="margin-left: 20px;">fclose ( fp );</p><p>}</p></pre>'),
(1146, 105, 13, 1, '<p>При необхідності читання рядка в цілому використовується функція <strong><span style="color: rgb(192, 80, 77);">fgets(strName, maxLength, fp)</span></strong> , де strName - ім’я рядкової змінної, в яку зчитується фрагмент файлу, maxLength - максимальна довжина зчитуваного фрагмента, fp - покажчик на файл.</p><p><u>Примітка: </u>1) рядок з файлу буде зчитуватись, доки не буде досягнуто maxLength або не зустрінеться символ \\n (кінець рядка - перехід на новий), <u>який також буде зчитаний</u>;</p><p>2) реально з файлу буде зчитуватись maxLength-1 символів (останнім примусово буде записано \\0);</p>3) за відсутності даних у файлі функція fgets() повертає значення NULL.'),
(1147, 105, 14, 4, '<pre><p>#include &lt;stdio.h&gt;</p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;">char s[80];</p><p style="margin-left: 20px;">FILE *fp;</p><p style="margin-left: 20px;"><br></p>\r\n<p style="margin-left: 20px;">fp = fopen( "input.dat", "r" );</p><p style="margin-left: 20px;">if ( NULL == fgets ( s, 80, fp ) ) // перевірка на наявність даних у файлі</p><p style="margin-left: 40px;">printf ( "Дані у файлі відсутні" );</p><p style="margin-left: 20px;">else</p><p style="margin-left: 40px;">printf ( "Рядок з файлу - %s", s );</p><p style="margin-left: 20px;">fclose ( fp );</p><p>}</p></pre>'),
(1148, 105, 15, 3, '<p>.</p>'),
(1149, 105, 16, 4, '<pre><p>// З файлу input.dat прочитати по черзі кожен рядок, замінити в ньому літери</p><p>// ‘А’ на ‘Б’, результат вивести у файл output.dat</p><p>#include &lt;stdio.h&gt;</p><p><br></p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;">char s[80];</p><p style="margin-left: 20px;">int i;</p><p style="margin-left: 20px;">FILE *fin, *fout;</p><p style="margin-left: 20px;"><br></p>\r\n<p style="margin-left: 20px;">fin = fopen ( "input.dat", "r" ); // відкриваємо одночасно</p><p style="margin-left: 20px;">fout = fopen ( "output.dat", "w" ); // обидва файли</p><p style="margin-left: 20px;">while ( NULL != fgets ( s, 80, fin ) ) {  // читаємо рядок з одночасною перевіркою, чи не закінчилися у файлі дані</p><p style="margin-left: 40px;">i = 0;  // аналізуємо прочитані символи, починаючи з s[0]</p><p style="margin-left: 40px;">while ( s[i] != ''\\0'' ) { // поки не досягли кінця рядка - </p><p style="margin-left: 60px;">if ( s[i] == ''A'' ) s[i] = ''Б''; // робимо заміну потрібного символу</p><p style="margin-left: 60px;">i++;  // переходимо на наступний символ</p><p style="margin-left: 40px;">}</p><p style="margin-left: 40px;">fprintf ( fout, "%s", s );  // виводимо рядок у файл</p><p style="margin-left: 20px;">}</p><p style="margin-left: 20px;">fclose ( fin ); // закриваємо</p><p style="margin-left: 20px;">fclose ( fout ); // файли</p><p>}</p></pre>'),
(1150, 106, 1, 1, '<p>Робота з текстовими файлами не завжди себе виправдовує з наступних точок зору:</p><p>- обсяг пам’яті (дискового простору), необхідного для зберігання даних, що містяться у файлі;</p><p>- швидкість обробки таких файлів (через необхідність послідовного читання всього файлу, потім його аналізу і так само - послідовного запису у файл).</p>У випадках, коли немає необхідності виводити дані з файлу на екран, а лише здійснювати їх обробку, доцільніше використовувати файли з т.з. довільним доступом. Інформація в таких файлах представляється не як послідовність символів (літери, цифри, дужки тощо), а в чисто двійковому коді. Звідси їх альтернативна назва - “бінарні файли”.'),
(1151, 106, 2, 1, '<p><u>Двійковий (бінарний) файл</u> - більш загальна (в порівнанні з текстовим) форма представлення даних. До цієї категорії належать наступні різновиди файлів:</p><ul><li>електронні документи;</li><li>графічні файли;</li><li>звукові та відеофайли;</li><li>файли баз даних і т.д.</li></ul><p>Принципова відмінність від текстового файлу - <em>внутрішня форма представлення даних</em>, за якою організована оперативна і фізична пам’ять комп’ютера. Оскільки з цією метою використовується <em>двійкова система числення</em> - звідси назва <em>двійковий файл</em>.</p>Таким чином, двійковий файл - аналог внутрішньої пам’яті комп’ютера. Ця пам’ять представляє собою <em>необмежений масив байтів</em> з можливістю безпосереднього звернення (<em>довільного доступу</em>) до будь-якої її частини. Звідси - альтернативна назва <em>файли з довільним доступом.</em>'),
(1152, 106, 3, 1, '<p>Робота з бінарними файлами здійснюється на рівні <em>потоків</em>, пов’язаних з файловою змінною (оголошується як покажчик: <strong><span style="color: rgb(192, 80, 77);">FILE* f</span></strong>). Для відкриття бінарного файлу використовується вже знайома нам функція<span style="color: rgb(192, 80, 77);"><strong> fopen()</strong></span>. При цьому параметр “режим відкриття” вказується наступним чином: “rb”, “wb”, “ab” (літера b - ознака бінарного файлу).</p><p>Основна функція для довільного доступу до даних файлу (з бібліотеки &lt;io.h&gt;):</p><p><strong><span style="color: rgb(192, 80, 77);">int fseek(FILE* f, long off, int org);</span></strong> - повертає значення 0 в разі успішного переміщення покажчика всередині файлу.</p><p><u>Параметри функції</u>:</p><p> f – дескриптор файлу;</p><p>off – позиція зміщення (вираз\\змінна, від’ємна\\додатна - можливість руху по файлу в обох напрямках);</p>org – початок відліку (одна з констант бібліотеки &lt;stdio.h&gt;: SEEK_SET (0, початок файлу), SEEK_CUR (1, поточна позиція), SEEK_END(2, кінець файлу)).'),
(1153, 106, 4, 3, '<p><strong><span style="color: rgb(31, 73, 125);">fseek(f, (long)sizeof(a), SEEK_SET); </span></strong> <strong><span style="color: rgb(155, 187, 89);">// переміщення вперед від початку файлу на довжину змінної а</span></strong><br><strong><span style="color: rgb(31, 73, 125);">fseek(f, -(long)sizeof(a), SEEK_CUR);</span><span style="color: rgb(155, 187, 89);"> </span></strong><span style="color: rgb(155, 187, 89);"><strong>// переміщення назад від поточної позиції на довжину змінної </strong></span><strong><span style="color: rgb(155, 187, 89);">а</span></strong><strong><span style="color: rgb(155, 187, 89);"></span></strong></p>'),
(1154, 106, 5, 1, '<p>Додаткові функції прямого доступу до файлу:</p><p><strong><span style="color: rgb(192, 80, 77);">long ftell(FILE* f);</span></strong> - повертає значення покажчика поточної позиції в загальному файловому потоці;<br></p><p><strong><span style="color: rgb(192, 80, 77);">void rewind(FILE* f);</span></strong> - встановлює покажчик на початок файлу (потоку).</p>'),
(1155, 106, 6, 1, '<p><u>Принципова відмінність від текстових файлів: </u>читання і запис блоку будь-якої величини відбуваються за одну команду (замість послідовного читання байтів).</p><ul><li>функція читання: <strong><span style="color: rgb(192, 80, 77);">int fread(mp, el_size, el_number, fp);</span></strong> - повертає кількість успішно прочитаних елементів (як правило, чисел).</li></ul><p><u>Параметри функції</u>:</p><p> mp – покажчик адреси в пам’яті, за якою записуються дані;</p><p> el_size – розмір елемента даних в байтах (в залежності від типу);</p><p> el_number – кількість елементів, які потрібно прочитати;</p><p> fp – дескриптор відкритого файлу, з якого читаються дані.</p><ul><li><em>функція запису:<strong><span style="color: rgb(192, 80, 77);"> </span></strong></em><strong><span style="color: rgb(192, 80, 77);">int fwrite(mp, el_size, el_number, fp); </span></strong>- повертає кількість успішно записаних елементів (як правило, чисел). Відмінність у змісті параметрів: </li></ul><p> mp – покажчик адреси в пам’яті, з якої беруться дані для запису в файл;</p> fp – дескриптор відкритого файлу, до якого записуються дані.'),
(1156, 106, 7, 4, '<pre><p>#include &lt;stdio.h&gt;</p>\r\n<p>const int N = 10; // фіксуємо потрібну кількість елементів масиву</p><p><br></p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;">int i, n, A[N];</p><p style="margin-left: 20px;">FILE* fp; // дескриптор файлу</p><p style="margin-left: 20px;"><br></p>\r\n<p style="margin-left: 20px;">fp = fopen( "input.dat", "rb" ); // відкрити двійковий файл на читання</p><p style="margin-left: 20px;">n = fread ( A, sizeof(int), N, fp ); // читаємо в масив потрібну кількість чисел</p><p style="margin-left: 20px;">if ( n &lt; N ) { // якщо чисел у файлі менше - помилка!</p><p style="margin-left: 40px;">printf("Reading error");</p><p style="margin-left: 40px;">break;</p><p style="margin-left: 20px;">}</p><p style="margin-left: 20px;">fclose ( fp ); // закрити файл</p><p style="margin-left: 20px;">for ( i = 0; i &lt; N; i ++ )</p><p style="margin-left: 40px;">A[i] = A[i] * 2; // модифікуємо прочитаний масив</p><p style="margin-left: 20px;">fp = fopen( "output.dat", "wb" ); // відкрити двійковий файл на запис</p><p style="margin-left: 20px;">fwrite ( A, sizeof(int), N, fp ); // записати масив у файл</p><p style="margin-left: 20px;">fclose ( fp ); // закрити файл</p><p>}</p></pre>'),
(1157, 106, 8, 4, '<pre><p>#include &lt;cmath&gt; //бібліотека математичних функцій</p><p>#include &lt;iostream&gt;<br>#include &lt;io.h&gt; //бібліотека системних викликів</p><p><br>main() </p><p>{</p><p style="margin-left: 20px;">FILE* f;  //файловий дескриптор<br> int i,n=10;</p><p style="margin-left: 20px;">char s[]="String";</p><p style="margin-left: 20px;"> float r;</p>\r\n<p style="margin-left: 20px;"> f=fopen("file_bin","wb");  //створюємо двійковий файл з назвою file_bin для запису даних (параметр “wb”)</p><p style="margin-left: 20px;">for(i=1;i&lt;=n;i++){ <br></p>         r=pow(i,1.0/3); //розрахунок кубічного кореня з числа і<br>         fwrite(s,sizeof(s),1,f);  //запис рядка String у файл<br>        fwrite(&amp;i,sizeof(int),1,f); //запис цілого числа (номер рядка) у файл<br>        fwrite(&amp;r,sizeof(float),1,f); //запис дійсного числа (корінь кубічний) у файл<br>        printf("\\n%s %d %f",s,i,r);  //контрольний вивід на екран<br>    }<br>    fclose(f);  //закриття файлу<br>    printf("\\n");<br>    f=fopen("file_bin","rb");  //відкриття двійковго файлу для читання<br>    for(i=n; i&gt;0; i--) {  //переміщення покажчика файлу<br>       fseek(f,(i-1)*(sizeof(s)+sizeof(int)+sizeof(float)),SEEK_SET);<br>       fread(&amp;s,sizeof(s),1,f); //читати з файлу рядок<br>       fread(&amp;n,sizeof(int),1,f); //читати ціле число<br>       fread(&amp;r,sizeof(float),1,f); //читати дійсне число<br>       printf("\\n%s %d %f",s,n,r);  //вивести вміст файлу на екран<br>   } <br>   getchar(); //затримка - очікування натиснення клавіші Enter<p>}<br></p></pre>'),
(1158, 235, 12, 1, '<p>Додатні числа можна записати без знака, тобто замість +5; + 7; +0, 23 можна писати 5;7; 0, 23.</p>'),
(1160, 259, 13, 1, '<p>Nt  bsdvkjvbs</p>'),
(1161, 259, 14, 1, '<p>x=\\frac{1+y}{1+2z^2}</p>'),
(1162, 259, 15, 1, '<p>$$x=\\frac{1+y}{1+2z^2}$$\r\n</p>'),
(1163, 259, 16, 1, '<p>bfjkebkj $$\\int_0^\\infty e^{-x^2} dx=\\frac{\\sqrt{\\pi}}{2}$$ dfklvndkl</p>'),
(1164, 259, 17, 1, '<p><span class="MathJax_Preview" style="color: inherit;"></span></p>\n<div class="MathJax_Display" style="text-align: center;"><span class="MathJax" id="MathJax-Element-3-Frame"><nobr><span class="math" id="MathJax-Span-39" role="math" style="width: 14.4em; display: inline-block;"><span style="display: inline-block; position: relative; width: 12.838em; height: 0px; font-size: 112%;"><span style="position: absolute; clip: rect(0.784em 1000.003em 3.518em -999.997em); top: -2.397em; left: 0.003em;"><span class="mrow" id="MathJax-Span-40"><span class="mtable" id="MathJax-Span-41" style="padding-right: 0.17em; padding-left: 0.17em;"><span style="display: inline-block; position: relative; width: 12.447em; height: 0px;"><span style="position: absolute; clip: rect(2.793em 1000.003em 4.858em -999.997em); top: -4.015em; left: 0.003em;"><span style="display: inline-block; position: relative; width: 0.561em; height: 0px;"><span style="position: absolute; clip: rect(3.407em 1000.003em 4.188em -999.997em); top: -4.629em; right: 0.003em;"><span class="mtd" id="MathJax-Span-42"><span class="mrow" id="MathJax-Span-43"><span class="mi" id="MathJax-Span-44" style="font-family: MathJax_Math-italic;">x</span></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; clip: rect(3.853em 1000.003em 4.188em -999.997em); top: -3.345em; right: 0.003em;"><span class="mtd" id="MathJax-Span-58"><span class="mrow" id="MathJax-Span-59"></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; clip: rect(2.849em 1000.003em 4.858em -999.997em); top: -4.015em; left: 0.84em;"><span style="display: inline-block; position: relative; width: 1.063em; height: 0px;"><span style="position: absolute; clip: rect(3.463em 1000.003em 4.188em -999.997em); top: -4.629em; left: 50%; margin-left: -0.499em;"><span class="mtd" id="MathJax-Span-45"><span class="mrow" id="MathJax-Span-46"><span class="mi" id="MathJax-Span-47"></span><span class="mo" id="MathJax-Span-48" style="font-family: MathJax_Main; padding-left: 0.282em;">=</span></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; clip: rect(3.463em 1000.003em 4.188em -999.997em); top: -3.345em; left: 50%; margin-left: -0.499em;"><span class="mtd" id="MathJax-Span-60"><span class="mrow" id="MathJax-Span-61"><span class="mi" id="MathJax-Span-62"></span><span class="mo" id="MathJax-Span-63" style="font-family: MathJax_Main; padding-left: 0.282em;">=</span></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; clip: rect(2.514em 1000.003em 5.137em -999.997em); top: -4.015em; left: 2.179em;"><span style="display: inline-block; position: relative; width: 10.271em; height: 0px;"><span style="position: absolute; clip: rect(3.128em 1000.003em 4.355em -999.997em); top: -4.629em; left: 0.003em;"><span class="mtd" id="MathJax-Span-49"><span class="mrow" id="MathJax-Span-50"><span class="mi" id="MathJax-Span-51" style="font-family: MathJax_Main;">sin</span><span class="mo" id="MathJax-Span-52"></span><span class="mi" id="MathJax-Span-53" style="font-family: MathJax_Math-italic; padding-left: 0.17em;">α</span><span class="mo" id="MathJax-Span-54" style="font-family: MathJax_Main; padding-left: 0.282em;">=</span><span class="mi" id="MathJax-Span-55" style="font-family: MathJax_Main; padding-left: 0.282em;">cos</span><span class="mo" id="MathJax-Span-56"></span><span class="mi" id="MathJax-Span-57" style="font-family: MathJax_Math-italic; padding-left: 0.17em;">β<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; clip: rect(3.128em 1000.003em 4.411em -999.997em); top: -3.345em; left: 0.003em;"><span class="mtd" id="MathJax-Span-64"><span class="mrow" id="MathJax-Span-65"><span class="mi" id="MathJax-Span-66" style="font-family: MathJax_Main;">cos</span><span class="mo" id="MathJax-Span-67"></span><span class="mo" id="MathJax-Span-68" style="font-family: MathJax_Main;">(</span><span class="mi" id="MathJax-Span-69" style="font-family: MathJax_Math-italic;">π<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mo" id="MathJax-Span-70" style="font-family: MathJax_Main; padding-left: 0.226em;">−</span><span class="mi" id="MathJax-Span-71" style="font-family: MathJax_Math-italic; padding-left: 0.226em;">α</span><span class="mo" id="MathJax-Span-72" style="font-family: MathJax_Main;">)</span><span class="mo" id="MathJax-Span-73" style="font-family: MathJax_Main; padding-left: 0.282em;">=</span><span class="mi" id="MathJax-Span-74" style="font-family: MathJax_Main; padding-left: 0.282em;">sin</span><span class="mo" id="MathJax-Span-75"></span><span class="mo" id="MathJax-Span-76" style="font-family: MathJax_Main;">(</span><span class="mi" id="MathJax-Span-77" style="font-family: MathJax_Math-italic;">π<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mo" id="MathJax-Span-78" style="font-family: MathJax_Main; padding-left: 0.226em;">−</span><span class="mi" id="MathJax-Span-79" style="font-family: MathJax_Math-italic; padding-left: 0.226em;">β<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mo" id="MathJax-Span-80" style="font-family: MathJax_Main;">)</span></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span></span></span></span><span style="display: inline-block; width: 0px; height: 2.402em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 2.753em; vertical-align: -1.122em;"></span></span></nobr></span>\n</div>'),
(1165, 259, 18, 1, '<p>$\\left] 0,1 \\right[ + \\lceil x \\rfloor - \\langle x,y\\rangle$</p>'),
(1166, 259, 19, 1, '\\[+\\frac{3}{8}\\] '),
(1167, 259, 20, 1, '\\[+\\frac{3}{8}\\]\r\n'),
(1168, 259, 21, 1, '<p>\\[\\inline +\\frac{3}{8}\\]\r\n</p>'),
(1170, 301, 1, 1, '<p>Доброго дня!\r\n</p>\r\n<p>Метою сьогоднішнього заняття є знайомство з вибіркою даних з таблиці бази даних.\r\n</p>\r\n<p>Процес відбору даних з таблиці полягає у отриманні з неї деяких полів та їх значень, які задовольняють певним умовам. Результатом виконання запиту, на основі якого проводится вибір даних, називається вибіркою. Дані можна вибирати з однієї або декількох таблиць з допомогою оператора SELECT, який має наступний формат:\r\n</p>\r\n<p>SELECT [DISTINCT] {*|&lt;Список полів&gt;}\r\n</p>\r\n<p>FROM &lt;Список таблиць&gt;\r\n</p>\r\n<p>[WHERE &lt;Критерій відбору&gt;]\r\n</p>\r\n<p>[ORDER BY &lt;Список полів для сортування&gt;]\r\n</p>\r\n<p>[GROUPBY &lt;Список полів для групування&gt;]\r\n</p>\r\n<p>[HAVING &lt;Умова групування&gt;]\r\n</p>\r\n<p>[UNION &lt;Вкладений оператор SELECT&gt;]\r\n</p>\r\n<p>Результат виконання SQL запиту, визначеного оператором SELECT, являє собою вибірку записів, які задовольняють заданій умові. Також в даному операторі передбачено можливість дозволити чи заборони вивід даних з однаковими значеннями полів. За дану можливість відповідає специфікатор DISTINCT. Якщо він відсутній, то в наборі даних дозволено повторення.\r\n</p>\r\n<p>В операторі SELECT обов''язково повинно бути вказано списк полів і операнд FROM, решта операндів можна не вказувати. В списку операнда FROM перераховуються імена таблиць, по яких проводиться вибірка даних (список повинен містити хоча б одну таблицю).\r\n</p>\r\n<p>Список полів оператора SELECT визначає з яких полів буде складатися результуючий набір даних. Ці поля можуть належати до різних таблиць. Список повинен містити хоча б одне поле. Якщо в результуючий набір потрібно додати всі поля таблиці, то замість перерахованих імен можна вказати символ «*».\r\n</p>\r\n<p>Якщо список містить поля, які належать різним таблицям, то дял визначеності приналежності поля, використовують складові імена, які складаються з імені таблиці та імені поля розділені крапкою (&lt;Ім''я таблиці&gt;.&lt;Ім''я поля&gt;).\r\n</p>\r\n<p>Операнд WHERE містить критерій по якому проводиться відбір. Його елементами можуть бути імена полів, операції порівняння, арифметичні та логічні операції, спеціальні функції LIKE, IS NULL, IN та інші.\r\n</p>\r\n<p>Операнд GROUP BY дозволяє групувати дані. Дана можливість зумовлена тим, що іноді виникає потреба виконувати певні операції над групою записів.\r\n</p>\r\n<p>Операнд HAVING викорстовується разом з GROUP BY і дозволяє відбирати дані в межах групі. Правила запису умов групування аналогічні правилам формування умов відбору в операнді WHERE.\r\n</p>\r\n<p>Операнд ORDER BY містить список полів, що визначають порядок сортування записів результуючого набору даних. За замовчуванням сортування по кожному полю здійснюється в порядку зростання значень; якщо необхідно задати для поля тип сортування по спаданню, то після імені цього поля вказується специфікатор DESC.\r\n</p>\r\n<p>Оператор SELECT може мати складну структуру, і бути вкладеним в інший оператор SELECT. Для такого об''єднання використовується операнд UNION, який і містить вкладений оператор. Результатом роботи такого запиту будуть дані, які формуються по критерію відбору операнід WHERE обох запитів.\r\n</p>\r\n<p>Оператор SELECT використовується також і в інших операторах, наприклад, в операторах модифікації даних, який забезпечує для їх виконання певний відбір записів.\r\n</p>\r\n<p>Критерій відбору являє собою вираз булівського типу, в якому можна використовувати наступні операції:\r\n</p>\r\n<ol>\r\n	<li>Операції порівняння («=» — рівне; «&gt;» — більше; «&lt;» — менше; «&gt;=» — більше або рівне; «&lt;=» — менше або рівне; «!=» — не дорівнює; «!&gt;» — не більше; «!&lt;» — не менше).</li>\r\n	<li>LIKE — порівняння за шаблоном.</li>\r\n	<li>IS NULL — перевірка на нульове значення.</li>\r\n	<li>IN — перевірка на входження.</li>\r\n	<li>BETWEEN — перевірка на входження в діапазон.</li>\r\n</ol>\r\n<p>В простому критерії відбору використовується одна операція. Для операції порівняння чи порівняння за шаблоном, критерій відбору має наступний формат:\r\n</p>\r\n<p>&lt;Вираз 1&gt;&lt;Операція порівняння&gt;&lt;Вираз 2&gt;\r\n</p>\r\n<p>Де «Вираз 1» і «Вираз 2» може містити імена полів, функції, константи, знаки арифметичних операцій і круглі дужки. Наприклад, нехай ми маємо деякі таблицю «Cars», яка містить інформацію про деякі автомобілі:\r\n</p>\r\n<p><img src="https://lh4.googleusercontent.com/DulGCzcUpaIpMUQdDsD7uq4A7Klemzy3hdTM_s_owEQjbtgVC87xIdDCSf7YzA0XtC3Cw4-aNHkp24bxbeYm2eklCWyzPG8Ynazpom9YA57Y1gCkkOeaopsFmBqa3CLVfM57p9I" alt="оператор select">\r\n</p>\r\n<p>Серед автомобілів, які містяться в даній таблиці нам потрібно вибрати ті, ціна яких перевищує 10000. Оператор, який реалізує даний критерій відбору матиме наступний вигляд:\r\n</p>\r\n<p>SELECT Model FROM Cars WHERE Price &gt;= 10000;\r\n</p>\r\n<p>Результатом даного запиту буде наступна таблиця:\r\n</p>\r\n<p><img src="https://lh4.googleusercontent.com/ekBkJx0K9rWzTM1kc1GPX5I0bbr7ClXUOgKoyqMnOd-m5V69btq8bvcGm2SGOoD-plEFJS5zLBiKfHhNaPagA-nAi7TqbGtRDQeTPy1BhayLumWkW1jKBeiZh5L_EvCgLcQMTV8" alt="Оператор select">\r\n</p>\r\n<p>Для порівняння рядків в SQL можна, також використовувати операцію LIKE, яка виконує відбір по частковому співпвдінню. Дану операцію доцільно використовувати в тому випадку, коли, наприклад, відомо тільки початок прізвища чи початок назви предмета. Розглянемо приклад з таким запитом:\r\n</p>\r\n<p>SELECT Model FROM Cars WHERE Model LIKE «BMW 318»;\r\n</p>\r\n<p>В результаті отримаємо список автомобілів, марка яких рівна «bmw 318».\r\n</p>\r\n<p><img src="https://lh3.googleusercontent.com/pRc2TLtl6hwy1mnO9rUxmgYchcgxBtOIlNXF-_vQgyPQer4d7NN9yJA1Of4YHBhYkGXlI5UKlFysGev9Kkh5S9lXuhAKqjO5baIM8i8tZimMwZl7y4IACvlDu8gLkUSEvAUzoN8" alt="Оператор select">\r\n</p>\r\n<p>У виразах операції LIKE дозволено використання будь-яких символів з урахуванням регістра. При цьому два символи мають спеціальне призначення:\r\n</p>\r\n<ol>\r\n	<li>"%" — будь-який рядок довжиною від нуля і більше символів;</li>\r\n	<li>"_" — будь-який одинарний символ.</li>\r\n</ol>\r\n<p>Тобто, з допомогою даних символів ми можемо провіряти не тільки співпадіння початкових символів рядка, а і будь-яке співпадіння у будь-якій частині. Наприклад:\r\n</p>\r\n<p>SELECT Model FROM Cars WHERE Model LIKE «%rce%»;\r\n</p>\r\n<p>В результаті ми отримаємо список автомобілів назви яких не містять символів «rce».\r\n</p>\r\n<p><img src="https://lh3.googleusercontent.com/HRQmVG8lM-NWjRsS0MsamWeFaKEKqeX_GSRgnQlVAg-ibucr34o1hil4JInITDeWJjKChpuMCLM0Sp2I5H_mq-wUsQXhiPeN4z_N_hVkAD3o4qTCVSnHVSYeSDq6FZyDGEINYQU" alt="Оператор select">\r\n</p>\r\n<p>Перед операцією LIKE можна, також, використовувати специфікатор NOT, який змінює результат виконання операції на протилежне значеня, тобто, якщо ми попередній запит сформуємо наступним чином:\r\n</p>\r\n<p>SELECT Model FROM Cars WHERE Model NOT LIKE «%rce%»;\r\n</p>\r\n<p>то в результаті ми отримаємо список автомобілів у назвах яких не містяться символи «rce».\r\n</p>\r\n<p><img src="https://lh6.googleusercontent.com/1wwp2HjKwHhHeH_GVrKwyO-sjMQ_A8jhQI16ePNZ-LnBVMwHij99wvrUbcknj8MPC3wzQBLuVv8qjWal-6ROERtNkn9htFMUZXpNXOHgU36PDGj9wYcYHHwP6RmTBlj30XEv1f8" alt="Оператор select">\r\n</p>\r\n<p>Для того, щоб перевірити виразу на нульове значиння, використовують операцію IS NULL, яка має наступний формат:\r\n</p>\r\n<p>&lt;Вираз&gt; IS [NOT] NULL\r\n</p>\r\n<p>Приклад:\r\n</p>\r\n<p>SELECT * FROM Cars WHERE Price IS NULL;\r\n</p>\r\n<p>В даному запиті проводиться вибірка всіх полів таблиці Cars для яких ціна являється не визначеною. В нашому випадку таких автомобілів немає, тому результуюча таблиця не міститиме жодного запиту.\r\n</p>\r\n<p>Перевірку на входження значення виразу у список виконується з допомогою операції IN наступним чином:\r\n</p>\r\n<p>&lt;Вираз&gt; [NOT] IN &lt;Список значень&gt;\r\n</p>\r\n<p>Дану операцію зручно використовувати, коли вираз може приймати відносно невелику кількість різниз значень. Ось приклад відповідного запиту та результат його виконання:\r\n</p>\r\n<p>SELECT * FROM Cars WHERE Model IN ("BMW 318", «Jaguar»);\r\n</p>\r\n<p><img src="https://lh4.googleusercontent.com/kOAOMcdKEftR67pRE3kOtES_SSs1GqKJzTw9SNj20oc29f24b5dNGpoPukSzaeqvxlXpyvUzwd6DsxjrpBzTVRwQXaLSV8rUPU6x80PxtN3rIngssM8w6LwdfCgmJJYBOloYumY" alt="Оператор select">\r\n</p>\r\n<p>Операція BETWEEN виконує перевірку на входження у певний діапазон і має наступний формат:\r\n</p>\r\n<p>&lt;Вираз&gt; [NOT] BETWEEN &lt;Мінімальна величина&gt; AND &lt;Максимальна величина&gt;\r\n</p>\r\n<p>При виконанні даної операції у результуючий набір даних попадають ті записи, для яких значення виразу більше або дорівнює мінімальній величині а твкож менше або дорівнює максимальній величині значень.\r\n</p>\r\n<p>Складний запит відбору даних в мові SQL складаєть з:\r\n</p>\r\n<ol>\r\n	<li>Простих умов відбору.</li>\r\n	<li>Логічних операцій: AND, OR, NOT.</li>\r\n	<li>Круглих дужок.</li>\r\n</ol>\r\n<p>Зауваження: У мові SQL пріоритет операцій порівняння вищий за пріоритет логічних операцій. Для зміни порядку виконання операцій використовуються круглі дужки.\r\n</p>\r\n<p>Приклад запиту зі складним критерієм відбору:\r\n</p>\r\n<p>SELECT * FROM Cars WHERE (Price &gt; 5000) AND (Year BETWEEN «2000» AND «2005») ;\r\n</p>\r\n<p><img src="https://lh4.googleusercontent.com/tZ5b674JQYa-moFkCkv2rWaTCXxBwdy81xxn7eUYeT0e_hXnKjQcJ6of38GOJVhi0x-byNARPNjKvfh1f8UytxdJAstetLwMQi_btana5aR0iEAAMXMKgVeRk1jfcaF_U_aYRXs" alt="Оператор select">\r\n</p>\r\n<p>Тут проводиться відбір усіх записів таблиці Cars ціна яких є більшою за 5 тисяч і рік випуску яких є більшим або рівним 2000, а також меншим або рівним 2005. В даному логічному виразі прості умови вкладені в дужки, що є необов''язково, оскільки пріоритет операцій порівняння вищий за пріоритет логічних операцій.\r\n</p>Зазначимо, що операції BETWEEN та IN також реалізують логічні операції (BETWEEN — логчне «і», а IN - логічне «або»).');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(1171, 302, 1, 1, '<p>Доброго дня!\r\n</p>\r\n<p>Сьогодні ми продовжуємо працювати з нашою базою даних.\r\n</p>\r\n<p>Мета сьогоднішнього заняття є вивчити як видаляються дані в базі за допомогою запиту DELETE.\r\n</p>\r\n<p>Сьогодні на уроці будемо керуватись принципом “ломати не будувати” і вивчимо як видаляються дані з бази даних MySQL. Для чого взагалі дані видаляти? Зазвичай БД виникає необхідність видалити непотрібні дані щоб не перенавантажувати сервер, адже чим меньше даних знаходить в базі, тим бистріше працює система + для чого нам зайві дані у системі? Тому і видаляємо все лишнє що нам не потрібно.\r\n</p>\r\n<p>Щоб працювати із видаленням, нам необхідно мати таблицю із певною кількістю рядочкув. Нехай таблицю має наступний вигляд.\r\n</p>\r\n<p><img src="https://lh5.googleusercontent.com/zcK9H_4mhdExOqkwR-LXZ2pdvxMlvUpt0KJMspn6siOvYWciik33ZgT37sFTYVe74EBpF5L69f5wCZp2dx4qzdzuOwGg3MWxm_bVgLCHb9mWUI8qKgDwd90ef3yOhFVxCpZVwI187NmNJTbl">\r\n</p>\r\n<p>Запит створення та вставку даних ви знайдете у додатках.\r\n</p>\r\n<p>Загальна команда запиту на видалення даних з таблиці має наступну форму.\r\n</p>\r\n<p>DELETE FROM &lt; ім’я таблиці &gt; [WHERE &lt; умова &gt;];\r\n</p>\r\n<p>Якщо відсутня умова WHERE то будуть видалятись усі записи із таблиці. Також усі записи із таблиці можна виконати за допомогою ще одної команди, яка має наступний загальний вигляд.\r\n</p>\r\n<p>TRUNCATE TABLE &lt; ім’я таблиці &gt;\r\n</p>\r\n<p><br><br>\r\n</p>\r\n<p>Однак є ряд особливостей в реалізації команди TRUNCATE TABLE, які слід мати на увазі:\r\n</p>\r\n<ul>\r\n	<li>НЕ журналізірується видалення окремих рядків таблиці; в журнал записується тільки звільнення сторінок, які були зайняті даними таблиці;</li>\r\n	<li>НЕ відпрацьовують тригери, зокрема, тригер на видалення;</li>\r\n	<li>команда невиконається, якщо на дану таблицю є посилання по зовнішньому ключу, і навіть якщо зовнішній ключ має опцію каскадного видалення.</li>\r\n	<li>значення лічильника (IDENTITY) скидається в початкове значення.</li>\r\n</ul>\r\n<p>Отже, якщо нам необхідно видалити усі записи із нашої таблиці, тоді запит буде виглядати наступним чином.\r\n</p>\r\n<p> DELETE FROM telefone;\r\n</p>\r\n<p>Або\r\n</p>\r\n<p>TRUNCATE TABLE telefone;\r\n</p>\r\n<p>Такі запити виконуються досить рідко. Досить часто приходиться видаляти записи за певними ознаками. Наприклад, нам необхідно видалити записи де у колонці id_mereza значення стоїть 3. Тоді запит видалення буде мати наступний вигляд.\r\n</p>\r\n<p>DELETE FROM telefone WHERE id_mereza=3;\r\n</p>\r\n<p>Хід виконання запиту буде виглядати наступним чином.\r\n</p>\r\n<p><img src="https://lh5.googleusercontent.com/6JA-GYtI8-bOz6z5hEbDEZmKQrmFPPCXpZqy0XgoRQ_eCMsny-w3rTaFFdMVIl6Q5vQNley1AS5i-bSd_vn4lJwX54D7LYGriXkXk7meHl2YTEGMn_TTUgA0YfU5TeZiVBWxXi3tU8N--NW8">\r\n</p>\r\n<p>Результат запиту буде виглядати наступним чином.\r\n</p>\r\n<p><img src="https://lh4.googleusercontent.com/JsgqZmMIu1gKUjmF9iu6sdXFaWjc6Y-Fu0ox7Cvclh0hownbC170r2Z9vcp46B0v5FhsnBXw8JwgewSMMdPdyWqm27ZT89DIWOuBnboLVDf6BIgZB2DljhVZGTgKcD4-k-7zm8mrGVxl4ZR3">\r\n</p>\r\n<p>Тепер. Нам необхідно видалити всі записи, де в колонці значення id_t бельше 2 і меньше 8. Тоді необхідно використати кілька умов і задати їх в WHERE через AND томущо у нас є кілька умов.\r\n</p>\r\n<p>DELETE FROM telefone WHERE id_t&gt;2 AND id_t&lt;8;\r\n</p>\r\n<p><img src="https://lh5.googleusercontent.com/7MIo1F8tT0yVAb3cLoLWDPfAlapPFZRVvixIIOYlAxu9UZRR8ifBlaxZdyZrXS6lCg6b6_F_8NQsdB_RSOeCEnnUl0XOnNVE3RiavFleSx9sIoh3L_E1lZ2gZRJRxnE5RRVHGs71wLQiB5b_">\r\n</p>\r\n<p>Результат запиту матиме наступний вигляд.\r\n</p>\r\n<p><img src="https://lh4.googleusercontent.com/zuCfUQMSXq3zxGC2lVlaDOM2VW4ZdrYF_VtypC-zxlz2F0EYj86D9wWsAw0P8ONVyW6MBeq1F34loLRuTpAFeK_IckIVePheZAryyly33W2gzAfg59K1jWiW6wnZ6YtVKuh7eVhEh_JBFUrs">\r\n</p>\r\n<p>зробити запит із підзапитом до другої таблиці.\r\n</p>\r\n<p>Завдання для самостійного виконання.\r\n</p>\r\n<ol>\r\n	<li>Видалити усі запити із таблиці telefone двома способами.</li>\r\n	<li>За допомогою запиту із додатку додати нові записи.</li>\r\n	<li>Видалити записи в яких id_mereza=2 і переглянути результат запиту.</li>\r\n	<li>Видалити записи в яких 4&lt;id_user&gt;6 та переглянути результат запиту.</li>\r\n</ol>\r\n<p><br><br>\r\n</p>\r\n<p>Додатки.\r\n</p>\r\n<p>CREATE TABLE telefone(\r\n</p>\r\n<p>id_t INT AUTO_INCREMENT PRIMARY KEY,\r\n</p>\r\n<p>id_user INT DEFAULT NULL,\r\n</p>\r\n<p>nomer VARCHAR(15) DEFAULT NULL,\r\n</p>\r\n<p>id_mereza INT DEFAULT NULL\r\n</p>\r\n<p>);\r\n</p>\r\n<p>INSERT INTO telefone VALUES(NULL,''1'',''0974455667'',''1''),(NULL,''2'',''0934455007'',''2''),(NULL,''3'',''0500055667'',''3''),\r\n</p>\r\n<p>(NULL,''4'',''0994225667'',''1''),(NULL,''5'',''0934455007'',''2''),(NULL,''6'',''0500055667'',''3''),\r\n</p>(NULL,''7'',''0974455667'',''1''),(NULL,''8'',''0934455007'',''2''),(NULL,''9'',''0500055667'',''3'');'),
(1172, 259, 0, 2, 'https://www.youtube.com/watch?v=4dIHGXx1U0U'),
(1173, 107, 1, 1, '<p>Як випливає з матеріалу попередніх занять, дані в програмах С++ (як, зрештою, і інших мов програмування) містяться в змінних. Кожна змінна характеризується атрибутами “ім’я-тип-значення” (виняток - масиви, що містять декілька значень, але всі - одного типу). Ім’я і початкове значення розробник може встановлювати відносно довільно. Однак тип змінної вибирається зі стандартного переліку типів для <em>простих</em> змінних.</p><p>В багатьох реальних задачах інформація, що підлягає обробці, може мати більш складну структуру, аніж одне чи декілька чисел одного типу. Найпростіший приклад - задання комплексних чисел (складаються з дійсної і уявної частин). За допомогою стандартних типів їх можна представити як двовимірний масив типу double. Однак в такому разі кожне число буде розрізнятись лише за індексами масиву при одному й тому ж імені масиву, що досить незручно. Значно зручніше в цьому й інших подібних випадках - встановити свій власний тип даних. Змінні подібного типу, по-перше, будуть розрізнятися за іменами, а по-друге - поводитимуть себе як єдине ціле.</p>'),
(1174, 107, 2, 1, '<p><em>Перерахування (enumeration) - </em>найпростіший серед користувацьких типів.</p><p>Його основні атрибути:</p><ul><li>назва (синонім) <u>нового типу</u>;</li><li>назви (синоніми) <u>цілочисельних констант</u>, значення яких зазвичай <em>перераховуються</em> послідовно за зростанням (звідси й назва - <em>перерахування</em>).</li></ul>'),
(1175, 303, 1, 1, '<p>Для початку звернемося до наукових джерел і дізнаємось про терміни які нам будуть необхідні для вивчення курсу. Отже, в науковій літературі можна зустріти наступні твердження.</p>\n<p><strong>База даних</strong> - це впорядкований набір логічно взаємопов''язаних даних, що використовуються спільно та призначені для задоволення інформаційних потреб користувачів.</p>\n<p><strong>База даних</strong> - це систематизоване сховище інформації певної предметної галузі, до якого можуть мати доступ різні користувачі для вирішення своїх завдань.</p>\n<p>Робота бази даних забезпечується за допомогою системи керуванням бази даних.</p>\n<p><strong>Система керування базою даних</strong> - це комп''ютерна програма чи комплекс програм, що забезпечує користувачам можливість створення, збереження, оновлення, пошук інформації та контролю доступу в базах даних.</p>\n<p>Для початку, уявіть собі бібліотеку. Це є велика будівля в якій зберігаються книги. От дану сукупність книг можна назвати базою даних. Для даної бази даних є приміщення, шафи та полиці де зберігаються книги. Також є персонал який обслуговує дану бібліотеку, систематизує і роскладає по полицях усі книги. Персонал бібліотеки є своєрідною системою керування базою даних.</p>\n<p>За типами бази даних поділяють на ієрархічні, мережні і реляційні моделі.</p>\n<p><strong>Ієрархічна модель БД</strong>. (представляє собою структуру даних, які впорядковані за підля­ганням від загального до конкретного, нагадує «дерево», має складові: рівень, вузол, зв''язок. Модель працює за таким принципом: кілька вузлів нижчого рівня з''єднуються за допомогою зв''язку з одним вузлом вищого рівня. Прикладом можна відмітити родове дерево, де є посилання з одної особи/таблиці на іншу.</p>\n<p><strong>Мережна модель БД</strong>. Загальним виглядом на схожа на ієрархічну. Має такі самі складові структури. Між елементами структури зв''язок довільний обмежений кількістю елементів.</p><strong>Реляційна модель БД</strong> Модель побудована на взаємовідношеннях між складовими структури. Складається з таблиць взаємопов’язаних між собою.'),
(1176, 107, 3, 4, '<pre><p>Приклад описання типу BOOLEAN як перерахування</p><p>enum BOOLEAN {</p><p><span style="color: rgb(155, 187, 89);">// ключове слово enum - “перерахування”, BOOLEAN - синонім типу</span></p><p style="margin-left: 20px;">FALSE, // першій в переліку константі по замовчуванню присвоюється значення 0,</p><p style="margin-left: 20px;">TRUE // другій - 1 і т.д.</p><p>};</p>\r\n<p>enum BOOLEAN flag; <span style="color: rgb(155, 187, 89);">// оголошуємо змінну flag, яка може приймати значення констант FALSE  і TRUE (відповідно 0 або 1)</span></p><p>…</p><p>void f(enum BOOLEAN flag) { <span style="color: rgb(155, 187, 89);">// деяка тестова функція</span></p><p style="margin-left: 20px;"> if (flag==FALSE)</p><p style="margin-left: 40px;"> printf("flag==FALSE\\n");</p><p style="margin-left: 20px;"> else</p><p style="margin-left: 40px;"> printf("flag==TRUE\\n");</p><p>}</p><p>…</p><p>main() {</p><p style="margin-left: 20px;"> f(FALSE);</p><p style="margin-left: 20px;"> f(TRUE);</p><p>}</p></pre>'),
(1177, 303, 2, 1, '<p>Для початку звернемося до наукових джерел і дізнаємось про терміни які нам будуть необхідні для вивчення курсу. Отже, в науковій літературі можна зустріти наступні твердження.</p><p>База даних - це впорядкований набір логічно взаємопов''язаних даних, що використовуються спільно та призначені для задоволення інформаційних потреб користувачів.</p><p>База даних - це систематизоване сховище інформації певної предметної галузі, до якого можуть мати доступ різні користувачі для вирішення своїх завдань.</p><p>Робота бази даних забезпечується за допомогою системи керуванням бази даних.</p><p>Система керування базою даних - це комп''ютерна програма чи комплекс програм, що забезпечує користувачам можливість створення, збереження, оновлення, пошук інформації та контролю доступу в базах даних.</p><p>Для початку, представте собі бібліотеку. Це є велика будівля в якій зберігаються книги. От дану сукупність книг можна назвати базою даних. Для даної бази даних є приміщення, шафи та полиці де зберігаються книги. Також є персонал який обслуговує дану бібліотеку, систематизує і роскладає по полицях усі книги. Персонал бібліотеки є своєрідною системою керування базою даних.</p><p>За типами бази даних поділяють на ієрархічні, мережні і реляційні моделі.</p><p>Ієрархічна модель БД. (представляє собою структуру даних, які впорядковані за підля­ганням від загального до конкретного, нагадує «дерево», має складові: рівень, вузол, зв''язок. Модель працює за таким принципом: кілька вузлів нижчого рівня з''єднуються за допомогою зв''язку з одним вузлом вищого рівня. Прикладом можна відмітити родове дерево, де є посилання з одної особи/таблиці на іншу.</p><p>Мережна модель БД. Загальним виглядом на схожа на ієрархічну. Має такі самі складові структури. Між елементами структури зв''язок довільний обмежений кількістю елементів.</p>Реляційна модель БД Модель побудована на взаємовідношеннях між складовими структури. Складається з таблиць взаємопов’язаних між собою.'),
(1178, 107, 4, 1, '<p>При необхідності є можливість починати “нумерацію” синонімів з будь-якого числа.</p><p>Також допустимими є наступні опції:<br></p><ul><li>створення кількох синонімів для одного й того ж числа;</li><li>нехтувати деякими чисельними значеннями (щоб компілятор їх “обминув”).</li></ul>'),
(1179, 303, 3, 1, '<p>Сьогодні все більше і більше ми чуємо фразу “база даних”, Але не до кінця розуміємо всю суть цього слова. Для Вас, як майбутніх програмістів, варто спочатку зрозуміти що це таке і з чим його їдять.Бази даних можуть містити відомості про людей, товари, замовлення тощо. Багато баз даних починаються як список у текстовому редакторі або електронній таблиці. У разі збільшення розміру списку в даних починають з’являтися зайві або не відповідні елементи. Стає важко розуміти дані у формі списку, а способи пошуку та витягування наборів даних для перегляду є обмеженими. </p>'),
(1180, 107, 5, 4, '<pre><p>Приклад "старту" нумерації з числа 1</p><p>enum COLOR { <span style="color: rgb(155, 187, 89);">// тип COLOR - перелік констант різних кольорів</span></p><p> RED = 1, <span style="color: rgb(155, 187, 89);">// “Примусово” присвоюємо першій константі значення 1</span></p><p> GREEN,<span style="color: rgb(155, 187, 89);"> // наступні - нумеруються автоматично: GREEN == 2</span> </p><p> BLUE <span style="color: rgb(155, 187, 89);">// BLUE == 3 і т.д.</span></p>};</pre>'),
(1181, 107, 6, 4, '<pre><p>Приклад створення кількох однакових за номером синонімів і "пропуску" окремих номерів</p><p>enum PIXELCOLOR {  // тип кольорів окремих пікселів</p><p> black,  // по замовчуванню black == 0</p><p> background = 0,  // примусово встановлюємо в 0 ще одну константу</p><p> red, // далі працює “автоінкремент”: red == 1</p><p> green, // green == 2</p><p> blue = 4,  // значення 3 буде пропущено</p><p> white=7,  // пропускаються також значення 5 і 6, далі нумерація стартує з 7</p><p> yellow // yellow == 8</p><p>};</p></pre>'),
(1182, 304, 1, 1, '<p>1</p>'),
(1183, 304, 2, 1, '<p>2</p>'),
(1184, 304, 0, 2, 'https://www.youtube.com/watch?v=sepxmo4U53E'),
(1185, 304, 4, 1, '<p>Сьогодні все більше і більше ми чуємо фразу “база даних”, Але не до кінця розуміємо всю суть цього слова. Для Вас, як майбутніх програмістів, варто спочатку зрозуміти що це таке і з чим його їдять.Бази даних можуть містити відомості про людей, товари, замовлення тощо. Багато баз даних починаються як список у текстовому редакторі або електронній таблиці. У разі збільшення розміру списку в даних починають з’являтися зайві або не відповідні елементи. Стає важко розуміти дані у формі списку, а способи пошуку та витягування наборів даних для перегляду є обмеженими. <br></p>'),
(1186, 304, 5, 1, '<p>Для початку звернемося до наукових джерел і дізнаємось про терміни які нам будуть необхідні для вивчення курсу. Отже, в науковій літературі можна зустріти наступні твердження.</p>\n<p><strong>База даних</strong> - це впорядкований набір логічно взаємопов''язаних даних, що використовуються спільно та призначені для задоволення інформаційних потреб користувачів.</p>\n<p><strong>База даних</strong> - це систематизоване сховище інформації певної предметної галузі, до якого можуть мати доступ різні користувачі для вирішення своїх завдань.</p>\n<p>Робота бази даних забезпечується за допомогою системи керуванням бази даних.</p>\n<p>Сукупність програм, за допомогою яких можна керувати процесом нагромадження, зберігання та пошуку інформації у базах даних, називається системою управління базами даних. Між елементами бази даних існують певні зв’язки. Залежно від характеру цих зв’язків розрізняють три типи організації баз даних: ієрархічний, мережевий та реляційний. Для персональних ЕОМ використовують в основному реляційні бази даних. В основі таких баз даних лежить математичне поняття відношення (від англійського слова relatіon). Відношення найбільш природно представляються у вигляді двовимірних таблиць. Кожний рядок таблиці – це запис, а кожний стовпчик – це адреса поля записів. Запис містить дані про один інформаційний об’єкт бази даних, а кожне поле містить інформацію про якусь одну властивість усіх цих об’єктів. Наприклад, якщо база даних призначена для зберігання інформації про співробітників деякої організації, то один запис таблиці містить дані одного з них (прізвище, ім’я, посада, зарплата і т.і.) а в полі прізвище знаходяться прізвища усіх співробітників, в полі імен – імена співробітників тощо.</p>\n<p>Отже, <strong>Система керування базою даних</strong> - це комп''ютерна програма чи комплекс програм, що забезпечує користувачам можливість створення, збереження, оновлення, пошук інформації та контролю доступу в базах даних.</p>\n<p>Для початку, уявіть собі бібліотеку. Це є велика будівля в якій зберігаються книги. От дану сукупність книг можна назвати базою даних. Для даної бази даних є приміщення, шафи та полиці де зберігаються книги. Також є персонал який обслуговує дану бібліотеку, систематизує і роскладає по полицях усі книги. Персонал бібліотеки є своєрідною системою керування базою даних.</p>\n<p>За типами бази даних поділяють на ієрархічні, мережні і реляційні моделі.</p>\n<p><strong>Ієрархічна модель БД</strong>. (представляє собою структуру даних, які впорядковані за підля­ганням від загального до конкретного, нагадує «дерево», має складові: рівень, вузол, зв''язок. Модель працює за таким принципом: кілька вузлів нижчого рівня з''єднуються за допомогою зв''язку з одним вузлом вищого рівня. Прикладом можна відмітити родове дерево, де є посилання з одної особи/таблиці на іншу.</p>\n<p><strong>Мережна модель БД</strong>. Загальним виглядом на схожа на ієрархічну. Має такі самі складові структури. Між елементами структури зв''язок довільний обмежений кількістю елементів.</p>\n<p><strong>Реляційна модель БД</strong> Модель побудована на взаємовідношеннях між складовими структури. Складається з таблиць взаємопов’язаних між собою.<br></p>'),
(1187, 107, 7, 1, '<p><em>Структура - </em>тип даних користувача, що включає в себе декілька <u>полів</u> - елементів (змінних) <u>різних типів</u>.</p><p>За аналогією перерахування, потребує попереднього описання.</p>'),
(1188, 107, 8, 4, '<pre><p>Приклад описання деякої структури</p><p>struct Book { // оголошуємо структуру атрибутів книги</p><p style="margin-left: 20px;">char author[40];  // автор книги</p><p style="margin-left: 20px;">char title[80];  // назва книги</p><p style="margin-left: 20px;">int year;  // рік видання</p><p style="margin-left: 20px;">int pages;  // кількість сторінок</p><p>};</p><p>…</p><p>Book my_book;<span style="color: rgb(155, 187, 89);"> // оголошення змінної типу Book (з виділенням пам’яті відповідно до кількості і типів простих змінних у структурі)</span></p></pre>'),
(1189, 107, 9, 1, '<p>Оголошену змінну-структуру можна <em>ініціалізувати </em>(присвоїти її полям конкретні значення <em>через кому</em>) наступним чином:</p>'),
(1190, 107, 10, 3, '<p><span style="color: rgb(31, 73, 125);"><strong>Book my_book = {</strong></span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"><strong>“Василь Барка”, </strong></span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"><strong>“Рай”,  </strong></span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);"><strong>1953  </strong></span></p><p><span style="color: rgb(31, 73, 125);"><strong>};</strong></span></p>'),
(1191, 107, 11, 1, '<p><u>Важливо:</u></p><ul><li>поля ініціалізуються <u>послідовно в порядку описання;</u></li><li>неініціалізовані поля <strong>прирівнюються NULL</strong> і <u>не можуть використовуватися</u> в процесі роботи в даній конкретній структурі (<u>поки не будуть ініціалізовані</u>).</li></ul>'),
(1192, 107, 12, 1, '<p>Після оголошення та ініціалізації структури можна працювати як зі структурою в цілому, так і з її окремими полями.</p><p>Синтаксис звертання до конкретного поля має вигляд: </p><p><strong><span style="color: rgb(192, 80, 77);">{назва структури}.{назва поля}</span></strong> (<u>поле - звичайна проста змінна певного типу!</u>)</p>'),
(1193, 107, 13, 4, '<pre><p>Приклад роботи з окремими полями структури</p><p>struct Book { </p><p>... </p><p>};</p><p>…</p><p>Book my_book;</p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;">strcpy ( my_book.author, "Еріх Марія Ремарк" );</p><p style="margin-left: 20px;">my_book.year = 1940;</p><p>...</p><p>}</p></pre>'),
(1194, 304, 6, 1, '<p>Реляційна модель виявилась самою стійкою та оптимальною і пережила своїх двох попередниць. Тому надалі ми будемо говорити лише про реляційні моделі баз даних.</p><p>Назва «реляційна» (relational) пов''язана з тим, що кожен запис у таблиці даних містить інформацію, яка стосується (related) якогось конкретного об''єкта. Крім того, зв''язані між собою (тобто такі, що знаходяться в певних відношеннях — relations) дані навіть різних типів в моделі можуть розглядатися як одне ціле.</p><p>Таблиця має такі властивості:</p><ul><li>кожний елемент таблиці являє собою один елемент даних;</li><li>повторювані групи відсутні;</li><li>усі стовпці в таблиці однорідні; це означає, що елементи стовпця мають однакову природу;</li><li>стовпцям присвоєні унікальні імена;</li><li>у таблиці немає двох однакових рядків.</li></ul><p>Порядок розміщення рядків і стовпців у таблиці довільний; таблиця такого типу називається відношенням. У сучасній практиці для рядка використовується термін «запис», а для стовпця термін «поле».</p><p>Основною відмінністю пошуку даних в ієрархічних, мережних і реляційних базах даних є те, що ієрархічні і мережні моделі даних здійснюють зв''язок і пошук між різними об''єктами за структурою, а реляційні — за значенням ключових атрибутів (наприклад, можна знайти всі записи, значення яких у полі «номер будинку» дорівнює 3, але не можна знайти 3-й рядок).</p><p>Оскільки реляційна структура досить проста, вона дозволяє реалізовувати невеликі і прості (і тому легкі для створення) бази даних, навіть персональні, сама можливість реалізації яких ніколи навіть і не розглядалася в системах з ієрархічною чи мережною моделлю.</p><p>Недоліком реляційної моделі даних є надмірність по полях (для створення зв''язків між різними об''єктами бази даних).</p><p>Практично всі існуючі на сьогодні комерційні бази даних і програмні продукти для їх створення використовують реляційну модель даних.</p><p>Реляційна модель даних була запропонована співробітником IBM Едгаром Коддом у 1970 році та побудована на понятті відношення (relation). При створенні реляційної моделі висувалися такі завдання:</p><ul><li>Більш краще забезпечення незалежності від даних. Тобто, прикладні програми не повинні залежати від змін внутрішнього представлення даних, а саме: від зміни організації файлів; перевпорядкування записів та шляхів доступу.</li><li>Створення міцного фундаменту для вирішення семантичних питань, проблем несуперечливості та збитковості даних. Введення поняття нормалізації.</li><li>Розширення мов керування даними за рахунок включення операцій над множинами. </li></ul><p>Першим з розроблюваних корпорацією IBM у кінці 1970-х був проект «System R». Цей проект мав на меті отримати реальні докази практичного застосування реляційної моделі, шляхом реалізації передбаченою нею структур даних та операцій. Плодами проекту стали висунуті на загал важливі проблеми реалізації реляційної моделі, такі як: керування транзакціями, керування паралельною роботою, технологія відновлення, оптимізація запитів, забезпечення безпеки та цілісності даних, врахування людського фактору та розроблення користувацького інтерфейсу. Робота над проектом стала поштовхом над наступних важливих розробок:</p><ul><li>Створення мови структурованих запитів SQL (назва читається або по буквах «S-Q-L», або (рідше) за мнемонічним іменем «SeeQuel»). SQL отримала статус формального стандарту ISO та є фактично стандартом мови реляційних СКБД.</li><li>Створення різних комерційних реляційних СКБД, які вперше з’явилися на ринку в кінці 1970-х – на початку 1980-х років, таких як DB2 та SQL/DS корпорації IBM, а також Oracle корпорації Oracle Corporation. </li></ul><p>Реляційна модель побудована на математичному понятті «відношення», фізичним представленням якої є таблиця.</p><p>У реляційних базах даних зв’язування даних різних таблиць між собою реалізується не за допомогою явних вказівників (як у мережевій БД), а за допомогою значень атрибутів (стовпців). </p><p>Переваги: простота, зрозумілість для користувачів, зручність фізичної реалізації на персональному комп’ютерові. Недоліки: складний опис для ієрархічних та мережевих зв’язків. Приклади: MySQL, Firebird, InterBase, MS SQL Server, SQLite, DB2, Oracle, Informix, Paradox, FoxPro, MS Access.<br></p>'),
(1195, 107, 14, 1, '<p>Як бачимо, чим більше полів у структурі - тим більш громіздкою вона є з т.з. пам’яті, що виділяється. Кожна локальна копія такої структури - додаткові затрати пам’яті. Це спонукає до <em>застосування покажчиків</em> при роботі з окремими полями.</p><p>Щоб працювати зі структурою за допомогою покажчиків, <u>необхідно</u>:</p><p>а) оголосити структуру;</p><p>б) оголосити <em>змінну-покажчик</em> на структуру відповідного типу;</p><p>в) <u>присвоїти покажчику адресу потрібної структури.</u></p>Синтаксис звертання до конкретного поля <em>через покажчик </em>має вигляд: <strong><span style="color: rgb(192, 80, 77);">{покажчик на структуру}-&gt;{назва поля}</span></strong>'),
(1196, 107, 15, 4, '<pre><p>Приклад застосування покажчика на тип "структура"</p><p>struct Book {</p><p>... </p><p>};</p><p>...</p><p>main()</p><p>{</p><p style="margin-left: 20px;">Book my_book; </p><p style="margin-left: 20px;">Book* p;  <span style="color: rgb(155, 187, 89);">// покажчик на структуру</span></p><p style="margin-left: 20px;">p = &amp;my_book;  <span style="color: rgb(155, 187, 89);">// записати в покажчик адресу структури</span></p><p style="margin-left: 20px;">strcpy ( p-&gt;author, "Олександр Ковалевський" ); <span style="color: rgb(155, 187, 89);">// звертання до поля за адресою </span></p><p style="margin-left: 20px;">p-&gt;year = 2005;</p><p>...</p><p>}</p></pre>'),
(1197, 107, 16, 4, '<pre><p>Приклад введення даних з клавіатури і запис у файл (через покажчик на структуру)</p><p>struct Book { </p><p>... </p><p>};</p><p>...</p><p>main()</p><p>{</p><p style="margin-left: 20px;">Book my_book; </p><p style="margin-left: 20px;">Book* p;  </p><p style="margin-left: 20px;"><br></p><p style="margin-left: 20px;">p = &amp;my_book;</p>\r\n<p style="margin-left: 20px;">FILE* fp; <span style="color: rgb(155, 187, 89);">// дескриптор файлу</span></p>\r\n<p style="margin-left: 20px;">printf("Автор: ");</p><p style="margin-left: 20px;">gets(p-&gt;author);</p><p style="margin-left: 20px;">printf("Назва книги: ");</p><p style="margin-left: 20px;">gets(p-&gt;title);</p><p style="margin-left: 20px;">printf("Рік видання, кількість сторінок: ");</p><p style="margin-left: 20px;">scanf("%d%d", &amp;p-&gt;year, &amp;p-&gt;pages );</p><p style="margin-left: 20px;">fp = fopen("books.txt", "a"); <span style="color: rgb(155, 187, 89);">// відкрити файл в режимі дозапису в кінець</span></p><p style="margin-left: 20px;">fprintf(fp, "%s\\n%s\\n%d\\n%d\\n", p-&gt;author, p-&gt;title, p-&gt;year, p-&gt;pages );</p><p style="margin-left: 20px;"><span style="color: rgb(155, 187, 89);">// внести дані про введену книгу до файлу</span></p><p style="margin-left: 20px;"><span style="color: rgb(155, 187, 89);"></span>fclose (fp);  <span style="font-size: 16px; line-height: 1.6em; color: rgb(155, 187, 89); background-color: initial;">// закрити файл</span></p></pre>'),
(1198, 107, 17, 1, '<p><u>Важливо:</u> при введенні з клавіатури, виведенні на екран, записі і читанні з <em>текстового файлу</em> <u>з кожним полем структури потрібно працювати окремо!</u></p><p><u></u><u>Висновок:</u> структури доцільно записувати до <em>двійкових файлів</em> (за одну команду - читається і записується <u>вся структура і навіть декілька структур!</u>).</p>'),
(1199, 107, 18, 4, '<pre><p>Приклад читання і запису у двійковий файл</p><p>struct Book { </p><p>... </p><p>};</p><p>...</p><p>main()</p><p>{</p><p style="margin-left: 20px;">Book my_book; </p><p style="margin-left: 20px;">Book* p;  </p><p style="margin-left: 20px;">p = &amp;my_book;</p>\r\n<p style="margin-left: 20px;">FILE* fp;</p><p style="margin-left: 20px;">int n;</p><p style="margin-left: 20px;"><br></p>\r\n<p style="margin-left: 20px;">fp = fopen("books1.dat", "rb"); // відкрити двійковий файл в режимі читання</p><p style="margin-left: 20px;">n = fread (p, sizeof(my_book), 1, fp); // зчитуємо з файлу блок даних (кількість байт) величиною 1-ї структури за адресою p</p><p style="margin-left: 20px;">if ( n == 0 ) { // якщо нічого не зчиталося - помилка</p><p style="margin-left: 40px;">printf ( "File reading error!" );</p><p style="margin-left: 20px;">}</p><p style="margin-left: 20px;">fclose ( fp ); // закрити файл, з якого прочитали</p>\r\n<p style="margin-left: 20px;">fp = fopen("books2.dat ", "ab"); відкрити інший двійковий файл в режимі дозапису</p><p style="margin-left: 20px;">fwrite(p, sizeof(my_book), 1, fp); // записуємо в кінець файлу блок даних (кількість байт) величиною 1-ї структури</p><p style="margin-left: 20px;">fclose ( fp ); // закрити файл, в який записали</p><p>}</p></pre>'),
(1200, 107, 19, 1, '<p>В найпростішому випадку, здійснюється шляхом звичайного переприсвоювання значень відповідних полів однієї структури іншій.</p>'),
(1201, 107, 20, 4, '<pre><p>Приклад звичайного копіювання структур</p><p>struct Book { </p><p>... </p><p>};</p><p>...</p><p>main()</p><p>{</p><p style="margin-left: 20px;">Book b1, b2;</p><p style="margin-left: 20px;">Book *p1, *p2;</p><p style="margin-left: 20px;">p1 = &amp;b1;</p><p style="margin-left: 20px;">p2 = &amp;b2;</p><p>… <span style="color: rgb(155, 187, 89);">// заповнимо структуру b1</span></p><p style="margin-left: 20px;">strcpy ( p2-&gt;author, p1-&gt;author );  <span style="color: rgb(155, 187, 89);">// копіюємо</span></p><p style="margin-left: 20px;">strcpy ( p2-&gt;title, p1-&gt;title ); <span style="color: rgb(155, 187, 89);">// зі структури b1 в структуру b2</span></p><p style="margin-left: 20px;">p2-&gt;year = p1-&gt;year;<span style="color: rgb(155, 187, 89);"> // по черзі</span></p><p style="margin-left: 20px;">p2-&gt;pages = p1-&gt;pages; <span style="color: rgb(155, 187, 89);">// кожне поле</span></p><p>}</p></pre>'),
(1202, 107, 21, 1, '<p>Ще більш простий спосіб реалізації даної процедури - скопіювати структуру <strong><span style="color: rgb(192, 80, 77);">b1</span></strong> <em>повністю</em> за допомогою команди <span style="color: rgb(192, 80, 77);">memcpy()</span> (бібліотека <span style="color: rgb(192, 80, 77);">&lt;mem.h&gt;</span>):</p>\r\n<p><strong><span style="color: rgb(31, 73, 125);">memcpy(p2, p1, sizeof(b1));</span></strong> // скопіювати в адресу <span style="color: rgb(192, 80, 77);">р2</span> із адреси <span style="color: rgb(192, 80, 77);">р1</span> блок пам’яті розміром структури <span style="color: rgb(192, 80, 77);">b1</span></p>\r\n<p>але <u>в даному випадку найпростіше</u> - просто присвоїти одну структуру іншій:</p><strong><span style="color: rgb(31, 73, 125);">b2 = b1;</span> <span style="color: rgb(155, 187, 89);">// структура</span> <span style="color: rgb(192, 80, 77);">b1</span> <span style="color: rgb(155, 187, 89);">побітово копіюється до структури</span> <span style="color: rgb(192, 80, 77);">b2</span></strong>'),
(1203, 107, 22, 1, '<p>Як правило, структури створюються для зберігання значних обсягів даних. Тому замість поодиноких структур виникає доцільність використання <em>масивів структур.</em></p>'),
(1204, 107, 23, 4, '<pre><p>struct Book {</p><p>... </p><p>};</p><p>...</p><p>main()</p><p>{</p><p style="margin-left: 20px;">Book A[20]; <span style="color: rgb(155, 187, 89);">// оголошуємо масив А з 20 структур типу Book</span></p><p>…</p><p style="margin-left: 20px;">A[12].pages = 50; <span style="color: rgb(155, 187, 89);">// присвоюємо значення конкретному полю 12-ї структури</span></p><p style="margin-left: 20px;">for ( int i = 0; i &lt; 20; i ++ ) </p><p style="margin-left: 40px;">puts(A[i].title);<span style="color: rgb(155, 187, 89);"> // виводимо назви книжок з кожної структури</span></p><p>}</p></pre>'),
(1205, 107, 24, 1, '<p>А в двійкових файлах - читання і запис масиву структур здійснюється <u>в один рядок</u>.</p>');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(1206, 107, 25, 4, '<pre><p>Приклад читання і запису масиву структур у двійковий файл</p><p>#include &lt;stdio.h&gt;</p>\r\n<p>struct Book {  </p><p style="margin-left: 20px;">char author[40];</p><p style="margin-left: 20px;">char title[80];</p><p style="margin-left: 20px;">int year;</p><p style="margin-left: 20px;">int pages;</p><p>};</p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;">Book b[100];  // оголошуємо масив структур</p><p style="margin-left: 20px;">int i, n;</p><p style="margin-left: 20px;">FILE* fp;  // дескриптор файлу</p><p style="margin-left: 20px;"><br></p>\r\n<p style="margin-left: 20px;">fp = fopen("books.dat", "rb"); // відкрити файл в режимі читання</p><p style="margin-left: 20px;">n = fread(&amp;b[0], sizeof(Book), 100, fp); // читаємо з файлу 100 блоків розміром однієї структури, і записуємо в пам’ять, починаючи з адреси b[0]</p><p style="margin-left: 20px;">fclose (fp); // закриваємо файл</p><p style="margin-left: 20px;">for (i = 0; i &lt; n; i ++)  // в кожній з прочитаних n структур</p><p style="margin-left: 40px;">b[i].year = 2009;  // змінюємо поле “рік видання”</p><p style="margin-left: 20px;">fp = fopen("books.dat", "wb"); // відкрити файл в режимі запису</p><p style="margin-left: 20px;">fwrite (b, sizeof(Book), n, fp); // перезаписуємо зміст файлу зміненими структурами в кількості n</p><p style="margin-left: 20px;">fclose (fp); // закриваємо файл</p><p>}</p></pre>'),
(1207, 107, 26, 1, '<p>При використанні масивів структур маємо проблему, характерну для звичайних масивів - <u>невідома наперед кількість структур.</u> Вихід - <em>динамічне виділення пам’яті.</em></p>'),
(1208, 107, 27, 4, '<pre><p>Приклад використання динамічного масиву структур</p><p>#include &lt;stdio.h&gt;</p>\r\n<p>struct Book {  </p><p>...</p><p>};</p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;"> Book* B;  // оголошуємо покажчик на майбутній динамічний масив</p><p style="margin-left: 20px;">int n;</p><p style="margin-left: 20px;">printf("Input books number: ");</p><p style="margin-left: 20px;">scanf ( "%d", &amp;n );  // задаємо розмір масиву</p><p style="margin-left: 20px;">B = new Book[n];  // виділяємо потрібний обсяг пам’яті</p><p>… // працюємо з масивом</p><p style="margin-left: 20px;"> delete B;</p><p>}</p></pre>'),
(1209, 310, 1, 4, '<pre>кнн</pre>'),
(1210, 310, 2, 1, 'чртрп'),
(1211, 254, 3, 1, '<p>На попередньому занятті ми розглянулі більш загальні поніття які стосуються бази даних. Сьогодні ж розглянемо більш конкретні поняття і уже з більшою кількістю прикладів. Отже почнемо.\r\n</p>\r\n<p>Відношення – це двовимірна (плоска) таблиця, що складається зі стовпців та стрічок. Атрибут – це поіменований стовпець відношення (таблиці). Кортеж – це стрічка відношення (таблиці).\r\n</p>\r\n<p>Домен – це набір допустимих значень одного чи декількох атрибутів (стовпців). Кожен домен утворює значення одного типу даних, наприклад, числового чи символьного.\r\n</p>\r\n<p><img src="https://lh6.googleusercontent.com/EHk2ph39P7NiIyK1XEmXSSvW_l9oPpwcqQEEzl8-P7jDrxdH5RuKxQq_k_ilhjAD4ABQTM7KA07jSUy_l5B-QSmdwnrEMWo7T4qMScgpXy1xQoV0zY2iqpCW64FAi5pEbUr5ooDp">\r\n</p>\r\n<p>Як бачимо з рисунку, домен визначає для атрибута (стовпця) його тип даних (цілочисельний, стрічковий, дата, число з плаваючою комою, логічний, бінарний тощо), розмір (для стрічкових та бінарних) та перелік допустимих значень (на основі обмежень).\r\n</p>\r\n<p>Заголовок відношення – опис структури відношення (таблиці) разом зі специфікацією доменів та будь-якими іншими обмеженнями можливих значень атрибутів (стовпців). Заголовок складається з імені відношення (таблиці) та імен стовпців, які входять у цю таблицю.\r\n</p>\r\n<p>Тіло відношення складається з набору стрічок таблиці.\r\n</p>\r\n<p>Степінь відношення (таблиці) визначається кількістю атрибутів (стовпців), які він містить. Відношення тільки з одним атрибутом має степінь 1 та називається унарним відношенням. Відношення з двома атрибутами називається бінарним, відношення з трьома атрибутами – тернарним, а для відношення з більшою кількістю атрибутів використовується термін n-арне. Визначення степені відношення є частиною заголовку відношення.\r\n</p>\r\n<p>Кардинальність – це кількість кортежів (стрічок), що міститься у відношенні (таблиці) та є властивістю тіла відношення, і визначається поточним станом відношення у довільно взятий момент.\r\n</p>\r\n<p>Реляційна база даних – це набір нормалізованих відношень, які розрізняються за іменами.\r\n</p>\r\n<p>Реляційні ключі дають можливість унікальної ідентифікації кожного окремо кортежу (стрічки) відношення (таблиці) за значеннями одного чи декількох атрибутів (стовпців). У реляційній БД може існувати декілька видів ключів:\r\n</p>\r\n<p>1. Потенційні (Candidate Key):\r\n</p>\r\n<p>а) Первинні (Primary Key);\r\n</p>\r\n<p>б) Альтернативні (Alternate Key) або Вторинні (Secondary Key), або Унікальні (Unique Key).\r\n</p>2. Зовнішні (Foreign Key).'),
(1212, 254, 4, 1, '<p>Таблична форма подання відношення була введена з метою популяризації моделі серед непідготовлених користувачів БД. Трактування реляційної теорії на рівні таблиць приховують ряд визначень, важливих для розуміння як теорії реляційних БД, так і мови маніпулювання даними.\r\n</p>\r\n<p>По-перше, атрибути різних відношень можуть бути визначені на одному домені так само, як і атрибути одного відношення. Це дуже важлива обставина, що дозволяє встановлювати зв''язки за значенням між відношеннями. По-друге, множина математично за своїм визначенням не може мати елементи, що збігаються, і, отже, кортежі у відношенні можна розрізнити лише за значенням їх компонентів. Це теж є дуже важливим для моделі: ніякі два кортежі не можуть мати компонентів, що повністю збігаються. Таким чином, у реляційній моделі повністю виключається дублювання даних про сутності реального світу . По-третє, відзначимо, що схема відношення також є множиною, що дозволяє працювати з ними за допомогою теоретико-множинних операцій. Це є важливим моментом для побудови теорії проектування реляційних схем БД. Існує певна розбіжність між математичним визначенням відношення й дійсно збереженим відношенням у пам''яті комп''ютера. За визначенням, відношення не може мати два ідентичних кортежі. Однак СКБД, що підтримують реляційну модель даних, зберігають відношення у файлах операційної системи комп''ютера. Розміщення відношень у файлах операційної системи допускає зберігання ідентичних кортежів. Якщо не використовується спеціальна техніка (контроль цілісності щодо первинного ключа), то звичайно більшість промислових СКБД допускають зберігання двох ідентичних кортежів у БД. Ключем або ключовим полем називається унікальне значення, що дозволяє так чи інакше ідентифікувати сутність або частину сутності ПО, тобто ключ - це значення деякого атрибута або атрибутів у кортежі відношення, що представляє екземпляр сутності у реляційній моделі даних. Прийнято розрізняти первинні ключі й часткові ключі. Математично первинним ключем відношення є підмножина звуження декартового добутку, що дозволяє однозначно ідентифікувати кортеж. Якщо первинний ключ містить кілька атрибутів, то він називається складеним ключем, у протилежному разі – атомарним. Частковим ключем називається атрибут складеного ключа, якщо він однозначно визначає сукупність неключових атрибутів відношення. Атрибут кортежу, що є первинним ключем іншого відношення, називається зовнішнім (іноді стороннім) ключем. З визначення відношення випливає така важлива властивість реляційної моделі даних: кожне відношення повинне мати первинний ключ. Зазначимо, що ключ у контексті моделі ПО БД завжди відображає той або інший ступінь зв''язку між атрибутами сутностей ПО, тобто семантично ключ є засобом моделювання зв''язків у моделі. Приклад: розглянемо речення "Громадянин Іванов проживав у місті Москві 10 років". Можливими атрибутами у відношенні Місце_проживання є прізвище громадянина, назва міста проживання й час проживання. Прізвище громадянина може виступати як первинний ключ цього відношення, тому що особистість однозначно визначає час її проживання в конкретному місті. Таким чином, щодо цього моделюється зв''язок "проживав" між атрибутами "прізвище" й "місто". Відношення у реляційній моделі даних, як правило, представляються за допомогою функціональної форми запису (тому що ми записуємо функції декількох змінних у математичному аналізі), при цьому атрибути первинного ключа підкреслюються: ІМ''Я_ВІДНОШЕННЯ (Атрибути первинного ключа, неключові атрибути). Приклад. Подання зв''язку відношенням. Представимо зв''язок між особистістю й місцем її проживання через відношення ПРОЖИВАЄ (Кл. особистість, Кл. населений_пункт, час) Опис особистості: ОСОБИСТІСТЬ (Кл. особистість, ПІП/б, вік, стать) Опис населеного пункту: НАСЕЛЕНИЙ_ПУНКТ (Кл.населений_пункт, географія, населення) Однак найбільшого поширення набуло подання відношень у вигляді графічних діаграм, наприклад ERдіаграм, про які ми говорили раніш. Перевагами такого подання є наочність діаграм і можливість їх побудови у ряді CASE-засобів проектування БД.\r\n</p>\r\n<p>У підсумку сформулюємо основні властивості реляційної моделі даних, які випливають із поняття відношення як множини:\r\n</p>\r\n<ul>\r\n	<li>усі кортежі одного відношення повинні мати ту саму кількість атрибутів; </li>\r\n	<li>значення кожного з атрибутів повинне належати деякому певному домену; </li>\r\n	<li>кожне відношення повинне мати первинний ключ; </li>\r\n	<li>ніякі два кортежі не можуть мати наборів значень, що повнісю збігаються; </li>\r\n	<li>кожне значення атрибутів повинне бути атомарним, тобто не повинне мати внутрішньої структури й містити як компонент інше відношення; </li>\r\n	<li>реляційна модель даних повинна бути несуперечливою, зокрема, повинні виконуватися: 1) принцип посилальної цілісності - зв''язки між відношеннями повинні бути замкнутими; 2) значення колонок повинні належати тому самому визначеному для них домену;</li>\r\n	<li>порядок проходження кортежів у відношенні не має значення. Порядок є здебільшого властивістю зберігання даних, ніж властивістю безпосередньо самої реляційної моделі даних. </li>\r\n</ul>'),
(1213, 254, 5, 1, '<p>На стадії логічного проектування реляційної БД розробник визначає й вибудовує схеми відношення у рамках деякої ПО, а саме - представляє сутності, групує їх атрибути, виявляє основні зв''язки між сутностями. Так, у найзагальнішому змісті проектування реляційної БД полягає в обґрунтованому виборі конкретних схем відношення з безлічі різних альтернативних варіантів схем.На практиці побудова логічної моделі БД незалежно від моделі даних виконується з урахуванням двох основних вимог: виключити надмірність і максимально підвищити надійність даних. Ці вимоги випливають з вимоги колективного використання даних групою користувачів. Тому будь-яке апріорне знання про обмеження ПО, що накладають на взаємозв''язки між даними й значення даних, і знання про їх властивості і взаємини між ними може зіграти певну роль у дотриманні зазначених вище вимог. Формалізація таких апріорних знань про властивості даних ПО БД знайшла своє відображення у концепції функціональної залежності даних, тобто обмежень на можливі взаємозв''язки між даними, які можуть бути поточними значеннями схеми відношень. Кортежі відношення можуть представляти екземпляри сутності ПО або фіксувати їх взаємозв''язок. Але навіть якщо ці кортежі відповідають схемі відношень й обрані з припустимих доменів, не всякий з них може бути поточним значенням деякого відношення. Наприклад, вік людини рідко буває більше 120 років, або той самий пілот не може одночасно виконувати два різних рейси. Такі обмеження семантики домену практично не впливають на вибір тієї або іншої схеми відношень. Вони являють собою обмеження на типи даних. Оскільки функціональну залежність можна задати у вигляді таблиці, а таблиця є формою подання відношень, то стає очевидним зв''язок між функціональною залежністю і відношенням. Відношення може задавати функціональну залежність. Це твердження є першою конструктивною ідеєю, яка покладена в основу теорії проектування реляційних БД.\r\n</p>'),
(1214, 214, 2, 1, '<p>Основна проблема проектування ефективної реляційної бази даних полягає у мінімізації надлишковості, і як її наслідку, уникнення проблем, пов’язаних з аномаліями обновлення.\r\n</p>\r\n<p>1. Відсутність надлишковості. У системі є присутня надлишковість, якщо одні і ті ж дані знаходяться у декількох місцях. При цьому не тільки нераціонально використовується місце у пам’яті, але й можуть виникати неузгодженості та неоднозначності даних. Наприклад, у наведеній вище таблиці повторюються назви кафедр з місцями їх розташування.\r\n</p>\r\n<p>2. Розрізняють три види аномалій обновлення: а) Аномалії вставки. При вставці відомостей про нових співробітників у таблицю необхідно також вказувати інформацію про кафедру, де вони працюють. Аномалія вставки полягає у тому, що інформація про розташування кафедри повинна співпадати зі значеннями інших відповідних стрічок таблиці.\r\n</p>\r\n<p>При вставці відомостей про нову кафедру, яка ще не має власних співробітників, необхідно присвоїти NULL-значення усім стовпцям опису персоналу нашої таблиці, включаючи і порядковий номер співробітника ID. Це теж є аномалією вставки, оскільки порядковий номер не може містити NULL-значення. б) Аномалії видалення полягають у тому, що якщо з таблиці видаляють стрічку з інформацією про останнього співробітника деякої кафедри, то повністю видаляється з БД інформація і про цю кафедру. Наприклад, при видаленні з таблиці стрічки про асистента Будза, також неявно будуть видалені усі відомості про кафедру Захисту інформації. в) Аномалії модифікації. При спробі змінити значення поля одного зі стовпців таблиці для деякої кафедри (наприклад, кафедра КСА переїхала на 9 поверх 5 корпусу), необхідно також обновити відповідні значення у стрічках усіх співробітників цієї кафедри. Якщо цієї модифікації зазнають не усі стрічки, тоді БД буде містити суперечливі дані. <img src="https://lh3.googleusercontent.com/QvaLMnYpCtNMfj5_DEYOUpnqNxUezMsS6fQrtgrmPn3Vd5IvOLwnjwhWjFUjqKbcyA8ip9kuCrZSUnaR2oU2i2wAa47ap8dhReV30wdddihc1waJiQVaoE5Ltbz9eVNQK5Hu4To">\r\n</p>'),
(1215, 259, 0, 2, 'https://www.youtube.com/watch?v=Ax-lDp26n8Y'),
(1216, 310, 3, 7, '<p>fg,ghn,gc</p>'),
(1219, 108, 1, 1, '<p><em>Структура</em> як найбільш універсальний тип користувача є досить зручним засобом зберігання даних програми. Особливо - у випадках, коли кожен елемент даних характеризується, наприклад, кількома атрибутами (змінними простих типів). Та іноді виникає необхідність зберігання цілого ряду (часом - навіть великої кількості) елементів, що відповідають одній і тій же структурі. В такому разі постає проблема оптимального виділення пам’яті. І такий засіб, як динамічний масив, вже не є зручним. Причина - в ньому потрібно наперед задавати розмір. А в багатьох випадках і кількість елементів, і навіть їх структура можуть змінюватися в ході виконання програми. Вихід із ситуації - застосовувати динамічний розподіл пам’яті шляхом комбінації елементів-структур. В таких елементах обов’язковим атрибутом буде покажчик на сусідній аналогічний елемент (елементи).</p>'),
(1220, 108, 2, 1, '<p><u>Постановка задачі:</u> проаналізувати деякий текст, виділити в ньому всі слова і підрахувати їх кількість, слова розмістити за алфавітом.</p><p><u>Необхідно отримати</u>: алфавітний список слів з кількістю їх повторень в тексті.</p><p>Дані про кожне слово будемо тримати в наступній структурі:</p>'),
(1221, 108, 3, 3, '<p><span style="color: rgb(31, 73, 125);">struct Node {</span> <span style="color: rgb(155, 187, 89);">// Node - “вузол” (англ.)</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);">char word[40];</span> <span style="color: rgb(155, 187, 89);">// знайдене слово</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);">int count; </span><span style="color: rgb(155, 187, 89);">// кількість повторень в тексті</span></p><p style="margin-left: 20px;"><span style="color: rgb(31, 73, 125);">Node* next;</span>  <span style="color: rgb(155, 187, 89);">// покажчик на наступний вузол (інше слово)</span></p><span style="color: rgb(31, 73, 125);">};</span>'),
(1222, 108, 4, 1, '<p>Послідовність такого типу структур носить назву<strong> </strong><em><strong>однозв’язний список</strong></em><strong> </strong>(кожен вузол містить покажчик <u>лише на наступний подібний вузол</u>).</p>\r\n<p>Перед початком пошуку встановимо:</p><ol><li>синонім покажчика на кожен вузол: <strong><span style="color: rgb(31, 73, 125);">typedef Node* PNode;</span></strong></li><li>покажчик на перший вузол (<span style="color: rgb(192, 80, 77);"><strong>Head</strong></span>) встановимо в <strong><span style="color: rgb(192, 80, 77);">NULL</span></strong>: <strong><span style="color: rgb(31, 73, 125);">PNode Head = NULL;</span></strong> (оскільки жодного слова ще не знайдено).</li></ol>\r\n<p>Після запуску процесу пошуку і по мірі знаходження нових слів будемо виконувати наступні дії:</p><ul><li>створення нового вузла;</li><li>додавання нового вузла в загальний список;</li><li>видалення вузла зі списку.</li></ul>'),
(1223, 108, 5, 1, '<p>В контексті поставленої задачі, цей крок передбачає створення нової структури-вузла. Вузол має містити дані про нове слово.</p>'),
(1224, 108, 6, 4, '<pre><p>Приклад функції створення нового вузла однозв''язного списку</p><p>PNode CreateNode ( char NewWord[] ) // у функцію з основної програми передається </p><p>{ // знайдене слово</p><p style="margin-left: 20px;">PNode NewNode = new Node; // покажчик на нову структуру (дані про слово)</p><p style="margin-left: 20px;">strcpy(NewNode-&gt;word, NewWord); // записати в структуру знайдене слово</p><p style="margin-left: 20px;">NewNode-&gt;count = 1;  // ініціалізація лічильника повторень слова в тексті</p><p style="margin-left: 20px;">NewNode-&gt;next = NULL; // для самої першої структури - наступного вузла ще немає</p><p style="margin-left: 20px;">return NewNode;  // повертаємо адресу створеного вузла</p><p>}</p></pre>'),
(1225, 108, 7, 1, '<p>Реалізація даного кроку передбачає наступні дії:</p><p>1) встановити посилання в новому вузлі на вузол <strong><span style="color: rgb(192, 80, 77);">Head</span></strong>;</p>2) присвоїти покажчику <strong><span style="color: rgb(192, 80, 77);">Head</span></strong> адресу доданого вузла.'),
(1226, 108, 8, 4, '<pre><p>Приклад процедури вставки нового вузла в початок списку</p><p>void AddFirst (PNode &amp;Head, PNode NewNode) // процедура додавання на початок списку</p><p>{ // покажчик &amp;Head передається за посиланням (&amp;), оскільки він зміниться в процедурі</p><p style="margin-left: 20px;">NewNode-&gt;next = Head; // для всталеного вузла наступний буде той, що перед цим був Head</p><p style="margin-left: 20px;">Head = NewNode; // покажчик Head тепер вказує на новий вузол</p><p>}</p></pre>'),
(1227, 108, 9, 1, '<p>Нехай відомо, що новий вузол потрібно вставити в список<u> після існуючого вузла з адресою </u><u><strong><span style="color: rgb(192, 80, 77);">p</span></strong></u><u>.</u> Для цього необхідно:</p><p>1) встановити посилання в новому вузлі на вузол, який слідує за заданим;</p><p>2) встановити посилання заданого вузла на новий вузол <strong><span style="color: rgb(192, 80, 77);">NewNode</span></strong>.</p>'),
(1228, 108, 10, 4, '<pre><p>Приклад процедури вставки вузла після заданого</p><p>void AddAfter (PNode p, PNode NewNode)</p><p>{<span style="color: rgb(155, 187, 89);">// в процедуру передаємо адресу заданого вузла p і адресу нового вузла NewNode</span></p><p style="margin-left: 20px;">NewNode-&gt;next = p-&gt;next; <span style="color: rgb(155, 187, 89);">// встановлюємо посилання в новому вузлі на вузол, що слідує за ним</span></p><p style="margin-left: 20px;">p-&gt;next = NewNode;<span style="color: rgb(155, 187, 89);"> // встановлюємо посилання в заданому вузлі на новий вузол</span></p><p>}</p></pre>'),
(1229, 108, 11, 1, '<p>Дана задача зводиться до розв’язання однієї з двох попередніх (вставка вузла в початок списку або після заданого). Спочатку здійснюється проходження списку з самого початку до знаходження заданого вузла<strong><span style="color: rgb(192, 80, 77);"> p</span></strong>. Потім з’ясовується - заданий вузол <strong><span style="color: rgb(192, 80, 77);">p</span></strong> перший в списку чи ні.</p>'),
(1230, 108, 12, 4, '<pre><p>Приклад процедури вставки вузла перед заданим</p><p>void AddBefore(PNode &amp;Head, PNode p, PNode NewNode)</p><p>{</p><p style="margin-left: 20px;">PNode q = Head; // вводимо допоміжну адресу із значенням Head </p><p style="margin-left: 20px;">if (Head == p) {  // якщо заданий вузол - перший у списку, </p><p style="margin-left: 40px;">AddFirst(Head, NewNode); // реалізуємо відповідну процедуру</p><p style="margin-left: 40px;">return;</p><p style="margin-left: 20px;">} // в протилежному випадку -</p><p style="margin-left: 20px;">while (q &amp;&amp; q-&gt;next!=p) // поки не пройшли весь список (q!=NULL) - шукаємо вузол, який стоїть перед заданим (щоб q-&gt;next==p)</p><p style="margin-left: 40px;">q = q-&gt;next;  // рухаємося по списку - переприсвоюємо q адресу наступного вузла</p><p style="margin-left: 20px;">if ( q ) // умова виконується, якщо вузол із заданою адресою p існує, інакше після проходження всього списку q==NULL</p><p style="margin-left: 40px;">AddAfter(q, NewNode); // виконуємо процедуру вставки нового вузла після вузла, що стоїть перед заданим</p><p>}</p></pre>'),
(1231, 108, 13, 1, '<p>Передбачає наступні дії:</p><ol><li>вставити новий вузол <u>після</u> заданого;</li><li>здійснити обмін даними між вузлами за допомогою “транзитних” змінних.</li></ol><p>(допустимо, якщо адреса нового вузла <strong><span style="color: rgb(192, 80, 77);">NewNode</span></strong> не використовується в основній програмі)</p>'),
(1232, 108, 14, 1, '<p>Дана дія реалізується шляхом пошуку останнього вузла (в якому <strong><span style="color: rgb(192, 80, 77);">q-&gt;next==NULL</span></strong>). Після цього виконується процедура вставки після заданого (останнього) вузла.</p>'),
(1233, 108, 15, 4, '<pre><p>Приклад процедури додавання вузла в кінець списку</p><p>void AddLast(PNode &amp;Head, PNode NewNode)</p><p>{</p><p style="margin-left: 20px;">PNode q = Head;</p><p style="margin-left: 20px;">if (Head == NULL) { // варіант, коли список пустий (новий елемент буде першим)</p><p style="margin-left: 40px;">AddFirst(Head, NewNode); // вставляємо перший елемент</p><p style="margin-left: 40px;">return;</p><p style="margin-left: 20px;">}</p><p style="margin-left: 20px;">while (q-&gt;next) q = q-&gt;next; // інакше - шукаємо останній елемент (коли q-&gt;next==NULL)</p><p style="margin-left: 20px;">AddAfter(q, NewNode); // вставляємо новий елемент після останнього </p><p>}</p></pre>'),
(1234, 108, 16, 1, '<p>Тепер, знаючи, як реалізовуються основні дії з елементами однозв’язного списку, можемо запрограмувати загальний алгоритм поставленої задачі побудови алфавітно-частотного словника.</p>'),
(1235, 108, 17, 4, '<pre><p>Приклад реалізації побудови алфавітно-частотного словника</p><p>// описання структури вузла</p><p>struct Node { </p><p>... </p><p>};</p><p>typedef Node* PNode; // встановлення синоніму до покажчика на вузол</p><p>// створення нового вузла для нового слова NewWord[]</p><p>PNode CreateNode ( char NewWord[] ) </p><p>{ </p><p> ...</p><p>}</p><p>// додавання вузла в початок списку</p><p>void AddFirst (PNode &amp;Head, PNode NewNode) </p><p>{ </p><p>...</p><p>}</p><p>// додавання вузла після деякого заданого р</p><p>void AddAfter (PNode p, PNode NewNode)</p><p>{</p><p> ...</p><p>}</p><p>// додавання вузла перед деяким заданим р</p><p>void AddBefore(PNode &amp;Head, PNode p, PNode NewNode)</p><p>{</p><p>...</p><p>}</p><p>// додавання вузла в кінець списку</p><p>void AddLast(PNode &amp;Head, PNode NewNode)</p><p>{</p><p>...</p><p>}</p><p>// пошук слова NewWord[] в списку</p><p>PNode Find (PNode Head, char NewWord[])</p><p>{</p><p style="margin-left: 20px;">PNode q = Head; // починаємо обхід списку спочатку (Head)</p><p style="margin-left: 20px;">while (q &amp;&amp; strcmp(q-&gt;word, NewWord)) // шукаємо, поки не знайдемо (q-&gt;word == NewWord) або не досягнемо кінця списку (q == NULL)</p><p style="margin-left: 40px;">q = q-&gt;next; // переходимо до наступного вузла</p><p style="margin-left: 20px;">return q; // повертається адреса знайденого слова або NULL</p><p>}</p><p>// пошук місця вставки нового слова</p><p>PNode FindPlace (PNode Head, char NewWord[])</p><p>{</p><p style="margin-left: 20px;">PNode q = Head; // починаємо обхід списку спочатку (Head)</p><p style="margin-left: 20px;">while (q &amp;&amp; (strcmp(q-&gt;word, NewWord) &gt; 0)) // шукаємо, поки зберігається “алфавітна перевага” інших слів (q-&gt;word - NewWord &gt; 0) або не досягнемо кінця списку (q == NULL)</p><p style="margin-left: 40px;">q = q-&gt;next; // переходимо до наступного вузла</p><p style="margin-left: 20px;">return q; // повертається адреса слова, перед яким потрібно вставити новий вузол, або NULL (вузол з новим словом вставляється в кінець)</p><p>}</p>\r\n<p>main()</p><p>{</p><p style="margin-left: 20px;">PNode Head = NULL;</p><p style="margin-left: 20px;">PNode p, where; // допоміжні покажчики</p><p style="margin-left: 20px;">FILE *in, *out; // дескриптори файлів для читання і запису слів</p><p style="margin-left: 20px;">char word[80];</p><p style="margin-left: 20px;">int n;</p><p style="margin-left: 20px;"><br></p>\r\n<p style="margin-left: 20px;">in = fopen ( "input.dat", "r" ); // відкрити файл для читання слів</p><p style="margin-left: 20px;">while ( 1 ) { // умова виходу з циклу - в його тілі</p><p style="margin-left: 40px;">n = fscanf ( in, "%s", word ); // читаємо чергове слово word з файлу (до найближчого пробілу)</p><p style="margin-left: 40px;">if ( n &lt;= 0 ) break; // якщо всі слова прочитані - вихід з циклу</p><p style="margin-left: 40px;">p = Find ( Head, word );  // шукаємо слово в списку</p><p style="margin-left: 40px;">if ( p != NULL )  // якщо слово в списку присутнє -</p><p style="margin-left: 60px;">p-&gt;count ++;  // збільшити його лічильник повторення</p><p style="margin-left: 40px;">else {  // якщо слово в списку відсутнє -</p><p style="margin-left: 60px;">p = CreateNode ( word ); // створюємо новий вузол</p><p style="margin-left: 60px;">where = FindPlace ( Head, word ); // шукаємо місце для вставки нового вузла в список</p><p style="margin-left: 60px;">if ( ! where )  // якщо список весь пройдений (where == NULL)</p><p style="margin-left: 80px;">AddLast ( Head, p ); // додаємо в кінець списку</p><p style="margin-left: 60px;">else AddBefore ( Head, where, p ); // інакше - вставляємо перед вузлом з адресою where</p><p style="margin-left: 60px;">}</p><p style="margin-left: 20px;">}</p><p style="margin-left: 20px;">fclose(in);  // закриваємо файл, з якого читали слова</p><p style="margin-left: 20px;">out = fopen ( "output.dat", "w" ); // відкриваємо файл для запису результуючого частотного словника</p><p style="margin-left: 20px;">p = Head;  // починаємо з першого вузла (найперше слово за алфавітом)</p><p style="margin-left: 20px;">while ( p ) {  // поки не досягли кінця списку (p == NULL) -</p><p style="margin-left: 40px;">fprintf ( out, "%-20s\\t%d\\n", p-&gt;word, p-&gt;count ); // пишемо кожне слово p-&gt;word з кількістю повторень p-&gt;count </p><p style="margin-left: 40px;">p = p-&gt;next; // перехід до наступного вузла</p><p style="margin-left: 20px;">}</p><p style="margin-left: 20px;">fclose(out); // закриваємо файл, де записаний результат</p><p>}</p></pre>'),
(1236, 108, 18, 1, '<p>Щоб видалити існуючий вузол зі списку, потрібно виконати наступне:</p><ol><li>встановити, чи вузол, що видаляється, не є першим у списку;</li><li>якщо це встановлено (тобто, вузол, що видаляється, - <u>не перший</u>) - в попередньому вузлі змінюється посилання (поле <strong><span style="color: rgb(192, 80, 77);">next</span></strong>) на вузол, що стоїть після вузла, який видаляємо;</li><li>якщо вузол, що видаляється, <u>все-таки перший - </u>покажчику <strong><span style="color: rgb(192, 80, 77);">Head</span></strong> присвоюється адреса наступного вузла;</li></ol>в усіх випадках в кінці звільняється пам’ять, що була виділена під вузол, що видаляється, при його створенні.'),
(1237, 108, 19, 4, '<pre><p>Приклад процедури видалення вузла зі списку</p><p>void DeleteNode(PNode &amp;Head, PNode OldNode)</p><p>{ // OldNode - покажчик на вузол, що видаляється</p><p style="margin-left: 20px;">PNode q = Head;</p><p style="margin-left: 20px;">if (Head == OldNode) // якщо вузол, що видаляється, перший -</p><p style="margin-left: 40px;">Head = OldNode-&gt;next; // просто присвоюємо Head адресу наступного вузла</p><p style="margin-left: 20px;">else {</p><p style="margin-left: 40px;">while (q &amp;&amp; q-&gt;next != OldNode) // інакше - проходимо список</p><p style="margin-left: 60px;">q = q-&gt;next; // поки не досягнемо кінця (q == NULL) або не знадемо вузол з полем q-&gt;next == OldNode (попередній до видаляємого)</p><p style="margin-left: 60px;">if ( q == NULL ) return; // якщо досягнуто кінець списку (q == NULL) і адреса OldNode не знайдена - вихід</p><p style="margin-left: 40px;">q-&gt;next = OldNode-&gt;next; // інакше - попередньому вузлу присвоюємо посилання на вузол, що стоїть за видаляємим</p><p style="margin-left: 20px;">}</p><p style="margin-left: 20px;">delete OldNode; // звільняємо пам’ять від вузла за адресою OldNode</p><p>}</p></pre>'),
(1238, 108, 20, 1, '<p>Головна проблема однозв’язного списку - <em>неможливо безпосередньо перейти до попереднього елемента.</em></p><p><u>Спосіб вирішення:</u> зберігати у кожному вузлі <em>посилання на 2 сусідні вузли</em>.</p><p><u>Головні атрибути: </u>1) дві змінні-покажчики для доступу до списку в цілому: <strong><span style="color: rgb(192, 80, 77);">Head</span></strong> - перший вузол (“голова”),<strong><span style="color: rgb(192, 80, 77);"> Tail</span></strong> - останній вузол (“хвіст”);</p>2) в кожному вузлі - два поля-покажчики: <strong><span style="color: rgb(192, 80, 77);">next</span></strong> - на наступний вузол (<u>в останньому вузлі </u><u><strong><span style="color: rgb(192, 80, 77);">next == NULL</span></strong></u>) <strong><span style="color: rgb(192, 80, 77);">prev</span></strong> - на попередній вузол (<u>в першому вузлі </u><u><strong><span style="color: rgb(192, 80, 77);">prev == NULL</span></strong></u>).'),
(1239, 108, 21, 4, '<pre><p>Приклад оголошення вузла двозв’язного списку</p><p>struct Node {</p><p style="margin-left: 20px;">char word[40];</p><p style="margin-left: 20px;">int count;</p><p style="margin-left: 20px;">Node *next, *prev; </p><p>};</p><p>typedef Node *PNode;</p>PNode Head = NULL, Tail = NULL; <span style="color: rgb(155, 187, 89);">// ініціалізація покажчиків на “пустий” список</span></pre>'),
(1240, 108, 22, 1, '<p>В порівнянні з однозв’язним списком, в двозв’язному операції над вузлами мають певні особливості.</p>'),
(1241, 317, 1, 1, '\\[\\circ \\bigoplus \\blacksquare \\blacksquare \\blacksquare \\bigoplus \\bigotimes \\blacktriangle \\triangledown\\]\r\n'),
(1242, 317, 2, 1, '$\\blacksquare \\bullet \\bigstar \\bigstar \\bigstar \\bigstar \\bigstar \\bigstar \\bigstar \\bigstar \\ast \\div \\div \\div \\div$ ');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(1243, 317, 3, 1, '<p>glkgjlwrtjgl</p><span class="MathJax_Preview" style="color: inherit;"></span>\n<div class="MathJax_Display" style="text-align: center;"><span class="MathJax" id="MathJax-Element-3-Frame"><nobr><span class="math" id="MathJax-Span-29" role="math" style="width: 2.626em; display: inline-block;"><span style="display: inline-block; position: relative; width: 2.347em; height: 0px; font-size: 112%;"><span style="position: absolute; clip: rect(2.123em 1000.003em 4.523em -999.997em); top: -2.397em; left: 0.003em;"><span class="mrow" id="MathJax-Span-30"><span class="msubsup" id="MathJax-Span-31"><span style="display: inline-block; position: relative; width: 2.291em; height: 0px;"><span style="position: absolute; clip: rect(3.853em 1000.003em 4.188em -999.997em); top: -4.015em; left: 0.003em;"><span class="mspace" id="MathJax-Span-32" style="height: 0.003em; vertical-align: 0.003em; width: 0.282em; display: inline-block; overflow: hidden;"></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; top: -3.848em; left: 0.282em;"><span class="texatom" id="MathJax-Span-33"><span class="mrow" id="MathJax-Span-34"><span class="msubsup" id="MathJax-Span-35"><span style="display: inline-block; position: relative; width: 1.9em; height: 0px;"><span style="position: absolute; clip: rect(3.853em 1000.003em 4.188em -999.997em); top: -4.015em; left: 0.003em;"><span class="mi" id="MathJax-Span-36" style="font-size: 70.7%;"></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; top: -2.62em; left: 0.003em;"><span class="texatom" id="MathJax-Span-37"><span class="mrow" id="MathJax-Span-38"><span class="mfrac" id="MathJax-Span-39"><span style="display: inline-block; position: relative; width: 1.621em; height: 0px; margin-right: 0.114em; margin-left: 0.114em;"><span style="position: absolute; clip: rect(3.072em 1000.003em 4.69em -999.997em); top: -4.852em; left: 50%; margin-left: -0.723em;"><span class="mrow" id="MathJax-Span-40"><span class="mi" id="MathJax-Span-41" style="font-size: 50%; font-family: MathJax_Main;">∂<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mfrac" id="MathJax-Span-42"><span style="display: inline-block; position: relative; width: 0.951em; height: 0px; margin-right: 0.114em; margin-left: 0.114em;"><span style="position: absolute; clip: rect(3.351em 1000.003em 4.188em -999.997em); top: -4.294em; left: 50%; margin-left: -0.332em;"><span class="msubsup" id="MathJax-Span-43"><span style="display: inline-block; position: relative; width: 0.617em; height: 0px;"><span style="position: absolute; clip: rect(3.518em 1000.003em 4.188em -999.997em); top: -4.015em; left: 0.003em;"><span class="mi" id="MathJax-Span-44" style="font-size: 50%; font-family: MathJax_Main;">∂<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; top: -4.182em; left: 0.338em;"><span class="mn" id="MathJax-Span-45" style="font-size: 50%; font-family: MathJax_Main;">45y652</span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; clip: rect(3.351em 1000.003em 4.188em -999.997em); top: -3.513em; left: 50%; margin-left: -0.444em;"><span class="mrow" id="MathJax-Span-46"><span class="mi" id="MathJax-Span-47" style="font-size: 50%; font-family: MathJax_Main;">∂<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="msubsup" id="MathJax-Span-48"><span style="display: inline-block; position: relative; width: 0.561em; height: 0px;"><span style="position: absolute; clip: rect(3.63em 1000.003em 4.188em -999.997em); top: -4.015em; left: 0.003em;"><span class="mi" id="MathJax-Span-49" style="font-size: 50%; font-family: MathJax_Math-italic;">x</span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; top: -4.182em; left: 0.282em;"><span class="mn" id="MathJax-Span-50" style="font-size: 50%; font-family: MathJax_Main;">2</span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span></span></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; clip: rect(0.84em 1000.003em 1.23em -999.997em); top: -1.169em; left: 0.003em;"><span style="border-left-width: 0.951em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;"></span><span style="display: inline-block; width: 0px; height: 1.063em;"></span></span></span></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; clip: rect(3.518em 1000.003em 4.188em -999.997em); top: -3.624em; left: 50%; margin-left: -0.276em;"><span class="mrow" id="MathJax-Span-51"><span class="mi" id="MathJax-Span-52" style="font-size: 50%; font-family: MathJax_Main;">∂<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-53" style="font-size: 50%; font-family: MathJax_Math-italic;">x</span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; clip: rect(0.84em 1000.003em 1.23em -999.997em); top: -1.169em; left: 0.003em;"><span style="border-left-width: 1.621em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;"></span><span style="display: inline-block; width: 0px; height: 1.063em;"></span></span></span></span></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span></span></span></span></span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span></span></span></span><span style="display: inline-block; width: 0px; height: 2.402em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 2.378em; vertical-align: -2.247em;"></span></span></nobr></span>\n</div>'),
(1244, 317, 4, 1, '<p>ewr4fqgtw5g<span class="mi" id="MathJax-Span-56" style="font-family: MathJax_Math-italic;">ε</span><span class="mi" id="MathJax-Span-57" style="font-family: MathJax_Math-italic;">εyu6</span><span class="mi" id="MathJax-Span-58" style="font-family: MathJax_Math-italic;">ε</span><span class="mi" id="MathJax-Span-59" style="font-family: MathJax_Math-italic;">ε</span></p><span class="MathJax" id="MathJax-Element-4-Frame"><nobr><span class="math" id="MathJax-Span-54" role="math" style="width: 2.123em; display: inline-block;"><span style="display: inline-block; position: relative; width: 1.9em; height: 0px; font-size: 112%;"><span style="position: absolute; clip: rect(1.956em 1000.003em 2.737em -999.997em); top: -2.564em; left: 0.003em;"><span style="display: inline-block; width: 0px; height: 2.57em;"></span></span></span></span></nobr></span>'),
(1245, 317, 5, 1, '<p>t45wy6y  lkl,hjoljjgyuku</p>'),
(1246, 317, 6, 1, '\\[\\sum \\sqrt{456}+\\delta \\gamma \\mu\\]\r\n'),
(1254, 322, 1, 4, '<p><del></del></p>\n<pre>&lt;p&gt;приклад приклад приклад &lt;a name="newBlockForm"&gt;приклад приклад приклад &lt;/a&gt; &lt;a name="newBlockForm"&gt;приклад приклад приклад &lt;/a&gt;&lt;span class="redactor-invisible-space"&gt; &lt;a name="newBlockForm"&gt;приклад приклад приклад &lt;/a&gt;&lt;span class="redactor-invisible-space"&gt; &lt;a name="newBlockForm"&gt;приклад приклад приклад &lt;/a&gt;&lt;span class="redactor-invisible-space"&gt; &lt;a name="newBlockForm"&gt;приклад приклад приклад &lt;/a&gt;&lt;span class="redactor-invisible-space"&gt; &lt;a name="newBlockForm"&gt;приклад приклад приклад &lt;/a&gt;&lt;span class="redactor-invisible-space"&gt; &lt;a name="newBlockForm"&gt;приклад приклад приклад &lt;/a&gt;&lt;span class="redactor-invisible-space"&gt; &lt;a name="newBlockForm"&gt;приклад приклад приклад &lt;/a&gt;&lt;span class="redactor-invisible-space"&gt; &lt;a name="newBlockForm"&gt;приклад приклад приклад &lt;/a&gt;&lt;span class="redactor-invisible-space"&gt; &lt;a name="newBlockForm"&gt;приклад приклад приклад &lt;/a&gt;&lt;span class="redactor-invisible-space"&gt; &lt;a name="newBlockForm"&gt;приклад приклад приклад &lt;/a&gt;&lt;span class="redactor-invisible-space"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n</pre>'),
(1255, 322, 2, 7, '<p>іниструкція інструкція інструкція <a name="newBlockForm">іниструкція інструкція інструкція</a> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"> <a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"><a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"><a name="newBlockForm">іниструкція інструкція інструкція</a><span class="redactor-invisible-space"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>'),
(1258, 322, 3, 4, '<pre>&lt;p&gt;приклад приклад &lt;/p&gt;&lt;p&gt;&lt;a name="newBlockForm"&gt;приклад приклад \n&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a name="newBlockForm"&gt;приклад приклад &lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a name="newBlockForm"&gt;\n&lt;/a&gt;&lt;/p&gt;\n</pre>'),
(1259, 322, 4, 1, '<hr>'),
(1260, 322, 0, 2, '\\[vxfdxfxcvxcvvcxfdxdfsdfsdf33332222222222\\]\n'),
(1261, 322, 7, 3, 'апоаррлрлпрл'),
(1263, 322, 8, 1, '(Дробь (математика)) Дробь в математике — число, состоящее из одной или нескольких частей единицы. Дроби являются частью поля рациональных чисел. По способу записи дроби делятся на 2 формата: обыкновенные вида и десятичные.'),
(1264, 322, 6, 1, '<p>(Дробь (математика)) Дробь в математике — число, состоящее из одной или нескольких частей единицы. Дроби являются частью поля рациональных чисел. По способу записи дроби делятся на 2 формата: обыкновенные вида и десятичные.</p>'),
(1265, 322, 9, 7, '<table><colgroup><col><col><col><col></colgroup>\n<tbody>\n<tr>\n	<td>PREPROD 76\n	</td>\n	<td><br>\n	</td>\n	<td><br>\n	</td>\n	<td><br>\n	</td>\n</tr>\n<tr>\n	<td>product\n	</td>\n	<td rowspan="1" colspan="3"><a href="http://qa.intita.com">http://qa.intita.com</a>\n	</td>\n</tr>\n<tr>\n	<td>severity\n	</td>\n	<td rowspan="1" colspan="3"><br>\n	</td>\n</tr>\n<tr>\n	<td>priority\n	</td>\n	<td rowspan="1" colspan="3"><br>\n	</td>\n</tr>\n<tr>\n	<td>version found\n	</td>\n	<td rowspan="1" colspan="3">26.08.2015\n	</td>\n</tr>\n<tr>\n	<td>summary\n	</td>\n	<td rowspan="1" colspan="3">Редактирование блока "пример" в редакторе занятий - (см. скриншот)\n	</td>\n</tr>\n<tr>\n	<td rowspan="5" colspan="1">\n		<p>description and steps to reproduce\n		</p>\n	</td>\n	<td rowspan="1" colspan="3">1. Открыть <a href="http://qa.intita.com">http://qa.intita.com</a><br>2. Войти как teacher1@gmail.com\n	</td>\n</tr>\n<tr>\n	<td rowspan="1" colspan="3">3. Інтернет програміст (РНР) » New module » Test\n	</td>\n</tr>\n<tr>\n	<td rowspan="1" colspan="3">4. Создать блок "Пример"\n	</td>\n</tr>\n<tr>\n	<td rowspan="1" colspan="3">5. После создания кликнуть на блок с целью редактрования\n	</td>\n</tr>\n<tr>\n	<td rowspan="1" colspan="3">Результат: см. скриншот\n	</td>\n</tr>\n<tr>\n	<td>Статус: открыт\n	</td>\n	<td><br>\n	</td>\n	<td><br>\n	</td>\n	<td><br>\n	</td>\n</tr>\n</tbody>\n</table>'),
(1266, 322, 0, 2, 'арьрплп\nимтмммт'),
(1268, 322, 11, 3, '<p>nxvnvnv</p>'),
(1269, 322, 12, 7, '<span style="font-size: 12px;"></span>\n<table>\n<tbody>\n<tr>\n	<td>ааа\n	</td>\n	<td>аа\n	</td>\n	<td>аа\n	</td>\n	<td>аа\n	</td>\n	<td>аа\n	</td>\n	<td>аа\n	</td>\n	<td>аа\n	</td>\n	<td>аа\n	</td>\n</tr>\n<tr>\n	<td>\n	</td>\n	<td>\n	</td>\n	<td>\n	</td>\n	<td>\n	</td>\n	<td>\n	</td>\n	<td>\n	</td>\n	<td>\n	</td>\n	<td>\n	</td>\n</tr>\n</tbody>\n</table>\n<p><span style="font-size: 16px;">сптстсмbmcjm,cb,bm,bm,bm,b\n	</span></p>\n<h2>Устройство обыкновенной дроби</h2>\n<p>Рассмотрим круг, разделённый на четыре равных части.</p> <img src="http://math-prosto.ru/images/drob/orange.jpg" alt="круг, разделённый на 4 части для дробей">\n<p><span style="font-size: 16px;"></span></p>'),
(1270, 318, 1, 1, '<p>Открываем необходимую Вам картинку</p>\n<p><a href="http://juliettarose.ru/gallery/125/textpic_1.jpg" target="_blank" title="Картинка внутри текста"><img alt="Картинка внутри текста" src="http://juliettarose.ru/gallery/125/textpic_1s.jpg"></a></p>'),
(1271, 322, 13, 4, '<p><strong></strong></p>\n<iframe src="//www.youtube.com/embed/Xpmf7UQGZjM" allowfullscreen="" frameborder="0" height="281" width="500"><a target="_blank" href="https://www.google.com/search?q=%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0+5+%D0%BA%D0%BB%D0%B0%D1%81&amp;ie=utf-8&amp;oe=utf-8#q=%D0%B4%D1%80%D0%BE%D0%B1%D0%B8">https://www.google.com/search?q=%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0+5+%D0%BA%D0%BB%D0%B0%D1%81&amp;ie=utf-8&amp;oe=utf-8#q=%D0%B4%D1%80%D0%BE%D0%B1%D0%B8</a>\n</iframe>\n<pre>рорро\n</pre>'),
(1272, 318, 2, 1, '<p>drtdrtertert</p>\n<p><br></p>'),
(1273, 322, 14, 1, '\\[gfgjfhjghkgkjkj\\]\r\n                    \\[gfgjfhjjhjghkgkjkj\\]\r\n                '),
(1274, 322, 15, 12, '&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&'),
(1275, 322, 16, 12, '5+7='),
(1276, 318, 0, 2, 'http://math-prosto.ru/?page=pages/drob/drob1.php'),
(1277, 318, 4, 1, '<p><b><span style="color: rgb(192, 80, 77);"><strong>Программи́рование</strong></span></b><span style="color: rgb(192, 80, 77);"><strong> — процесс создания <a href="https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%BF%D1%8C%D1%8E%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%8F_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0" title="Компьютерная программа">компьютерных программ</a>.</strong></span></p>\n<p>По известному выражению <a href="https://ru.wikipedia.org/wiki/%D0%92%D0%B8%D1%80%D1%82,_%D0%9D%D0%B8%D0%BA%D0%BB%D0%B0%D1%83%D1%81" title="Вирт, Никлаус">Никлауса Вирта</a> «Программы = алгоритмы + структуры данных»<sup><a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5#cite_note-.D0.92.D0.B8.D1.80.D1.82-1">[1]</a></sup>; иными словами, ключевыми непосредственными задачами программирования являются создание и использование <a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC" title="Алгоритм">алгоритмов</a> и <a href="https://ru.wikipedia.org/wiki/%D0%A1%D1%82%D1%80%D1%83%D0%BA%D1%82%D1%83%D1%80%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85" title="Структура данных">структур данных</a>.</p>\n<p>В более широком смысле под программированием понимают весь спектр деятельности, связанный с созданием и поддержанием в рабочем состоянии программ — <a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5_%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5" title="Программное обеспечение">программного обеспечения</a>. Эта инженерно-техническая дисциплина называется «<a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%B0%D1%8F_%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80%D0%B8%D1%8F" title="Программная инженерия">программная инженерия</a>». Сюда входят анализ и постановка задачи, проектирование программы, построение алгоритмов, разработка структур данных, написание текстов программ, отладка и тестирование программы (испытания программы), документирование, настройка (конфигурирование), доработка и сопровождение.</p>\n<p>Программирование основывается на использовании <a href="https://ru.wikipedia.org/wiki/%D0%AF%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F" title="Язык программирования">языков программирования</a>, на которых записываются инструкции для компьютера. Современное приложение содержит множество таких инструкций, связанных между собой.</p>\n<p>Текстовый редактор среды программирования может иметь специфичную функциональность, такую, как индексация имен, отображение документации, подсветка синтаксиса, средства визуального создания пользовательского интерфейса (GUI/UI). С помощью текстового редактора программист производит набор и редактирование текста создаваемой программы, который называют <a href="https://ru.wikipedia.org/wiki/%D0%98%D1%81%D1%85%D0%BE%D0%B4%D0%BD%D1%8B%D0%B9_%D0%BA%D0%BE%D0%B4" title="Исходный код">исходным кодом</a>. <a href="https://ru.wikipedia.org/wiki/%D0%AF%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F" title="Язык программирования">Язык программирования</a> определяет <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%81_%28%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%29" title="Синтаксис (программирование)">синтаксис</a> и изначальную <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%B5%D0%BC%D0%B0%D0%BD%D1%82%D0%B8%D0%BA%D0%B0_%28%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%29" title="Семантика (программирование)">семантику</a> исходного кода.</p>\n<p>В настоящее время активно используются <a href="https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%B0%D1%8F_%D1%81%D1%80%D0%B5%D0%B4%D0%B0_%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8" title="Интегрированная среда разработки">интегрированные среды разработки</a>, включающие в свой состав также редактор для ввода и редактирования текстов программ, отладчики (т. н. <a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B5%D0%B1%D0%B0%D0%B3%D0%B3%D0%B5%D1%80" title="Дебаггер" class="mw-redirect">дебаггеры</a>) для поиска и устранения ошибок, <a href="https://ru.wikipedia.org/wiki/%D0%A2%D1%80%D0%B0%D0%BD%D1%81%D0%BB%D1%8F%D1%82%D0%BE%D1%80" title="Транслятор">трансляторы</a> с различных языков программирования, компоновщики для сборки программы из нескольких модулей и другие служебные модули.</p>\n<h2>Содержание</h2>\n<ul>\n	<li><a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5#.D0.98.D1.81.D1.82.D0.BE.D1.80.D0.B8.D1.8F"><span class="tocnumber">1</span> <span class="toctext">История</span></a></li>\n	<li><a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5#.D0.AF.D0.B7.D1.8B.D0.BA.D0.B8_.D0.BF.D1.80.D0.BE.D0.B3.D1.80.D0.B0.D0.BC.D0.BC.D0.B8.D1.80.D0.BE.D0.B2.D0.B0.D0.BD.D0.B8.D1.8F"><span class="tocnumber">2</span> <span class="toctext">Языки программирования</span></a></li>\n	<li><a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5#.D0.A1.D0.BC._.D1.82.D0.B0.D0.BA.D0.B6.D0.B5"><span class="tocnumber">3</span> <span class="toctext">См. также</span></a></li>\n	<li><a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5#.D0.9F.D1.80.D0.B8.D0.BC.D0.B5.D1.87.D0.B0.D0.BD.D0.B8.D1.8F"><span class="tocnumber">4</span> <span class="toctext">Примечания</span></a></li>\n	<li><a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5#.D0.9B.D0.B8.D1.82.D0.B5.D1.80.D0.B0.D1.82.D1.83.D1.80.D0.B0"><span class="tocnumber">5</span> <span class="toctext">Литература</span></a></li>\n	<li><a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5#.D0.A1.D1.81.D1.8B.D0.BB.D0.BA.D0.B8"><span class="tocnumber">6</span> <span class="toctext">Ссылки</span></a></li>\n</ul>\n<h2><span class="mw-headline">История</span></h2>\n<p>См. также: <a href="https://ru.wikipedia.org/wiki/%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F_%D1%8F%D0%B7%D1%8B%D0%BA%D0%BE%D0%B2_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F" title="История языков программирования">История языков программирования</a></p>\n<p> <a href="https://commons.wikimedia.org/wiki/File:IBM402plugboard.Shrigley.wireside.jpg?uselang=ru" class="image"><img alt="" src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/IBM402plugboard.Shrigley.wireside.jpg/220px-IBM402plugboard.Shrigley.wireside.jpg"></a></p>\n<p> Коммутационная панель <a href="https://ru.wikipedia.org/wiki/%D0%A2%D0%B0%D0%B1%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80" title="Табулятор">суммирующей машины</a> IBM 402</p>\n<p><a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BD%D1%82%D0%B8%D0%BA%D0%B8%D1%82%D0%B5%D1%80%D1%81%D0%BA%D0%B8%D0%B9_%D0%BC%D0%B5%D1%85%D0%B0%D0%BD%D0%B8%D0%B7%D0%BC" title="Антикитерский механизм">Антикитерский механизм</a> из <a href="https://ru.wikipedia.org/wiki/%D0%94%D1%80%D0%B5%D0%B2%D0%BD%D1%8F%D1%8F_%D0%93%D1%80%D0%B5%D1%86%D0%B8%D1%8F" title="Древняя Греция">Древней Греции</a> был калькулятором, использовавшим шестерни различных размеров и конфигурации, обусловливавших его работу,<sup><a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5#cite_note-2">[2]</a></sup> по отслеживанию <a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B5%D1%82%D0%BE%D0%BD%D0%BE%D0%B2_%D1%86%D0%B8%D0%BA%D0%BB" title="Метонов цикл">метонова цикла</a>, до сих пор использующегося в <a href="https://ru.wikipedia.org/wiki/%D0%9B%D1%83%D0%BD%D0%BD%D0%BE-%D1%81%D0%BE%D0%BB%D0%BD%D0%B5%D1%87%D0%BD%D1%8B%D0%B9_%D0%BA%D0%B0%D0%BB%D0%B5%D0%BD%D0%B4%D0%B0%D1%80%D1%8C" title="Лунно-солнечный календарь">лунно-солнечных календарях</a>.<sup><a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5#cite_note-3">[3]</a></sup> <a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BB%D1%8C-%D0%94%D0%B6%D0%B0%D0%B7%D0%B0%D1%80%D0%B8" title="Аль-Джазари">Аль-Джазари</a> построил программируемый автомат-гуманоид в 1206 году. Одна система, задействованная в этих устройствах, использовала зажимы и <a href="https://ru.wikipedia.org/wiki/%D0%9A%D1%83%D0%BB%D0%B0%D1%87%D0%BA%D0%BE%D0%B2%D1%8B%D0%B9_%D0%BC%D0%B5%D1%85%D0%B0%D0%BD%D0%B8%D0%B7%D0%BC" title="Кулачковый механизм">кулачки</a>, помещённые в деревянный ящик в определённых местах, которые последовательно задействовали <a href="https://ru.wikipedia.org/wiki/%D0%A0%D1%8B%D1%87%D0%B0%D0%B3" title="Рычаг">рычаги</a>, которые, в свою очередь, управляли <a href="https://ru.wikipedia.org/wiki/%D0%A3%D0%B4%D0%B0%D1%80%D0%BD%D1%8B%D0%B5_%D0%BC%D1%83%D0%B7%D1%8B%D0%BA%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5_%D0%B8%D0%BD%D1%81%D1%82%D1%80%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D1%8B" title="Ударные музыкальные инструменты">ударными инструментами</a>.</p>\n<p>Часто первым программируемым устройством принято считать <a href="https://ru.wikipedia.org/wiki/%D0%96%D0%B0%D0%BA%D0%BA%D0%B0%D1%80%D0%B4%D0%BE%D0%B2%D1%8B%D0%B9_%D1%82%D0%BA%D0%B0%D1%86%D0%BA%D0%B8%D0%B9_%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%BA" title="Жаккардовый ткацкий станок">жаккардовый ткацкий станок</a>, построенный в 1804 году Жозефом Мари Жаккаром, который произвёл революцию в ткацкой промышленности, предоставив возможность программировать узоры на тканях при помощи перфокарт.</p>\n<p>Первое программируемое вычислительное устройство, Аналитическую машину, разработал Чарлз Бэббидж (но не смог её построить). <a href="https://ru.wikipedia.org/wiki/19_%D0%B8%D1%8E%D0%BB%D1%8F" title="19 июля">19 июля</a> <a href="https://ru.wikipedia.org/wiki/1843_%D0%B3%D0%BE%D0%B4" title="1843 год">1843 года</a> графиня Ада Августа Лавлейс, дочь великого английского поэта Джорджа Байрона, как принято считать, написала первую в истории человечества программу для Аналитической машины. Эта программа решала уравнение Бернулли, выражающее закон сохранения энергии движущейся жидкости. В своей первой и единственной научной работе Ада Лавлейс рассмотрела большое число вопросов. Ряд высказанных ею общих положений (принцип экономии рабочих ячеек памяти, связь рекуррентных формул с циклическими процессами вычислений) сохранили свое принципиальное значение и для современного программирования. В материалах Бэббиджа и комментариях Лавлейс намечены такие понятия, как подпрограмма и библиотека подпрограмм, модификация команд и индексный регистр, которые стали употребляться только в 1950-х годах. Однако ни одна из программ, написанных Адой Лавлейс, никогда так и не была запущена.</p>\n<h2><span class="mw-headline">Языки программирования</span></h2>\n<p>Основная статья: <b><a href="https://ru.wikipedia.org/wiki/%D0%AF%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F" title="Язык программирования">Язык программирования</a></b></p>\n<p>Большая часть работы <a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82" title="Программист">программистов</a> связана с написанием <a href="https://ru.wikipedia.org/wiki/%D0%98%D1%81%D1%85%D0%BE%D0%B4%D0%BD%D1%8B%D0%B9_%D0%BA%D0%BE%D0%B4" title="Исходный код">исходного кода</a>, тестированием и отладкой программ на одном из <a href="https://ru.wikipedia.org/wiki/%D0%AF%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F" title="Язык программирования">языков программирования</a>. Исходные тексты и исполняемые файлы программ являются объектами авторского права и являются интеллектуальной собственностью их авторов и правообладателей.</p>\n<p>Различные языки программирования поддерживают различные стили программирования (<a href="https://ru.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%B8%D0%B3%D0%BC%D0%B0_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F" title="Парадигма программирования">парадигмы программирования</a>). Отчасти искусство программирования состоит в том, чтобы выбрать язык программирования, наиболее полно подходящий для решения поставленной задачи. Разные языки требуют от программиста различного уровня внимания к деталям при реализации алгоритма, результатом чего часто бывает компромисс между простотой и производительностью (или между <i>временем программиста</i> и <i>временем пользователя</i>).</p>\n<p>Единственный язык, напрямую выполняемый ЭВМ — это <i>машинный язык</i> (также называемый <i>машинным кодом</i> и <i>языком машинных команд</i>). Изначально все программы писались в машинном коде, но сейчас этого практически уже не делается. Вместо этого программисты пишут <a href="https://ru.wikipedia.org/wiki/%D0%98%D1%81%D1%85%D0%BE%D0%B4%D0%BD%D1%8B%D0%B9_%D0%BA%D0%BE%D0%B4" title="Исходный код">исходный код</a> на том или ином языке программирования, затем, используя <a href="https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%BF%D0%B8%D0%BB%D1%8F%D1%82%D0%BE%D1%80" title="Компилятор">компилятор</a>, транслируют его в один или несколько этапов в машинный код, готовый к исполнению на целевом процессоре, или в промежуточное представление, которое может быть исполнено специальным <a href="https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D1%82%D0%B5%D1%80%D0%BF%D1%80%D0%B5%D1%82%D0%B0%D1%82%D0%BE%D1%80" title="Интерпретатор">интерпретатором</a> — виртуальной машиной. Но это справедливо только для <a href="https://ru.wikipedia.org/wiki/%D0%92%D1%8B%D1%81%D0%BE%D0%BA%D0%BE%D1%83%D1%80%D0%BE%D0%B2%D0%BD%D0%B5%D0%B2%D1%8B%D0%B9_%D1%8F%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F" title="Высокоуровневый язык программирования">языков высокого уровня</a>. Если требуется полный низкоуровневый контроль над системой на уровне машинных команд и отдельных ячеек памяти, программы пишут на <a href="https://ru.wikipedia.org/wiki/%D0%AF%D0%B7%D1%8B%D0%BA_%D0%B0%D1%81%D1%81%D0%B5%D0%BC%D0%B1%D0%BB%D0%B5%D1%80%D0%B0" title="Язык ассемблера">языке ассемблера</a>, мнемонические инструкции которого преобразуются один к одному в соответствующие инструкции машинного языка целевого процессора ЭВМ (по этой причине трансляторы с языков ассемблера получаются алгоритмически простейшими трансляторами).</p>\n<p>В некоторых языках вместо машинного кода генерируется интерпретируемый двоичный код «виртуальной машины», также называемый <i><a href="https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D0%B9%D1%82-%D0%BA%D0%BE%D0%B4" title="Байт-код">байт-кодом</a></i> (<i>byte-code</i>). Такой подход применяется в <a href="https://ru.wikipedia.org/wiki/Forth" title="Forth" class="mw-redirect">Forth</a>, некоторых реализациях <a href="https://ru.wikipedia.org/wiki/Lisp" title="Lisp" class="mw-redirect">Lisp</a>, <a href="https://ru.wikipedia.org/wiki/Java" title="Java">Java</a>, <a href="https://ru.wikipedia.org/wiki/Perl" title="Perl">Perl</a>, <a href="https://ru.wikipedia.org/wiki/Python" title="Python">Python</a>, языках для <a href="https://ru.wikipedia.org/wiki/.NET_Framework" title=".NET Framework">.NET Framework</a>.</p>\n<p> <a href="https://commons.wikimedia.org/wiki/File:Screenshot-vim2.png?uselang=ru" class="image"><img alt="" src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Screenshot-vim2.png/300px-Screenshot-vim2.png"></a></p>\n<p> Скриншот фрагмента кода на языке Java в текстовом редакторе <a href="https://ru.wikipedia.org/wiki/Vim" title="Vim">vim</a>, демонстрирующий подсветку синтаксиса, поддержку Unicode, фолдинг</p>\n<h2><span class="mw-headline">См. также</span></h2>\n<ul>\n	<li><a href="https://ru.wikipedia.org/wiki/%D0%A1%D1%82%D1%80%D1%83%D0%BA%D1%82%D1%83%D1%80%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5" title="Структурное программирование">Структурное программирование</a></li>\n	<li><a href="https://ru.wikipedia.org/wiki/%D0%AD%D0%BA%D1%81%D1%82%D1%80%D0%B5%D0%BC%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5" title="Экстремальное программирование">Экстремальное программирование</a></li>\n	<li><a href="https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D0%B7%D0%B0_%D0%B7%D0%BD%D0%B0%D0%BD%D0%B8%D0%B9" title="База знаний">База знаний</a></li>\n	<li><a href="https://ru.wikipedia.org/wiki/%D0%9B%D0%BE%D0%B3%D0%B8%D0%BA%D0%B0_%D0%B2_%D0%B8%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B5" title="Логика в информатике">Логика в информатике</a></li>\n	<li><a href="https://ru.wikipedia.org/wiki/%D0%A5%D0%B0%D0%BA%D0%B5%D1%80" title="Хакер">Хакер</a></li>\n	<li><a href="https://ru.wikipedia.org/wiki/%D0%91%D0%BB%D0%BE%D0%BA-%D1%81%D1%85%D0%B5%D0%BC%D0%B0" title="Блок-схема">Блок-схема</a></li>\n</ul>\n<h2><span class="mw-headline">Примечания</span></h2>\n<ol>\n	<li><b><a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5#cite_ref-.D0.92.D0.B8.D1.80.D1.82_1-0">↑</a></b>\n	<ul>\n		<li><span class="reference-text"><i>Вирт Н.</i> Алгоритмы + структуры данных = программы. — М.: Мир, 1985;</span></li>\n		<li><span class="reference-text"><i>Вирт Н.</i> Алгоритмы и структуры данных. Новая версия для Оберона + CD. М.: ДМК Пресс, 2010. <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%98%D1%81%D1%82%D0%BE%D1%87%D0%BD%D0%B8%D0%BA%D0%B8_%D0%BA%D0%BD%D0%B8%D0%B3/9785940745846" class="internal mw-magiclink-isbn">ISBN 978-5-94074-584-6</a>, 0-13-022005-9</span></li>\n	</ul> </li>\n	<li><b><a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5#cite_ref-2">↑</a></b> <span class="reference-text"><a class="external text" href="http://news.nationalgeographic.com/news/2006/11/061129-ancient-greece.html">Ancient Greek Computer’s Inner Workings Deciphered</a>. National Geographic News. November 29, 2006.</span></li>\n	<li><b><a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5#cite_ref-3">↑</a></b> <span class="reference-text"><span class="citation"><cite>Freeth, Tony; Jones, Alexander; Steele, John M.; Bitsakis, Yanis (July 31, 2008). «<a class="external text" href="http://www.nature.com/nature/journal/v454/n7204/full/nature07130.html">Calendars with Olympiad display and eclipse prediction on the Antikythera Mechanism</a>». <i>Nature</i> <b>454</b> (7204): 614–617. <a href="https://ru.wikipedia.org/wiki/%D0%98%D0%B4%D0%B5%D0%BD%D1%82%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D1%80_%D1%86%D0%B8%D1%84%D1%80%D0%BE%D0%B2%D0%BE%D0%B3%D0%BE_%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%B0" title="Идентификатор цифрового объекта">DOI</a>:<a class="external text" href="https://dx.doi.org/10.1038%2Fnature07130">10.1038/nature07130</a>. <a class="external mw-magiclink-pmid" href="https://www.ncbi.nlm.nih.gov/pubmed/18668103?dopt=Abstract">PMID 18668103</a>.</cite></span></span></li>\n</ol>\n<h2><span class="mw-headline">Литература</span></h2>\n<ul>\n	<li><span class="citation"><i>Дейкстра Э.</i> Дисциплина программирования = A discipline of programming. — 1-е изд. — М.: Мир, 1978. — 275 с.</span></li>\n	<li><span class="citation"><i>Бьярне Страуструп.</i> Программирование: принципы и практика использования C++, исправленное издание = Programming: Principles and Practice Using C++. — М.: <a href="https://ru.wikipedia.org/w/index.php?title=%D0%92%D0%B8%D0%BB%D1%8C%D1%8F%D0%BC%D1%81_%28%D0%B8%D0%B7%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D1%82%D0%B2%D0%BE%29&amp;action=edit&amp;redlink=1" class="new" title="Вильямс (издательство) (страница отсутствует)">Вильямс</a>, 2011. — С. 1248. — <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%98%D1%81%D1%82%D0%BE%D1%87%D0%BD%D0%B8%D0%BA%D0%B8_%D0%BA%D0%BD%D0%B8%D0%B3/9785845917058" class="internal mw-magiclink-isbn">ISBN 978-5-8459-1705-8</a>.</span></li>\n	<li><span class="citation"><i>Александр Степанов, Пол Мак-Джонс.</i> Начала программирования = Elements of Programming. — М.: <a href="https://ru.wikipedia.org/w/index.php?title=%D0%92%D0%B8%D0%BB%D1%8C%D1%8F%D0%BC%D1%81_%28%D0%B8%D0%B7%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D1%82%D0%B2%D0%BE%29&amp;action=edit&amp;redlink=1" class="new" title="Вильямс (издательство) (страница отсутствует)">Вильямс</a>, 2011. — С. 272. — <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%98%D1%81%D1%82%D0%BE%D1%87%D0%BD%D0%B8%D0%BA%D0%B8_%D0%BA%D0%BD%D0%B8%D0%B3/9785845917089" class="internal mw-magiclink-isbn">ISBN 978-5-8459-1708-9</a>.</span></li>\n	<li><span class="citation"><i>Роберт У. Себеста.</i> Основные концепции языков программирования / Пер. с англ. — 5-е изд. — М.: <a href="https://ru.wikipedia.org/w/index.php?title=%D0%92%D0%B8%D0%BB%D1%8C%D1%8F%D0%BC%D1%81_%28%D0%B8%D0%B7%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D1%82%D0%B2%D0%BE%29&amp;action=edit&amp;redlink=1" class="new" title="Вильямс (издательство) (страница отсутствует)">Вильямс</a>, 2001. — 672 с. — <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%98%D1%81%D1%82%D0%BE%D1%87%D0%BD%D0%B8%D0%BA%D0%B8_%D0%BA%D0%BD%D0%B8%D0%B3/5845901928" class="internal mw-magiclink-isbn">ISBN 5-8459-0192-8</a> (рус.) <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%98%D1%81%D1%82%D0%BE%D1%87%D0%BD%D0%B8%D0%BA%D0%B8_%D0%BA%D0%BD%D0%B8%D0%B3/0201752956" class="internal mw-magiclink-isbn">ISBN 0-201-75295-6</a> (англ.).</span></li>\n	<li><span class="citation"><i>Иан Соммервилл.</i> Инженерия программного обеспечения / Пер. с англ. — 6-е издание. — М.: <a href="https://ru.wikipedia.org/w/index.php?title=%D0%92%D0%B8%D0%BB%D1%8C%D1%8F%D0%BC%D1%81_%28%D0%B8%D0%B7%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D1%82%D0%B2%D0%BE%29&amp;action=edit&amp;redlink=1" class="new" title="Вильямс (издательство) (страница отсутствует)">Вильямс</a>, 2002. — 624 с.</span></li>\n	<li><span class="citation"><i>Иан Грэхем.</i> Объектно-ориентированные методы. Принципы и практика / Пер. с англ. — 3-е изд. — М.: <a href="https://ru.wikipedia.org/w/index.php?title=%D0%92%D0%B8%D0%BB%D1%8C%D1%8F%D0%BC%D1%81_%28%D0%B8%D0%B7%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D1%82%D0%B2%D0%BE%29&amp;action=edit&amp;redlink=1" class="new" title="Вильямс (издательство) (страница отсутствует)">Вильямс</a>, 2004. — 880 с.</span></li>\n</ul>'),
(1279, 322, 18, 1, '\\[ghmcjkcjgk\\]\r\n'),
(1280, 322, 19, 1, '\\[ghmgmgjmg\\]\r\n'),
(1281, 322, 17, 1, '\\[\\large mbj,j\\]\r\n'),
(1282, 322, 20, 1, '\\[\\LARGE ,ch,h,h\\]\r\n'),
(1283, 322, 21, 12, 'xvxcv'),
(1284, 322, 22, 1, '\\[\\sum \\bigcafsdfsdfp \\sum \\sum\\]\r\n'),
(1285, 322, 23, 12, 'jghsghdfdfhgjhdfgdfhgfdjgsfhfgdfgdfhgdhfdjhgdfjhgfjfjfdgjdffgjhdfgjhdfgfhgfjkjghdfjghdffghdfhgdfgh'),
(1286, 322, 24, 12, 'fngbghbgkjhskrhgdkfjghdjkfghfdkjghdfkjg'),
(1287, 322, 25, 12, 'jhgjhgjhgjhyjyui'),
(1288, 322, 26, 12, 'fghfgjh'),
(1289, 322, 27, 1, '\\[ghjhxkjghxfkghfghfkghfkghkfg\\]\r\n'),
(1290, 322, 28, 1, '\\[dtjjhgkjghfdghktyhrkttkryhtkgdhfghfkgjghfdgh\\]\r\n'),
(1291, 322, 29, 1, '<p><strong></strong><del></del>thjfkhfkhyjfghjkgkfjhgkfgdh</p>'),
(1292, 328, 0, 2, 'https://www.youtube.com/watch?v=3MBT9O6i0jk&list=PLrCZzMib1e9pDKLsabJYuODdVJrHYc4Jd');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(1293, 332, 1, 1, '<p>Основна проблема проектування ефективної реляційної бази даних полягає у мінімізації надлишковості, і як її наслідку, уникнення проблем, пов’язаних з аномаліями обновлення.</p><p>1. Відсутність надлишковості. У системі є присутня надлишковість, якщо одні і ті ж дані знаходяться у декількох місцях. При цьому не тільки нераціонально використовується місце у пам’яті, але й можуть виникати неузгодженості та неоднозначності даних. Наприклад, у наведеній вище таблиці повторюються назви кафедр з місцями їх розташування. </p><p>2. Розрізняють три види аномалій обновлення: а) Аномалії вставки. При вставці відомостей про нових співробітників у таблицю необхідно також вказувати інформацію про кафедру, де вони працюють. Аномалія вставки полягає у тому, що інформація про розташування кафедри повинна співпадати зі значеннями інших відповідних стрічок таблиці. </p><p>При вставці відомостей про нову кафедру, яка ще не має власних співробітників, необхідно присвоїти NULL-значення усім стовпцям опису персоналу нашої таблиці, включаючи і порядковий номер співробітника ID. Це теж є аномалією вставки, оскільки порядковий номер не може містити NULL-значення. б) Аномалії видалення полягають у тому, що якщо з таблиці видаляють стрічку з інформацією про останнього співробітника деякої кафедри, то повністю видаляється з БД інформація і про цю кафедру. Наприклад, при видаленні з таблиці стрічки про асистента Будза, також неявно будуть видалені усі відомості про кафедру Захисту інформації. в) Аномалії модифікації. При спробі змінити значення поля одного зі стовпців таблиці для деякої кафедри (наприклад, кафедра КСА переїхала на 9 поверх 5 корпусу), необхідно також обновити відповідні значення у стрічках усіх співробітників цієї кафедри. Якщо цієї модифікації зазнають не усі стрічки, тоді БД буде містити суперечливі дані. <img src="https://lh3.googleusercontent.com/QvaLMnYpCtNMfj5_DEYOUpnqNxUezMsS6fQrtgrmPn3Vd5IvOLwnjwhWjFUjqKbcyA8ip9kuCrZSUnaR2oU2i2wAa47ap8dhReV30wdddihc1waJiQVaoE5Ltbz9eVNQK5Hu4To"></p>'),
(1294, 329, 0, 2, 'https://www.youtube.com/watch?v=3MBT9O6i0jk&list=PLrCZzMib1e9pDKLsabJYuODdVJrHYc4Jd'),
(1295, 329, 3, 1, '<p><em></em>тадлопирврвлвлпрпвла</p>'),
(1296, 329, 4, 3, '<p>лпглсплплп</p>'),
(1297, 329, 2, 4, '<pre><em></em>&lt;p&gt;ооарпавпрвлапрвалпрвал&lt;/p&gt;\n</pre>'),
(1298, 329, 5, 7, '<p>кешнргещшргепргащ</p>'),
(1299, 329, 6, 1, '\\[ryjfjhgjfgj\\]\r\n'),
(1300, 329, 7, 1, '<p><b>Дробь</b> в <a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0" title="Математика">математике</a> — число, состоящее из одной или нескольких частей (долей) единицы<sup><a href="https://ru.wikipedia.org/wiki/%D0%94%D1%80%D0%BE%D0%B1%D1%8C_(%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0)#cite_note-1">[1]</a></sup>. Дроби являются частью<a href="https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%BB%D0%B5_(%D0%B0%D0%BB%D0%B3%D0%B5%D0%B1%D1%80%D0%B0)" title="Поле (алгебра)">поля</a> <a href="https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%87%D0%B8%D1%81%D0%BB%D0%BE" title="Рациональное число">рациональных чисел</a>. По способу записи дроби делятся на 2 формата: <a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8B%D0%BA%D0%BD%D0%BE%D0%B2%D0%B5%D0%BD%D0%BD%D0%B0%D1%8F_%D0%B4%D1%80%D0%BE%D0%B1%D1%8C" title="Обыкновенная дробь" class="mw-redirect"><i>обыкновенные</i></a> вида <img alt="\\pm \\frac{m}{n}" src="https://upload.wikimedia.org/math/f/2/b/f2bc13fe42a8eb4113e4b204407d443d.png"> и <a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B5%D1%81%D1%8F%D1%82%D0%B8%D1%87%D0%BD%D0%B0%D1%8F_%D0%B4%D1%80%D0%BE%D0%B1%D1%8C" title="Десятичная дробь"><i>десятичные</i></a>.</p>'),
(1301, 329, 0, 2, 'https://www.youtube.com/watch?v=3MBT9O6i0jk&list=PLrCZzMib1e9pDKLsabJYuODdVJrHYc4Jd'),
(1302, 329, 9, 12, 'cghjcghj'),
(1303, 328, 2, 7, '<p><b>Дробь</b> в <a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0" title="Математика">математике</a> — число, состоящее из одной или нескольких частей (долей) единицы<sup><a href="https://ru.wikipedia.org/wiki/%D0%94%D1%80%D0%BE%D0%B1%D1%8C_(%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0)#cite_note-1">[1]</a></sup>. Дроби являются частью<a href="https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%BB%D0%B5_(%D0%B0%D0%BB%D0%B3%D0%B5%D0%B1%D1%80%D0%B0)" title="Поле (алгебра)">поля</a> <a href="https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%87%D0%B8%D1%81%D0%BB%D0%BE" title="Рациональное число">рациональных чисел</a>. По способу записи дроби делятся на 2 формата: <a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8B%D0%BA%D0%BD%D0%BE%D0%B2%D0%B5%D0%BD%D0%BD%D0%B0%D1%8F_%D0%B4%D1%80%D0%BE%D0%B1%D1%8C" title="Обыкновенная дробь" class="mw-redirect"><i>обыкновенные</i></a> вида <img alt="\\pm \\frac{m}{n}" src="https://upload.wikimedia.org/math/f/2/b/f2bc13fe42a8eb4113e4b204407d443d.png"> и <a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B5%D1%81%D1%8F%D1%82%D0%B8%D1%87%D0%BD%D0%B0%D1%8F_%D0%B4%D1%80%D0%BE%D0%B1%D1%8C" title="Десятичная дробь"><i>десятичные</i></a>.</p>'),
(1304, 328, 4, 1, '<p><b>Дробь</b> в <a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0" title="Математика">математике</a> — число, состоящее из одной или нескольких частей (долей) единицы<sup><a href="https://ru.wikipedia.org/wiki/%D0%94%D1%80%D0%BE%D0%B1%D1%8C_(%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0)#cite_note-1">[1]</a></sup>. Дроби являются частью<a href="https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%BB%D0%B5_(%D0%B0%D0%BB%D0%B3%D0%B5%D0%B1%D1%80%D0%B0)" title="Поле (алгебра)">поля</a> <a href="https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%87%D0%B8%D1%81%D0%BB%D0%BE" title="Рациональное число">рациональных чисел</a>. По способу записи дроби делятся на 2 формата: <a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8B%D0%BA%D0%BD%D0%BE%D0%B2%D0%B5%D0%BD%D0%BD%D0%B0%D1%8F_%D0%B4%D1%80%D0%BE%D0%B1%D1%8C" title="Обыкновенная дробь" class="mw-redirect"><i>обыкновенные</i></a> вида <img alt="\\pm \\frac{m}{n}" src="https://upload.wikimedia.org/math/f/2/b/f2bc13fe42a8eb4113e4b204407d443d.png"> и <a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B5%D1%81%D1%8F%D1%82%D0%B8%D1%87%D0%BD%D0%B0%D1%8F_%D0%B4%D1%80%D0%BE%D0%B1%D1%8C" title="Десятичная дробь"><i>десятичные</i></a>.</p>'),
(1305, 328, 3, 4, '<pre>&lt;p&gt;&lt;b&gt;Дробь&lt;/b&gt; в &lt;a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0" title="Математика"&gt;математике&lt;/a&gt; — число, состоящее из одной или нескольких частей (долей) единицы&lt;sup&gt;&lt;a href="https://ru.wikipedia.org/wiki/%D0%94%D1%80%D0%BE%D0%B1%D1%8C_(%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0)#cite_note-1"&gt;[1]&lt;/a&gt;&lt;/sup&gt;. Дроби являются частью&lt;a href="https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%BB%D0%B5_(%D0%B0%D0%BB%D0%B3%D0%B5%D0%B1%D1%80%D0%B0)" title="Поле (алгебра)"&gt;поля&lt;/a&gt; &lt;a href="https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%87%D0%B8%D1%81%D0%BB%D0%BE" title="Рациональное число"&gt;рациональных чисел&lt;/a&gt;. По способу записи дроби делятся на 2 формата: &lt;a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8B%D0%BA%D0%BD%D0%BE%D0%B2%D0%B5%D0%BD%D0%BD%D0%B0%D1%8F_%D0%B4%D1%80%D0%BE%D0%B1%D1%8C" title="Обыкновенная дробь" class="mw-redirect"&gt;&lt;i&gt;обыкновенные&lt;/i&gt;&lt;/a&gt; вида &lt;img alt="\\pm \\frac{m}{n}" src="https://upload.wikimedia.org/math/f/2/b/f2bc13fe42a8eb4113e4b204407d443d.png"&gt; и &lt;a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B5%D1%81%D1%8F%D1%82%D0%B8%D1%87%D0%BD%D0%B0%D1%8F_%D0%B4%D1%80%D0%BE%D0%B1%D1%8C" title="Десятичная дробь"&gt;&lt;i&gt;десятичные&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt;\n</pre>'),
(1306, 332, 2, 1, '<p>Як бачимо, проста реалізація вихідної таблиці на таблиці Співробітник та Кафедра усуває зайву надлишковість та проблеми, пов’язані з аномаліями обновлення. Із виведення великої таблиці на більш дрібні пов’язані дві важливі властивості: 1) Властивість «з’єднання без втрат» гарантує, що будь-яка стрічка вихідної таблиці може бути визначена за допомогою відповідних стрічок більш дрібних таблиць. 2) Властивість «збереження залежностей» гарантує, що обмеження вихідної таблиці можна забезпечити шляхом накладання таких обмежень на усі дрібні таблиці.</p><p><strong>Нормалізація </strong>– це формальний метод аналізу таблиць на основі їх первинних чи потенційних ключів та існуючих функціональних залежностей. Він включає ряд правил, які можуть використовуватися для перевірення окремих таблиць таким чином, щоб уся БД могла бути нормалізованою до необхідного степеню. Якщо деяка вимога не виконується, тоді таблиця, що суперечить цій вимозі, повинна бути розбита на таблиці, кожна з яких окремо задовольняє усім вимогам нормалізації. </p><p>Перші три нормальні форми були запропоновані у 1972 році Едгаром Коддом. При цьому мінімально допустимою формою нормалізації таблиці є 1NF. Мотивацією Кодда для введення додаткових визначень було те, що 2NF є «більш бажаною» на відміну від 1NF, а 3NF, у свою чергу, «більш бажана» на відміну від 2NF. Таким чином, доцільніше проектувати БД у 3NF чим у 1NF чи 2NF. Варто зазначити, що оригінальне визначення Кодда для 3NF має певні неадекватності, і тому згодом ця форма була перероблена Бойсом та Коддом, і, відповідно, отримала назву нормальної форми Бойса-Кодда (BCNF). </p>Через деякий час Фейгіном (Fagin) була визначена нова, четверта нормальна форма (4NF), яка стала четвертою за рахунком, оскільки на момент її створення нормальна форма Бойса-Кодда вважалася третьою. Згодом Фейгін дав визначення ще одної нормальної форми, яку назвав проекційно-з’єднувальною нормальною формою; її також називають п’ятою нормальною формою (5NF).'),
(1307, 332, 3, 1, '<p>Правило 1NF: усі дані, що зберігаються у таблиці, повинні бути атомарними (комірки таблиці не можуть містити у собі повторювані групи (repeating group), тобто масиви даних), а таблиця має мати первинний ключ.</p><p><img src="https://lh3.googleusercontent.com/aJmsIVvsaGmPyPNJclNK3WOr7j_D9O_V-BmHXIxNGeR2gjDeiQkRa2pstmCAfXQ6rOHi-vcPnjzLhdQMe9WJVZn2zJK2KiuDGVhE7-De4B04pkEw9qKSXvXHTPTEFJ7DGpqEsxHQ"></p><p>У наведеному прикладі є дві проблеми: </p><p>1) Неможливо однозначно співставити імена дітей та їх дати народження; </p><p>2) Надто складний пошук, наприклад, за датою народження. </p>\r\n<p>Існує два способи виключення повторюваних груп з ненормалізованих таблиць: </p><p>1) Шляхом рознесення даних повторюваних груп у нові стрічки таблиці з дублюванням даних решта стовпців. Цей спосіб часто називають «вирівнюванням» таблиці. У результаті застосування цього способу в отриману таблицю вноситься певна надлишковість даних, яка в ході подальшої нормалізації буде усунена.</p><p><img src="https://lh3.googleusercontent.com/6HgXYdabCf_0RJsSGQ8DTf-OT-aiOMDQUt7bNp48KkiUG5oFbv9BxC0pP7NU1-xIFs2dKA017tuKOLn2OreUTsduhNh5cGURTwqBqcwHqRsagYk4hu8F6cNNSjE7OwnIja7J8tSp"></p><p>2) Для ненормалізованої таблиці призначається потенційний ключ, після чого повторювані групи виймаються та переміщуються в окремі таблиці разом з копіями потенційного ключа вихідної таблиці, тобто встановлюється зв’язок «один до багатьох». </p><p>Для нових таблиць встановлюються свої первинні ключі. Іноді ненормалізована таблиця може містити декілька повторюваних груп чи включати повторювані групи, що розміщуються в інших повторюваних групах. У таких випадках цей прийом застосовують до тих пір, аж поки повторювані групи не зникнуть зовсім.</p><p><img src="https://lh6.googleusercontent.com/FQuFdQeJ3qJtaeMzhkJHmf-Uhn4yINj-cV-xUFE3FU4_BTFLC_HVrdrQaqgArGRDMU-g64W1Q2YsmQAKk6hCRbhLrGqeHDSg0DUMPwSlRd3rcqqdCpJuIbL5QZbh0aqA_CCw8MlO"></p>Зауваження: 1NF передбачає строге забезпечення цілісності сутностей, тобто усі стрічки таблиці повинні бути різними.'),
(1308, 332, 4, 1, '<p>Правило 2NF: таблиця повинна бути у 1NF, та кожен її неключовий стовпець (що не входить у склад первинного ключа) повинен бути зв’язаний повною функціональною залежністю з первинним ключем ( не повинно бути залежності від частини композитного ключа). Функціональна залежність – це поняття, що визначає певний семантичний зв’язок між стовпцями таблиці. Нехай у таблиці існує множина стовпців X. Деякий стовпець чи множина стовпців A є функціонально залежним від X тоді і тільки тоді, коли для кожної комбінації значень X ставиться у відповідність одне і тільки одне значення A.</p><p>X→A.</p><p>Наприклад, № студентського квитка → Прізвище, Ім’я, Група, Кафедра, №моб.тел. </p><p>та читається: «номером студентського квитка визначаються прізвище, ім’я, група, кафедра та номер мобільного телефону». У цьому взаємовідношенню № студентського квитка називають визначником чи детермінантом – стовпцем, що визначає значення інших стовпців. При цьому визначник може бути і композитним. Варто зазначити, що зворотна функціональна залежність не завжди має місце. Функціональна залежність X→A вважається повною, якщо стовпець чи множина стовпців A є функціонально залежним від X, але не залежить ні від жодного окремо взятого стовпця з множини X. Тобто, якщо видалення будь-якого стовпця з X приводить до втрати цієї залежності. Функціональна залежність X→A вважається частковою, якщо в X є деякий стовпець, при видаленні якого ця залежність зберігається. </p><p>Приклад повної функціональної залежності: Прізвище, Ім’я → Рейтинг</p><p>Приклад часткової функціональної залежності (рис. 3.5): X = {ID, Child’sName, Child’sBirthdate}; A = {Surname, Name} але ID → Surname, Name</p><p><img src="https://lh5.googleusercontent.com/TdbvtBZVwAB5sxlYH7waxTz9D0Ff01xKcT94vvhVkXXi3g57gJjDguZUsrm3B7VGlSb2Wr5qt96Ur6QnJne1OaOcJIlr6e-XqvhJJI_r_LukhDy9qWY9IwERNTYJHvuDKR2iTY8T"></p><p>Для приведення таблиці, зображеної на рис. 4.7, до 2NF необхідно здійснити її декомпозицію, тобто розбити на дві таблиці та встановити між ними зв’язок.</p><p><img src="https://lh4.googleusercontent.com/OfsOlRuWDz1cpqVZqhL_q05GAlAg_sTxfRwo3K76A4iaGKvMFH-sAIKYZu-vSKifdeP0yQTutrEyfQPaZ2ufF1Uc7a8GTdDPvI4UMeQh3xVVYEk4bhIKBQ8ASSWp124Q8ljlcXqu"></p>Зауваження: якщо таблиця має первинний ключ у вигляді одного стовпця, то вона автоматично знаходиться у 2NF. У цьому випадку кожен неключовий стовпець залежить від усього ключа, і часткових залежностей буди не може.'),
(1309, 322, 30, 1, '\\[vxfdxfxcvxcvvcxfdxdfsdfsdf33332222222222\\]\r\n'),
(1310, 318, 0, 2, 'вптпоа'),
(1311, 318, 7, 4, 'бибитбтибтитибт<del>итьтиьитьитьит</del>\n<p><em></em></p>\n<p><strong></strong></p>\n<pre>прлпрдлродпроадроадпорадорпдродпрпд\n</pre>'),
(1312, 318, 6, 1, 'ананшп'),
(1313, 318, 8, 1, '<p>уегнашш</p>\n<p><img src="/images/lecture/3425b7006d2a89e499c66804be875343.jpg"></p>'),
(1314, 328, 5, 1, '\\[dg\\]\r\n                    \\[dgjghghjd\\]\r\n                '),
(1315, 318, 10, 1, 'апороропрлпололмрлолмро<p>ммлмллмрпопллролромолол</p>'),
(1316, 318, 9, 4, '<pre>рмопроп<p>лпрлолрололол</p></pre>'),
(1317, 318, 11, 7, '<p>ььтббьбьбьбьбь</p><p>мороооопоппо</p><p>слсплпрлрлол<br></p>'),
(1318, 329, 10, 12, 'Питання'),
(1319, 329, 11, 1, '<p>рплврпвларпалвправлпрвалпрвларпалвпрвалправлпрвлпрвлпрваплварпвлправпрвлпрвлпрвлпрвлпрвлпрвапралпрапрвларпарпваправрпврпоаврпволпрвапрапрапрварпапрарварпврапоарпаопраопраопраопрапорапорвоарп</p>'),
(1320, 329, 12, 4, '<pre><p>мьтимитмбьтичбтибчтмсибчтмибчтсмбьитсбтиьтсмтистмиьмитсмьитсьмтисмитсбтисмитстистисьитпорчбптисмбтичтмичьтиьчтмиьмитчьтмьитсьитчьтиьстмиьсмтичтсмиьтситмьстьитмьтсьитмьитмьитмьисбмитмбитмбить</p></pre>'),
(1321, 329, 13, 7, '<p>рпитічтьапитьваиптаититаптвапаипьваптапиатпиатпатаиптапиатпаитпаивьпивьапиатпапиатпаптвьпиатьатпиаьиаипьвапиапивапиавтпиатпвтпиапиатпиатпивпитватпватпатпатпвпатпвтьпьвапвьпватпивьпіваьпііваьтпіипвпвпапапа</p>'),
(1322, 329, 14, 1, '\\[воапрвоарповрпвапраправпваллааааааааааааааааааааааааааааооооооооооооооооооооооооооооооооооооооосссссссссссссссссссссссссьььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььччччччччччччччччччччччччччччччччччччччччччччччьььььььььььььььь\\]\r\n'),
(1323, 310, 4, 1, '<p>​dgdfgdfgdfgdf&nbsp;$\\frac{a}{b}$\r\n</p>'),
(1324, 322, 31, 1, '<p>​ясмічсаівавіа</p>'),
(1325, 329, 15, 1, '<p>​фвфывфывфы</p>'),
(1326, 329, 16, 1, '<p>ывавыаыв $\\frac{a}{b}$\n&nbsp;фвывыфввф</p>'),
(1327, 329, 17, 1, '<p>zxczxczxc $\\int$ sadasdasd</p>'),
(1328, 322, 32, 1, '<p><span class="MathJax_Preview" style="color: inherit;"></span></p>\n<div class="MathJax_Display" style="text-align: center;"><span class="MathJax" id="MathJax-Element-2-Frame"><nobr><span class="math" id="MathJax-Span-30" role="math" style="width: 2.849em; display: inline-block;"><span style="display: inline-block; position: relative; width: 2.514em; height: 0px; font-size: 112%;"><span style="position: absolute; clip: rect(2.458em 1000em 4.579em -999.997em); top: -3.736em; left: 0.003em;"><span class="mrow" id="MathJax-Span-31"><span class="mo" id="MathJax-Span-32" style="font-family: MathJax_Size2; vertical-align: 0.003em;">∑</span><span class="mfrac" id="MathJax-Span-33" style="padding-left: 0.17em;"><span style="display: inline-block; position: relative; width: 0.672em; height: 0px; margin-right: 0.114em; margin-left: 0.114em;"><span style="position: absolute; clip: rect(3.407em 1000em 4.188em -999.997em); top: -4.685em; left: 50%; margin-left: -0.276em;"><span class="mi" id="MathJax-Span-34" style="font-family: MathJax_Math-italic;">a</span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; clip: rect(3.184em 1000em 4.188em -999.997em); top: -3.345em; left: 50%; margin-left: -0.22em;"><span class="mi" id="MathJax-Span-35" style="font-family: MathJax_Math-italic;">b</span><span style="display: inline-block; width: 0px; height: 4.021em;"></span></span><span style="position: absolute; clip: rect(0.84em 1000em 1.23em -999.997em); top: -1.281em; left: 0.003em;"><span style="border-left-width: 0.672em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;"></span><span style="display: inline-block; width: 0px; height: 1.063em;"></span></span></span></span></span><span style="display: inline-block; width: 0px; height: 3.742em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 2.191em; vertical-align: -0.809em;"></span></span></nobr></span>\n</div>\\sum \\frac{a}{b}'),
(1329, 313, 0, 2, 'атартр'),
(1330, 313, 1, 1, '<p>​FFFFFFF&nbsp;$\\frac{A}{B}$\r\n</p>'),
(1331, 313, 2, 1, '<p>XCVXCVCXVCX</p>'),
(1332, 313, 3, 1, '<p>cxcxc</p>'),
(1333, 313, 4, 1, '<p>11111</p>'),
(1334, 313, 5, 1, '<p>chkchkhk</p>'),
(1335, 313, 6, 4, '<p>yjxhjxhgj</p>'),
(1336, 313, 7, 1, '<p>xvnxhnxhj</p>'),
(1337, 313, 8, 4, '<del data-redactor-tag="del" data-verified="redactor">​xtt</del><p>​</p>'),
(1338, 341, 2, 1, '<p>3144</p>'),
(1339, 341, 1, 1, '<p>R3RT53T</p>'),
(1340, 322, 33, 12, 'ddd'),
(1341, 329, 20, 1, '<p>fghnfghnfnhsxhnf</p>'),
(1342, 329, 19, 7, '<p>cghmmmn<br></p>'),
(1343, 329, 21, 4, '<p>​cghmcgmjgmgcjgc</p>'),
(1344, 329, 18, 1, '$nfgfhffhgh$\n<p><br></p>'),
(1345, 329, 22, 4, 'hjxfjfghg<p>  <br></p>hvjcghjcghcg<p>ryjfhjxfhjxhf</p>'),
(1346, 329, 23, 1, '<p>bnkmbn ,b,k</p>\n<p> bn,bm, bm, bm, bm,,</p>'),
(1347, 329, 24, 4, '<p>b,bk jhg</p>'),
(1348, 329, 25, 7, '<p>vmvnm vnm nm nbmvbmvmbmb</p>'),
(1349, 329, 26, 1, '$fgjfhmvhmvhmvvhm$\r\n<p>​</p>'),
(1350, 329, 27, 7, '<p>xhjhjcghchggcgjkgj,cgj,cgj,fj</p>'),
(1351, 329, 28, 4, '<p>dtjdj</p>'),
(1352, 329, 30, 7, '<p>zdbzdghzdgjzgdj</p>'),
(1353, 329, 29, 4, '<p>xfjfjxfjxfh</p>'),
(1354, 343, 1, 1, '<p>sfgdfhdgh</p>'),
(1355, 343, 2, 4, '<p>xbn bn</p>'),
(1356, 343, 3, 7, '<p>tkdjkdj</p>'),
(1357, 343, 4, 1, '$nm cbnc,c$\r\n<p>​</p>'),
(1358, 318, 12, 7, 'dfghjhjdghjdjdghnjhgsjfhjfhdf<p>​</p>'),
(1359, 351, 1, 1, '$фрлв$опьь'),
(1360, 351, 2, 1, '<table>\n<tbody>\n<tr>\n	<td>прпрапрапрапрпарпрпрарпа\n	</td>\n	<td>\n	</td>\n	<td>\n	</td>\n</tr>\n<tr>\n	<td>\n	</td>\n	<td>\n	</td>\n	<td>\n	</td>\n</tr>\n</tbody>\n</table>\n<p>Не стану я жалеть о розах,<br> Увядших с легкою весной;<br> Мне мил и виноград на лозах,<br> В кистях созревший под горой,<br> Краса моей долины злачной,<br> Отрада осени златой,<br> Продолговатый и прозрачный,<br><br></p>'),
(1361, 351, 3, 4, '<p>пппппппппппппппппппппппппппппппппппппоооооооооооооооооооооооооооооооооооооооооооооодддддддддддддддддддддддддддддддддддддддддддддддддджжжжжжжжжжжжжжжжжжжжжжжжжжжжвввввввввввввввииииииииииииии</p>'),
(1362, 351, 4, 7, '<p>пглшгшлгшашааплртлрвварпрлаалрварпыал</p>\n<hr>'),
(1364, 351, 7, 1, '<p>чатиситсмимисмисимсьитсмь</p><hr>м иьиьтьти'),
(1366, 351, 8, 7, '<ol>\n	<li><strong></strong><del><em><strong>$мьитьтьи$\n	</strong></em></del></li>\n	<li><del><em><strong>мрьитьтитьиьиьитти мпьптичтрпьртпьртаьртпьртпьр артпьртьпртпьртпьртпьрт  апротаптрьптпбртпбртпб падрпарпоаропропл апдордпаордлпаордпа адпропдлроплро апрлпаордлоапрло адпроплр орпопаплрочапрча</strong></em></del></li>\n	<li><a target="_blank" href="http://www.stihi-rus.ru/Pushkin/stihi/37.htm">http://www.stihi-rus.ru/Pushkin/stihi/37.htm</a></li>\n</ol>'),
(1367, 342, 1, 1, '<p>цуйцуйцу</p>\nыфыфыфыфыфы\n<hr>\n<p>ывывывы</p>'),
(1368, 351, 9, 12, '22222222222</p>'),
(1369, 351, 10, 1, '<p>ппппппппп</p>\n<hr>'),
(1370, 351, 9, 12, 'правлпрвалпрівпрівапрівалпрівалпрлварповраппппппппппппппппппппппппппппппппппілврплрпілпр'),
(1371, 351, 10, 12, 'впвпвапап'),
(1372, 351, 0, 2, 'http://www.ivi.ru/watch/sluzhebnyi_roman/54000'),
(1373, 351, 12, 12, 'Тест теста'),
(1374, 351, 13, 1, '<p>sdfsdfd</p>'),
(1375, 351, 14, 1, '<p>fsdfdsfdsfsd</p>\n<hr>'),
(1376, 351, 15, 12, '1111111111111111111111111111111111111111111111111111111111'),
(1377, 351, 16, 12, '111'),
(1378, 348, 1, 12, '1111'),
(1379, 351, 17, 1, '<table><tbody><tr><td>чапочапо</td><td>про</td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table>'),
(1380, 348, 3, 4, '<p>tdjtujtjtditiyititiuiti</p>'),
(1381, 348, 4, 4, '<p>hbdbhdhbdhgdshgdsfgfhgafjddsjd</p>'),
(1382, 348, 2, 7, '<p>gjmkdgjfhgjhddhjdhdh</p>'),
(1383, 348, 5, 1, '<p>syrjyjryoihsrghsrhgjhjfhskskgsgssghgkf</p>'),
(1384, 348, 6, 1, '<p>$fgdfgdfgdhgfdghsgfjdfjdfdgfjdfgjdj$\r\n​</p>'),
(1385, 348, 7, 12, 'fxhmhhfjhj'),
(1386, 348, 8, 1, '<table><tbody><tr><td>ghnfgh</td><td>fhghgfhfgh</td><td>ghghghf</td></tr><tr><td>fghfghghhghghghghghghgh</td><td>fghgfhfghg</td><td>ghgfhgh</td></tr></tbody></table>'),
(1387, 348, 0, 2, 'https://www.youtube.com/watch?v=wYnayqdP9Ck'),
(1388, 348, 9, 1, '<p> <a href="http://www.povarenok.ru/recipes/show/90676/"><img alt="Восхитительный фруктовый лед или замороженный летний салат на палочке" src="http://www.povarenok.ru/data/cache/2014jun/14/37/770713_45227-150x150x.jpg"> </a></p><p>Вот и наступило лето, хочется чего-то вкусного, освежающего, красивого. Да чтоб еще десерт был натуральным и не вредил фигуре. Знакомые пожелания? Ну что же, это блюдо отвечает всем поставленным требованиям. Попробуйте и убедитесь сами! </p>'),
(1389, 348, 11, 12, 'пелполпр'),
(1390, 348, 13, 7, '<h1><a href="http://www.povarenok.ru/recipes/show/19799/" title="посмотреть рецепт Фруктовый салат"><span style="font-size: 12px;"></span>Фруктовый салат</a> <img alt="пошаговый" src="http://www.povarenok.ru/images/ctt_ic.gif">Это единственное блюдо, которое мой муж просит на каждый день, причем продукты для него покупает сам, без напоминаний о том, чего не хватает. Попробуйте, возможно вам тоже понравится.</h1>\n<p><img src="/images/lecture/8ecd6f49637d3ff91452f6b0864f51cb.jpg"></p>\n<p><br><br>Категория: <nobr><a href="http://www.povarenok.ru/recipes/category/30">Десерты</a></nobr> -&gt; <nobr><a href="http://www.povarenok.ru/recipes/category/218">Фруктовые десерты</a></nobr><br><br>Назначения: <a href="http://www.povarenok.ru/recipes/destiny/35/">Для детей</a>: <a href="http://www.povarenok.ru/recipes/destiny/40/">На десерт</a> <br> <a href="http://www.povarenok.ru/recipes/destiny/2/">На обед</a>: <a href="http://www.povarenok.ru/recipes/destiny/8/">На десерт</a> <br> <a href="http://www.povarenok.ru/recipes/destiny/13/">На полдник</a> <br> <a href="http://www.povarenok.ru/recipes/destiny/16/">На праздничный стол</a> <br> <a href="http://www.povarenok.ru/recipes/destiny/3/">На ужин</a>: <a href="http://www.povarenok.ru/recipes/destiny/11/">На десерт</a> <br></p>'),
(1391, 348, 14, 4, '<p><span style="color: rgb(255, 255, 0);">парррррррррррр<span style="background-color: rgb(255, 255, 0);">р</span></span><span style="background-color: rgb(255, 255, 0);">ррррррррррррррррррррр</span>рррррррррррррррррррррррррррррррррррр</p>\n<p>апраопрррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррррр лоапрррррррррррррррррррррррррррррррррррррррррррр аопррррррррррррррррррррррррррррр</p>\n<p>оарпппппппппппппппппппппппп лаорррррррррррррррррррррррррррррррррррп<br></p>'),
(1392, 348, 12, 1, '$jjyuytudyjhjhguu$'),
(1393, 348, 15, 12, 'Тест без відповіді'),
(1394, 348, 16, 12, 'тест'),
(1395, 359, 2, 1, '<p><span><em data-redactor-tag="em" data-verified="redactor">Из поселка в город выехал мотоциклист со скоростью 60 км/ч. В то же время ему на встречу выехал велосипедист со скоростью 15 км/ч. Они встретились через 2 часа. 1)Кто был ближе до города, когда они встретились мотоциклист или велосипедист? 2)Какое расстояние от города до поселка?</em></span></p><blockquote><ul><b data-redactor-tag="b">Решение:</b><li><strong data-redactor-tag="strong" data-verified="redactor">1) 60 * 2 = 120(км проехал мотоциклист)</strong></li><li><strong data-redactor-tag="strong" data-verified="redactor">2) 15 * 2 = 30 (км проехал велосипедист)</strong></li><li><strong data-redactor-tag="strong" data-verified="redactor">3) 120 + 30 = 150 (км расстояние от поселка до города)</strong></li><li><i data-redactor-tag="i"><strong data-redactor-tag="strong" data-verified="redactor">Ответ: 1) Велосипедист и мотоциклист были на одинаковом расстоянии от города в момент встречи. 2<u data-redactor-tag="u" data-verified="redactor">) 150 км.<br>$150 км$\r\n<br></u></strong></i></li></ul></blockquote>'),
(1396, 359, 1, 4, '<h3>Задача 2</h3>\r\n<p>Вася и Петя ловили рыбу. У Васи хорошо клевало, у Пети хуже. Сколько рыбы они вместе поймали, если Петя поймал на 18 меньше, чем они поймали вместе и у одного из них на 14 меньше, чем у другого.\r\n</p>\r\n<blockquote>\r\n	<ul><b>Решение:</b>\r\n		<li>1) 18 - 14 = 4 (рыбы поймал Петя)</li>\r\n		<li>2) 4 + 18 = 22(поймали Вася и Петя)</li>\r\n		<li><i>Ответ: 22</i></li>\r\n	</ul>\r\n</blockquote>'),
(1397, 359, 3, 7, '<h3>Задача 3</h3><p>Заяц за 2 ч пробегает 14 км, а сокол за 3 ч пролетает 210 км. Во сколько раз сокол движется быстрее зайца? На сколько километ¬ров в час скорость зайца меньше скорости сокола?</p><blockquote><ul><b>Решение:</b><li>1) 14 : 2 = 7 (км/ч скорость зайца)</li><li>2) 21 : 3 = 70(км/ч скорость сокола)</li><li>3) 70 : 7 = 10 (в 10 раз сокол движется быстрее зайца)</li><li>4) 70 – 7 = 63 (на 63 км/ч скорость зайца меньше скорости сокола)</li><li><i>Ответ: в 10 раз сокол движется быстрее зайца, на 63 км/ч скорость зайца меньше скорости сокола</i></li></ul></blockquote>'),
(1398, 359, 0, 2, '<p>fjufyujtyj</p>\n<p>ghkjbn</p>\n<p>ghjkhv,lbhjl</p>\n<p>jgfhkgukgcgjk,jhlcgj,hjl</p>\n<p>gjkhjlkjlkjlkljkljklkklklkjl,fghbjkgjskfhnghbjlxfgbnhxfmghjlkfxgbnhxfghjyldkhnbxflkglhjydlkhnxmgvhkxfjhlkcgmnkglfhjlkdjghlkfkyljdtxlkhbm-glkhsjrtkhjzlkfhjsrtlkyhjzdkghjfghkgllhladfgh kghdjghfdgjd hskfghksghksfh</p>'),
(1399, 360, 1, 4, '<p><img src="/images/lecture/3112a78ebb7079c9a7ea011024d2e355.jpg" data-verified="redactor" data-save-url="/images/lecture/3112a78ebb7079c9a7ea011024d2e355.jpg" alt="аоапрпрпрпр" style="display: block; margin: auto; width: 264px; height: 200px;" rel="display: block; margin: auto; width: 264px; height: 200px;" width="264" height="200"></p><p>​длаопапапаопраолпраолпраопрапрвларпалрпалопрвлапралпраопраолпрварплаопралопаплрапларплварпвлпрлварплапраплрплвраплвпрвалпраправлпралпрвлаправлрвяюпяюяврповларяваопляюавлпааювяапваплавпрвалпрапоавпраопрвопяювапюяпюяврапявапюяваювапаюпарплавпралвпрпарарвлаплвплвл</p><p><br></p>'),
(1400, 360, 2, 12, 'fjghhgf'),
(1401, 360, 3, 1, '<p>$yujyffghghfghfhghfghgfghfxfghgfgjhjhjhjhjgjgygcghjchgjhjcghjhgjhjgjccghj$\r\n​</p>'),
(1402, 348, 17, 12, 'dsdd'),
(1403, 359, 4, 1, '<p>/(миьм/)нгпгргшрщшрощш</p>'),
(1404, 359, 5, 4, '<p>рьпоппропропр</p>'),
(1405, 359, 6, 7, '<p>dhghfggjfjhjhfhfhgfhghfghfghfgh</p>'),
(1406, 359, 8, 12, 'vhjnhj'),
(1407, 359, 9, 12, 'fyy;jkhkghfjhgfghvbnvmbnvmbnvbvnbvnbvbnvbnvbnvmbnvbmvnbmvnbmvbnvmbnvbmvnbmv'),
(1408, 117, 23, 1, '<p>csdfcs</p>'),
(1409, 348, 18, 1, '<p>апраравпарапрапрапрап</p>'),
(1410, 348, 19, 3, '<p>апрарпарапрпр</p>'),
(1411, 348, 20, 4, '<p>укперыапрапрапрар</p>керрпрапрпвапарр<p><img src="/images/lecture/51729831c89d76b170357aaefdd68ae9.png"></p>'),
(1412, 348, 21, 1, '<p>вбаьавпьвапиьапьвоирволпрва</p>вьпаврпваорпавопрваправпрваопа<p><img src="/images/lecture/9129a488cb0fc06ddc184a45c506e868.png"></p><p>впораопраопровапрвоарпвап<br></p>'),
(1413, 349, 1, 12, 'ииииими'),
(1414, 348, 22, 1, '<p>ыловравыааываыв</p><p><img src="/images/lecture/149b9398ac244af7fd4ba08303405c8e.jpg"></p><p>српврва<br></p>'),
(1416, 351, 18, 1, '<hr><p>fdfdfdfdgfdgfdf<br></p>'),
(1417, 351, 19, 1, '<p>gfdsfdsfdsfsdf</p>\n<hr>\n<p>sdsfdsfdsfdsfsdf</p>\n<hr>\n<p>dfssdfsdf</p>'),
(1418, 364, 1, 7, '/(вр/)/[/]\n<p>варапрапангнгнгсанг</p>агонгнгнгнгнгнгнгнгнгнг\n<p><a target="_blank" href="http://rm.itatests.com/">http://rm.itatests.com/</a><br></p>'),
(1419, 364, 2, 4, '<p>bmnv,mbnvmcbncbncmb</p><p>mggnfgfdgbfmdngbdfgbdfngm<br></p>'),
(1420, 364, 3, 1, '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br>Lorem ipsum dolor sit amlt, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p>'),
(1421, 348, 23, 1, '<p><a href="http://qa.intita.com/"></a><span style="font-size: 18px;">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span><br><span style="color: rgb(229, 185, 183);">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span><br><span style="background-color: rgb(73, 68, 41);">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span><br><span style="font-family: monospace;">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><span style="font-family: monospace;"></span></p>'),
(1422, 342, 2, 1, '<p>fxjfhjfjfjhghgjhjhjhgnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh</p>'),
(1423, 365, 1, 1, '<p>/(ggfhgfhfhgfghfhgfhgfhgdfgdgfdgfddgd/)j<span style="color: rgb(255, 255, 0);">gghjghdfjkghdfjkghdfjghdfjghdfgjdfhgjdfhgjfdghjdfghdfjghfjghdfgjdfhgjdfhgjdfghjdfghdfjkghdfjghdfjghdfjg<em>dfdhgjdfhgjfjdfdghdfjghdfjghdfjghdfgjdfhgjdfghjdfghdfjghdfgjhdfgjhdfgjhdfgkltgusrtgsrthghrtguhdfkgjshdg</em></span><em>usthgohgdjkshguiytuahdfsgurygsjhgjshtyahfdsghldghslhgkdjfhgjytehgkdfhglaiadfjhgdfkgjhaigh &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;kahdlg</em>adghdfglagahdfjghdflgldflgsdfglskghlkj</p>'),
(1424, 365, 2, 7, '<p><span style="color: rgb(31, 73, 125);">аопрполрворвпорвлорввярвялорюядвадяваряваорпЛОВава птваповарпоавпр ап раовпялварядадпявап ядвапядвапрвапвапявдадявапо ааповядпявпрваярвплявапрвр <span style="background-color: rgb(183, 221, 232);">иарпавпр аповапрвояядядварпявлдвапдя </span></span><span style="background-color: rgb(183, 221, 232);">двяапявапавоядядваповапвлоапрвапваолпвраповап апоядвапдавпявповавполвапваолпр </span>ваопдвапядавядвдаява авопвапдяпявдвапдвпваопа аповапвапвпядпдаявдп явдпрвапвадпвапдо адрпавлпаро паповаядвавяаявда вадпваопядвпявпаропволап авполярваодявдявд ваплявдвядп</p>'),
(1425, 365, 3, 12, 'авпирловарпвлоарплвфаорпвлофарпловарплфварплфоварплфварплофварполфраплфалопрфвалд'),
(1426, 350, 1, 1, '<p>r6iyuioryiryrurtuyioryurtyu</p>'),
(1429, 364, 4, 7, '<p>Інструкція з формулою&nbsp;\\(x^{a}\\)</p>'),
(1430, 364, 6, 1, '<p>cmcghjcghjcghjghjhgj</p>\n<hr>\n<p>fgnmb,bnm,vnm,v<br></p>'),
(1431, 364, 7, 4, '<p>fgmnfg,hjgfkh</p>'),
(1432, 364, 5, 7, '<p>jkm,hjhujg</p>'),
(1433, 364, 8, 1, '<p>gjbhnfgkhgjk</p><hr><hr><p>fgjhfgkjhfgkjhfkjghdfkghd<br></p>'),
(1434, 364, 9, 1, '<p>fzhfghfh</p>\n<hr>\n<p><br></p>'),
(1435, 364, 10, 1, '<p>сюплроаплроаплдроаплропалроаропрлдпа</p>\n<hr>\n<p>мтомрьтльилолилролролролрлрлрлр<br></p>'),
(1436, 364, 11, 1, '<p>члаоппдлорпалроароалпр</p>\n<hr>\n<p>чворполрополроплоаплораопраоплраопралрпврлпа<br></p>'),
(1437, 364, 12, 4, '<p>птрраоаро</p>\n<hr>\n<p>впсоапопорпор<br></p>'),
(1438, 356, 1, 1, '\\(5-5*5-69=\\)\\(\\frac{4}{8}\\)\\(\\frac{\\frac{4}{4}}{4}\n4+4=8\\)\n<p>​помропро</p>\n<p>\\(5-5*5-69=\\)<br></p>'),
(1439, 356, 2, 4, '\\(ибтьбтьимбтьмибтимтьмиьм\r\nртпорплиртосмитмьимтьоралораопраорпоарп\r\n\\)<p>​</p>'),
(1440, 356, 3, 1, '<p>asdasdasda</p>'),
(1444, 363, 4, 12, 'Скільки вух у слона????!!!!"№;%:?*()_++'),
(1448, 326, 0, 2, 'https://www.youtube.com/watch?v=1SEPEhCFSdk'),
(1449, 326, 1, 1, '<p style="text-align: center;">С <a href="https://ru.wikipedia.org/wiki/2001_%D0%B3%D0%BE%D0%B4" title="2001 год">2001 года</a> называется <b>Одесский государственный аграрный университет</b>. </p><p style="text-align: center;">Подчинен <a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B8%D0%BD%D0%B8%D1%81%D1%82%D0%B5%D1%80%D1%81%D1%82%D0%B2%D0%BE_%D0%B0%D0%B3%D1%80%D0%B0%D1%80%D0%BD%D0%BE%D0%B9_%D0%BF%D0%BE%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B8_%D0%A3%D0%BA%D1%80%D0%B0%D0%B8%D0%BD%D1%8B" title="Министерство аграрной политики Украины" class="mw-redirect">Министерству аграрной политики Украины</a>. IV уровень государственной аккредитации. Больше 7 тысяч студентов, 36 кафедр, 391 преподаватель (41 —<a href="https://ru.wikipedia.org/wiki/%D0%94%D0%BE%D0%BA%D1%82%D0%BE%D1%80_%D0%BD%D0%B0%D1%83%D0%BA" title="Доктор наук">доктора наук</a>, <a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D1%84%D0%B5%D1%81%D1%81%D0%BE%D1%80" title="Профессор">профессора</a> и 165 — <a href="https://ru.wikipedia.org/wiki/%D0%9A%D0%B0%D0%BD%D0%B4%D0%B8%D0%B4%D0%B0%D1%82_%D0%BD%D0%B0%D1%83%D0%BA" title="Кандидат наук">кандидаты наук</a>, <a href="https://ru.wikipedia.org/wiki/%D0%94%D0%BE%D1%86%D0%B5%D0%BD%D1%82" title="Доцент">доценты</a>). Сотрудники университета, помимо преподавательской, ведут опытно-научную работу, выводят новые сорта различных культур<sup><a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%B4%D0%B5%D1%81%D1%81%D0%BA%D0%B8%D0%B9_%D0%B3%D0%BE%D1%81%D1%83%D0%B4%D0%B0%D1%80%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D1%8B%D0%B9_%D0%B0%D0%B3%D1%80%D0%B0%D1%80%D0%BD%D1%8B%D0%B9_%D1%83%D0%BD%D0%B8%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%82%D0%B5%D1%82#cite_note-1">[1]</a></sup>.</p>'),
(1450, 326, 2, 4, '<p>gghjghg</p><p>gkhjgjkh</p><p>klghfkhj</p><p>dlfkghjghkl</p><p>lfgkhjkfghj</p><p>fghjkgh</p><p>gkfhgjk</p><p>dgjhkjgh</p><p>kghkg</p><p>fghjjkghk</p><p>kghkgjh</p><p>fkghgkjhkjdd</p><p><br></p>'),
(1451, 326, 3, 7, '<p>ghgjfgjfjghjgfhjfghjf</p>'),
(1452, 359, 10, 1, '<p>e<strong><em><del><u>yjthytjhyty<span style="font-size: 18px;">htjyht</span>jyhtyht</u></del></em></strong>ythy<span style="color: rgb(255, 255, 0);">hykthrkytk</span>t</p><p>;kgnjcgjkbjhgbjfdhgjfhgjhfdgjkhfgjfdhgjfdhgfhgjkfddgjhhgjkdhgkdfhgkdf</p><p>zhfghfghfdghfdkghdfdhgfdhgfdjghdfjghdfkjghfdkghdkf</p>'),
(1453, 359, 11, 4, '<p>\\(\\frac{\\tfrac{}gh{dh}}{ghgh}\\)\\(\\frac{\\tfrac{}gh{dh}}{ghgh}\\)​</p>'),
(1454, 359, 12, 4, '<p>gjhfhgfhgdghfgkd</p><p><img src="/images/lecture/d69ac90d8691cf7c8bd184bdc5426551.jpg" width="271" height="203" style="width: 271px; height: 203px;"></p>'),
(1455, 359, 13, 1, '<p>dshykgh </p>'),
(1456, 359, 15, 1, '\\(\\left ( gk fjkhjkjhkh\\int kgkjkjkkgkkgkgkkkhkjkjh\\right )\r\n\\frac{fkulcjllhl}{hklklklklklklklklkl}\\)<p>​cbhmkghkgjkhghkgkgkgkgkgkg</p>'),
(1457, 370, 1, 1, '<h1>fjghfggfdghfdhjdkgfdkghfjgjfkgkdfjgkdghfkghdkfghdkfghdfkghkdfgh</h1>\n<h1>znzbgfxmngb</h1>'),
(1458, 370, 2, 4, '<ol>\n	<ol>\n		<li><strong><em><del></del></em></strong></li>\n	</ol>\n	<li>\\(\\boldsymbol{\\mathbf{апоапопа}}\\)гд<a href="егегнгге"><img src="/images/lecture/2ee67b399b847a8a66878cc4e7f13523.jpg" width="283" height="146" style="width: 283px; height: 146px;" alt="кноноеноеееееееееееенг"></a></li>\n</ol>\n<p><br><a href="рмрльрпо" target="_blank">орпоплпо</a></p>\n<p><a href="00000000000000000000000000000000000000" target="_blank">00000000000000000000000000000000000000</a><br></p><strong><em><del></del></em></strong>'),
(1459, 370, 0, 2, 'апапап');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(1460, 370, 3, 7, '<p><span style="font-size: 30px;">55г6г6</span></p>\n<p><span style="font-size: 30px;"><strong><em><del>артьатьатрьатрьартьбврабтбватрбатрбавтпбапт</del></em></strong>абтпвбптвбаптбвтпбваааааааааааапбвтпбаптабвптбваптбтпвбптабптвбтапвбббббббббатпвбтпабтпбвтабавввввввввввввввтпбввввввввввввввтпвбббтпабтпвбтпвбтатвбатпвбтапабтпаптпптпптбвптбб</span></p>'),
(1461, 370, 4, 1, '<h1>dfgsdfgdfgdfgdfgdf</h1>'),
(1462, 359, 14, 1, '<p><span></span><span style="background-color: rgb(229, 185, 183);">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span></p>\n<p><span style="color: rgb(247, 150, 70);">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span></p>\n<p>Lorem ipsu dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>'),
(1463, 359, 16, 1, '<p><span style="font-size: 12px;">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span></p>\n<p><span style="color: rgb(79, 129, 189);">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span></p>\n<p><span style="background-color: rgb(217, 150, 148);">Lorem ipsum dolor sit amet, consecteur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span></p>\n<p><span style="font-family: Georgia;">Lorem ipsum dolor sit amet, consecttur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span></p>'),
(1464, 359, 17, 1, '<p><span style="font-size: 14px;">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span></p>\n<p><span style="color: rgb(255, 255, 0);">Lorem ipsum dolor sit amet, consectetuв adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span></p>\n<p><span style="background-color: rgb(75, 172, 198);">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span></p>\n<p><span style="font-family: ''Times New Roman'';">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span></p>'),
(1465, 359, 18, 1, '<p>рролродрллрподплопдолпролпдолпдолподлподлпрдоплдпролполпролрорпоролдполпдолподлпроплропороароадроар<span></span></p>\n<hr>\n<p><u><span style="font-family: Georgia;"></span></u><img src="/images/lecture/2cfc84d6eff481e78e0693f316d498fb.jpg" width="406" height="306" style="width: 406px; height: 306px;"></p>\n<p>рьпрпьлрплрлпролоплолололрплролплаалпалпапалполаполаполаполвпвдыпжавпавоыжвпоавж</p>'),
(1466, 117, 24, 1, '<p>11111111111</p>'),
(1467, 373, 2, 1, '<p>fkgjfkjhfghfkdjghk</p>'),
(1468, 373, 3, 4, '<p>cghkjgkhjlfh</p>'),
(1469, 373, 1, 4, '<p>cgjhdtghkbjvhjhvhjvhjhvjvhj</p>'),
(1470, 373, 4, 7, '<p>cgjgh</p>'),
(1471, 359, 19, 12, 'bk'),
(1472, 373, 5, 12, 'cg'),
(1473, 370, 5, 4, '<h1>уернаенрыкенкенен</h1>'),
(1474, 373, 6, 1, '<p>аочарочрпо</p><p>тьпьи</p><p><img src="/images/lecture/e5ccdb16f9788e5fce7b6c12fabd7216.png"></p><p>порп<br></p>'),
(1475, 371, 1, 1, '<p>Maryad PRO <span style="font-family: Helvetica;">\\(\\frac{a}{b}\\) </span> \\(\\frac{a}{b}\\)</p>\n<p><span style="font-family: monospace;">\\(\\frac{a}{b}\\)</span><br></p>'),
(1476, 371, 2, 1, '<p>​\\(\\frac{a}{b}\\)</p><p>\\(\\frac{a}{b}\\)<br></p>'),
(1477, 117, 25, 12, 'Фынал тест'),
(1478, 369, 1, 1, '<p>\\(fgfdhghghg\\)</p>\n<p>а<span style="font-size: 12px;">лаопраолпрапралвпра</span>опрлап</p>\n<p>вапрларпа<span style="color: #4f81bd;">олпgапралпрапра</span>ло</p>\n<p><span style="background-color: #ffff00;">апралрпаол</span>праопраопрапрап<br></p>'),
(1479, 369, 2, 4, '<p>fyuyhjugyuyuyu</p><hr><p><br></p>'),
(1480, 370, 6, 1, '<p>абтрбпртпб</p><p>авпрлопрла</p><p>воапралорпалпр</p><p>давпрарпаорпало<br></p>'),
(1481, 370, 7, 12, 'евенрн'),
(1482, 348, 24, 12, 'Тест1'),
(1483, 348, 0, 2, 'https://puzzle-english.com/video/emotions'),
(1484, 348, 25, 1, '<br><p><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0" title="Математика">Математика</a> как специальность научных работников министерства науки и технологий Российской Федерации<sup><a href="https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB%D1%8B_%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B8#cite_note-1">[1]</a></sup> подразделяется на научные специальности</p> <ul><li><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7" title="Математический анализ">Математический анализ</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5" title="Дифференциальное уравнение">Дифференциальные уравнения</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F_%D1%84%D0%B8%D0%B7%D0%B8%D0%BA%D0%B0" title="Математическая физика">Математическая физика</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%93%D0%B5%D0%BE%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D1%8F" title="Геометрия">Геометрия</a> и <a href="https://ru.wikipedia.org/wiki/%D0%A2%D0%BE%D0%BF%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D1%8F" title="Топология">топология</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%A2%D0%B5%D0%BE%D1%80%D0%B8%D1%8F_%D0%B2%D0%B5%D1%80%D0%BE%D1%8F%D1%82%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9" title="Теория вероятностей">Теория вероятностей</a> и <a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F_%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%81%D1%82%D0%B8%D0%BA%D0%B0" title="Математическая статистика">математическая статистика</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F_%D0%BB%D0%BE%D0%B3%D0%B8%D0%BA%D0%B0" title="Математическая логика">Математическая логика</a>, <a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%B5%D0%B1%D1%80%D0%B0" title="Алгебра">алгебра</a> и <a href="https://ru.wikipedia.org/wiki/%D0%A2%D0%B5%D0%BE%D1%80%D0%B8%D1%8F_%D1%87%D0%B8%D1%81%D0%B5%D0%BB" title="Теория чисел">теория чисел</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%92%D1%8B%D1%87%D0%B8%D1%81%D0%BB%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0" title="Вычислительная математика">Вычислительная математика</a></li><li><a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%81%D0%BA%D1%80%D0%B5%D1%82%D0%BD%D0%B0%D1%8F_%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0" title="Дискретная математика">Дискретная математика</a> и математическая <a href="https://ru.wikipedia.org/wiki/%D0%9A%D0%B8%D0%B1%D0%B5%D1%80%D0%BD%D0%B5%D1%82%D0%B8%D0%BA%D0%B0" title="Кибернетика">кибернетика</a></li><li><a target="_blank" href="https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB%D1%8B_%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B8">https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB%D1%8B_%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B8</a></li><li>\\(\\tfrac{4}{8}+8=24\\)</li></ul>'),
(1485, 348, 27, 4, '<p> <span style="color: rgb(255, 255, 0);"><del><em>Эта статья</em></del></span> — <span style="font-size: 12px;">о математическом анализе в классическом понимании — разделе, объединяющем дифференциальное и интегральное исчисления. Об исторических аспектах его возникновения см. <a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7_%D0%B1%D0%B5%D1%81%D0%BA%D0%BE%D0%BD%D0%B5%D1%87%D0%BD%D0%BE_%D0%BC%D0%B0%D0%BB%D1%8B%D1%85" title="Анализ бесконечно малых">Анализ бесконечно малых</a>; о математическом анализе в широком смысле, как современном направлении в математике см. <a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7_%28%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB_%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B8%29" title="Анализ (раздел математики)">Анализ (раздел математики)</a>.</span></p><p><b><span style="color: rgb(12, 12, 12);">Математи́ческий ана́лиз</span></b> <span style="background-color: rgb(75, 172, 198);">(<i>классический математический анализ</i>) — совокупность разделов</span> <a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0" title="Математика">математики</a>, соответствующих историческому разделу под наименованием «<a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7_%D0%B1%D0%B5%D1%81%D0%BA%D0%BE%D0%BD%D0%B5%D1%87%D0%BD%D0%BE_%D0%BC%D0%B0%D0%BB%D1%8B%D1%85" title="Анализ бесконечно малых">анализ бесконечно малых</a>», объединяет <a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D1%84%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D0%B8%D1%81%D1%87%D0%B8%D1%81%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5" title="Дифференциальное исчисление">дифференциальное</a><span class="noprint"><sup><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7#.D0.94.D0.B8.D1.84.D1.84.D0.B5.D1.80.D0.B5.D0.BD.D1.86.D0.B8.D0.B0.D0.BB.D1.8C.D0.BD.D0.BE.D0.B5_.D0.B8.D1.81.D1.87.D0.B8.D1.81.D0.BB.D0.B5.D0.BD.D0.B8.D0.B5">[⇨]</a></sup></span> и <a href="https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D0%B8%D1%81%D1%87%D0%B8%D1%81%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5" title="Интегральное исчисление">интегральное</a><span class="noprint"><sup><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7#.D0.98.D0.BD.D1.82.D0.B5.D0.B3.D1.80.D0.B0.D0.BB.D1.8C.D0.BD.D0.BE.D0.B5_.D0.B8.D1.81.D1.87.D0.B8.D1.81.D0.BB.D0.B5.D0.BD.D0.B8.D0.B5">[⇨]</a></sup></span> исчисления.</p><p><strong>На классическом математическом анализе основывается <a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7_%28%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB_%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B8%29" title="Анализ (раздел математики)">современный анализ</a>, который рассматривается как одно из трёх основных направлений математики (наряду с <a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%B5%D0%B1%D1%80%D0%B0" title="Алгебра">алгеброй</a> и <a href="https://ru.wikipedia.org/wiki/%D0%93%D0%B5%D0%BE%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D1%8F" title="Геометрия">геометрией</a>). При этом термин «математический анализ» в классическом понимании используется, в основном, в учебных программах и материалах<sup><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7#cite_note-1">[1]</a></sup>. В англо-американской традиции классическому математическому анализу соответствуют программы курсов с наименованием «<i>исчисление</i>» (<a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%B8%D0%B9_%D1%8F%D0%B7%D1%8B%D0%BA" title="Английский язык">англ.</a> <i>Calculus</i>).</strong></p> <h2>Содержание</h2>'),
(1486, 348, 28, 4, '<p>опспролпрапроапрало</p>'),
(1487, 348, 26, 7, '<p>лропроалраолралрп</p>'),
(1488, 369, 3, 1, '<p>zghgjxhfjgj</p><hr><p>jdghfjhgkj</p><p style="text-align: center;"><img rel="width: 363px; height: 272px;" style="width: 363px; height: 272px;" src="/images/lecture/b6ef11115298ea020fb57b8c59670cdb.jpg" height="272" width="363"></p><p style="text-align: center;">fhgfjghfjghfjghfjghfghfjgk<br></p>'),
(1489, 369, 4, 1, '<p>ghkhjggjfgfgfghghghghfg</p>'),
(1490, 369, 5, 1, '<p>попрор</p>'),
(1491, 383, 1, 1, '<p>bjnbkjbgkhbngkjnhkgnjhkgk</p>'),
(1492, 369, 7, 1, '<p>\\(вопрароаро\\)</p>\n<p style="margin-left: 20px; text-align: center;"><img rel="width: 274px; height: 207px;" style="width: 274px; height: 207px;" src="/images/lecture/04c9f3b7534b618be1f435c6fadfde8b.jpg" height="207" width="274"></p>\n<p style="margin-left: 20px; text-align: center;">ораопрапрао</p>\n<hr>\n<p><span style="color: rgb(255, 255, 0);">папоапопоа</span></p>\n<p><span style="color: rgb(79, 129, 189);">прлпрлпр</span><span style="color: rgb(79, 129, 189);"></span></p>\n<p><span style="color: rgb(79, 129, 189);"><span style="background-color: rgb(31, 73, 125);">мпоммро</span><span style="background-color: rgb(79, 129, 189);"></span></span><br></p>'),
(1493, 388, 0, 2, 'https://www.youtube.com/watch?v=Az2sPpa_aOo'),
(1494, 381, 1, 1, '<p>tglkhgkhjgk</p>'),
(1496, 381, 4, 4, '<p>4e6e5ytytcgmgmbcn</p>'),
(1497, 381, 2, 7, '<p>rturtuu</p>'),
(1498, 381, 5, 12, 'dtut'),
(1499, 369, 6, 1, '<p><span style="background-color: rgb(253, 234, 218);" rel="background-color: rgb(253, 234, 218);" data-verified="redactor" data-redactor-tag="span" data-redactor-style="background-color: rgb(253, 234, 218);"><strong data-redactor-tag="strong"><em data-redactor-tag="em"><del data-redactor-tag="del">\\(dtyhtuuytutyu\\)\\(dtyhtuuytutyu\\)uretyeuirtyerteiyutytriuyriutyeriutyerityertyreityretyret</del></em></strong></span></p>\n<p><span style="background-color: rgb(253, 234, 218);" rel="background-color: rgb(253, 234, 218);" data-verified="redactor" data-redactor-tag="span" data-redactor-style="background-color: rgb(253, 234, 218);"><strong data-redactor-tag="strong"><em data-redactor-tag="em"><del data-redactor-tag="del">gjkuyiyuiuyiu</del></em></strong></span></p>'),
(1500, 376, 1, 1, '<p>jghkjdfhgfjdkhgdf</p>\n<p>sdjfhjghsjgsjgsdhfgdh</p>\n<p>skjghjdhgshjgjgj</p>\n<p><br></p>'),
(1502, 376, 3, 7, '<p>ryhgrdgjhfgfdghfdjgfhd</p>\n<p>kjsfghdjgdjgfsdjgfdsjfgsd</p>\n<p>dfjksdgfhsgdfhdsgfdsgf</p>\n<p>dskjgdsgfdsgfjdsgfjdsgfjdsgfdjs</p>'),
(1503, 376, 4, 4, '<p>djfhgjdkfhgdfghfd</p>\n<p>skghdshfgdhfgdjf</p>\n<p>djghsfjghjfsghdsjfgdjf</p>'),
(1504, 376, 5, 4, '<p>dggjhdghhdfgfd\r\n</p>\r\n<p>dfgjhdfgdfhgjdfhgjd\r\n</p>'),
(1505, 376, 6, 12, 'idihsdghdjkhdfgjhdf'),
(1506, 376, 7, 1, '<p>у57у676к7</p>'),
(1507, 406, 1, 1, '<p>Інфстркція</p>'),
(1508, 406, 2, 4, '<p>приклад</p>'),
(1509, 406, 3, 7, '<p>інструкція</p>'),
(1510, 117, 26, 7, '<p style="margin-left:20px">1111111111135r4534534</p>\n'),
(1512, 111, 2, 12, 'dsdasd'),
(1513, 111, 3, 12, 'dfghf'),
(1514, 117, 27, 1, '<p>wfsdfdsfdsfdsfsdf</p>'),
(1518, 413, 0, 2, 'https://www.youtube.com/watch?v=3QpqlyrFF2s'),
(1519, 414, 1, 12, 'Test1'),
(1526, 420, 1, 12, 'івівів'),
(1527, 421, 1, 12, 'іувувіів'),
(1528, 422, 0, 2, 'https://www.youtube.com/watch?v=hyZH4kO3TTs'),
(1529, 422, 1, 1, '<p>іфваоєзхжєдлорпеакуівфвауенгшщ9з0хєргопеаквісчаимрьлдж</p>'),
(1530, 422, 2, 4, '<p>ргощдзшгнеаквипьрлдтрждлорпогд</p>'),
(1531, 422, 3, 7, '<p>укпрногшщзжднеквуапоюдпаипрглпролродолждлєш34657890з</p>'),
(1532, 426, 0, 2, 'https://www.youtube.com/watch?v=2iD71AhLDQM'),
(1533, 426, 1, 1, '<p>hgdfjjkhjhkjhkjfk gkhkn;m.m.n jfk</p>'),
(1543, 431, 1, 12, 'ппприи'),
(1544, 431, 2, 1, '<p>fergthyjukilo;p''[poiuytre</p>'),
(1545, 431, 3, 12, 'ddddddvvvv'),
(1547, 432, 1, 1, '<p><strong></strong>рппрроолрьттттттьрооооорорлорлор</p>'),
(1548, 432, 2, 7, '<p>апрропоороррророрррроррорррр</p>'),
(1549, 432, 3, 1, '<p>опоооолптлоотилотлаьвдльдвлпьдлапропрорпрапрпрпрапвпмаротпапмриррпрроррпрпипрппнппппаавааггггг</p>'),
(1552, 432, 6, 3, '<p>ротплдьпи лбьт лотлотвлоптиплотлаотлатррррррррраеапаапап</p>'),
(1554, 432, 7, 7, '<p style="margin-left: 20px;">рооооооооопмппппп</p>'),
(1555, 432, 8, 3, '<p>ррогннгрр</p>'),
(1556, 434, 0, 2, 'https://www.youtube.com/watch?v=TP5Br2WUBNs'),
(1558, 435, 2, 7, '<p>укенгшщфівапролд</p>\n<p>іфвапролд</p>\n<p>івапролдпппппппппп</p>'),
(1559, 435, 3, 3, '<p>вапролджлорпав</p>'),
(1560, 435, 4, 12, 'вапр'),
(1561, 117, 29, 1, '<hr><p><br></p><p><br></p><p><br></p><p><br></p>'),
(1562, 117, 28, 1, '<hr>'),
(1570, 436, 1, 12, 'ааппппа'),
(1577, 439, 1, 1, 'ggggggggggggggggggggggggggggggggggggggggggg'),
(1578, 439, 2, 3, 'sdfghjk,l.;defvgb'),
(1579, 439, 3, 7, '                fsedrtfhuuikop'),
(1588, 446, 2, 12, 'ллллллллзхплкрлазрхедре хдажбавжьи двпбж двьпп жкпдкд жудаа'),
(1590, 117, 30, 12, 'gertthertherh'),
(1591, 117, 31, 7, '<p>​yjrtjtyjrtjrtjrtjyetjrtjrtj\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)\\(\\)</p>'),
(1605, 448, 1, 12, 'нропрпрпррппр'),
(1606, 448, 2, 5, 'ттмптттвприаотполтлтпалротдалодовдаплоадтрдлаптродаптрда\r\nапотпрлютапрдьтпдрьадрльад\r\nпатпдтапдльрдпаапппппппппппп\r\nродлодлждлжд'),
(1610, 448, 3, 5, 'паіпвшорваопитвлаидлвіркаплшркіавшпгрвшгарпилфруіаврілвпр'),
(1611, 448, 4, 5, 'gtggttttttttttttttr'),
(1629, 448, 5, 5, 'gtrfsddgfkmgk.mnygf.nknfdkgndfkjngkfdsnfg,.nfdknk'),
(1630, 448, 6, 5, 'ggggfgfcdxgffdgfgbfbfgb'),
(1631, 448, 7, 5, 'паавпапвававпапа'),
(1632, 448, 8, 5, 'паааппааппапа'),
(1633, 448, 9, 5, 'fffgrfffff'),
(1646, 129, 28, 5, 'fbefbefe\r\nfbsdcbws\r\ncb dm'),
(1647, 129, 29, 5, 'gkrgmnrt\r\ngnr\r\n tl'),
(1665, 117, 33, 1, '<p><a href="http://youtube.com">http://youtube.com</a></p>\r\n'),
(1674, 446, 12, 5, 'павпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        ситипавпвпкпппппппппппппппппппппппппп аипари и  амваипапи и           иаитап        сити'),
(1675, 446, 13, 5, 'vdgrgfh'),
(1702, 448, 10, 12, '33443'),
(1703, 448, 11, 12, '44444444'),
(1736, 447, 1, 1, '<p><input checked="checked" type="radio" /></p>\r\n'),
(1747, 446, 0, 2, 'teryrty'),
(1755, 446, 16, 1, '<p><input alt="" src="https://upload.wikimedia.org/wikipedia/ru/3/39/%D0%98%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5_%D0%B2%D0%B5%D1%80%D0%B1%D0%BB%D1%8E%D0%B4%D0%B0.JPG" style="border-width: 3px; border-style: solid; width: 200px; height: 150px;" type="image" /></p>\r\n'),
(1757, 446, 17, 1, '<blockquote>\r\n<ol>\r\n	<li style="margin-left: 80px;"><sub>ghhghnfgjhgjhgjb&nbsp;</sub>bbbbbbbbbbhhghjhjjjjjjjj<sup>vetggfgh</sup>bghghj</li>\r\n</ol>\r\n</blockquote>\r\n'),
(1758, 446, 18, 1, '<p style="text-align: center;">Предложенный вами текст будет использоваться для улучшения качества машинного перевода. Кроме того, он может быть анонимно показан другим пользователям.</p>\r\n\r\n<p>Предложенный вами текст будет использоваться для улучшения качества машинного перевода. Кроме того, он может быть анонимно показан другим пользователям.</p>\r\n\r\n<p style="text-align: right;">Предложенный вами текст будет использоваться для улучшения качества машинного перевода. Кроме того, он может быть анонимно показан другим пользователям.</p>\r\n\r\n<p style="text-align: justify;">Предложенный вами текст будет использоваться для улучшения качества машинного перевода. Кроме того, он может быть анонимно показан другим пользователям.</p>\r\n'),
(1759, 446, 19, 1, '<p>Предложенный вами текст будет использоваться для улучшения качества машинного перевода. Кроме того, он может б<a accesskey="1" dir="ltr" href="mailto:maksimova.vin@rambler.ru" name="емайл" tabindex="1" title="12" type="12">maksimova.vin@rambler.ru</a>ыть анонимно показан другим пользователям.<a href="mailto:maksimova.vin@rambler.ru?subject=Tema&amp;body=fdhgkhujlbibl%3B">maksimova.vin@rambler.ru</a></p>\n\n<p><a href="https://translate.google.com.ua">https://translate.google.com.ua</a></p>\n'),
(1763, 447, 2, 1, '<ul>\n	<li><strong>5&nbsp;<span class="math-tex">\\(x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\)</span></strong></li>\n</ul>\n\n<ol>\n	<li><strong><span class="math-tex">\\(x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\)</span></strong><span class="math-tex">\\(\\cos (2\\theta) = \\cos^2 \\theta - \\sin^2 \\theta\\)</span></li>\n</ol>\n\n<p>&nbsp;</p>\n\n<table align="center" border="25" cellpadding="2" cellspacing="2" style="height:200px; width:500px">\n	<tbody>\n		<tr>\n			<td>dsdg</td>\n			<td>c cvc</td>\n		</tr>\n		<tr>\n			<td>ccxv &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n			<hr />\n			<p>&nbsp;</p>\n			</td>\n			<td>v cvvvvvvvvvvvvvvgfg</td>\n		</tr>\n		<tr>\n			<td>&nbsp;</td>\n			<td>\n			<hr /></td>\n		</tr>\n	</tbody>\n</table>\n\n<hr />\n<hr />\n<p>(</p>\n\n<div style="page-break-after: always"><span style="display:none">&nbsp;</span></div>\n\n<p><iframe align="right" frameborder="0" height="200" scrolling="no" src="http://qa.intita.com/" width="400"></iframe></p>\n'),
(1764, 447, 3, 12, 'fdggg nytj gj yj jyuy  jyjyj  yjmykmyg ytjj jy m  jjhkh  yjfdggg nytj gj yj jyuy  jyjyj  yjmykmyg ytjj jy m  jjhkh  yj'),
(1765, 447, 4, 5, 'gdfhfgh'),
(1770, 448, 12, 12, 'uygjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhkkkkkkkkkkkkkkkkkkkkkkkkkkkhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhjhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk'),
(1773, 448, 13, 5, 'орнпетрпрорпарр'),
(1796, 448, 14, 7, '<p><input name="button" required="required" type="radio" value="1" /></p>\n\n<p><input name="button" required="required" type="radio" value="2" /></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n'),
(1797, 448, 15, 1, '<p><span style="background-color:#B22222">dsfdsgfdgZ</span></p>\n\n<p><span style="background-color:#FFFF00"><span class="math-tex">\\(x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\)</span></span></p>\n'),
(1798, 448, 17, 4, '<blockquote>\n<p style="margin-left:40px"><span style="font-size:14px">xvxcbc gfjh &nbsp;jgjc csda adads &nbsp; &nbsp; &nbsp;adad</span>xvxcbc gfjh &nbsp;jgjc csda adads &nbsp; &nbsp; &nbsp;adadxvxcbc gfjh &nbsp;jgjc csda adads &nbsp; &nbsp; &nbsp;adadxvxcbc gfjh &nbsp;jgjc csda adads &nbsp; &nbsp; &nbsp;adadxvxcbc gfjh &nbsp;jgjc csda adads &nbsp; &nbsp; &nbsp;adadxvxcbc gfjh &nbsp;jgjc csda adads &nbsp; &nbsp; &nbsp;adadxvxcbc gfjh &nbsp;jgjc csda adads &nbsp; &nbsp; &nbsp;adadxvxcbc gfjh &nbsp;jgjc csda adads &nbsp; &nbsp; &nbsp;adadxvxcbc gfjh &nbsp;jgjc csda adads &nbsp; &nbsp; &nbsp;adadxvxcbc gfjh &nbsp;jgjc csda adads &nbsp; &nbsp; &nbsp;adad</p>\n</blockquote>\n'),
(1799, 448, 16, 7, '<p style="text-align: center;">jgjh<iframe frameborder="0" scrolling="no" src="http://qa.intita.com"></iframe></p>\n'),
(1801, 399, 1, 1, '<p>tyhtyty</p>\r\n'),
(1802, 447, 5, 1, '<hr />\r\n<hr />\r\n<hr />\r\n<hr />\r\n<p>&nbsp;</p>\r\n'),
(1803, 447, 6, 7, '<hr />\r\n<hr />\r\n<hr />\r\n<p>&nbsp;</p>\r\n'),
(1811, 455, 1, 1, '<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n'),
(1812, 455, 2, 3, '<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n'),
(1813, 455, 3, 7, '<p>&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n'),
(1814, 455, 4, 1, '<p><input type="button" />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n\r\n<p><input type="submit" /></p>\r\n\r\n<p><input type="reset" /></p>\r\n'),
(1815, 455, 5, 1, '<p><select name="fgfdg" required="required" size="5"><option value="fgh">gddd</option><option value="gfh">2</option><option value="dfe">3</option><option selected="selected" value="">4</option><option value="dv">5</option><option value="mjhkh">6</option></select></p>\r\n'),
(1816, 455, 6, 1, '<p><input type="radio" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><input checked="checked" name="гг" required="required" type="radio" /></p>\r\n'),
(1817, 449, 2, 1, '<blockquote>\r\n<p>аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;аврпо&nbsp;</p>\r\n</blockquote>\r\n'),
(1819, 449, 4, 7, '<blockquote>\r\n<p>ауцкеацупкрнено</p>\r\n</blockquote>\r\n\r\n<p>т6нкьшгд</p>\r\n'),
(1825, 456, 1, 1, '<p style="text-align:center">&nbsp;</p>\n\n<table align="center" border="5" cellpadding="1" cellspacing="1" style="height:123px; width:500px">\n	<caption>\n	<p>таблиця</p>\n	</caption>\n	<tbody>\n		<tr>\n			<td style="text-align: center;">&nbsp;&nbsp;&nbsp; ернекнекненекнн</td>\n			<td style="text-align: right;">нкенекнекнененнен</td>\n		</tr>\n		<tr>\n			<td style="text-align: center;">нренннн</td>\n			<td style="text-align: right;">нннннннннн</td>\n		</tr>\n		<tr>\n			<td>&nbsp;</td>\n			<td>&nbsp;</td>\n		</tr>\n	</tbody>\n</table>\n\n<p>&nbsp;</p>\n'),
(1826, 456, 2, 12, '<p>кпкап</p>\r\n'),
(1827, 456, 3, 6, 'апкапарперуакупкп'),
(1828, 456, 4, 6, '3цкуеукеуке'),
(1829, 455, 7, 6, '<p>цукцуекупекпарппп</p>\r\n'),
(1830, 456, 5, 1, '<p><select><option value="а">в</option><option value="а">а</option></select></p>\r\n'),
(1832, 456, 6, 1, '<blockquote>\r\n<p>11111111111111111111111dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd</p>\r\n</blockquote>\r\n'),
(1838, 459, 1, 7, '<p>t5tyryet5reyrutfi867i</p>\n'),
(1839, 459, 2, 1, '<p>45456547568</p>\r\n'),
(1840, 460, 1, 12, 'Тестове завдання'),
(1841, 460, 2, 12, '<p>вйцвц</p>\r\n'),
(1842, 460, 3, 6, '<p>проста задача для перевірки ернкегенгенге</p>\r\n'),
(1843, 460, 4, 6, '<p>фаіп</p>\r\n'),
(1844, 460, 5, 6, '<p>дгшн7</p>\r\n'),
(1845, 460, 6, 6, '<p>ме кор човлоп бпло мрапо лмоп св о т во ьлддл тоа&nbsp; ьбоа шкпщш лшощ лрашкопщме кор човлоп бпло мрапо лмоп св о т во ьлддл тоа&nbsp; ьбоа шкпщш лшощ лрашкопщме кор човлоп бпло мрапо лмоп св о т во ьлддл тоа&nbsp; ьбоа шкпщш лшощ лрашкопщме кор човлоп бпло мрапо лмоп св о т во ьлддл тоа&nbsp; ьбоа шкпщш лшощ лрашкопщме кор човлоп бпло мрапо лмоп св о т во ьлддл тоа&nbsp; ьбоа шкпщш лшощ лрашкопщме кор човлоп бпло мрапо лмоп св о т во ьлддл тоа&nbsp; ьбоа шкпщш лшощ лрашкопщме кор човлоп бпло мрапо лмоп св о т во ьлддл тоа&nbsp; ьбоа шкпщш лшощ лрашкопщме кор човлоп бпло мрапо лмоп св о т во ьлддл тоа&nbsp; ьбоа шкпщш лшощ лрашкопщме кор човлоп бпло мрапо лмоп св о т во ьлддл тоа&nbsp; ьбоа шкпщш лшощ лрашкопщме кор човлоп бпло мрапо лмоп св о т во ьлддл тоа&nbsp; ьбоа шкпщш лшощ лрашкопщ</p>\r\n'),
(1847, 460, 8, 1, '<form target="_self">\r\n<p>фваыаывпркврекппр</p>\r\n\r\n<p>&nbsp;</p>\r\n</form>\r\n\r\n<p>чсипасоншлнгщ</p>\r\n'),
(1848, 460, 9, 1, '<p style="text-align: center;"><input type="radio" />&nbsp;впвара</p>\n\n<p style="text-align: center;"><input type="radio" />&nbsp;вапрр</p>\n\n<p><input size="1" style="width: 199px; height: 55px;" type="text" />&nbsp;вариар&nbsp; пкртп прр</p>\n\n<p><textarea cols="1" required="required" rows="1" style="width: 193px; height: 158px;">кепкереоеьртитмси</textarea>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <select></select><input type="button" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <input type="button" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <input type="submit" value="Подача запроса" /></p>\n'),
(1849, 461, 1, 1, '<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>текст</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>текст</p>\n\n<p>текст</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><select></select></p>\n\n<p><select></select></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n'),
(1850, 461, 2, 4, '<p>ненен</p>\r\n'),
(1851, 461, 3, 1, '<p><select name="hello"><option value="sdfdsfds">sdfdsfsd</option><option value="1">1</option><option value="2">2</option><option value="3">3</option></select></p>\r\n'),
(1852, 461, 4, 6, '<p>кегекг</p>\r\n'),
(1853, 461, 5, 12, 'кекпкен'),
(1855, 462, 0, 2, 'https://www.youtube.com/watch?v=i-bmWktNdrk'),
(1856, 462, 1, 1, '<p><strong>псрпордл псрпордл </strong><u><em>ввагорл </em></u> а <s>внгршлодол</s></p>\r\n\r\n<form method="get">&nbsp;</form>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><input checked="checked" name="вавпвап" type="checkbox" />&nbsp; ввавав&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <input checked="checked" type="radio" />&nbsp;&nbsp; впвапвапвап</p>\r\n\r\n<p><input type="checkbox" />&nbsp; сапара&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <input type="radio" />&nbsp;&nbsp; аввпапапап</p>\r\n\r\n<p>&nbsp;</p>\r\n'),
(1857, 462, 2, 1, '<p><input maxlength="20" name="нккаенре" size="5" type="password" value="репоеног" /></p>\n'),
(1858, 462, 3, 3, '<p>евнегнрод</p>\r\n'),
(1859, 462, 4, 4, '<p>кагшщлжь</p>\r\n'),
(1860, 462, 5, 7, '<p>паплождочрит</p>\r\n'),
(1861, 462, 6, 12, '<p>парапропопопроорпо</p>\r\n'),
(1862, 462, 7, 6, '<p>рпаопрлдодис и орпорлдопгоп юододь мрпаопрлдодимрпаопрлдодис и орпорлдопгоп юододь рпаопрлдодис и орпорлдопгоп юододь рпаопрлдодис и орпорлдопгоп юододь рпаопрлдодис и орпорлдопгоп юододь рпаопрлдодис и орполрлоторлдопгоп юододьс и орпорлдопгоп юододь рпаопрлдодис и орпорлдопгоп юододь</p>\r\n\r\n<p style="text-align: center;"><img alt="" src="http://qa.intita.com/images/lecture/1660888020151202095030.png" style="width: 200px; height: 142px;" /></p>\r\n'),
(1863, 462, 8, 9, '<p>dtru686</p>\n'),
(1864, 462, 9, 9, '<p>88787<input type=text id=skipTask1 caseInsensitive=1 /><input type=text id=skipTask2 caseInsensitive=0 /></p>\n'),
(1865, 462, 10, 9, '<p>dtru686</p>\n'),
(1866, 462, 11, 9, '<p>88787<input type=text id=skipTask1 caseInsensitive=1 /><input type=text id=skipTask2 caseInsensitive=0 /></p>\n'),
(1867, 462, 12, 9, '<p>Задача про зайців</p>\n'),
(1868, 462, 13, 9, '<p>Скільки зайців на галявині</p>\n'),
(1869, 462, 14, 9, '<p>Задача про зайців</p>\n'),
(1870, 462, 15, 9, '<p>Скільки зайців на галявині&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n\n<p>&nbsp;&nbsp; <input type=text id=skipTask1 caseInsensitive=1 /></p>\n\n<p>&nbsp;&nbsp; <input type=text id=skipTask2 caseInsensitive=0 /></p>\n'),
(1871, 462, 16, 9, '<p>Задача про зайців</p>\n'),
(1872, 462, 17, 9, '<p>Скільки зайців на галявині&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n\n<p>&nbsp;&nbsp; <input type=text id=skipTask1 caseInsensitive=1 /></p>\n\n<p>&nbsp;&nbsp; <input type=text id=skipTask2 caseInsensitive=0 /></p>\n'),
(1873, 462, 18, 9, '<p>Задача про зайців</p>\n'),
(1874, 462, 19, 9, '<p>Скільки зайців на галявині&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n\n<p>&nbsp;&nbsp; <input type=text id=skipTask1 caseInsensitive=1 /></p>\n\n<p>&nbsp;&nbsp; <input type=text id=skipTask2 caseInsensitive=0 /></p>\n'),
(1875, 462, 20, 9, '<p>Задача про зайців</p>\n'),
(1876, 462, 21, 9, '<p>Вставте пропущене ... &nbsp;&nbsp;</p>\n\n<p>&nbsp;&nbsp; <input type=text id=skipTask1 caseInsensitive=1 /></p>\n\n<p>&nbsp;&nbsp; <input type=text id=skipTask2 caseInsensitive=0 /></p>\n'),
(1877, 462, 22, 9, '<p>Задача про зайців:</p>\n'),
(1878, 462, 23, 9, '<p>Якого кольору зайці в полі:</p>\n\n<p><input type=text id=skipTask1 caseInsensitive=1 /></p>\n\n<p><input type=text id=skipTask2 caseInsensitive=0 /></p>\n\n<p>&nbsp;</p>\n'),
(1879, 462, 24, 9, '<p>Задача про зайців:</p>\n'),
(1880, 462, 25, 9, '<p>Якого кольору зайці в полі:</p>\n\n<p><input type=text id=skipTask1 caseInsensitive=1 /></p>\n\n<p><input type=text id=skipTask2 caseInsensitive=0 /></p>\n\n<p>&nbsp;</p>\n'),
(1881, 461, 6, 9, '<p>пиролдьд</p>\n'),
(1882, 461, 7, 9, '<p>пнррорло</p>\n\n<p><input type=text id=skipTask1 caseInsensitive=1 /></p>\n\n<p><input type=text id=skipTask2 caseInsensitive=0 /></p>\n'),
(1883, 461, 8, 9, '<p>пиролдьд</p>\n'),
(1884, 461, 9, 9, '<p>пнррорло</p>\n\n<p><input type=text id=skipTask1 caseInsensitive=1 /></p>\n\n<p><input type=text id=skipTask2 caseInsensitive=0 /></p>\n'),
(1885, 461, 10, 9, '<p>пиролдьд</p>\n'),
(1886, 461, 11, 9, '<p>пнррорлоее е</p>\n\n<p><input type=text id=skipTask1 caseInsensitive=1 /></p>\n\n<p><input type=text id=skipTask2 caseInsensitive=0 /></p>\n'),
(1887, 460, 10, 12, '<p>Какого цвета ручка:</p>\r\n'),
(1888, 460, 11, 9, '<p>tfh</p>\n'),
(1889, 460, 12, 9, '<p>gjghj</p>\n'),
(1890, 461, 12, 9, '<p>dssdffsfsfsfdss</p>\n<script></script>\n'),
(1891, 461, 13, 9, '<p>T<input type=text id=skipTask1 caseInsensitive=0 /> T<input type=text id=skipTask2 caseInsensitive=0 /> T<input type=text id=skipTask3 caseInsensitive=1 /></p>\n<script></script>\n'),
(1892, 462, 26, 9, '<p><img alt="" src="http://qa.intita.com/images/lecture/1660888020151203131601.png" style="width: 150px; height: 106px;" /></p>\n<script></script>'),
(1893, 462, 27, 9, '<p>Якого кольору олівец</p>\n\n<p>ь в динозавра?</p>\n\n<p><span style="background-color: rgb(173, 255, 47);">ТЕСт</span>&nbsp;Т<input type=text id=skipTask1 caseInsensitive=0 /> Т<input type=text id=skipTask2 caseInsensitive=1 /></p>\n<script></script>'),
(1894, 462, 28, 6, '<p>rtret</p>\r\n'),
(1895, 462, 29, 6, '<p>rtret</p>\r\n'),
(1896, 460, 13, 12, '<p>Дайте відповідь:</p>\r\n'),
(1897, 460, 14, 12, '<p>sdfsdf</p>\r\n'),
(1898, 460, 15, 1, '<p>нкнкннкнке645нненнгнг</p>\n\n<form action="" method="get" name="" target="_self">\n<p>нркергегоенш</p>\n\n<p>фапвор</p>\n</form>\n\n<p><input checked="checked" name="кнопка" type="checkbox" />&nbsp;&nbsp; курс</p>\n\n<p><input type="checkbox" />&nbsp; модуль</p>\n\n<p>&nbsp;</p>\n'),
(1900, 462, 30, 12, '<p><img alt="\\begin{bmatrix} &amp; &amp; \\\\ &amp; &amp; \\end{bmatrix}" src="http://latex.codecogs.com/gif.latex?%5Cbegin%7Bbmatrix%7D%20%26%20%26%20%5C%5C%20%26%20%26%20%5Cend%7Bbmatrix%7D" /> рнпр гргшошл грнгшошщ оршошщіуав</p>\r\n'),
(1901, 460, 16, 12, '<p><img alt="" src="http://qa.intita.com/images/lecture/1660888020151208163855.png" style="width: 100px; height: 71px;" />аоор&nbsp; глрл олрл олр</p>\r\n'),
(1902, 460, 17, 12, '<p><img alt="" src="http://qa.intita.com/images/lecture/1660888020151208165903.png" style="width: 100px; height: 71px;" />аоор&nbsp; глрл олрл олр</p>\r\n'),
(1903, 461, 14, 12, '<p>арнпор</p>\r\n'),
(1904, 463, 1, 12, '<p>ууууу</p>\r\n'),
(1905, 463, 2, 12, '<p>впвра</p>\r\n'),
(1906, 466, 0, 2, 'https://www.youtube.com/watch?v=-e4kGnYNlSo'),
(1907, 466, 1, 12, '<p>&nbsp;</p>\r\n\r\n<p>ввпвапвап апп парапр кпкппк</p>\r\n'),
(1908, 465, 1, 1, '<p>впкенркегьт репа рпи &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; чвпвч &nbsp; &nbsp; &nbsp; &nbsp;куап керррррррррррке ке &nbsp; &nbsp; &nbsp; &nbsp;прлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимапт</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<blockquote>\n<p>рпарпрлор соариа равп &nbsp; рпшапри шшапартиимапт&nbsp;прлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимапт</p>\n</blockquote>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>прлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимаптпрлор соариа равп &nbsp; рпшапри шшапартиимапт</p>\n'),
(1912, 461, 0, 2, 'https://www.youtube.com/watch?v=2iD71AhLDQM'),
(1913, 465, 2, 12, '<p>yuyuyukyu</p>\r\n'),
(1936, 478, 1, 1, '<p>Текст для перевірки редактора.</p>\r\n'),
(1937, 478, 0, 2, 'https://www.youtube.com/watch?v=dVqkjTC0it4'),
(1938, 505, 0, 2, 'https://www.youtube.com/watch?v=dVqkjTC0it4'),
(1939, 510, 0, 2, 'https://www.youtube.com/watch?v=PU38tx4qMSk'),
(1940, 510, 1, 1, '<p>yytytu&nbsp;&nbsp;&nbsp; <strong>hfgyhfgujh <em>jghjhgj</em></strong><em> gjjj&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u>hkh</u>&nbsp;&nbsp; </em><s>rter4teryry</s>&nbsp; ut6ut<sub>rytt</sub> ryryy<sup> 6ut t</sup></p>\r\n\r\n<p><input type="checkbox" /></p>\r\n\r\n<p><input checked="checked" type="checkbox" /></p>\r\n\r\n<p><input type="radio" /></p>\r\n\r\n<p><input checked="checked" type="radio" /></p>\r\n\r\n<ol>\r\n	<li>y87ui</li>\r\n	<li>ui.</li>\r\n</ol>\r\n\r\n<ul>\r\n	<li>u9yg8iy</li>\r\n	<li>uuuhiu</li>\r\n</ul>\r\n\r\n<p style="text-align: center">jhy</p>\r\n\r\n<blockquote>\r\n<p style="text-align: center">uyuiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiyh ujyhju ghjghj&nbsp; ygjhj hjghuju gghj ghj gjguyu</p>\r\n</blockquote>\r\n\r\n<p style="text-align: center">&nbsp;</p>\r\n\r\n<p style="text-align: center">&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n'),
(1941, 510, 2, 3, '<p><img alt="\\frac{2}{3}" src="http://qa.intita.com/content/module_1/lecture_510/images/20151217123418.gif" /></p>\r\n'),
(1942, 117, 34, 1, '<p>11111</p>\r\n'),
(1943, 466, 2, 12, '<p>hrthrhrt</p>\r\n'),
(1944, 466, 3, 12, '<p>trhthtdh</p>\r\n');
INSERT INTO `lecture_element` (`id_block`, `id_lecture`, `block_order`, `id_type`, `html_block`) VALUES
(1945, 464, 1, 1, '<p>dgg</p>\r\n\r\n<blockquote>\r\n<p>gdfgfhygjhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh</p>\r\n</blockquote>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>gffh fhgh fhh &nbsp;gffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fhgffh fhgh fh</p>\r\n</blockquote>\r\n'),
(1946, 510, 0, 2, 'https://www.youtube.com/watch?v=dVqkjTC0it4'),
(1949, 464, 0, 2, 'https://www.youtube.com/watch?v=dVqkjTC0it4'),
(1950, 514, 1, 6, '<p>рнекргкергпо</p>\r\n'),
(1951, 461, 15, 1, '<p><a href="http://qa.intita.com/course/ua/php/intro/11/1?editCKE">http://qa.intita.com/course/ua/php/intro/11/1?editCKE</a></p>\r\n'),
(1953, 117, 35, 1, '<p><a href="http://qa.intita.com/course/ua/php/intro/11/">http://qa.intita.com/course/ua/php/intro/11/</a></p>\r\n'),
(1954, 510, 3, 9, '<p>ftrdgrdtgr54y6547</p>\n'),
(1955, 510, 4, 9, '<p><input type=text id=skipTask1 caseInsensitive=1 /></p>\n'),
(1956, 513, 1, 12, '<p>dxrtfdhg</p>\r\n'),
(1957, 513, 2, 6, '<p>tgfyhghk</p>\r\n'),
(1958, 513, 3, 9, '<p>3r3</p>\n'),
(1959, 513, 4, 9, '<p><input type=text id=skipTask1 caseInsensitive=1 /></p>\n'),
(1960, 513, 5, 12, '<p>1</p>\r\n'),
(1961, 513, 6, 9, '<p>1</p>\n'),
(1962, 513, 7, 9, '<p><input type=text id=skipTask1 caseInsensitive=1 /></p>\n\n<p>2</p>\n'),
(1963, 513, 8, 6, '<p>1</p>\r\n'),
(1964, 461, 16, 6, '<p>Задача для студента</p>\r\n'),
(1965, 513, 9, 1, '<p><img alt="" src="http://qa.intita.com/content/module_1/lecture_513/images/course3Image20151221095905.png" style="width: 109px; height: 108px;" />\r\n<audio controls="" src="http://qa.intita.com/content/module_1/lecture_513/audio/test20151221095930.mp3">&nbsp;</audio>\r\n</p>\r\n\r\n<p><img alt="^{_{a}^{c}\\textrm{d}}" src="http://qa.intita.com/content/module_1/lecture_513/images/20151221095955.gif" /></p>\r\n'),
(1966, 461, 17, 9, '<h3>Завдання (тест)</h3>\n'),
(1967, 461, 18, 9, '<p>тест: введіть відповідь 2+3</p>\n\n<p><input type=text id=skipTask1 caseInsensitive=1 /></p>\n'),
(1968, 117, 36, 6, '<p>скыки ныг в корови?</p>\r\n'),
(1969, 466, 4, 6, '<p>ghjhb</p>\r\n'),
(1970, 100, 51, 6, '<p>мопшлозждє</p>\r\n'),
(1971, 117, 37, 9, '<p>1+2</p>\n'),
(1972, 117, 38, 9, '<p>1+2=<input type=text id=skipTask1 caseInsensitive=1 /></p>\n'),
(1973, 510, 5, 1, '<p>fghfgfdgfdhdcgfdf</p>\r\n'),
(1974, 516, 0, 2, 'https://www.youtube.com/watch?v=8jths5wtiUI'),
(1975, 516, 1, 1, '<p style="text-align: center;"><span style="font-size:18px;"><span style="font-family:georgia,serif;"><strong>Натуральні волокна тваринного походження</strong></span></span></p>\n\n<p>&nbsp;</p>\n\n<p><span style="font-size:18px;"><em><strong>Шовк</strong></em></span> - складається з волокна тваринного (білкового) походження. Шовкові нитки отримують з коконів гусениць тутового шовкопряда. До шовкової групи відносяться такі тканини, як - <u><span style="font-size:14px;">вуаль, шифон, крепдешин, атлас чесуча, креп, креп-жоржет, туаль, фай, тафта, парча, фуляр</span></u> та ін</p>\n\n<ul>\n	<li>Традиційно, шовк вважається одним з найдорожчих різновидів тканини.</li>\n	<li>Вироби з шовкової тканини дуже легкі, міцні, красиві.</li>\n	<li>Мають приємний блиск, добре регулюють температуру тіла</li>\n</ul>\n\n<ol>\n	<li>До недоліків шовку можна віднести те, що тканина сильно мнеться і чутлива до дії ультрафіолетових променів.</li>\n	<li>Часто до натурального шовковому волокну додають іншого роду волокна для отримання нових цікавих фактур і різних ефектних переплетень.</li>\n</ol>\n\n<p>Варто відзначити, що також випускається штучні і синтетичні шовкові тканини. p align=&quot;justify&quot;&gt; Шерсть - натуральні волокна тваринного (білкового) походження. В якості сировини використовується волосяний покрив тварин - овеча вовна, верблюжа шерсть, вовна лами, кролика та ін До групи вовняних тканин входять: саржа, сукно, твід, бостон, коверкот, шевйот, дюветін і пр. Шерсть різних тварин відрізняється за якістю, властивостям і області застосування. Єдина спільна характеристика всіх типів вовни - це виняткову якість утримувати тепло. Значну масу вовни (94-96%) для підприємств текстильної промисловості поставляє вівчарство. Натуральні вовняні тканини м&#39;які, еластичні, легкі, повітропроникні. Товщина тканин може бути різною, існують як товсті, так тонкі вовняні матерії. Тканини з вовни практично не мнуться. br/&gt;</p>\n\n<blockquote>\n<p><input type="radio" />Натуральне волокно мінерального походження: азбест</p>\n\n<p><input checked="checked" type="radio" />натуральний волокно мінеральний рослинний</p>\n</blockquote>\n\n<p><img alt="" src="http://qa.intita.com/content/module_179/lecture_516/images/images20151224121959.jpg" style="width: 259px; height: 194px; float: left;" /></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><a href="http://ukrbukva.net/66529-Natural-nye-volokna.html">http://ukrbukva.net/66529-Natural-nye-volokna.html</a></p>\n\n<p>&nbsp;</p>\n\n<p><img alt="\\begin{bmatrix} &amp; &amp; &amp; \\\\ &amp; &amp; &amp; \\end{bmatrix}" src="http://qa.intita.com/content/module_179/lecture_516/images/20151224122216.gif" />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img alt="\\frac{\\partial }{\\partial x}" src="http://qa.intita.com/content/module_179/lecture_516/images/20151224122251.gif" /></p>\n'),
(1976, 516, 3, 3, '<table border="1" cellpadding="1" cellspacing="1" style="width:500px;">\n	<tbody>\n		<tr>\n			<td>трлдод</td>\n			<td>ощдожд</td>\n		</tr>\n		<tr>\n			<td>&nbsp;</td>\n			<td>&nbsp;</td>\n		</tr>\n		<tr>\n			<td>&nbsp;</td>\n			<td>&nbsp;</td>\n		</tr>\n	</tbody>\n</table>\n\n<p><img alt="\\left\\{\\begin{matrix} 1 &amp;2 &amp;3 \\\\ 4 &amp;5 &amp;6 \\end{matrix}\\right." src="http://qa.intita.com/content/module_179/lecture_516/images/20151224122552.gif" />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; нршлоджлждэж\\э\\ээ</p>\n\n<p>&nbsp;</p>\n'),
(1977, 516, 2, 4, '<p>пгшрдлждэ,</p>\r\n'),
(1978, 516, 4, 7, '<p>епвснплд&nbsp;<img alt="" src="http://qa.intita.com/content/module_179/lecture_516/images/spellcheck20151224122815.png" style="width: 512px; height: 512px;" /></p>\r\n'),
(1979, 103, 37, 9, '<p>dfbbdfvfbdfnbdfn</p>\n\n<p>&nbsp;</p>\n'),
(1980, 103, 38, 9, '<p>.kj./jk./jk/jk/jj/j/jbj/jb/bjv/. m,.</p>\n'),
(1981, 516, 5, 12, '<p><span style="color:#0000CD;"><u><strong>Натуральні волокна</strong></u>&nbsp;</span>бувають:</p>\r\n\r\n<p><img alt="" src="http://qa.intita.com/content/module_179/lecture_516/images/images20151224123249.jpg" style="width: 259px; height: 194px;" /></p>\r\n'),
(1982, 516, 0, 2, 'https://www.youtube.com/watch?v=t9qtuY1XE5w'),
(1983, 516, 6, 9, '<p>Вправа для лічби:</p>\n\n<p><img alt="\\begin{bmatrix} 2&amp; 3 &amp; \\\\ 1&amp; 2 &amp; \\\\ &amp; &amp; \\\\ &amp; &amp; \\\\ &amp; &amp; \\end{bmatrix}" src="http://qa.intita.com/content/module_179/lecture_516/images/20151224131626.gif" /></p>\n\n<p><img alt="" src="http://qa.intita.com/content/module_179/lecture_516/images/images20151224131644.jpg" style="width: 259px; height: 194px;" /></p>\n'),
(1984, 516, 7, 9, '<p><strong>Порахуйте</strong> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="font-size:28px;"><span style="color:#800000;"><u><em><strong>2+2=</strong></em></u></span></span>?</p>\n\n<p><input type=text id=skipTask1 caseInsensitive=1 /></p>\n\n<p>&nbsp;</p>\n'),
(1985, 516, 8, 1, '<h3>Будова і властивості волокон.</h3>\r\n\r\n<p>Властивості волокон залежать від їх будови. Всі текстильні волокна належать до високо-молекулярних сполук. Макромолекула полімеру складається з великої кількості однакових чи різних багаторазово повторюваних елементарних ланок, з&rsquo;єднаних у ланцюг основними хімічними зв&rsquo;язками головних валентностей. Існує три види структури макромолекул: лінійна, розгалужена, просторова.<br />\r\n<em>Природне волокно</em>&nbsp;бавовни має лінійну структуру макромолекул, волокна вовни (білок-каротин) мають сітчасту структуру. У вовні макромолекули кератину менш орієнтовані і більш зігнуті, що зумовлює меншу міцність і більшу розтяжність волокна.&nbsp;<em>Хімічні волокна</em>здебільшого мають лінійну або розгалужену структуру. Властивості текстильних волокон поділяються на геометричні, механічні, гігієнічні та хімічні. До основних геометричних властивостей волокон належать лінійна густина, довжина, хвилястість або звитість.</p>\r\n\r\n<p>Лінійна густина (товщина) волокна Т-текс характеризується масою, яка припадає на одиницю довжини волокна. Лінійну густину волокна записують у мілітексах (мтекс), декатексах (дтекс). Що менша лінійна густина, то тонше волокно і відповідно менший його поперечний переріз. Довжина волокна характеризується найбільшою відстанню між його кінцями в розправленому вигляді й вимірюється в міліметрах, сантиметрах, метрах, кілометрах. Самі найкоротші волокна це бавовняний пух, а найдовші &ndash; натуральні шовкові волокна. Довжина штучних і синтетичних може бути довільною. Від довжини волокон залежать спосіб прядіння, товщина та міцність одержаної пряжі. З довгих волокон виробляється тонка і гладенька пряжа, а з коротких волокон виробляється товста пухка пряжа.</p>\r\n\r\n<p>Хвилястість, або звитість, волокон є їх позитивною властивістю, вона може бути плоскою і спіралеподібною. Натуральні волокна (вовна, бавовна) мають природну звитість, хімічним волокнам звитість надається спеціально під час їх виготовлення для збільшення чіпкості, розтяжності, об&rsquo;ємності. Пряжа, виготовлена зі звитих волокон, міцніша, ніж пряжа з гладких волокон. До механічних властивостей волокон належать міцність, подовження, стійкість до тертя, витривалість, довговічність. Міцність волокон характеризується розривним навантаженням, тобто, найбільшим зусиллям, яке витримує волокно в момент розриву. Що більше навантаження витримує волокно, то воно міцніше.</p>\r\n\r\n<p>&nbsp;</p>\r\n'),
(1986, 516, 9, 9, '<p>Вправа для лічби:&nbsp;</p>\n'),
(1987, 516, 10, 9, '<p>Підрахуйте:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; два+два=</p>\n\n<p><input type=text id=skipTask1 caseInsensitive=1 /></p>\n'),
(1988, 517, 1, 9, '<p><span style="color:#FF0000;"><strong>Test: </strong></span><span style="background-color:#00FFFF;">задача</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<s> кнпр&nbsp; </s><sub>енркер</sub>раепрпр<sup>рнкер</sup> пптттт</p>\n\n<p>&nbsp;</p>\n\n<p><img alt="\\sum_{4}^{6}" src="http://qa.intita.com/content/module_179/lecture_517/images/20151226130258.gif" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img alt="\\sum_{4}^{6\\because впрп}" src="http://qa.intita.com/content/module_179/lecture_517/images/20151226130323.gif" /></p>\n\n<p>&nbsp;</p>\n\n<div hello="">\n<audio controls="" src="http://qa.intita.com/content/module_179/lecture_517/audio/папа — vam zvonit nastya Zvonilki20151226130353.mp3">&nbsp;</audio>\n</div>\n\n<div hello="">&nbsp;</div>\n\n<div hello="">&nbsp;</div>\n\n<div hello="">&nbsp;</div>\n\n<div hello="">\n<table border="1" cellpadding="1" cellspacing="1" style="width: 500px;">\n	<tbody>\n		<tr>\n			<td style="text-align: center;">&nbsp;</td>\n			<td>&nbsp;</td>\n		</tr>\n		<tr>\n			<td>&nbsp;</td>\n			<td>&nbsp;</td>\n		</tr>\n		<tr>\n			<td>&nbsp;</td>\n			<td>&nbsp;</td>\n		</tr>\n	</tbody>\n</table>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n</div>\n'),
(1989, 517, 2, 9, '<p><input type=text id=skipTask1 caseInsensitive=1 /></p>\n\n<p><input type=text id=skipTask2 caseInsensitive=0 /></p>\n'),
(1990, 127, 26, 1, '<p><br />\r\n<a href="https://www.youtube.com/watch?v=8uuj9xyEpzg">https://www.youtube.com/watch?v=8uuj9xyEpzg</a></p>\r\n'),
(1991, 518, 0, 2, 'https://www.youtube.com/watch?v=dVqkjTC0it4'),
(1992, 518, 1, 1, '<p><span style="font-size:14px;"><u><em><strong>Основні принципи </strong></em></u></span></p>\n\n<ul>\n	<li><span style="font-size:14px;"><u><em><strong>варарпарпар</strong></em></u></span></li>\n	<li><span style="font-size:14px;"><u><em><strong>нрапрпаопрор</strong></em></u></span></li>\n	<li><span style="font-size:14px;"><u><em><strong>паопопропрл</strong></em></u></span></li>\n</ul>\n\n<blockquote>\n<p><span style="color: rgb(34, 34, 34); font-family: ''Helvetica Neue'', Helvetica, Roboto, Arial, sans-serif; font-size: 14.44px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 23.104px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; display: inline !important; float: none; background-color: rgb(255, 255, 255);"><strong>Підбір персоналу</strong> &mdash; <u>це процес вивчення психологічних і професійних якостей працівника</u> з метою встановлення його відповідності до вимог робочого місця і підбору з наявних претендентів того, хто найбільше підходить на це робоче місце, з врахуванням його кваліфікації, спеціальності, особистих якостей, здібностей, характеру та інтересів організації. Це є досить складний і дорогий процес. Процес підбору здійснюється поетапно. Спочатку проводиться попередня співбесіда; заповнення заяв і анкет; співбесіда з менеджером з персоналу; тестування, перевірка рекомендації і послужного списку, медичний огляд. За їх результатами лінійні керівники або менеджер з персоналу приймають остаточне рішення про найм на роботу. При відборі персоналу потрібно керуватись такими принципами:</span></p>\n</blockquote>\n\n<p style="margin-left: 280px;">гшшролро</p>\n\n<p style="margin-left: 280px;">пргорорлорл</p>\n\n<ol>\n	<li>егкгенгенгнш</li>\n	<li>аенреагоншгнш</li>\n</ol>\n\n<p style="text-align: center;"><a href="http://library.if.ua/book/45/3079.html">http://library.if.ua/book/45/3079.html</a></p>\n\n<p style="text-align: center;"><span class="math-tex">\\(x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\)</span></p>\n\n<p style="text-align: center;"><img alt="\\widetilde{231}" src="http://qa.intita.com/content/module_187/lecture_518/images/20151229163010.gif" /></p>\n\n<p style="text-align: center;"><img alt="\\begin{bmatrix} 1 &amp;2 &amp;3 \\\\4 &amp; 5&amp;6 \\\\ 7&amp;8 &amp;9 \\\\ 0 &amp;0 &amp;0 \\end{bmatrix}" src="http://qa.intita.com/content/module_187/lecture_518/images/20151229163122.gif" /><img alt="\\begin{bmatrix} 1 &amp;2 &amp;3 \\\\4 &amp; 5&amp;6 \\\\ 7&amp;8 &amp;9 \\\\ 0 &amp;0 &amp;0 \\end{bmatrix}" src="http://qa.intita.com/content/module_187/lecture_518/images/20151229163132.gif" /></p>\n\n<p style="text-align: center;">&nbsp;</p>\n\n<p style="text-align: center;">&nbsp;</p>\n'),
(1993, 518, 2, 1, '<p><img alt="" src="http://qa.intita.com/content/module_187/lecture_518/images/b0zvdWaBXXs20151229163245.jpg" style="width: 453px; height: 604px;" /></p>\r\n'),
(1994, 518, 3, 3, '<table border="1" cellpadding="1" cellspacing="1" style="width: 500px;">\r\n	<tbody>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><img alt="\\left \\| \\right \\|" src="http://qa.intita.com/content/module_187/lecture_518/images/20151229163322.gif" /></p>\r\n'),
(1995, 518, 4, 4, '<p>енншлнпсшлблол</p>\r\n\r\n<blockquote>\r\n<p>bкаенрнрнрнрнрнрнрнрнрнрнрнрнрнрнрнрнрнрнрнрнрсеаь аепркееееееееееееееееееееееееееееееееет енр</p>\r\n</blockquote>\r\n'),
(1996, 518, 5, 7, '<p style="text-align: center;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; гш шгншгшл547вкь чгк ьгне бшлганш</p>\r\n\r\n<p style="text-align: center;">шщртожтщшєхжщзї\\єзх\\</p>\r\n\r\n<p style="text-align: center;">ї</p>\r\n\r\n<p style="text-align: center;"><span class="math-tex">\\(x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\)</span></p>\r\n'),
(1997, 518, 6, 12, '<p>Питання:</p>\r\n'),
(1998, 518, 7, 12, '<p><span style="color: rgb(34, 34, 34); font-family: ''Helvetica Neue'', Helvetica, Roboto, Arial, sans-serif; font-size: 14.44px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 23.104px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; display: inline !important; float: none; background-color: rgb(255, 255, 255);"><strong>Підбір персоналу</strong> &mdash; <u>це процес вивчення психологічних і професійних якостей працівника</u></span></p>\r\n\r\n<p>&nbsp;</p>\r\n'),
(1999, 514, 2, 12, '<p>апопопр</p>\r\n'),
(2000, 518, 8, 12, '<p>вквпр</p>\r\n'),
(2001, 518, 9, 12, '<p>уніке5гре6кг е5генг</p>\r\n'),
(2002, 518, 10, 12, '<p>When the teacher adds the test - the<strong> test is not displayed correctly</strong></p>\r\n'),
(2003, 518, 11, 12, '<p><strong>When the teacher adds the test</strong> - the test is not displayed correctly <img alt="\\left ( 2\\right 3)" src="http://qa.intita.com/content/module_187/lecture_518/images/20151229180802.gif" /></p>\r\n'),
(2004, 519, 1, 12, '<p>кунпке куен кен ке кне нке</p>\r\n'),
(2005, 518, 12, 12, '<p>нрпишлощдлдж</p>\r\n\r\n<p style="text-align: center;">Закрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перепрм д редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням новогоЗакрийте попередні блоки перед редагуванням нового</p>\r\n'),
(2006, 518, 13, 6, '<p><img alt="\\left \\{ 456 \\right \\}" src="http://qa.intita.com/content/module_187/lecture_518/images/20151229184939.gif" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img alt="\\sum \\left ( 6786897 \\right )\\left \\{ 456 \\right \\}" src="http://qa.intita.com/content/module_187/lecture_518/images/20151229185009.gif" /></p>\r\n'),
(2007, 518, 14, 6, '<p>dccvf</p>\r\n'),
(2008, 518, 15, 12, '<p>fvfgv</p>\r\n'),
(2009, 522, 1, 12, '<p>fgvjhgjkhnkljmn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8y8ihio;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img alt="rac{2}{5}" src="http://qa.intita.com/content/module_188/lecture_522/images/20160104184134.gif" /> jguhikjhilk 897y<img alt="" src="http://qa.intita.com/content/module_188/lecture_522/images/DDjLVeIBFCg20160104184442.jpg" style="width: 600px; height: 450px;" /></p>\r\n'),
(2010, 537, 1, 1, '<p>уке5ме4</p>\r\n'),
(2011, 537, 2, 12, '<p>т чік657к6ь&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img alt="3sum 5" src="http://qa.intita.com/content/module_193/lecture_537/images/20160105182818.gif" /></p>\r\n'),
(2012, 537, 3, 7, '<blockquote>\n<p>екагоеньент г7</p>\n</blockquote>\n'),
(2013, 537, 4, 4, '<blockquote>\r\n<p>ф4я6т н5ічент67 5огн7ьт 5г6нт</p>\r\n</blockquote>\r\n'),
(2014, 537, 5, 3, '<p><br />\r\n<img alt="\\begin{bmatrix} 1 &amp;2 &amp;5 &amp; &amp; &amp; &amp; &amp; \\\\ &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\\\ &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\\\ &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\\\ &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\end{bmatrix}" src="http://qa.intita.com/content/module_193/lecture_537/images/20160105183045.gif" /></p>\r\n'),
(2015, 537, 6, 6, '<p>&nbsp;вкг бґсгьн7шг свнш688888 <img alt="" src="http://qa.intita.com/content/module_193/lecture_537/images/DDjLVeIBFCg20160105183225.jpg" style="width: 600px; height: 450px;" /></p>\r\n'),
(2016, 537, 7, 9, '<p>ікчгь7л5чб&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ь6бг8дш7</p>\n'),
(2017, 537, 8, 9, '<p>&nbsp;бг7н6</p>\n'),
(2018, 537, 9, 6, '<p>енорегть т т</p>\r\n'),
(2019, 537, 10, 9, '<p>роььрот</p>\n'),
(2020, 537, 11, 9, '<p>роьттиь</p>\n'),
(2021, 537, 12, 9, '<p>роььрот</p>\n'),
(2022, 537, 13, 9, '<p>роьттиь</p>\n'),
(2023, 537, 14, 9, '<p>роььрот</p>\n'),
(2024, 537, 15, 9, '<p>роьттиь</p>\n'),
(2025, 537, 16, 9, '<p>роььрот</p>\n'),
(2026, 537, 17, 9, '<p>роьттиь</p>\n'),
(2027, 537, 18, 9, '<p>укгнрг7ке6г</p>\n'),
(2028, 537, 19, 9, '<p>кег8око</p>\n'),
(2029, 537, 20, 9, '<p>укгнрг7ке6г</p>\n'),
(2030, 537, 21, 9, '<p>кег8око</p>\n'),
(2031, 537, 22, 9, '<p>укгнрг7ке6г</p>\n'),
(2032, 537, 23, 9, '<p>кег8око</p>\n'),
(2033, 537, 24, 9, '<p>укгнрг7ке6г</p>\n'),
(2034, 537, 25, 9, '<p>кег8окогон6г</p>\n'),
(2035, 537, 26, 9, '<p>роььрот</p>\n'),
(2036, 537, 27, 9, '<p>роьттиь</p>\n'),
(2037, 537, 28, 1, '<p>htghntgxfjnhyjhj</p>\r\n'),
(2038, 537, 29, 3, '<p>trjgfjidyrtikuiku</p>\r\n');

-- --------------------------------------------------------

--
-- Структура таблицы `lecture_element_lecture_page`
--

CREATE TABLE IF NOT EXISTS `lecture_element_lecture_page` (
  `element` int(10) NOT NULL,
  `page` int(10) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Дамп данных таблицы `lecture_element_lecture_page`
--

INSERT INTO `lecture_element_lecture_page` (`element`, `page`) VALUES
(317, 1),
(306, 1),
(393, 1),
(310, 2),
(312, 3),
(314, 4),
(316, 5),
(319, 6),
(323, 7),
(322, 7),
(326, 8),
(325, 8),
(329, 9),
(328, 9),
(331, 10),
(332, 10),
(334, 11),
(335, 11),
(337, 12),
(338, 12),
(727, 13),
(730, 14),
(731, 14),
(734, 15),
(738, 16),
(741, 17),
(742, 17),
(745, 18),
(746, 18),
(749, 19),
(753, 20),
(756, 21),
(759, 22),
(761, 22),
(763, 23),
(764, 23),
(767, 24),
(768, 24),
(771, 25),
(772, 25),
(775, 26),
(778, 27),
(779, 27),
(782, 28),
(785, 29),
(787, 30),
(791, 31),
(794, 32),
(797, 33),
(801, 34),
(804, 35),
(808, 36),
(811, 37),
(814, 39),
(817, 40),
(821, 41),
(824, 42),
(827, 43),
(798, 33),
(805, 35),
(876, 47),
(878, 48),
(882, 49),
(883, 49),
(886, 50),
(887, 50),
(889, 51),
(890, 51),
(891, 52),
(893, 52),
(895, 53),
(896, 53),
(854, 54),
(859, 55),
(861, 56),
(862, 56),
(864, 57),
(866, 57),
(869, 58),
(870, 58),
(871, 58),
(872, 58),
(898, 60),
(900, 61),
(904, 62),
(907, 63),
(909, 64),
(911, 65),
(913, 66),
(615, 67),
(923, 68),
(926, 69),
(927, 69),
(930, 70),
(931, 70),
(934, 71),
(935, 71),
(938, 72),
(941, 73),
(944, 74),
(947, 75),
(950, 76),
(953, 77),
(239, 89),
(241, 90),
(243, 91),
(244, 91),
(246, 92),
(247, 92),
(248, 92),
(249, 92),
(250, 92),
(378, 92),
(380, 93),
(382, 94),
(383, 94),
(384, 94),
(385, 94),
(446, 95),
(447, 95),
(959, 96),
(960, 96),
(961, 1),
(962, 1),
(963, 1),
(964, 99),
(965, 100),
(966, 101),
(967, 101),
(968, 101),
(969, 101),
(970, 101),
(413, 102),
(414, 102),
(416, 102),
(417, 103),
(419, 103),
(420, 103),
(421, 104),
(422, 105),
(423, 105),
(404, 105),
(425, 106),
(426, 106),
(427, 107),
(428, 107),
(429, 107),
(430, 108),
(431, 108),
(433, 108),
(163, 109),
(706, 114),
(411, 114),
(708, 114),
(707, 114),
(606, 114),
(604, 115),
(724, 115),
(605, 115),
(608, 115),
(609, 116),
(611, 116),
(612, 116),
(613, 117),
(614, 117),
(615, 117),
(616, 118),
(617, 118),
(618, 118),
(971, 122),
(619, 119),
(620, 119),
(972, 122),
(621, 119),
(622, 119),
(623, 119),
(624, 119),
(973, 122),
(625, 120),
(712, 120),
(974, 122),
(626, 120),
(627, 120),
(628, 121),
(711, 121),
(975, 122),
(976, 122),
(977, 122),
(978, 122),
(979, 122),
(164, 110),
(165, 111),
(980, 122),
(981, 101),
(982, 101),
(642, 113),
(643, 113),
(644, 113),
(645, 113),
(646, 113),
(647, 125),
(648, 125),
(649, 125),
(650, 125),
(651, 125),
(652, 125),
(653, 126),
(654, 125),
(655, 125),
(656, 125),
(657, 125),
(658, 126),
(659, 126),
(660, 127),
(661, 127),
(662, 127),
(663, 127),
(665, 127),
(666, 127),
(667, 128),
(668, 128),
(669, 128),
(670, 129),
(671, 129),
(672, 129),
(673, 129),
(674, 130),
(675, 130),
(676, 130),
(677, 130),
(678, 130),
(679, 131),
(680, 131),
(681, 131),
(682, 132),
(683, 132),
(684, 132),
(685, 132),
(686, 132),
(687, 132),
(688, 133),
(689, 133),
(690, 133),
(691, 133),
(692, 133),
(693, 134),
(694, 134),
(695, 134),
(696, 134),
(697, 134),
(698, 134),
(699, 134),
(700, 134),
(701, 134),
(702, 134),
(983, 1),
(984, 1),
(985, 1),
(986, 155),
(987, 155),
(988, 155),
(989, 155),
(990, 155),
(991, 155),
(992, 155),
(993, 155),
(994, 155),
(995, 155),
(996, 88),
(997, 174),
(998, 174),
(999, 174),
(1000, 174),
(1001, 174),
(1003, 1),
(1004, 123),
(1005, 180),
(1006, 180),
(1007, 175),
(1008, 174),
(1009, 175),
(1010, 175),
(1011, 175),
(1012, 181),
(1013, 181),
(1014, 88),
(1015, 175),
(1016, 182),
(1017, 182),
(1018, 183),
(1019, 183),
(1020, 183),
(1021, 184),
(1022, 184),
(1023, 184),
(1024, 185),
(1025, 185),
(1026, 185),
(1027, 185),
(1028, 186),
(1029, 187),
(1030, 188),
(1031, 191),
(1032, 187),
(1033, 191),
(1034, 193),
(1035, 95),
(1036, 196),
(1037, 196),
(1038, 196),
(1040, 87),
(1041, 199),
(1042, 199),
(1043, 199),
(1044, 200),
(1045, 200),
(1046, 200),
(1048, 201),
(1049, 201),
(1050, 201),
(1051, 202),
(1052, 203),
(1053, 202),
(1054, 202),
(1055, 203),
(1056, 204),
(1057, 204),
(187, 205),
(188, 206),
(190, 207),
(1058, 215),
(1059, 215),
(725, 207),
(192, 208),
(194, 209),
(195, 209),
(197, 209),
(199, 210),
(201, 211),
(202, 211),
(203, 211),
(204, 211),
(208, 211),
(205, 211),
(206, 211),
(207, 211),
(1060, 216),
(213, 212),
(214, 212),
(215, 212),
(216, 212),
(1061, 216),
(209, 212),
(217, 212),
(218, 212),
(219, 212),
(220, 212),
(221, 212),
(222, 212),
(223, 212),
(224, 212),
(372, 212),
(373, 212),
(374, 212),
(376, 212),
(377, 212),
(440, 213),
(441, 213),
(442, 213),
(545, 213),
(1062, 216),
(1063, 216),
(1064, 216),
(1066, 217),
(1067, 217),
(854, 218),
(859, 219),
(861, 220),
(862, 220),
(864, 220),
(866, 220),
(869, 221),
(870, 221),
(871, 220),
(872, 220),
(1068, 155),
(1069, 223),
(1070, 223),
(1071, 223),
(1072, 224),
(1073, 224),
(1074, 224),
(1075, 225),
(1076, 226),
(1077, 226),
(1078, 226),
(1080, 202),
(1082, 86),
(1083, 227),
(1085, 228),
(1086, 228),
(1087, 228),
(1088, 229),
(1089, 229),
(1090, 230),
(1091, 231),
(1092, 231),
(1093, 232),
(1094, 232),
(1095, 233),
(1096, 233),
(1097, 233),
(1098, 232),
(1099, 235),
(1100, 235),
(1101, 235),
(1102, 236),
(1103, 236),
(1104, 237),
(1106, 236),
(1107, 238),
(1108, 238),
(1109, 238),
(1110, 238),
(1111, 239),
(1112, 238),
(1113, 239),
(1114, 240),
(1115, 240),
(1116, 241),
(1117, 241),
(1118, 242),
(1119, 242),
(1120, 242),
(1122, 242),
(1124, 243),
(1125, 243),
(1126, 243),
(1127, 243),
(1128, 243),
(1129, 244),
(1130, 244),
(1133, 245),
(1134, 85),
(1135, 269),
(1136, 270),
(1137, 270),
(1138, 272),
(1139, 273),
(1140, 274),
(1141, 274),
(1142, 274),
(1143, 274),
(1144, 275),
(1145, 275),
(1146, 275),
(1147, 275),
(1148, 275),
(1149, 275),
(1150, 84),
(1151, 276),
(1152, 277),
(1153, 277),
(1154, 277),
(1155, 278),
(1156, 278),
(1157, 278),
(1158, 155),
(1159, 244),
(1160, 245),
(1161, 245),
(1162, 245),
(1163, 245),
(1164, 245),
(1165, 245),
(1166, 245),
(1167, 245),
(1168, 245),
(1170, 298),
(1171, 299),
(1173, 83),
(1174, 301),
(1175, 302),
(1176, 301),
(1177, 303),
(1178, 304),
(1179, 302),
(1180, 304),
(1181, 304),
(1182, 305),
(1183, 306),
(1185, 311),
(1186, 314),
(1187, 310),
(1188, 310),
(1189, 310),
(1190, 310),
(1191, 310),
(1192, 313),
(1193, 313),
(1194, 316),
(1195, 315),
(1196, 315),
(1197, 315),
(1198, 315),
(1199, 315),
(1200, 317),
(1201, 317),
(1202, 317),
(1203, 318),
(1204, 318),
(1205, 318),
(1206, 318),
(1207, 319),
(1208, 319),
(1209, 325),
(1210, 325),
(1211, 338),
(1212, 339),
(1213, 340),
(1214, 178),
(1216, 332),
(1217, 332),
(1218, 332),
(1219, 82),
(1220, 344),
(1221, 344),
(1222, 344),
(1223, 345),
(1224, 345),
(1225, 346),
(1226, 346),
(1227, 347),
(1228, 347),
(1229, 348),
(1230, 348),
(1231, 349),
(1232, 350),
(1233, 350),
(1234, 352),
(1235, 352),
(1236, 353),
(1237, 353),
(1238, 354),
(1239, 354),
(1240, 354),
(1241, 355),
(1242, 355),
(1243, 355),
(1244, 355),
(1245, 355),
(1246, 355),
(1247, 358),
(1248, 358),
(1249, 358),
(1250, 366),
(1251, 366),
(1252, 366),
(1253, 362),
(1254, 362),
(1255, 362),
(1256, 362),
(1257, 362),
(1258, 362),
(1259, 362),
(1261, 363),
(1262, 363),
(1263, 363),
(1264, 363),
(1265, 363),
(1267, 364),
(1268, 364),
(1269, 364),
(1270, 366),
(1271, 364),
(1272, 366),
(1273, 364),
(1277, 373),
(1278, 365),
(1279, 365),
(1280, 365),
(1281, 365),
(1282, 365),
(1284, 365),
(1289, 365),
(1290, 365),
(1291, 365),
(1293, 388),
(1295, 378),
(1296, 378),
(1297, 378),
(1298, 378),
(1299, 378),
(1300, 378),
(1303, 377),
(1304, 377),
(1305, 377),
(1306, 389),
(1307, 397),
(1308, 398),
(1309, 362),
(1311, 372),
(1312, 372),
(1313, 372),
(1314, 386),
(1315, 370),
(1316, 370),
(1317, 370),
(1319, 394),
(1320, 394),
(1321, 394),
(1322, 394),
(1323, 325),
(1324, 365),
(1325, 402),
(1326, 402),
(1327, 402),
(1328, 362),
(1330, 328),
(1331, 328),
(1332, 328),
(1333, 328),
(1334, 328),
(1335, 328),
(1336, 404),
(1337, 404),
(1338, 406),
(1339, 406),
(1341, 403),
(1342, 403),
(1343, 403),
(1344, 403),
(1345, 403),
(1346, 408),
(1347, 408),
(1348, 408),
(1349, 408),
(1350, 409),
(1351, 409),
(1352, 409),
(1353, 409),
(1354, 410),
(1355, 410),
(1356, 410),
(1357, 410),
(1358, 374),
(1359, 425),
(1360, 425),
(1361, 425),
(1362, 426),
(1364, 426),
(1366, 426),
(1367, 407),
(1368, 426),
(1369, 427),
(1374, 427),
(1375, 427),
(1379, 427),
(1380, 432),
(1381, 432),
(1382, 432),
(1383, 432),
(1384, 432),
(1386, 437),
(1388, 437),
(1390, 437),
(1391, 437),
(1392, 437),
(1395, 445),
(1396, 445),
(1397, 445),
(1399, 451),
(1401, 451),
(1403, 450),
(1404, 450),
(1405, 450),
(1408, 396),
(1409, 422),
(1410, 422),
(1411, 422),
(1412, 422),
(1414, 422),
(1416, 433),
(1417, 433),
(1418, 458),
(1419, 458),
(1420, 458),
(1421, 422),
(1422, 429),
(1423, 463),
(1424, 463),
(1426, 464),
(1429, 461),
(1430, 467),
(1431, 467),
(1432, 467),
(1433, 467),
(1434, 467),
(1435, 467),
(1436, 467),
(1437, 467),
(1438, 438),
(1439, 438),
(1440, 468),
(1449, 375),
(1450, 375),
(1451, 478),
(1452, 447),
(1453, 447),
(1454, 447),
(1455, 447),
(1456, 466),
(1457, 489),
(1458, 489),
(1460, 489),
(1461, 491),
(1462, 466),
(1463, 447),
(1464, 447),
(1465, 446),
(1466, 396),
(1467, 492),
(1468, 492),
(1469, 492),
(1470, 492),
(1473, 489),
(1474, 492),
(1475, 486),
(1476, 486),
(1478, 484),
(1479, 484),
(1480, 485),
(1484, 443),
(1485, 443),
(1486, 443),
(1487, 443),
(1488, 495),
(1489, 495),
(1490, 484),
(1491, 503),
(1492, 484),
(1494, 510),
(1496, 510),
(1497, 510),
(1499, 484),
(1500, 496),
(1502, 496),
(1503, 496),
(1504, 496),
(1506, 496),
(1507, 536),
(1508, 536),
(1509, 536),
(1510, 1),
(1514, 527),
(1529, 554),
(1530, 554),
(1531, 554),
(1533, 558),
(1544, 565),
(1547, 566),
(1548, 566),
(1549, 567),
(1552, 567),
(1554, 567),
(1555, 567),
(1558, 570),
(1559, 570),
(1561, 1),
(1562, 1),
(1577, 576),
(1578, 576),
(1579, 576),
(1591, 615),
(1665, 1),
(1736, 584),
(1755, 583),
(1757, 583),
(1758, 583),
(1759, 583),
(1763, 584),
(1796, 616),
(1797, 616),
(1798, 616),
(1799, 616),
(1801, 529),
(1802, 584),
(1803, 584),
(1811, 630),
(1812, 630),
(1813, 630),
(1814, 630),
(1815, 630),
(1816, 630),
(1817, 623),
(1819, 623),
(1825, 633),
(1830, 633),
(1832, 633),
(1838, 636),
(1839, 636),
(1847, 637),
(1848, 637),
(1849, 640),
(1850, 640),
(1851, 640),
(1856, 641),
(1857, 641),
(1858, 641),
(1859, 641),
(1860, 641),
(1898, 637),
(1908, 645),
(1936, 660),
(1940, 692),
(1941, 692),
(1942, 701),
(1945, 644),
(1951, 642),
(1953, 1),
(1965, 702),
(1973, 697),
(1975, 709),
(1976, 709),
(1977, 709),
(1978, 709),
(1985, 711),
(1990, 13),
(1992, 713),
(1993, 713),
(1994, 713),
(1995, 713),
(1996, 713),
(2010, 734),
(2012, 734),
(2013, 734),
(2014, 734),
(2037, 761),
(2038, 761);

-- --------------------------------------------------------

--
-- Структура таблицы `lecture_page`
--

CREATE TABLE IF NOT EXISTS `lecture_page` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `id_lecture` int(10) NOT NULL,
  `page_title` varchar(255) CHARACTER SET utf8 NOT NULL,
  `page_order` int(10) DEFAULT NULL,
  `video` int(10) DEFAULT NULL,
  `quiz` int(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=793 ;

--
-- Дамп данных таблицы `lecture_page`
--

INSERT INTO `lecture_page` (`id`, `id_lecture`, `page_title`, `page_order`, `video`, `quiz`) VALUES
(1, 117, 'Що таке програмування?', 1, 340, 393),
(2, 117, 'Що потрібно щоб стати програмістом?', 2, 341, 394),
(3, 117, 'Що таке мова програмування', 3, 395, NULL),
(4, 117, 'Якою має бути програма?', 5, 396, 397),
(5, 117, 'Етапи програмування', 4, 398, NULL),
(6, 118, '', 1, 449, 454),
(7, 118, '', 2, 450, 455),
(8, 118, '', 3, 451, 456),
(9, 118, '', 4, 452, 457),
(10, 118, '', 5, 453, 458),
(11, 118, '', 6, 462, 459),
(12, 118, '', 7, 472, 461),
(13, 127, 'gg\nguui', 1, NULL, 728),
(14, 127, '', 2, NULL, 732),
(15, 127, '', 3, NULL, 736),
(16, 127, '', 4, NULL, 739),
(17, 127, '', 5, NULL, 743),
(18, 127, '', 6, NULL, 747),
(19, 127, '', 7, NULL, 750),
(20, 131, '', 1, NULL, 754),
(21, 131, '', 2, NULL, 757),
(22, 131, '', 3, NULL, 760),
(23, 131, '', 4, NULL, 765),
(24, 131, '', 5, NULL, 769),
(25, 131, '', 6, NULL, 773),
(26, 131, '', 7, NULL, 776),
(27, 131, '', 8, NULL, 780),
(28, 131, '', 9, NULL, 783),
(29, 131, '', 10, NULL, NULL),
(30, 129, 'Принципи фон Неймана.', 1, NULL, 789),
(31, 129, 'Як працює машина фон Неймана', 2, NULL, 792),
(32, 129, 'Недоліки принципів фон Неймана', 3, NULL, 795),
(33, 129, 'Гарвардська архітектура комп’ютера', 4, NULL, 799),
(34, 129, 'Модифікації гарвардської архітектури', 5, NULL, 802),
(35, 129, 'Що таке процесор, його будова', 6, NULL, 806),
(36, 129, 'Складові процесора. Робота процесора', 7, NULL, 809),
(37, 129, 'Основні технічні характеристики процесора', 8, NULL, 812),
(39, 130, 'Що таке операційна система.', 1, NULL, 815),
(40, 130, 'Функції операційної системи.', 2, NULL, 818),
(41, 130, 'Історія створення операційних систем.', 3, NULL, 822),
(42, 130, 'Сьогодення операційних систем.', 4, NULL, 825),
(43, 130, 'Складові операційних систем', 5, NULL, 828),
(47, 132, 'Що таке алгоритм.', 1, NULL, 877),
(48, 132, 'Ознаки алгоритму.', 2, NULL, 880),
(49, 132, 'Словесний спосіб запису алгоритму.', 3, NULL, 884),
(50, 132, 'Запис алгоритму у вигляді таблиць, формул, схем, малюнків.', 4, NULL, NULL),
(51, 132, 'Запис алгоритму у вигляді блок-схеми', 5, NULL, NULL),
(52, 132, 'Запис алгоритму у вигляді алгоритмічної пови (псевдокоду)', 6, NULL, NULL),
(53, 132, 'Запис алгоритму на мові програмування.', 7, NULL, NULL),
(60, 125, 'Що таке технологія програмування.', 1, NULL, 899),
(61, 125, 'Процедурне програмування.', 2, NULL, 902),
(62, 125, 'Деякі поняття структурного програмування. Модульне програмування.', 3, NULL, 905),
(63, 125, 'Деякі поняття структурного програмування. Низхідне програмування.', 4, NULL, 917),
(64, 125, 'Деякі поняття структурного програмування. Висхідне програмування.', 5, NULL, 918),
(65, 125, 'Структурне програмування.', 6, NULL, 919),
(66, 125, 'Об’єктно-орієнтоване програмування.', 7, NULL, 920),
(67, 125, 'Основні поняття об’єктно-орієнтованого програмування.', 8, NULL, 921),
(68, 126, 'Що таке мова програмування', 1, NULL, 924),
(69, 126, 'Історія мов програмування. Машина мова програмування.', 2, NULL, 928),
(70, 126, 'Історія мов програмування. Мова асемблера.', 3, NULL, 932),
(71, 126, 'Історія мов програмування. Мови високого рівня.', 4, NULL, 936),
(72, 126, 'Історія мов програмування. Структурне програмування.', 5, NULL, 939),
(73, 126, 'Історія мов програмування. Об’єктно-орієнтоване програмування.', 6, NULL, 942),
(74, 126, 'Застосування сучасних мов програмування.', 7, NULL, 945),
(75, 126, 'Середовища програмування.', 8, NULL, 948),
(76, 126, 'Стандартизація мов програмування.', 9, NULL, 951),
(77, 126, 'Виключення можливостей мови, які визнані застарівшими.', 10, NULL, 954),
(79, 111, '', 1, NULL, 1513),
(80, 110, '', 1, NULL, NULL),
(81, 109, '', 1, NULL, NULL),
(82, 108, 'Вступ', 1, NULL, NULL),
(83, 107, 'Вступ', 1, NULL, NULL),
(84, 106, 'Вступ', 1, NULL, NULL),
(85, 105, 'Вступ', 1, NULL, NULL),
(86, 104, 'Вступ', 1, NULL, NULL),
(87, 103, 'Вступ', 1, NULL, 1979),
(88, 102, 'Вступ', 1, NULL, NULL),
(89, 101, 'Вступ', 1, NULL, NULL),
(90, 101, 'Типи даних', 2, NULL, NULL),
(91, 101, 'Змінні', 3, NULL, NULL),
(92, 101, 'Операції і вирази', 4, NULL, NULL),
(93, 101, 'Пріоритети операцій', 5, NULL, NULL),
(94, 101, 'Оператори введення-виведення', 6, NULL, NULL),
(95, 101, 'Оператор переходу', 7, NULL, NULL),
(96, 207, 'PAGE 1 ', 1, NULL, NULL),
(97, 208, '', 1, NULL, NULL),
(98, 209, '', 1, NULL, NULL),
(99, 210, '', 1, NULL, NULL),
(101, 212, '', 1, NULL, NULL),
(102, 88, '', 1, NULL, NULL),
(103, 88, '', 2, NULL, NULL),
(104, 88, '', 3, NULL, NULL),
(105, 88, '', 4, NULL, NULL),
(106, 88, '', 5, NULL, NULL),
(107, 88, '', 6, NULL, NULL),
(108, 88, '', 7, NULL, NULL),
(109, 89, '', 1, NULL, NULL),
(110, 90, '', 1, NULL, NULL),
(111, 91, '', 1, NULL, NULL),
(113, 192, '', 1, NULL, NULL),
(114, 140, '', 1, NULL, NULL),
(115, 140, '', 2, NULL, NULL),
(116, 140, '', 3, NULL, NULL),
(117, 140, '', 4, NULL, NULL),
(118, 140, '', 5, NULL, NULL),
(119, 140, '', 6, NULL, NULL),
(120, 140, '', 7, NULL, NULL),
(121, 140, '', 8, NULL, NULL),
(122, 213, '', 1, NULL, NULL),
(124, 215, '', 1, NULL, NULL),
(125, 192, '', 2, NULL, NULL),
(126, 192, '', 3, NULL, NULL),
(127, 192, '', 4, NULL, NULL),
(128, 192, '', 5, NULL, NULL),
(129, 192, '', 6, NULL, NULL),
(130, 192, '', 7, NULL, NULL),
(131, 192, '', 8, NULL, NULL),
(132, 192, '', 9, NULL, NULL),
(133, 192, '', 10, NULL, NULL),
(134, 192, '', 11, NULL, NULL),
(136, 216, '', 1, NULL, NULL),
(137, 217, '', 1, NULL, NULL),
(138, 218, '', 1, NULL, NULL),
(139, 219, '', 1, NULL, NULL),
(140, 220, '', 1, NULL, NULL),
(141, 221, '', 1, NULL, NULL),
(142, 222, '', 1, NULL, NULL),
(143, 223, '', 1, NULL, NULL),
(144, 224, '', 1, NULL, NULL),
(145, 225, '', 1, NULL, NULL),
(146, 226, '', 1, NULL, NULL),
(147, 227, '', 1, NULL, NULL),
(148, 228, '', 1, NULL, NULL),
(149, 229, '', 1, NULL, NULL),
(150, 230, '', 1, NULL, NULL),
(151, 231, '', 1, NULL, NULL),
(152, 232, '', 1, NULL, NULL),
(153, 233, '', 1, NULL, NULL),
(154, 234, '', 1, NULL, NULL),
(155, 235, '', 1, NULL, NULL),
(156, 236, '', 1, NULL, NULL),
(157, 237, '', 1, NULL, NULL),
(158, 238, '', 1, NULL, NULL),
(159, 239, '', 1, NULL, NULL),
(160, 240, '', 1, NULL, NULL),
(161, 241, '', 1, NULL, NULL),
(162, 242, '', 1, NULL, NULL),
(163, 243, '', 1, NULL, NULL),
(164, 244, '', 1, NULL, NULL),
(165, 245, '', 1, NULL, NULL),
(166, 246, '', 1, NULL, NULL),
(167, 247, '', 1, NULL, NULL),
(168, 248, '', 1, NULL, NULL),
(169, 249, '', 1, NULL, NULL),
(170, 250, '', 1, NULL, NULL),
(172, 251, '', 1, NULL, NULL),
(173, 212, '', 2, NULL, NULL),
(174, 252, 'title', 1, NULL, NULL),
(175, 102, 'Загальна характеристика функцій', 2, NULL, NULL),
(178, 214, 'Нормалізація', 1, NULL, NULL),
(179, 253, '', 1, NULL, NULL),
(181, 102, 'Поняття процедури, їх відмінність від функцій', 3, NULL, NULL),
(182, 102, 'Основні поняття та атрибути процедур і функцій', 4, NULL, NULL),
(183, 102, 'Передавання параметрів функції у вигляді змінних', 5, NULL, NULL),
(184, 102, 'Використання параметрів функції як локальних змінних', 6, NULL, NULL),
(185, 102, 'Передавання параметрів функції за посиланням', 7, NULL, NULL),
(186, 102, 'Області видимості змінних. Область видимості “функція”', 8, NULL, NULL),
(187, 102, 'Область видимості “файл”', 9, NULL, NULL),
(188, 102, 'Область видимості “прототип функції”', 10, NULL, NULL),
(191, 102, 'Область видимості “блок”', 11, NULL, NULL),
(193, 102, 'Застосування глобальних і локальних змінних', 12, NULL, NULL),
(194, 255, '', 1, NULL, NULL),
(195, 255, '', 2, NULL, NULL),
(196, 256, 'sdsd', 1, NULL, NULL),
(197, 256, '', 2, NULL, NULL),
(198, 256, '', 3, NULL, NULL),
(199, 103, 'Покажчики: основні поняття', 2, NULL, NULL),
(200, 103, 'Адресна арифметика: операція присвоювання', 3, NULL, 1047),
(201, 103, 'Адресна арифметика: розіменування покажчика', 4, NULL, NULL),
(202, 257, '', 1, 1081, NULL),
(203, 103, 'Адресна арифметика: інкремент і декремент', 5, NULL, NULL),
(204, 103, 'Адресна арифметика: перетворення типів', 6, NULL, NULL),
(205, 100, 'Вступ.', 1, NULL, 1970),
(206, 100, ' Історія мови С', 2, NULL, NULL),
(207, 100, 'Структура програми на С', 3, NULL, NULL),
(208, 100, 'Правила формального опису мови програмування', 4, NULL, NULL),
(209, 100, ' Правила запису програми на мові С', 5, NULL, NULL),
(210, 100, 'Ідентифікатори мови С', 6, NULL, NULL),
(211, 100, 'Оператор присвоювання', 7, NULL, NULL),
(212, 100, 'Оператори умов', 8, NULL, NULL),
(213, 100, 'Оператори циклів', 9, NULL, NULL),
(215, 103, 'Адресна арифметика: обнулення покажчика', 7, NULL, NULL),
(216, 103, 'Покажчики і масиви', 8, NULL, 1065),
(217, 103, 'Особливості масивів великих розмірів', 9, NULL, NULL),
(218, 133, 'Що таке система числення', 1, NULL, 857),
(219, 133, 'Непозиційна система числення, змішана система числення.', 2, NULL, 860),
(220, 133, 'Переведення цілого числа з десяткової системи числення.', 3, NULL, 867),
(221, 133, ' Переведення з будь-якої позиційної системи числення у десяткову.', 4, NULL, 873),
(222, 133, '', 5, NULL, 874),
(223, 103, 'Що таке рекурсія', 10, NULL, NULL),
(224, 103, 'Рекурсивний пошук', 11, NULL, NULL),
(225, 103, 'Переваги і недоліки рекурсій', 12, NULL, NULL),
(226, 103, 'Коли рекурсія не потрібна', 13, NULL, 1079),
(227, 104, 'Що таке символьний рядок?', 2, NULL, 1084),
(228, 104, 'Введення-виведення рядків: функції бібліотеки iostream', 3, NULL, NULL),
(229, 104, 'Введення-виведення рядків: функції бібліотеки stdio.h', 4, NULL, NULL),
(230, 104, 'Особливості функцій введення-виведення', 5, NULL, NULL),
(231, 104, 'Операції над рядками: визначення довжини', 6, NULL, NULL),
(232, 258, '', 1, NULL, NULL),
(235, 104, 'Порівняння рядків', 7, NULL, NULL),
(236, 104, 'Копіювання рядків', 8, NULL, NULL),
(237, 252, '', 2, NULL, 1105),
(238, 259, 'Тест', 1, 1123, 1121),
(239, 104, 'Копіювання заданої кількості символів з одного рядка в інший', 9, NULL, NULL),
(240, 104, 'Об''єднання рядків', 10, NULL, NULL),
(241, 104, 'Пошук в рядках', 11, NULL, NULL),
(242, 104, 'Форматування рядків та читання з них', 12, NULL, NULL),
(243, 104, 'Рядки у функціях і процедурах', 13, NULL, NULL),
(244, 259, 'Страница 2', 2, 1215, 1131),
(246, 260, '', 1, NULL, NULL),
(247, 261, '', 1, NULL, NULL),
(248, 262, '', 1, NULL, NULL),
(249, 263, '', 1, NULL, NULL),
(250, 264, '', 1, NULL, NULL),
(251, 265, '', 1, NULL, NULL),
(252, 266, '', 1, NULL, NULL),
(253, 267, '', 1, NULL, NULL),
(254, 268, '', 1, NULL, NULL),
(255, 269, '', 1, NULL, NULL),
(256, 270, '', 1, NULL, NULL),
(257, 271, '', 1, NULL, NULL),
(258, 272, '', 1, NULL, NULL),
(259, 273, '', 1, NULL, NULL),
(260, 274, '', 1, NULL, NULL),
(261, 275, '', 1, NULL, NULL),
(263, 277, '', 1, NULL, NULL),
(264, 278, '', 1, NULL, NULL),
(265, 279, '', 1, NULL, NULL),
(266, 280, '', 1, NULL, NULL),
(267, 281, '', 1, NULL, NULL),
(268, 282, '', 1, NULL, NULL),
(269, 105, 'Типи файлів', 2, NULL, NULL),
(270, 105, 'Дескриптори файлів. Основні операції', 3, NULL, NULL),
(271, 98, '', 1, NULL, NULL),
(272, 105, 'Нижній рівень введення-виведення', 4, NULL, NULL),
(273, 105, 'Системні виклики', 5, NULL, NULL),
(274, 105, 'Текстові файли: введення-виведення даних', 6, NULL, NULL),
(275, 105, 'Введення-виведення даних текстових файлів у рядкові змінні', 7, NULL, NULL),
(276, 106, 'Бінарні файли', 2, NULL, NULL),
(277, 106, 'Довільний доступ, покажчик поточної позиції, переміщення покажчика по файлу', 3, NULL, NULL),
(278, 106, 'Читання і запис бінарних файлів', 4, NULL, NULL),
(279, 283, '', 1, NULL, NULL),
(280, 284, '', 1, NULL, NULL),
(281, 285, '', 1, NULL, NULL),
(282, 286, '', 1, NULL, NULL),
(283, 287, '', 1, NULL, NULL),
(284, 288, '', 1, NULL, NULL),
(285, 289, '', 1, NULL, NULL),
(286, 290, '', 1, NULL, NULL),
(287, 291, '', 1, NULL, NULL),
(288, 292, '', 1, NULL, NULL),
(289, 293, '', 1, NULL, NULL),
(290, 294, '', 1, NULL, NULL),
(291, 295, '', 1, NULL, NULL),
(292, 296, '', 1, NULL, NULL),
(293, 297, '', 1, NULL, NULL),
(294, 298, '', 1, NULL, NULL),
(295, 299, '', 1, NULL, NULL),
(296, 300, 'Введення', 1, NULL, NULL),
(297, 100, '', 10, NULL, NULL),
(298, 301, '', 1, NULL, NULL),
(299, 302, '', 1, NULL, NULL),
(300, 259, 'Частина 4', 3, 1172, NULL),
(301, 107, 'Тип користувача “перерахування”: стандартний спосіб оголошення', 2, NULL, NULL),
(304, 107, 'Довільне нумерування синонімів перерахування', 3, NULL, NULL),
(310, 107, 'Структури: принцип описання', 4, NULL, NULL),
(311, 304, 'Вступ', 1, NULL, NULL),
(313, 107, 'Звертання до полів структур', 5, NULL, NULL),
(314, 304, 'Основні терміни', 2, NULL, NULL),
(315, 107, 'Застосування покажчиків в структурах', 6, NULL, NULL),
(316, 304, 'Трошки історії', 3, NULL, NULL),
(317, 107, 'Копіювання структур', 7, NULL, NULL),
(318, 107, 'Звичайні масиви структур', 8, NULL, NULL),
(319, 107, 'Динамічні масиви структур', 9, NULL, NULL),
(320, 305, '', 1, NULL, NULL),
(321, 306, '', 1, NULL, NULL),
(322, 307, '', 1, NULL, NULL),
(323, 308, '', 1, NULL, NULL),
(324, 309, '', 1, NULL, NULL),
(325, 310, 'mvmnmbm?!"№;%:?*()_++_)(*?:%;№"!', 1, NULL, NULL),
(326, 311, '', 1, NULL, NULL),
(327, 312, '', 1, NULL, NULL),
(328, 313, 'bnvbcbvcvcx', 1, 1329, NULL),
(329, 314, '', 1, NULL, NULL),
(330, 315, '', 1, NULL, NULL),
(331, 316, '', 1, NULL, NULL),
(332, 310, 'dhgskjdhgfdghdfk!@##$%^&*()_+_)(*&^%$#@!', 2, NULL, NULL),
(333, 311, '', 2, NULL, NULL),
(334, 311, '', 3, NULL, NULL),
(335, 311, '', 4, NULL, NULL),
(336, 311, '', 5, NULL, NULL),
(337, 311, '', 6, NULL, NULL),
(338, 254, 'Основна термінологія', 1, NULL, NULL),
(339, 254, 'Поняття відношення', 2, NULL, NULL),
(340, 254, 'Поняття функціональної залежності в даних', 3, NULL, NULL),
(341, 214, '2', 2, NULL, NULL),
(342, 315, '', 2, NULL, NULL),
(343, 310, '', 3, NULL, NULL),
(344, 108, 'Поняття однозв''язного списку', 2, NULL, NULL),
(345, 108, 'Створення нового вузла для списку', 3, NULL, NULL),
(346, 108, 'Додавання нового вузла в початок списку', 4, NULL, NULL),
(347, 108, 'Додавання нового вузла в середину списку після заданого', 5, NULL, NULL),
(348, 108, 'Додавання нового вузла в середину списку перед заданим', 6, NULL, NULL),
(349, 108, 'Альтернативний спосіб вставки нового вузла перед заданим', 7, NULL, NULL),
(350, 108, 'Додавання нового вузла в кінець списку', 8, NULL, NULL),
(352, 108, 'Реалізація задачі побудови впорядкованого списку', 9, NULL, NULL),
(353, 108, 'Видалення вузла зі списку', 10, NULL, NULL),
(354, 108, 'Поняття двозв''язного списку', 11, NULL, NULL),
(355, 317, '', 1, NULL, NULL),
(356, 317, '', 2, NULL, NULL),
(357, 317, '', 3, NULL, NULL),
(358, 318, '', 2, NULL, NULL),
(359, 319, '', 1, NULL, NULL),
(360, 320, '', 1, NULL, NULL),
(361, 321, '', 1, NULL, NULL),
(362, 322, '111111111111', 1, NULL, NULL),
(363, 322, '3333333333333', 2, 1260, NULL),
(364, 322, '222222222222', 3, 1266, 1288),
(365, 322, '4444444444', 4, NULL, 1340),
(366, 318, '22222', 1, 1310, NULL),
(367, 323, '', 1, NULL, NULL),
(368, 324, '', 1, NULL, NULL),
(369, 325, '', 1, NULL, NULL),
(370, 318, '', 5, NULL, NULL),
(371, 318, '', 3, NULL, NULL),
(372, 318, '', 4, NULL, NULL),
(373, 318, '', 6, NULL, NULL),
(374, 318, 'http://math-prosto.ru/?page=pages/drob/drob1.php', 7, 1276, NULL),
(375, 326, '', 2, 1448, NULL),
(376, 327, '', 1, NULL, NULL),
(377, 328, '555555555588888888888777777776666666666', 1, 1292, NULL),
(379, 330, '', 1, NULL, NULL),
(380, 328, '', 2, NULL, NULL),
(381, 328, '', 3, NULL, NULL),
(382, 328, '', 4, NULL, NULL),
(383, 328, '', 5, NULL, NULL),
(384, 328, '', 6, NULL, NULL),
(385, 328, '', 7, NULL, NULL),
(386, 328, '', 8, NULL, NULL),
(387, 331, '', 1, NULL, NULL),
(388, 332, 'Проблеми проектування', 1, NULL, NULL),
(389, 332, 'Історичні факти', 2, NULL, NULL),
(390, 333, '', 1, NULL, NULL),
(391, 334, '', 1, NULL, NULL),
(392, 335, '', 1, NULL, NULL),
(393, 336, '', 1, NULL, NULL),
(395, 329, 'Сторінка 3', 3, NULL, NULL),
(397, 332, 'Перша нормальна форма (1NF)', 3, NULL, NULL),
(398, 332, 'Друга нормальна форма (2NF)', 4, NULL, NULL),
(399, 337, '', 1, NULL, NULL),
(400, 338, '', 1, NULL, NULL),
(401, 339, '', 1, NULL, NULL),
(402, 329, 'Сторінка 4', 1, NULL, NULL),
(403, 329, 'Сторінка 5', 2, NULL, NULL),
(404, 313, '', 2, NULL, NULL),
(405, 340, 'Введеня', 1, NULL, NULL),
(406, 341, '', 1, NULL, NULL),
(407, 342, '', 2, NULL, NULL),
(408, 329, '', 4, NULL, NULL),
(410, 343, '', 1, NULL, NULL),
(411, 313, '', 3, NULL, NULL),
(412, 314, '', 2, NULL, NULL),
(413, 314, '', 3, NULL, NULL),
(414, 314, '', 4, NULL, NULL),
(415, 314, '', 5, NULL, NULL),
(416, 314, '', 6, NULL, NULL),
(418, 344, '', 1, NULL, NULL),
(419, 345, '', 1, NULL, NULL),
(420, 346, '', 1, NULL, NULL),
(421, 347, '', 1, NULL, NULL),
(422, 348, '', 1, NULL, 1378),
(423, 349, '', 1, NULL, NULL),
(424, 350, '', 1, NULL, NULL),
(426, 351, 'Частина 2', 2, NULL, 1377),
(427, 351, 'Частина 3', 3, NULL, 1368),
(429, 342, '2222', 1, NULL, NULL),
(430, 352, '', 1, NULL, NULL),
(431, 327, '', 2, NULL, NULL),
(432, 348, '', 2, NULL, 1385),
(433, 351, '', 1, NULL, NULL),
(434, 353, '', 1, NULL, NULL),
(435, 354, '', 1, NULL, NULL),
(436, 355, '', 1, NULL, NULL),
(437, 348, 'Частина 3333333', 6, 1387, 1389),
(438, 356, '', 1, NULL, NULL),
(439, 357, '', 1, NULL, NULL),
(440, 358, '', 1, NULL, NULL),
(441, 348, '', 3, NULL, 1393),
(442, 348, '', 4, NULL, NULL),
(443, 348, '', 5, 1483, 1482),
(447, 359, 'Частина 3', 1, NULL, 1471),
(451, 360, '', 1, NULL, 1400),
(452, 361, '', 1, NULL, NULL),
(453, 362, '', 1, NULL, NULL),
(454, 363, '', 2, NULL, NULL),
(458, 364, '4444444444444444', 1, NULL, NULL),
(461, 364, '', 2, NULL, NULL),
(462, 365, '', 1, NULL, NULL),
(463, 365, '', 2, NULL, 1425),
(464, 350, '', 2, NULL, NULL),
(466, 359, '', 2, NULL, NULL),
(467, 364, '', 3, NULL, NULL),
(468, 356, '', 2, NULL, NULL),
(469, 356, '', 3, NULL, NULL),
(470, 356, '', 4, NULL, NULL),
(471, 363, '', 3, NULL, NULL),
(472, 363, '', 4, NULL, NULL),
(473, 363, '', 5, NULL, NULL),
(474, 363, 'fghfghfghgfhfghghfghhfhhfg', 1, NULL, NULL),
(475, 363, '', 6, NULL, NULL),
(476, 326, '', 3, NULL, NULL),
(477, 326, '', 4, NULL, NULL),
(478, 326, '!!!!!!!!!!!!!!!!!!!!\n !!!!!!!!!!!!!!!!!!!!!!!!!', 1, NULL, NULL),
(479, 366, '', 1, NULL, NULL),
(480, 367, '', 1, NULL, NULL),
(481, 367, '', 2, NULL, NULL),
(482, 367, '', 3, NULL, NULL),
(483, 368, '', 1, NULL, NULL),
(484, 369, 'Частина 1', 1, NULL, NULL),
(485, 370, '', 2, NULL, 1481),
(486, 371, '', 1, NULL, NULL),
(487, 372, '', 1, NULL, NULL),
(488, 370, '', 3, NULL, NULL),
(489, 370, 'рррррпрпрпрпрпр', 4, 1459, NULL),
(490, 370, '', 5, NULL, NULL),
(491, 370, 'drthrhrhffghfg', 1, NULL, NULL),
(492, 373, '', 1, NULL, NULL),
(493, 374, '', 1, NULL, NULL),
(494, 375, '', 1, NULL, NULL),
(495, 369, 'Частина 21', 2, NULL, NULL),
(496, 376, '', 1, NULL, 1505),
(497, 377, '', 1, NULL, NULL),
(498, 378, '', 1, NULL, NULL),
(499, 379, '', 1, NULL, NULL),
(500, 380, '', 1, NULL, NULL),
(501, 381, '111', 3, NULL, NULL),
(502, 382, '', 1, NULL, NULL),
(503, 383, 'hgjjkhk\n', 1, NULL, NULL),
(504, 379, '', 2, NULL, NULL),
(505, 383, '', 2, NULL, NULL),
(506, 384, '', 1, NULL, NULL),
(507, 385, '', 1, NULL, NULL),
(508, 386, '', 1, NULL, NULL),
(509, 387, '', 1, NULL, NULL),
(510, 381, '', 2, NULL, NULL),
(512, 381, '444', 1, NULL, NULL),
(513, 388, '', 1, 1493, NULL),
(514, 389, '', 1, NULL, NULL),
(515, 390, '', 1, NULL, NULL),
(516, 391, '', 1, NULL, NULL),
(517, 392, '', 1, NULL, NULL),
(520, 393, '', 1, NULL, NULL),
(521, 394, '', 1, NULL, NULL),
(522, 395, '', 1, NULL, NULL),
(523, 396, '', 1, NULL, NULL),
(524, 376, '', 2, NULL, NULL),
(526, 397, '', 1, NULL, NULL),
(527, 117, '', 6, NULL, NULL),
(528, 398, '', 1, NULL, NULL),
(529, 399, '', 1, NULL, NULL),
(530, 400, '', 1, NULL, NULL),
(531, 401, '', 1, NULL, NULL),
(532, 402, '', 1, NULL, NULL),
(533, 403, '', 1, NULL, NULL),
(534, 404, '', 1, NULL, NULL),
(535, 405, '', 1, NULL, NULL),
(536, 406, '', 1, NULL, NULL),
(537, 407, 'ZCDXVGH', 1, NULL, NULL),
(538, 408, '', 1, NULL, NULL),
(539, 408, '', 2, NULL, NULL),
(540, 409, '', 1, NULL, NULL),
(541, 410, '', 1, NULL, NULL),
(542, 411, '', 1, NULL, NULL),
(543, 412, '', 1, NULL, NULL),
(544, 413, '', 1, 1518, NULL),
(545, 414, '', 1, NULL, NULL),
(546, 414, '', 2, NULL, NULL),
(547, 415, '', 1, NULL, NULL),
(548, 416, '', 1, NULL, NULL),
(549, 417, '', 1, NULL, NULL),
(550, 418, '', 1, NULL, NULL),
(551, 419, '', 1, NULL, NULL),
(552, 420, '', 1, NULL, 1526),
(553, 421, '', 1, NULL, 1527),
(554, 422, 'іваперго', 1, 1528, NULL),
(555, 423, '', 1, NULL, NULL),
(556, 424, '', 1, NULL, NULL),
(557, 425, '', 1, NULL, NULL),
(558, 426, 'йцукен', 1, 1532, NULL),
(559, 427, '', 1, NULL, NULL),
(560, 428, '', 1, NULL, NULL),
(561, 429, '', 1, NULL, NULL),
(562, 429, '', 2, NULL, NULL),
(564, 430, '', 1, NULL, NULL),
(565, 431, 'zzxcvfbnm', 1, NULL, 1545),
(566, 432, '', 1, NULL, NULL),
(567, 432, '', 2, NULL, NULL),
(568, 433, '', 1, NULL, NULL),
(569, 434, '', 1, 1556, NULL),
(570, 435, 'прогр', 1, NULL, 1560),
(571, 435, '', 2, NULL, NULL),
(572, 436, '', 1, NULL, 1570),
(574, 437, '', 1, NULL, NULL),
(575, 438, 'fdffdfdff', 1, NULL, NULL),
(576, 439, '', 1, NULL, NULL),
(577, 440, '', 1, NULL, NULL),
(578, 441, '', 1, NULL, NULL),
(579, 442, '', 1, NULL, NULL),
(580, 443, 'рмитроь', 1, NULL, NULL),
(581, 444, '', 1, NULL, NULL),
(582, 445, '', 1, NULL, NULL),
(583, 446, 'Вступ до перевірки', 1, 1747, 1675),
(584, 447, '', 1, NULL, 1765),
(585, 446, 'Урок част 2', 2, NULL, NULL),
(586, 446, '', 3, NULL, NULL),
(587, 446, '', 4, NULL, NULL),
(588, 446, '', 5, NULL, NULL),
(589, 446, '', 6, NULL, NULL),
(590, 446, '', 7, NULL, NULL),
(591, 446, '', 8, NULL, NULL),
(592, 446, '', 9, NULL, NULL),
(593, 446, '', 10, NULL, NULL),
(594, 446, '', 11, NULL, NULL),
(595, 446, '', 12, NULL, NULL),
(596, 446, '', 13, NULL, NULL),
(597, 446, '', 14, NULL, NULL),
(598, 446, '', 15, NULL, NULL),
(599, 446, '', 16, NULL, NULL),
(600, 446, '', 17, NULL, NULL),
(601, 446, '', 18, NULL, NULL),
(602, 446, '', 19, NULL, NULL),
(603, 446, '', 20, NULL, NULL),
(604, 446, '', 21, NULL, NULL),
(605, 446, '', 22, NULL, NULL),
(606, 446, '', 23, NULL, NULL),
(607, 446, '', 24, NULL, NULL),
(608, 446, '', 25, NULL, NULL),
(609, 446, '', 26, NULL, NULL),
(610, 446, '', 27, NULL, NULL),
(611, 446, '', 28, NULL, NULL),
(612, 446, '', 29, NULL, NULL),
(613, 446, '', 30, NULL, NULL),
(614, 446, '', 31, NULL, NULL),
(615, 117, '', 7, NULL, NULL),
(616, 448, '', 1, NULL, 1773),
(617, 448, '', 2, NULL, NULL),
(618, 448, '', 3, NULL, NULL),
(619, 448, '', 4, NULL, NULL),
(620, 448, '', 5, NULL, NULL),
(621, 448, '', 6, NULL, NULL),
(622, 129, '', 9, NULL, 1647),
(623, 449, 'пвп', 1, NULL, NULL),
(624, 450, '', 1, NULL, NULL),
(625, 451, '', 1, NULL, NULL),
(626, 452, '', 1, NULL, NULL),
(627, 453, '', 1, NULL, NULL),
(628, 454, '', 1, NULL, NULL),
(629, 117, '', 8, NULL, NULL),
(630, 455, '', 1, NULL, NULL),
(631, 449, '', 2, NULL, NULL),
(633, 456, '', 1, NULL, NULL),
(634, 457, '', 1, NULL, NULL),
(635, 458, '', 1, NULL, NULL),
(636, 459, '', 1, NULL, NULL),
(637, 460, 'часть первая', 1, NULL, 1902),
(641, 462, 'Тестове заняття', 1, 1855, NULL),
(642, 461, '', 1, 1912, 1964),
(643, 463, '', 1, NULL, 1905),
(644, 464, 'hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhGGGGGGGGGGGGG', 1, 1949, NULL),
(645, 465, '', 1, NULL, 1913),
(646, 466, 'Часть урока 1', 1, 1906, NULL),
(647, 466, 'Часть урока 2                                                                        ', 2, NULL, 1943),
(648, 466, 'Часть 3', 3, NULL, 1944),
(649, 467, '', 1, NULL, NULL),
(650, 468, '', 1, NULL, NULL),
(651, 469, '', 1, NULL, NULL),
(652, 470, '', 1, NULL, NULL),
(653, 471, '', 1, NULL, NULL),
(654, 472, '', 1, NULL, NULL),
(655, 473, '', 1, NULL, NULL),
(656, 474, '', 1, NULL, NULL),
(657, 475, '', 1, NULL, NULL),
(658, 476, '', 1, NULL, NULL),
(659, 477, '', 1, NULL, NULL),
(660, 478, '', 1, 1937, NULL),
(661, 479, '', 1, NULL, NULL),
(662, 480, '', 1, NULL, NULL),
(663, 481, '', 1, NULL, NULL),
(664, 482, '', 1, NULL, NULL),
(665, 483, '', 1, NULL, NULL),
(666, 484, '', 1, NULL, NULL),
(667, 485, '', 1, NULL, NULL),
(668, 486, '', 1, NULL, NULL),
(669, 487, '', 1, NULL, NULL),
(670, 488, '', 1, NULL, NULL),
(671, 489, '', 1, NULL, NULL),
(672, 490, '', 1, NULL, NULL),
(673, 491, '', 1, NULL, NULL),
(674, 492, '', 1, NULL, NULL),
(675, 493, '', 1, NULL, NULL),
(676, 494, '', 1, NULL, NULL),
(677, 495, '', 1, NULL, NULL),
(678, 496, '', 1, NULL, NULL),
(679, 497, '', 1, NULL, NULL),
(680, 498, '', 1, NULL, NULL),
(681, 499, '', 1, NULL, NULL),
(682, 500, '', 1, NULL, NULL),
(683, 501, '', 1, NULL, NULL),
(684, 502, '', 1, NULL, NULL),
(685, 503, '', 1, NULL, NULL),
(686, 504, '', 1, NULL, NULL),
(687, 505, '', 1, 1938, NULL),
(688, 506, '', 1, NULL, NULL),
(689, 507, '', 1, NULL, NULL),
(690, 508, '', 1, NULL, NULL),
(691, 509, '', 1, NULL, NULL),
(692, 510, 'hghfgh', 1, 1939, 1954),
(693, 511, '', 1, NULL, NULL),
(694, 510, '', 2, 1946, NULL),
(696, 510, '', 3, NULL, NULL),
(697, 510, '', 4, NULL, NULL),
(698, 388, '', 2, NULL, NULL),
(699, 388, '', 3, NULL, NULL),
(700, 512, '', 1, NULL, NULL),
(701, 117, '', 9, NULL, NULL),
(702, 513, '', 1, NULL, 1960),
(703, 514, '', 1, NULL, NULL),
(704, 515, '', 1, NULL, NULL),
(705, 513, '', 2, NULL, 1961),
(706, 513, '', 3, NULL, 1963),
(707, 461, '', 2, NULL, 1966),
(708, 117, '', 10, NULL, 1971),
(709, 516, 'Типи натуральних тканин', 1, 1974, 1981),
(710, 517, '', 1, NULL, 1988),
(711, 516, 'Застосування натуральних тканин', 2, 1982, 1986),
(712, 516, '', 3, NULL, NULL),
(713, 518, 'Основні принципи підбору персоналу.', 1, 1991, 2008),
(714, 519, '', 1, NULL, 2004),
(715, 520, '', 1, NULL, NULL),
(716, 521, '', 1, NULL, NULL),
(717, 518, '', 2, NULL, NULL),
(718, 518, '', 3, NULL, NULL),
(719, 522, '', 1, NULL, 2009),
(720, 523, '', 1, NULL, NULL),
(721, 524, '', 1, NULL, NULL),
(722, 525, '', 1, NULL, NULL),
(723, 526, '', 1, NULL, NULL),
(724, 527, '', 1, NULL, NULL),
(725, 528, '', 1, NULL, NULL),
(726, 529, '', 1, NULL, NULL),
(727, 530, '', 1, NULL, NULL),
(728, 531, '', 1, NULL, NULL),
(729, 532, '', 1, NULL, NULL),
(730, 533, '', 1, NULL, NULL),
(731, 534, '', 1, NULL, NULL),
(732, 535, '', 1, NULL, NULL),
(733, 536, '', 1, NULL, NULL),
(734, 537, '', 1, NULL, 2011),
(735, 538, '', 1, NULL, NULL),
(736, 537, '', 2, NULL, 2035),
(737, 537, '', 5, NULL, NULL),
(738, 537, '', 4, NULL, NULL),
(739, 537, '', 3, NULL, 2015),
(740, 539, '', 1, NULL, NULL),
(741, 540, '', 1, NULL, NULL),
(742, 541, '', 1, NULL, NULL),
(743, 542, '', 1, NULL, NULL),
(744, 543, '', 1, NULL, NULL),
(745, 544, '', 1, NULL, NULL),
(746, 545, '', 1, NULL, NULL),
(747, 546, '', 1, NULL, NULL),
(748, 547, '', 1, NULL, NULL),
(749, 548, '', 1, NULL, NULL),
(750, 549, '', 1, NULL, NULL),
(751, 550, '', 1, NULL, NULL),
(752, 551, '', 1, NULL, NULL),
(753, 552, '', 1, NULL, NULL),
(754, 553, '', 1, NULL, NULL),
(755, 554, '', 1, NULL, NULL),
(756, 555, '', 1, NULL, NULL),
(757, 556, '', 1, NULL, NULL),
(758, 557, '', 1, NULL, NULL),
(759, 558, '', 1, NULL, NULL),
(760, 559, '', 1, NULL, NULL),
(761, 537, '', 6, NULL, NULL),
(762, 560, '', 1, NULL, NULL),
(763, 561, '', 1, NULL, NULL),
(764, 562, '', 1, NULL, NULL),
(765, 563, '', 1, NULL, NULL),
(766, 564, '', 1, NULL, NULL),
(767, 565, '', 1, NULL, NULL),
(768, 566, '', 1, NULL, NULL),
(769, 567, '', 1, NULL, NULL),
(770, 568, '', 1, NULL, NULL),
(771, 569, '', 1, NULL, NULL),
(772, 570, '', 1, NULL, NULL),
(773, 571, '', 1, NULL, NULL),
(774, 572, '', 1, NULL, NULL),
(775, 573, '', 1, NULL, NULL),
(776, 574, '', 1, NULL, NULL),
(777, 575, '', 1, NULL, NULL),
(778, 576, '', 1, NULL, NULL),
(779, 577, '', 1, NULL, NULL),
(780, 578, '', 1, NULL, NULL),
(781, 579, '', 1, NULL, NULL),
(782, 580, '', 1, NULL, NULL),
(783, 581, '', 1, NULL, NULL),
(784, 582, '', 1, NULL, NULL),
(785, 583, '', 1, NULL, NULL),
(786, 584, '', 1, NULL, NULL),
(787, 585, '', 1, NULL, NULL),
(788, 586, '', 1, NULL, NULL),
(789, 587, '', 1, NULL, NULL),
(790, 588, '', 1, NULL, NULL),
(791, 589, '', 1, NULL, NULL),
(792, 590, '', 1, NULL, NULL);

-- --------------------------------------------------------

--
-- Структура таблицы `lecture_type`
--

CREATE TABLE IF NOT EXISTS `lecture_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `image` varchar(255) NOT NULL,
  `title_ua` varchar(50) NOT NULL,
  `title_ru` varchar(50) NOT NULL,
  `title_en` varchar(50) NOT NULL,
  `short` varchar(5) NOT NULL,
  `description` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=5 ;

--
-- Дамп данных таблицы `lecture_type`
--

INSERT INTO `lecture_type` (`id`, `image`, `title_ua`, `title_ru`, `title_en`, `short`, `description`) VALUES
(1, 'lectureType.png', 'лекція/практика', 'лекция/практика', 'lecture/practice', 'л/п', ''),
(2, 'exam.png', 'екзамен', 'экзамен', 'exam', 'екз', ''),
(3, 'imp.png', 'індивідуальний модульний проект', 'индивидуальный модульный проект', 'module individual project', 'ІМП', ''),
(4, 'kdp.png', 'командний дипломний проект', 'комадный модульный проект', 'diploma team project', 'КДП', '');

-- --------------------------------------------------------

--
-- Структура таблицы `letters`
--

CREATE TABLE IF NOT EXISTS `letters` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `sender_id` int(11) NOT NULL,
  `addressee_id` int(11) NOT NULL,
  `theme` varchar(255) NOT NULL,
  `text_letter` text NOT NULL,
  `date` datetime NOT NULL,
  `status` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=155 ;

--
-- Дамп данных таблицы `letters`
--

INSERT INTO `letters` (`id`, `sender_id`, `addressee_id`, `theme`, `text_letter`, `date`, `status`) VALUES
(1, 22, 38, 'Заняття 4', 'Привіт1', '2015-06-21 21:36:58', 1),
(2, 22, 39, 'bnbnb', 'bnbvnv', '2015-07-06 09:37:16', 0),
(3, 22, 38, 'vbv  bvnvbnbnb', 'bnbnbnvbnb ffgggfgf cbggffhg dhghgfhg fghghgh fggngffhgh', '2015-07-06 09:38:01', 1),
(4, 22, 38, 'hjk', 'fhj', '2015-07-06 09:39:46', 1),
(5, 22, 38, 'gdfgfdg', '                         gg', '2015-07-06 09:51:28', 1),
(6, 22, 38, '                g', '        g   ', '2015-07-06 09:51:46', 1),
(7, 38, 39, 'dghfm', 'cnvbnbvm', '2015-07-06 10:15:09', 0),
(8, 38, 39, 'ggn,vhmjhkhkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkjjjjjjjjjjjjjjjjjjjjjjjjhhhh', 'hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm', '2015-07-06 10:16:05', 0),
(9, 22, 38, 'bvbn', 'bbv', '2015-07-06 10:40:14', 1),
(10, 22, 38, 'zzx xbvhm', 'fjfhjhjhfhfgghgfhghghghgghgfhghgfhghghghgghghgfbnbnb', '2015-07-06 14:01:17', 1),
(11, 22, 39, 'kilj;l', 'hk;lj;k', '2015-07-07 08:37:02', 0),
(12, 56, 38, '222', '1111', '2015-07-08 10:12:25', 1),
(13, 38, 40, 'rr', 'eewewr', '2015-07-08 17:48:53', 0),
(14, 38, 22, 'zzx xbvhm', 'ujuuyu', '2015-07-08 17:49:43', 1),
(15, 22, 38, 'zzx xbvhm', 'аптртрь', '2015-07-09 06:30:26', 1),
(16, 38, 22, 'Заняття 4', 'bvvmn,m.,', '2015-07-09 06:37:51', 1),
(17, 38, 22, 'zzx xbvhm', 'chmghmgjk,', '2015-07-09 11:57:24', 1),
(18, 38, 56, '222', ' nmb,b,', '2015-07-09 11:57:32', 0),
(19, 22, 47, 'jghgjfghfhg', 'jhfgfgh', '2015-07-10 11:50:36', 0),
(20, 22, 41, 'etthrjy', 'tsyj', '2015-07-10 11:50:43', 0),
(21, 45, 50, '!!!!!!!!!!!!!!!!!!!!!!!!!!', '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!', '2015-07-10 18:25:13', 0),
(22, 22, 38, 'zzx xbvhm', 'ruytu', '2015-07-11 13:36:02', 1),
(23, 22, 40, 'yuyuy', 'tyuyut', '2015-07-11 13:36:11', 1),
(24, 22, 110, 'hgfhfhgfhfhh', 'ouytfghfhg', '2015-07-15 17:09:02', 0),
(25, 38, 38, 'fbff', 'fdfgfg', '2015-07-15 17:41:55', 1),
(26, 106, 110, 'hg', 'nm', '2015-07-16 08:43:40', 0),
(27, 40, 38, 'hgjhgn', 'khjgjh', '2015-07-16 08:49:53', 1),
(28, 40, 22, 'yuyuy', 'khgjghfh', '2015-07-16 08:50:08', 1),
(29, 38, 38, 'mj', 'jkj', '2015-07-20 13:46:46', 0),
(30, 38, 38, 'енр', 'нрн', '2015-07-20 13:52:08', 1),
(31, 38, 38, 'иь', 'ро', '2015-07-20 13:58:37', 1),
(32, 38, 39, 'в', 'в', '2015-07-20 14:01:31', 0),
(33, 38, 38, 'иь', 'вав', '2015-07-20 14:01:47', 0),
(34, 38, 39, 'bn', 'bn', '2015-07-21 06:13:55', 0),
(35, 38, 38, ' m', ' nkm', '2015-07-21 08:52:56', 0),
(36, 38, 38, 'енр', 'cgjhk', '2015-07-21 08:53:15', 0),
(37, 49, 38, 'Тест', 'тест', '2015-07-21 12:06:20', 0),
(38, 52, 38, 'ghgh', 'ggh', '2015-07-21 19:07:26', 0),
(39, 52, 40, 'gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg', 'f', '2015-07-21 19:07:41', 0),
(40, 52, 38, 'формулы сокращенного умножения и разложения на множители формулы сокращенного ум', 'в', '2015-07-21 19:12:22', 0),
(41, 52, 38, 'формулысокращенногоумноженияиразложениянамножителиформулысокращенногоумноженияир', 'арп', '2015-07-21 19:13:42', 1),
(42, 121, 39, 'авпрпр', 'аааааааааааааааааааааааааааааааааааааааввввввввввввввввввввввввввииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииоооооооооооооооооооооооооооооооооооооооооооооооооооооооонннннннннннннннннннннннннннннннннннннннннннннннннннннннннннннккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккуууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууупппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппплллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллльььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддчччччччччччччччччччччччччччччччччччччччччччччччччччччччччччччччччччччччччччччььььььььььььььььььььььььььььььььььььььььььььььььььььььььссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжжцццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццццььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььььффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффффззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззззкккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккккеееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееаааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааа', '2015-07-22 08:33:07', 0),
(43, 121, 39, 'рспиь', 'сссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссссс', '2015-07-22 08:33:41', 0),
(44, 121, 41, 'мрьбиьбтью', 'мллллллллллллллллллллллллллллллллллллллллллллллитиииимисмисмсти', '2015-07-22 08:33:54', 0),
(45, 38, 38, '111', '111', '2015-07-22 17:04:13', 0),
(46, 38, 38, 'и', 'м', '2015-07-24 13:45:41', 0),
(47, 22, 40, 'hgchmnm', 'kgkjkh,kh', '2015-07-27 10:15:48', 0),
(48, 22, 38, 'zzx xbvhm', 'fhmj', '2015-07-27 10:16:00', 1),
(49, 121, 40, ' hvm', 'ghk', '2015-07-27 13:49:07', 0),
(50, 129, 40, 'спсвравчр', 'рлаппв', '2015-07-29 10:53:58', 0),
(51, 129, 40, 'влнол', 'вглнвгл', '2015-07-29 10:54:09', 0),
(52, 22, 38, 'ппр', 'с', '2015-08-10 15:40:02', 0),
(53, 22, 38, 'zzx xbvhm', 'и', '2015-08-10 15:40:09', 0),
(54, 22, 38, 'мро', 'ро', '2015-08-11 17:52:44', 0),
(55, 22, 38, 'т', '   арв', '2015-08-11 17:53:12', 0),
(56, 22, 38, 'zzx xbvhm', ' рь', '2015-08-11 17:53:28', 0),
(57, 52, 40, 'vjhj', 'fhkhgk', '2015-08-12 14:01:00', 0),
(58, 52, 39, 'нешегшгшгшгшеггкнгкнгнгннннннннннннннннннннннннннн', 'аопрваорпаылпрапраыпарвлпырвлапрвапорвлпрваплврпловавсмитмьитм\r\nоапрвоапрваолпрвлопрвапр  папавпаповадоапапапв тиадповпвдпдадп\r\nввопрварпрппр пропрпроапроаорпррапрапрппрпар проапрплрапрапрпрпа\r\nоврповарпаапаорппапаопрапаарпи  пи прапрвапвррпарпапапапрапапа', '2015-08-12 14:52:36', 0),
(59, 51, 38, '11', '11', '2015-08-13 12:29:03', 1),
(60, 38, 51, '11', '1111', '2015-08-13 12:29:24', 1),
(61, 123, 38, 'тема', 'пользователь datingstest2015@i.ua хочет отправить Вам письмо', '2015-08-17 11:20:38', 1),
(62, 123, 39, 'Письмо', 'пр', '2015-08-17 11:22:15', 0),
(63, 166, 134, 'Привіт!', 'Привіт! Як твої справи? ', '2015-08-19 13:47:52', 0),
(64, 166, 134, 'Привет!', 'А мне никто не ответил на мое предыдущее сообщение(((((', '2015-08-19 19:28:45', 1),
(65, 166, 39, 'ghjghj', 'cghjghj', '2015-08-21 12:37:15', 0),
(66, 134, 166, 'Привет!', 'Привет', '2015-08-22 16:56:02', 1),
(67, 22, 40, 'yuyuy', 'mnbmn', '2015-08-26 13:16:41', 0),
(68, 22, 40, 'uyj', 'mnv', '2015-08-26 13:16:56', 0),
(69, 174, 134, 'dfg', 'cv', '2015-08-27 14:53:17', 1),
(70, 174, 134, 'dfg', 'cv', '2015-08-27 14:53:17', 0),
(71, 174, 110, 'gccg', 'cvhchc', '2015-08-27 14:56:28', 0),
(72, 174, 38, 'qw', 'qw', '2015-08-27 15:03:10', 1),
(73, 174, 38, 'we', 'we', '2015-08-27 15:03:40', 1),
(74, 174, 38, 'bnbn', 'v bnvbn', '2015-08-27 15:04:11', 1),
(75, 167, 38, 'vbmvnm', 'vnmnm', '2015-08-27 15:06:29', 1),
(76, 38, 167, 'vbmvnm', 'ммтрт', '2015-08-28 15:57:17', 0),
(77, 38, 174, 'bnbn', ' ьб тбтьбтммбт', '2015-08-28 15:57:34', 0),
(78, 38, 174, 'we', 'тьти', '2015-08-28 15:57:59', 0),
(79, 38, 174, 'qw', 'ичаич', '2015-08-28 15:58:08', 0),
(80, 38, 167, 'vbmvnm', 'папр', '2015-08-28 15:58:15', 0),
(81, 38, 40, 'тб тлб', '  б лд ', '2015-08-28 15:58:37', 0),
(82, 134, 174, 'dfg', 'ewfwef', '2015-08-29 12:32:44', 0),
(83, 38, 42, 'лпгшпг', 'гшнгшнг', '2015-09-02 19:44:12', 0),
(84, 38, 41, 'nggn', 'fhnx', '2015-09-09 16:20:15', 0),
(85, 38, 167, 'vbmvnm', 'bm', '2015-09-09 16:20:25', 0),
(86, 38, 39, ' мрьмлб', 'спрлолролролролор', '2015-09-09 19:45:08', 1),
(87, 129, 40, 'xghjxhj', 'chgjchj', '2015-09-11 11:37:49', 0),
(88, 53, 42, 'fgkhjgfhkljgfkhjgfhkjghljglljfglhjxljhfghjgflhflhjgflhjghlfjhgkjhkfjhgfjhflghjgk', 'jfhljghljghlkxjfkghlfkhjkglhgflhjgkhjgklxghklhjlfhjfglhjgfljhglkjhgflhjgfljhgjhfgljhlgllfgkhjkgkhjgklgjhjhhhhhhhhhhhhhhhgfljhlgjhlkgjhlfxhjljgfhjklgjhlgjhkglghjglfhjlfhjlg', '2015-09-12 11:36:10', 0),
(89, 38, 40, ' vnjm', 'vhj', '2015-09-12 14:42:59', 0),
(90, 38, 40, 'поп', 'пропро', '2015-09-14 12:12:45', 0),
(91, 22, 38, 'zzx xbvhm', 'uykgj', '2015-09-14 14:28:37', 1),
(92, 38, 41, 'fkgcihkh', 'dxtujgcukkh', '2015-09-16 19:31:27', 0),
(93, 38, 42, 'чспмл', 'угпршззшщ', '2015-09-19 10:56:25', 0),
(94, 39, 38, ' мрьмлб', 'GFHG', '2015-09-23 16:37:14', 1),
(95, 38, 39, ' мрьмлб', 'иьи', '2015-09-24 10:09:32', 1),
(96, 38, 39, ' мрьмлб', 'fgjfhjgfhj', '2015-09-26 08:06:35', 1),
(97, 38, 39, ' мрьмлб', 'аропророр', '2015-09-28 08:04:56', 0),
(98, 38, 167, 'vbmvnm', 'прпр', '2015-09-28 08:05:17', 1),
(99, 38, 22, 'zzx xbvhm', 'рп', '2015-09-28 08:05:20', 1),
(100, 206, 2, 'hgfbfjh', 'kgjbnkjbgvnglknmc. mbvc', '2015-10-05 09:47:43', 0),
(101, 22, 38, 'чанр', 'вр', '2015-10-06 19:58:23', 1),
(102, 22, 41, 'агп', 'ара', '2015-10-06 19:58:36', 0),
(103, 22, 38, 'zzx xbvhm', 'аонр', '2015-10-06 19:59:07', 0),
(104, 38, 39, 'test', 'test', '2015-10-07 17:33:56', 1),
(105, 38, 40, 'вввв', 'ввввввввв', '2015-10-23 11:37:31', 0),
(106, 22, 38, 'zzx xbvhm', 'fghkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk...=', '2015-10-23 18:13:31', 0),
(107, 22, 40, 'yuyuy', 'dfgdfgdgdfg', '2015-10-23 18:17:32', 0),
(108, 22, 38, 'zzx xbvhm', ' ьть', '2015-10-23 18:20:39', 1),
(109, 22, 38, 'ППППППОШНПРОТБЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬ', 'ИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИИОЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЬЗЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩЩ', '2015-10-23 18:22:11', 1),
(110, 38, 39, 'bbbbb', 'bgbbbb', '2015-11-05 16:27:40', 1),
(111, 39, 38, 'www', 'eeeee', '2015-11-05 16:29:12', 1),
(112, 38, 39, 'edddd', 'ddffff', '2015-11-05 16:30:26', 1),
(113, 39, 38, 'edddd', 'kjkjjkjkkjkjkkk', '2015-11-05 16:46:24', 1),
(114, 38, 39, 'Test', 'IS', '2015-11-05 18:04:58', 1),
(115, 38, 39, 'лллл', 'лллл', '2015-11-18 09:11:02', 0),
(116, 39, 38, 'fgrgfgftg', 'gggggggggggggggggggg', '2015-11-18 09:12:03', 1),
(117, 22, 39, 'gdrfg', 'grgr', '2015-11-24 16:47:38', 0),
(118, 22, 38, 'yuruytu', 'yhtrutyi', '2015-11-24 16:48:11', 1),
(119, 38, 22, 'yuruytu', 'rtujtyjykyukkl', '2015-11-24 16:49:05', 1),
(120, 51, 38, 'лист до викладача1', 'лист до викладача перший', '2015-11-24 16:55:25', 1),
(121, 38, 51, 'лист до викладача1', 'відповідь студенту перша', '2015-11-24 16:56:13', 1),
(122, 38, 51, 'лист до викладача1', 'арапрао', '2015-11-24 16:58:28', 1),
(123, 51, 38, 'лист до викладача1', 'ртпнгнгн', '2015-11-24 16:59:21', 1),
(124, 38, 51, 'лист до викладача1', 'аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт аувапварп оролротт тттттттттт тттттттт ', '2015-11-24 17:09:00', 1),
(125, 2, 43, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : Вступ до програмування.<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/intro>Вступ до програмування </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-12 08:32:38', 0),
(126, 38, 9, 'Нова задача', 'Вітаємо!<br>У Вас з''явилася нова задача для перевірки : аеепгорл.Щоб продивитися нову задачу, перейди за посиланням:\n            <a href =http://qa.intita.com_teacher/teacher/checkPlainTaskAnswer4>Задача до перевірки </a>\n            ​З повагою,\n            INTITA​', '2015-12-12 15:33:31', 0),
(127, 38, 1, 'Нова задача', 'Вітаємо\n        Вам додано нова задача до перевірки <br>\n        Ви можете переглянути її за посиланням <a href="$path">сюда</a>', '2015-12-16 19:39:03', 0),
(128, 22, 38, 'yuruytu', 'vnvb', '2015-12-17 12:13:30', 1),
(129, 2, 48, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : Побудова індивідуального плану успішної ІТ кар’єри.<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/58>Побудова індивідуального плану успішної ІТ кар’єри </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-17 18:02:47', 0),
(130, 2, 48, 'Оплата курсу', 'Вітаємо!<br>Тобі надано доступ до курсу : Побудова успішної ІТ кар’єри.<br>Щоб розпочати навчання, перейди за посиланням: <a href =http://qa.intita.com/course/ru/careerru>Побудова успішної ІТ кар’єри </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-17 18:03:01', 0),
(131, 2, 22, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : Вступ. Тест..<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/166>Вступ. Тест. </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-19 10:08:41', 1),
(132, 2, 255, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : Вступ до програмування.<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/intro>Вступ до програмування </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-21 07:10:46', 1),
(133, 2, 22, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : Вступ до програмування.<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/intro>Вступ до програмування </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-21 10:01:40', 1),
(134, 2, 22, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : Вступ до програмування.<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/intro>Вступ до програмування </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-21 10:02:49', 0),
(135, 2, 22, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : Типи тканин .<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/179>Типи тканин  </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-24 13:22:59', 0),
(136, 2, 22, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : Алгоритмізація і програмування на мові С.<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/3>Алгоритмізація і програмування на мові С </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-25 12:44:59', 1),
(137, 38, 22, 'zzx xbvhm', '        rthy', '2015-12-25 16:17:10', 1),
(138, 38, 123, 'тема', 'htyhtg', '2015-12-25 16:17:38', 0),
(139, 22, 1, 'репк', 'апрапр', '2015-12-25 16:19:30', 0),
(140, 38, 22, 'yuruytu', '1', '2015-12-25 16:29:51', 1),
(141, 258, 1, 'Сообщение', 'Вопрос относительно занятия', '2015-12-26 10:39:40', 0),
(142, 2, 253, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : Алгоритмізація і програмування на мові С.<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/3>Алгоритмізація і програмування на мові С </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-28 12:07:50', 0),
(143, 2, 253, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : Вступ до програмування.<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/intro>Вступ до програмування </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-28 12:09:39', 0),
(144, 2, 261, 'Оплата курсу', 'Вітаємо!<br>Тобі надано доступ до курсу : Курс кройки і шиття.<br>Щоб розпочати навчання, перейди за посиланням: <a href =http://qa.intita.com/course/ua/r1>Курс кройки і шиття </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-28 16:26:29', 1),
(145, 2, 261, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : Алгоритмізація і програмування на мові С.<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/3>Алгоритмізація і програмування на мові С </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-28 16:28:17', 1),
(146, 22, 38, 'zzx xbvhm', 'rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt ', '2015-12-29 12:37:15', 1);
INSERT INTO `letters` (`id`, `sender_id`, `addressee_id`, `theme`, `text_letter`, `date`, `status`) VALUES
(147, 38, 22, 'zzx xbvhm', 'uuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt \r\n\r\nhttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profilehttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22/tab3/?idUser=22rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt \r\n\r\nhttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profilehttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22/tab3/?idUser=22rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt \r\n\r\nhttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profilehttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22/tab3/?idUser=22rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt uuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt \r\n\r\nhttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.', '2015-12-29 12:40:08', 1);
INSERT INTO `letters` (`id`, `sender_id`, `addressee_id`, `theme`, `text_letter`, `date`, `status`) VALUES
(148, 22, 38, 'yuruytu', 'uuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt \r\n\r\nhttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profilehttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22/tab3/?idUser=22rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt \r\n\r\nhttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profilehttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22/tab3/?idUser=22rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt \r\n\r\nhttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profilehttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22/tab3/?idUser=22rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt uuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rturyuuuuuuuuuuuuuuuuuuuuuuuuuur  rtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt rrrrrrrrrrrrrrrrrrrrytttttttttttttttttttttt \r\n\r\nhttp://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.com/profile/tab3/?idUser=22http://qa.intita.', '2015-12-29 12:40:35', 1);
INSERT INTO `letters` (`id`, `sender_id`, `addressee_id`, `theme`, `text_letter`, `date`, `status`) VALUES
(149, 38, 39, 'fgrgfgftg', 'fgjfgj', '2015-12-29 12:42:53', 0),
(150, 2, 261, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : Управління персоналом.  Базові знання.<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/187>Управління персоналом.  Базові знання </a><br>\n            ​З повагою,<br>\n            INTITA​', '2015-12-29 18:56:36', 0),
(151, 2, 261, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : Вступ до програмування.<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/intro>Вступ до програмування </a><br>\n            ​З повагою,<br>\n            INTITA​', '2016-01-04 19:13:46', 0),
(152, 38, 22, 'чанр', 'fgjfhyki', '2016-01-09 09:27:19', 1),
(153, 2, 56, 'Оплата модуля', 'Вітаємо!<br>Тобі надано доступ до модуля : For beginners.<br>Щоб розпочати навчання, перейди за посиланням: <a href =/module/ua/54>For beginners </a><br>\n            ​З повагою,<br>\n            INTITA​', '2016-01-09 10:04:57', 1),
(154, 22, 38, 'чанр', 'ьб оибт', '2016-01-09 11:11:49', 0);

-- --------------------------------------------------------

--
-- Структура таблицы `mainpage`
--

CREATE TABLE IF NOT EXISTS `mainpage` (
  `id` int(11) NOT NULL,
  `sliderTextureURL` varchar(255) NOT NULL,
  `sliderLineURL` varchar(255) NOT NULL,
  `subLineImage` varchar(255) NOT NULL,
  `hexagon` varchar(255) NOT NULL,
  `imageNetwork` varchar(255) NOT NULL,
  `formFon` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `mainpage`
--

INSERT INTO `mainpage` (`id`, `sliderTextureURL`, `sliderLineURL`, `subLineImage`, `hexagon`, `imageNetwork`, `formFon`) VALUES
(0, '/css/images/slider_img/texture.png', '/css/images/slider_img/line.png', 'line1.png', 'hexagon.png', 'networking.png', 'formFon.png');

-- --------------------------------------------------------

--
-- Структура таблицы `message_comment`
--

CREATE TABLE IF NOT EXISTS `message_comment` (
  `message_code` int(11) NOT NULL AUTO_INCREMENT,
  `comment` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`message_code`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=54656 ;

--
-- Дамп данных таблицы `message_comment`
--

INSERT INTO `message_comment` (`message_code`, `comment`) VALUES
(2, ''),
(3, 'test'),
(4, 'r432tfr452'),
(100, ''),
(197, ''),
(218, ''),
(243, ''),
(244, ''),
(245, ''),
(246, ''),
(247, ''),
(259, ''),
(301, ''),
(590, ''),
(592, ''),
(593, ''),
(594, ''),
(595, ''),
(596, ''),
(597, ''),
(598, ''),
(599, ''),
(600, ''),
(601, ''),
(602, ''),
(603, ''),
(604, ''),
(605, ''),
(606, ''),
(607, ''),
(608, ''),
(609, ''),
(610, ''),
(611, ''),
(612, ''),
(613, '1'),
(617, ''),
(618, ''),
(619, ''),
(620, ''),
(621, ''),
(622, ''),
(623, ''),
(624, ''),
(625, ''),
(626, ''),
(627, ''),
(628, ''),
(629, ''),
(630, ''),
(631, ''),
(632, ''),
(633, ''),
(634, ''),
(635, ''),
(636, ''),
(663, ''),
(666, ''),
(683, ''),
(718, '  '),
(744, ''),
(772, ''),
(780, ''),
(782, ''),
(783, ''),
(3123, 'dsadasd'),
(54655, ' vfdf');

-- --------------------------------------------------------

--
-- Структура таблицы `module`
--

CREATE TABLE IF NOT EXISTS `module` (
  `module_ID` int(11) NOT NULL AUTO_INCREMENT,
  `title_ru` varchar(255) DEFAULT NULL,
  `title_en` varchar(255) DEFAULT NULL,
  `title_ua` varchar(255) NOT NULL,
  `alias` varchar(30) NOT NULL,
  `language` varchar(6) NOT NULL,
  `module_duration_hours` int(11) NOT NULL,
  `module_duration_days` int(11) NOT NULL DEFAULT '0',
  `lesson_count` int(11) DEFAULT '0',
  `module_price` decimal(10,0) DEFAULT '0',
  `for_whom` text,
  `what_you_learn` text,
  `what_you_get` text,
  `module_img` varchar(255) DEFAULT 'courseimg1.png',
  `level` enum('intern','junior','strong junior','middle','senior') DEFAULT NULL,
  `hours_in_day` int(11) DEFAULT '3',
  `days_in_week` int(11) DEFAULT '3',
  `rating` tinyint(2) DEFAULT NULL,
  `module_number` int(10) DEFAULT NULL,
  `cancelled` tinyint(1) NOT NULL DEFAULT '0',
  `status` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`module_ID`),
  UNIQUE KEY `module_number` (`module_number`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=197 ;

--
-- Дамп данных таблицы `module`
--

INSERT INTO `module` (`module_ID`, `title_ru`, `title_en`, `title_ua`, `alias`, `language`, `module_duration_hours`, `module_duration_days`, `lesson_count`, `module_price`, `for_whom`, `what_you_learn`, `what_you_get`, `module_img`, `level`, `hours_in_day`, `days_in_week`, `rating`, `module_number`, `cancelled`, `status`) VALUES
(1, 'Введение в программирование', 'Intro to Programming ', 'Вступ до програмування', 'intro', 'ua', 313, 20, 7, '0', 'для менеджерів проектів і тих, хто відповідає за постановку завдань на розробку;для дизайнерів, які готові почати не просто малювати красиві картинки, а й навчитися тому, як створювати працюючі і зручні інтерфейси;для розробників, які хочуть самостійно створити або змінити свій проект;', 'Ви навчитеся писати чистий код;Користуватися системами контролю версій;Дізнаєтеся, з чого складається сучасний додаток;Для чого потрібен безперервна інтеграція (СІ) сервер;Чому потрібно тестувати свої програми і як це робити;', 'Відеозаписи та текстові матеріали всіх онлайн-занять;Спілкування з розумними одногрупниками;Сертифікат про закінчення навчання;Прилаштованість на робоче місце в силіконовій долині;', NULL, 'strong junior', 4, 6, NULL, 1, 0, 1),
(2, 'Элементарная математика', 'Elementary math', 'Елементарна математика', '', 'ua', 30, 15, 16, '120', '', '', '', NULL, 'junior', 3, 3, NULL, 2, 0, 0),
(3, 'Алгоритмизация и программирование на С', 'C  language programming and algorithmization', 'Алгоритмізація і програмування на мові С', '', 'ua', 60, 30, 13, '130', '', '', '', '563b63e1c922b.png', 'junior', 3, 3, NULL, 3, 0, 0),
(4, 'Элементы высшей математики', 'Higher Math elements', 'Елементи вищої математики', '', 'ua', 60, 0, 0, '150', NULL, NULL, NULL, NULL, 'junior', 3, 3, NULL, 4, 0, 0),
(7, 'Компьютерные сети. Основы', 'Computer networks', 'Комп''ютерні мережі. Основи', '', 'ua', 60, 0, 2, '150', NULL, NULL, NULL, NULL, 'junior', 3, 3, NULL, 7, 0, 0),
(9, 'Разработка и анализ алгоритмов. Комбинаторные алгоритмы', 'Algorithms processing and analyses.Combinatorial algorithms', 'Розробка та аналіз алгоритмів. Комбінаторні алгоритми', '', 'ua', 60, 0, 1, '160', NULL, NULL, NULL, '55f4212edbc23.png', 'junior', 3, 3, NULL, 9, 0, 0),
(10, 'Дискретная математика', 'Discrete Math', 'Дискретна математика', '', 'ua', 60, 0, 22, '120', NULL, NULL, NULL, '561561a35ab8a.jpg', 'junior', 3, 3, NULL, 10, 0, 0),
(11, 'Базы данных. Основы', 'Databases', 'Бази даних. Основи', '', 'ua', 60, 0, 8, '140', NULL, NULL, NULL, 'courseimg1.png', 'junior', 3, 3, NULL, 11, 0, 0),
(14, 'Английский язык', 'English', 'Англійська мова', '', 'ua', 60, 0, 6, '3000', NULL, NULL, NULL, NULL, 'strong junior', 3, 3, NULL, 14, 1, 0),
(16, 'Программирование на РНР. (Часть 1)', 'PHP web programming (Part 1)', 'Програмування на PHP (Частина 1)', '', 'ua', 60, 0, 0, '0', '', '', '', 'courseimg1.png', 'junior', 3, 3, NULL, 16, 0, 0),
(17, 'Программирование на РНР (Часть 2)', 'PHP web programming (Part 2)', 'Програмування на PHP (Частина 2)', '', 'ua', 60, 0, 0, '3000', NULL, NULL, NULL, 'courseimg1.png', 'junior', 3, 3, NULL, 17, 0, 0),
(18, 'Верстка на HTML, CSS (Часть 1)', 'HTML, CSS Website layout (Part 1)', 'Верстка на HTML, CSS (Частина 1)', '', 'ua', 60, 0, 11, '100', NULL, NULL, NULL, 'courseimg1.png', 'junior', 3, 3, NULL, 18, 0, 0),
(20, 'Программирование на JavaScript (Часть 1)', 'JavaScript Programming (Part 1)', 'Програмування на JavaScript (Частина 1)', '', 'ua', 60, 0, 5, '120', NULL, NULL, NULL, 'courseimg1.png', 'junior', 3, 3, NULL, 20, 0, 0),
(22, 'Современные технологии разработки программ', 'Modern Technologies of Software Development', 'Сучасні технології розробки програм', '', 'ua', 60, 0, 0, '3000', NULL, NULL, NULL, NULL, 'junior', 3, 3, NULL, 22, 0, 0),
(23, 'Командный дипломный проект', 'Diploma team project', 'Командний дипломний проект', 'teamproject', 'ua', 60, 0, 4, '100', '', '', '', '563b6477162a9.png', 'junior', 3, 3, NULL, 23, 0, 0),
(54, 'For beginners', 'For beginners', 'For beginners', '', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 54, 0, 0),
(55, 'Pre Intermediate', 'Pre Intermediate', 'Pre Intermediate', '', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 55, 0, 0),
(56, 'Intermediate', 'Intermediate', 'Intermediate', '', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 56, 0, 0),
(58, 'Построение индивидуального плана успешной ИТ карьеры.', 'How to build a  successful career in IT-high level', 'Побудова індивідуального плану успішної ІТ кар’єри', '', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 58, 0, 0),
(59, 'Эффективное трудоустройство', 'Effective employment', 'Ефективне працевлаштування', '', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 59, 0, 0),
(60, 'Психология успеха', 'The psychology of success', 'Психологія успіху', '', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 60, 0, 0),
(61, 'New module', 'New module', 'New module', '', 'ua', 0, 0, 12, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 61, 0, 0),
(62, 'Введение в программирование', 'Intro to Programming ', 'Вступ до програмування', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 62, 0, 0),
(63, 'Элементарная математика', 'Elementary math', 'Елементарна математика', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 63, 0, 0),
(64, 'Алгоритмизация и программирование на С', 'C  language programming and algorithmization', 'Алгоритмізація і програмування на мові С', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 64, 0, 0),
(65, 'Элементы высшей математики', 'Higher Math elements', 'Елементи вищої математики', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 65, 0, 0),
(66, 'Компьютерные сети. Основы', 'Computer networks', 'Комп''ютерні мережі. Основи', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 66, 0, 0),
(67, 'Разработка и анализ алгоритмов. Комбинаторные алгоритмы', 'Algorithms processing and analyses.Combinatorial algorithms', 'Розробка та аналіз алгоритмів. Комбінаторні алгоритми.', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 67, 0, 0),
(68, 'Дискретная математика', 'Discrete Math', 'Дискретна математика', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 68, 0, 0),
(69, 'Базы данных. Основы', 'Databases', 'Бази даних. Основи', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 69, 0, 0),
(70, 'Программирование на РНР. Основы', 'PHP web programming (Part 1)', 'Програмування на PHP. Основи', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 70, 0, 0),
(71, 'Программирование на РНР (Часть 2)', 'PHP web programming (Part 2)', 'Програмування на PHP (Частина 2)', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 71, 0, 0),
(72, 'Верстка на HTML, CSS', 'HTML, CSS Website layout', 'Верстка на HTML, CSS', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 72, 0, 0),
(73, 'Программирование на JavaScript', 'JavaScript Programming', 'Програмування на JavaScript', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 73, 0, 0),
(74, 'Современные технологии разработки программ', 'Modern Technologies of Software Development', 'Сучасні технології розробки програм', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 74, 0, 0),
(75, 'Командный дипломный проект', 'Diploma team project', 'Командний дипломний проект', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'strong junior', 3, 3, NULL, 75, 0, 0),
(76, 'For beginners', 'For beginners', 'For beginners', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'middle', 3, 3, NULL, 76, 0, 0),
(77, 'Pre Intermediate', 'Pre Intermediate', 'Pre Intermediate', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'middle', 3, 3, NULL, 77, 0, 0),
(78, 'Intermediate', 'Intermediate', 'Intermediate', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'middle', 3, 3, NULL, 78, 0, 0),
(79, 'Построение индивидуального плана успешной ИТ карьеры.', 'How to build a  successful career in IT-high level', 'Побудова індивідуального плану успішної ІТ кар’єри', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'senior', 3, 3, NULL, 79, 0, 0),
(80, 'Эффективное трудоустройство', 'Effective employment', 'Ефективне працевлаштування', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'senior', 3, 3, NULL, 80, 0, 0),
(81, 'Психология успеха', 'The psychology of success', 'Психологія успіху', '', 'ru', 0, 0, 0, '0', NULL, NULL, NULL, 'courseimg1.png', 'senior', 3, 3, NULL, 81, 0, 0),
(82, 'Введение в программирование', 'Intro to Programming ', 'Вступ до програмування', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 82, 0, 0),
(83, 'Элементарная математика', 'Elementary math', 'Елементарна математика', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 83, 0, 0),
(84, 'Алгоритмизация и программирование на С', 'C  language programming and algorithmization', 'Алгоритмізація і програмування на мові С', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 84, 0, 0),
(85, 'Элементы высшей математики', 'Higher Math elements', 'Елементи вищої математики', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 85, 0, 0),
(86, 'Компьютерные сети. Основы', 'Computer networks', 'Комп''ютерні мережі. Основи', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 86, 0, 0),
(87, 'Разработка и анализ алгоритмов. Комбинаторные алгоритмы', 'Algorithms processing and analyses.Combinatorial algorithms', 'Розробка та аналіз алгоритмів. Комбінаторні алгоритми.', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 87, 0, 0),
(88, 'Дискретная математика', 'Discrete Math', 'Дискретна математика', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 88, 0, 0),
(89, 'Базы данных. Основы', 'Databases', 'Бази даних. Основи', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 89, 0, 0),
(90, 'Программирование на РНР. Основы', 'PHP web programming (Part 1)', 'Програмування на PHP. Основи', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 90, 0, 0),
(91, 'Программирование на РНР (Часть 2)', 'PHP web programming (Part 2)', 'Програмування на PHP (Частина 2)', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 91, 0, 0),
(92, 'Верстка на HTML, CSS', 'HTML, CSS Website layout', 'Верстка на HTML, CSS', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 92, 0, 0),
(93, 'Программирование на JavaScript', 'JavaScript Programming', 'Програмування на JavaScript', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 93, 0, 0),
(94, 'Современные технологии разработки программ', 'Modern Technologies of Software Development', 'Сучасні технології розробки програм', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 94, 0, 0),
(95, 'Командный дипломный проект', 'Diploma team project', 'Командний дипломний проект', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 95, 0, 0),
(96, 'Построение индивидуального плана успешной ИТ карьеры.', 'How to build a  successful career in IT-high level', 'Побудова індивідуального плану успішної ІТ кар’єри', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 96, 0, 0),
(97, 'Эффективное трудоустройство', 'Effective employment', 'Ефективне працевлаштування', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 97, 0, 0),
(98, 'Психология успеха', 'The psychology of success', 'Психологія успіху', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 98, 0, 0),
(99, 'For beginners', 'For beginners', 'For beginners', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 99, 0, 0),
(100, 'Pre Intermediate', 'Pre Intermediate', 'Pre Intermediate', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 100, 0, 0),
(101, 'Intermediate', 'Intermediate', 'Intermediate', '', 'ru', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 101, 0, 0),
(121, 'Базы данных для интернет-программистов', 'Databases for web developers', 'Бази даних для інтернет-програмістів', '', 'ua', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 121, 0, 0),
(122, 'Регулярные выражения', 'Regular expressions', 'Регулярні вирази', '', 'ua', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 122, 0, 0),
(123, 'Стажировка', 'Traineeship', 'Стажування', '', 'ua', 0, 0, 3, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 123, 0, 0),
(125, 'Російською', 'Англійською', 'Українською', '', 'ua', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 125, 0, 0),
(126, 'Верстка на HTML/CSS (Часть 1)', 'HTML, CSS Website layout (Part 1)', 'Верстка на HTML/CSS (Частина 1)', '', 'ua', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 126, 0, 0),
(127, 'Верстка на HTML/CSS (Часть 2)', 'HTML, CSS Website layout (Part 2)', 'Верстка на HTML/CSS (Частина 2)', '', 'ua', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 127, 0, 0),
(128, 'Программирование на JavaScript (Часть 1)', 'JavaScript Programming (Part 1)', 'Програмування на JavaScript (Частина 1)', '', 'ua', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 128, 0, 0),
(129, 'Программирование на JavaScript (Часть 2)', 'JavaScript Programming (Part 2)', 'Програмування на JavaScript (Частина 2)', '', 'ua', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 129, 0, 0),
(130, 'Командный дипломный проект', 'Diploma team project', 'Командний дипломний проект', '', 'ua', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 130, 0, 0),
(131, 'Верстка на HTML, CSS (Часть 2)', 'HTML, CSS Website layout (Part 2)', 'Верстка на HTML, CSS (Частина 2)', '', 'ua', 0, 0, 12, '100', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 131, 0, 0),
(132, 'Программирование на JavaScript (Часть 2)', 'JavaScript Programming (Part 2)', 'Програмування на JavaScript (Частина 2)', '', 'ua', 0, 0, 5, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 132, 0, 0),
(133, '', '', 'кркнонаоко', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 133, 0, 0),
(134, '', '', 'вппорапоаророрп', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 134, 0, 0),
(135, '', '', 'епшпдсршдлододо', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 135, 0, 0),
(136, '', '', 'cgjghhghghghghgfhghghghhhg', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 136, 0, 0),
(137, '', '', 'hjgjhgjhjhjhjhjhj', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 137, 0, 0),
(138, '', '', 'gjgjghjghjghjghgjghjghjghjghjghjhgjhhj', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 138, 0, 0),
(139, '6y7', '6t', '7', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 139, 0, 0),
(140, 'h', 'g', 'hth', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 140, 0, 0),
(141, '', '', 'hnbnbnbvb', '', 'ua', 0, 0, 0, '500', NULL, NULL, NULL, '564b66ac7350f.png', 'intern', 3, 3, NULL, 141, 0, 0),
(142, '', '', 'dghfghgfhghghghghgdtyyjgktduk', '', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, '564b66bbc382a.png', 'intern', 3, 3, NULL, 142, 0, 0),
(143, '', '', 'ghjhjhjhjhgjh', '', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, '564b66d0c9ecd.png', 'intern', 3, 3, NULL, 143, 0, 0),
(144, '', '', 'hhghghghghghghghhhghgfhf', '', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, '564b66f7753f5.png', 'intern', 3, 3, NULL, 144, 0, 0),
(145, '', '', 'dfjkghdfkgj', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 145, 0, 0),
(146, '', '', '6', '', 'ua', 0, 0, 0, '1200', NULL, NULL, NULL, '564b669c93ed3.png', 'intern', 3, 3, NULL, 146, 0, 0),
(147, 'лш', 'ошш', 'щл', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 147, 0, 0),
(148, '', '', 'прпр', '', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'intern', 3, 3, NULL, 148, 0, 0),
(149, '', '', 'Ланцюги Маркова', '', 'ua', 0, 0, 0, '450', '', '', '', '561261f134730.png', 'junior', 3, 3, NULL, 251, 0, 0),
(150, 'fre', 'gre', 'gtr', '150', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'strong junior', 3, 3, NULL, NULL, 0, 0),
(151, '', '', 'gfhfgh', '151', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, '564b6715a0297.png', 'senior', 3, 3, NULL, NULL, 0, 0),
(152, '', '', 'ghfgh', '152', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, '564b668182210.png', 'senior', 3, 3, NULL, NULL, 0, 0),
(153, '', '', 'модуль 1', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 26, 0, 0),
(154, '', '', 'модуль111', 'мод', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 112, 0, 0),
(155, '', '', 'hello', '155', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, '563b646043ac5.png', 'strong junior', 3, 3, NULL, NULL, 0, 0),
(156, '', '', 'ввв', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 1234, 0, 0),
(157, '', '', 'аааааа', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, 2222, 0, 0),
(158, '', '', 'модуль перший', '158', 'ua', 0, 0, 0, '150', '', '', '', NULL, 'junior', 3, 3, NULL, NULL, 0, 1),
(159, '', '', 'ggf', '159', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'senior', 3, 3, NULL, NULL, 0, 0),
(160, '', '', 'ertfetret', '160', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'strong junior', 3, 3, NULL, NULL, 0, 0),
(161, 'erfkle', 'nwsfvkl', 'fwehjf', '161', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'strong junior', 3, 3, NULL, NULL, 0, 0),
(162, '', '', 'модуль', '', 'ua', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 577, 0, 0),
(163, '', '', '2', '163', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'intern', 3, 3, NULL, NULL, 0, 0),
(164, '', '', '22', '164', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'senior', 3, 3, NULL, NULL, 0, 1),
(165, '', ' h', 'kihik', '165', 'ua', 0, 0, 0, '3600', NULL, NULL, NULL, NULL, 'middle', 3, 3, NULL, NULL, 0, 0),
(166, 'Вступ. Тест.', 'Vstup. Test', 'Вступ. Тест.', '166', 'ua', 0, 0, 1, '0', '', '', '', NULL, 'strong junior', 3, 3, NULL, NULL, 0, 1),
(167, 'Модуль. Тест', 'Module. Test', 'Модуль. Тест', '167', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'middle', 3, 3, NULL, NULL, 0, 1),
(168, 'орл', '', 'горгшрш', '168', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'strong junior', 3, 3, NULL, NULL, 0, 0),
(169, '', '', 'гнегшпг', '169', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, '5672ed3163305.jpg', 'middle', 3, 3, NULL, NULL, 0, 0),
(170, '', '', 'гшншг', '170', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'middle', 3, 3, NULL, NULL, 1, 0),
(171, '', '', 'Дизайн', '171', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'strong junior', 3, 3, NULL, NULL, 1, 0),
(172, '', '', 'test1', '172', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'intern', 3, 3, NULL, NULL, 0, 0),
(173, '', '', 'test2', '173', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'intern', 3, 3, NULL, NULL, 0, 0),
(174, '', '', 'test3', '174', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'intern', 3, 3, NULL, NULL, 0, 0),
(175, '', '', 'іваіваіваів', '175', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'intern', 3, 3, NULL, NULL, 1, 0),
(176, '', '', 'Modulis', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, NULL, 0, 0),
(177, '', '', 'ModuleNonIMG', '', 'ua', 0, 0, 0, '0', '', '', '', NULL, 'intern', 3, 3, NULL, NULL, 0, 1),
(178, '', '', 'ffff', '178', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'module.png', 'strong junior', 3, 3, NULL, NULL, 0, 0),
(179, 'Типы тканей', '', 'Типи тканин ', '179', 'ua', 0, 0, 2, '0', NULL, NULL, NULL, 'module.png', 'junior', 3, 3, NULL, NULL, 0, 0),
(180, '', '', 'yhtyj', '180', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'module.png', 'junior', 3, 3, NULL, NULL, 0, 0),
(181, '', '', 'jutiku', '181', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'module.png', 'junior', 3, 3, NULL, NULL, 0, 0),
(182, '', '', '6u', '182', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'module.png', 'middle', 3, 3, NULL, NULL, 0, 0),
(183, '', '', 'u7iui', '183', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'module.png', 'middle', 3, 3, NULL, NULL, 1, 0),
(184, '', '', 'Практичне заняття з програмування', '184', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, NULL, 'strong junior', 3, 3, NULL, NULL, 0, 0),
(185, '', '', 'df', '185', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'module.png', 'strong junior', 3, 3, NULL, NULL, 0, 0),
(186, '', '', 'Практикум з англ.мови', '', 'ua', 0, 0, 0, '0', '', '', '', 'courseimg1.png', 'intern', 3, 3, NULL, 234, 0, 0),
(187, '', '', 'Управління персоналом.  Базові знання', '187', 'ua', 0, 0, 4, '120', NULL, NULL, NULL, 'module.png', 'middle', 3, 3, NULL, NULL, 0, 0),
(188, '', '', 'Створення власної команди', '188', 'ua', 0, 0, 1, '110', NULL, NULL, NULL, 'module.png', 'intern', 3, 3, NULL, NULL, 0, 0),
(189, '', '', 'вапар', '189', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'module.png', 'intern', 3, 3, NULL, NULL, 0, 0),
(190, '', '', 'Розприділення обов''язків між членами команди', '190', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'module.png', 'intern', 3, 3, NULL, NULL, 0, 0),
(191, '', '', 'Інструменти розумного керування персоналом', '191', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'module.png', 'intern', 3, 3, NULL, NULL, 0, 0),
(192, '', '', 'Модуль 123', '192', 'ua', 0, 0, 7, '0', NULL, NULL, NULL, 'module.png', 'intern', 3, 3, NULL, NULL, 0, 0),
(193, '', '', 'Модуль 345', '193', 'ua', 0, 0, 8, '0', NULL, NULL, NULL, 'module.png', 'intern', 3, 3, NULL, NULL, 0, 0),
(194, '', '', 'Модуль 567', '194', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'module.png', 'intern', 3, 3, NULL, NULL, 0, 0),
(195, '', '', 'Модуль 567', '195', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'module.png', 'intern', 3, 3, NULL, NULL, 0, 0),
(196, '', '', 'Модуль 789', '196', 'ua', 0, 0, 0, '0', NULL, NULL, NULL, 'module.png', 'intern', 3, 3, NULL, NULL, 0, 0);

-- --------------------------------------------------------

--
-- Структура таблицы `module_languages`
--

CREATE TABLE IF NOT EXISTS `module_languages` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `lang_ua` int(10) NOT NULL,
  `lang_ru` int(10) NOT NULL,
  `lang_en` int(10) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_module_languages_course` (`lang_ua`),
  KEY `FK_module_languages_course_2` (`lang_ru`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=12 ;

--
-- Дамп данных таблицы `module_languages`
--

INSERT INTO `module_languages` (`id`, `lang_ua`, `lang_ru`, `lang_en`) VALUES
(1, 1, 62, 0),
(2, 2, 63, 0),
(3, 3, 64, 0),
(5, 4, 65, 0),
(6, 7, 66, 0),
(7, 18, 72, 0),
(8, 55, 77, 0),
(9, 54, 76, 0),
(10, 56, 78, 0),
(11, 10, 68, 0);

-- --------------------------------------------------------

--
-- Структура таблицы `pay_courses`
--

CREATE TABLE IF NOT EXISTS `pay_courses` (
  `id_user` int(10) NOT NULL,
  `id_course` int(10) NOT NULL,
  `rights` tinyint(10) NOT NULL,
  KEY `FK_pay_course_user` (`id_user`),
  KEY `FK_pay_course_course` (`id_course`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='User rights for courses: TINYINT(10) \r\n0 - read\r\n1 - edit\r\n2 - create\r\n3 - delete  ';

--
-- Дамп данных таблицы `pay_courses`
--

INSERT INTO `pay_courses` (`id_user`, `id_course`, `rights`) VALUES
(38, 1, 1),
(46, 6, 1),
(51, 4, 1),
(22, 3, 1),
(22, 1, 1),
(22, 21, 1),
(11, 1, 1),
(38, 3, 1),
(1, 1, 1),
(45, 1, 1),
(115, 19, 1),
(106, 1, 1),
(106, 7, 1),
(40, 21, 1),
(1, 21, 1),
(121, 1, 1),
(56, 5, 1),
(42, 20, 1),
(51, 1, 1),
(51, 5, 1),
(40, 1, 1),
(129, 6, 1),
(51, 14, 1),
(45, 3, 1),
(132, 1, 1),
(45, 22, 1),
(133, 1, 1),
(123, 5, 1),
(51, 20, 1),
(53, 20, 1),
(40, 18, 1),
(261, 38, 1);

-- --------------------------------------------------------

--
-- Структура таблицы `pay_modules`
--

CREATE TABLE IF NOT EXISTS `pay_modules` (
  `id_user` int(10) NOT NULL,
  `id_module` int(10) NOT NULL,
  `rights` tinyint(10) NOT NULL,
  KEY `FK_pay_modules_user` (`id_user`),
  KEY `FK_pay_modules_module` (`id_module`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='User rights for modules: TINYINT(10) \r\n0 - read\r\n1 - edit\r\n2 - create\r\n3 - delete  ';

--
-- Дамп данных таблицы `pay_modules`
--

INSERT INTO `pay_modules` (`id_user`, `id_module`, `rights`) VALUES
(38, 1, 3),
(38, 61, 3),
(38, 1, 3),
(39, 1, 3),
(40, 1, 3),
(41, 1, 3),
(40, 2, 3),
(41, 2, 3),
(38, 3, 3),
(41, 3, 3),
(41, 4, 3),
(40, 9, 3),
(41, 9, 3),
(38, 10, 3),
(41, 10, 3),
(38, 7, 3),
(42, 7, 3),
(39, 11, 3),
(38, 14, 3),
(41, 16, 3),
(40, 17, 3),
(38, 18, 3),
(40, 20, 0),
(41, 22, 3),
(39, 23, 3),
(38, 20, 3),
(39, 2, 3),
(22, 3, 1),
(22, 1, 1),
(22, 23, 1),
(22, 7, 1),
(11, 3, 1),
(39, 61, 1),
(22, 55, 1),
(109, 1, 3),
(39, 14, 3),
(22, 2, 1),
(108, 2, 3),
(115, 2, 1),
(106, 2, 1),
(117, 3, 3),
(117, 10, 3),
(38, 23, 3),
(38, 100, 15),
(38, 101, 1),
(51, 22, 1),
(52, 1, 1),
(52, 2, 1),
(121, 1, 1),
(121, 23, 1),
(1, 61, 1),
(1, 2, 1),
(129, 1, 1),
(129, 3, 1),
(1, 7, 1),
(129, 7, 1),
(129, 61, 1),
(130, 11, 3),
(38, 122, 1),
(39, 3, 1),
(22, 61, 1),
(117, 9, 3),
(123, 2, 1),
(123, 1, 1),
(123, 3, 1),
(108, 131, 3),
(123, 23, 1),
(123, 20, 1),
(123, 61, 1),
(56, 1, 1),
(108, 18, 3),
(108, 132, 3),
(108, 20, 3),
(166, 10, 1),
(166, 7, 1),
(166, 11, 1),
(166, 18, 1),
(166, 131, 1),
(166, 61, 1),
(167, 3, 1),
(129, 9, 1),
(109, 14, 3),
(1, 1, 1),
(122, 1, 1),
(53, 2, 1),
(38, 54, 3),
(22, 121, 1),
(42, 3, 1),
(39, 121, 3),
(224, 3, 1),
(251, 1, 3),
(254, 122, 6),
(254, 22, 6),
(254, 139, 6),
(254, 99, 1),
(254, 132, 2),
(38, 123, 3),
(38, 166, 3),
(248, 166, 3),
(230, 1, 3),
(114, 22, 3),
(254, 1, 2),
(38, 58, 3),
(255, 1, 1),
(38, 178, 15),
(38, 22, 15),
(38, 179, 3),
(258, 1, 2),
(258, 3, 1),
(258, 7, 1),
(253, 3, 1),
(253, 1, 1),
(261, 2, 2),
(261, 3, 1),
(38, 187, 3),
(38, 188, 3),
(261, 187, 1),
(261, 1, 1),
(38, 192, 3),
(38, 193, 3),
(56, 54, 1);

-- --------------------------------------------------------

--
-- Структура таблицы `permissions`
--

CREATE TABLE IF NOT EXISTS `permissions` (
  `id_user` int(11) NOT NULL,
  `id_resource` int(11) NOT NULL,
  `rights` tinyint(10) NOT NULL,
  PRIMARY KEY (`id_user`,`id_resource`),
  KEY `FK_permissions_lectures` (`id_resource`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='User rights for lectures: TINYINT(10) \r\n0 - read\r\n1 - edit\r\n2 - create\r\n3 - delete  ';

-- --------------------------------------------------------

--
-- Структура таблицы `plain_task`
--

CREATE TABLE IF NOT EXISTS `plain_task` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `block_element` int(10) NOT NULL,
  `author` int(10) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=37 ;

--
-- Дамп данных таблицы `plain_task`
--

INSERT INTO `plain_task` (`id`, `block_element`, `author`) VALUES
(1, 1606, 1),
(2, 1610, 1),
(3, 1611, 1),
(4, 1629, 1),
(5, 1630, 1),
(6, 1631, 1),
(7, 1632, 1),
(8, 1633, 1),
(9, 1646, 1),
(10, 1647, 1),
(11, 1674, 1),
(12, 1675, 1),
(13, 1765, 1),
(14, 1773, 1),
(15, 1827, 1),
(16, 1828, 1),
(17, 1829, 1),
(18, 1842, 1),
(19, 1843, 1),
(20, 1844, 1),
(21, 1845, 1),
(22, 1852, 1),
(23, 1862, 1),
(24, 1894, 1),
(25, 1895, 1),
(26, 1950, 1),
(27, 1957, 1),
(28, 1963, 1),
(29, 1964, 1),
(30, 1968, 1),
(31, 1969, 1),
(32, 1970, 1),
(33, 2006, 1),
(34, 2007, 1),
(35, 2015, 1),
(36, 2018, 1);

-- --------------------------------------------------------

--
-- Структура таблицы `plain_task_answer`
--

CREATE TABLE IF NOT EXISTS `plain_task_answer` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `answer` varchar(255) DEFAULT NULL,
  `id_student` int(11) NOT NULL,
  `id_plain_task` int(11) NOT NULL,
  `date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `consultant` int(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=12 ;

--
-- Дамп данных таблицы `plain_task_answer`
--

INSERT INTO `plain_task_answer` (`id`, `answer`, `id_student`, `id_plain_task`, `date`, `consultant`) VALUES
(1, 'павпаавпа', 38, 1, '2015-11-16 10:07:50', NULL),
(2, 'пиипипп', 38, 11, '2015-11-16 21:43:27', NULL),
(3, 'рьотл', 38, 14, '2015-11-21 09:17:00', NULL),
(4, 'аеепгорл', 38, 23, '2015-12-02 09:51:23', NULL),
(5, 'hvhm', 258, 32, '2015-12-26 14:52:53', NULL),
(6, 'jknioij', 261, 34, '2015-12-29 18:58:04', NULL),
(7, 'gu8hijio', 261, 34, '2015-12-29 18:59:05', NULL),
(8, 'gu8hijio', 261, 34, '2015-12-29 19:03:56', NULL),
(9, 'yhgjhg', 261, 32, '2016-01-04 19:11:11', NULL),
(10, 'hfgjfgj', 261, 32, '2016-01-05 13:48:48', NULL),
(11, 'fgjfgj', 261, 32, '2016-01-05 13:58:02', NULL);

-- --------------------------------------------------------

--
-- Структура таблицы `plain_task_answer_teacher`
--

CREATE TABLE IF NOT EXISTS `plain_task_answer_teacher` (
  `id_plain_task_answer` int(10) NOT NULL,
  `id_teacher` int(10) NOT NULL,
  KEY `FK_plain_task_answer_teacher_teacher` (`id_teacher`),
  KEY `FK_plain_task_answer_teacher_plain_task_answer` (`id_plain_task_answer`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `plain_task_answer_teacher`
--

INSERT INTO `plain_task_answer_teacher` (`id_plain_task_answer`, `id_teacher`) VALUES
(4, 1);

-- --------------------------------------------------------

--
-- Структура таблицы `plain_task_marks`
--

CREATE TABLE IF NOT EXISTS `plain_task_marks` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_user` int(10) NOT NULL,
  `id_task` int(10) NOT NULL,
  `mark` tinyint(4) NOT NULL,
  `comment` varchar(100) DEFAULT NULL,
  `time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- Дамп данных таблицы `plain_task_marks`
--

INSERT INTO `plain_task_marks` (`id`, `id_user`, `id_task`, `mark`, `comment`, `time`) VALUES
(1, 38, 4, 0, '', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Структура таблицы `project`
--

CREATE TABLE IF NOT EXISTS `project` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `id_leader` int(10) NOT NULL,
  `is_completed` tinyint(1) NOT NULL DEFAULT '0',
  `title` varchar(255) NOT NULL,
  `start_date` date NOT NULL,
  `mark` tinyint(4) NOT NULL,
  `comment` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_project_teacher` (`id_leader`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='is_completed (values : 0 - in develop, 1 - completed)' AUTO_INCREMENT=8 ;

--
-- Дамп данных таблицы `project`
--

INSERT INTO `project` (`id`, `id_leader`, `is_completed`, `title`, `start_date`, `mark`, `comment`) VALUES
(1, 1, 1, 'Розробка інтернет-магазину', '2015-06-15', 5, 'Відмінно'),
(2, 2, 0, 'Створення сайту Міноборони України', '2015-06-15', 0, ''),
(4, 3, 0, 'Розробка СМS для інтернет-магазину', '2015-06-15', 0, ''),
(5, 4, 1, 'Розробка БД для інтернет-магазину', '2015-06-08', 4, 'Добре'),
(6, 5, 1, 'Дизайн для інтернет-магазину', '2015-06-12', 5, 'Відмінно'),
(7, 6, 0, 'Верстка інтернет-магазину', '2015-05-25', 4, 'Добре');

-- --------------------------------------------------------

--
-- Структура таблицы `project_student`
--

CREATE TABLE IF NOT EXISTS `project_student` (
  `project` int(10) NOT NULL,
  `student` int(10) NOT NULL,
  KEY `FK_project_student_project` (`project`),
  KEY `FK_project_student_user` (`student`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `project_student`
--

INSERT INTO `project_student` (`project`, `student`) VALUES
(1, 51),
(2, 52),
(4, 55),
(4, 53),
(5, 53),
(6, 55),
(7, 54);

-- --------------------------------------------------------

--
-- Структура таблицы `response`
--

CREATE TABLE IF NOT EXISTS `response` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `who` int(11) NOT NULL,
  `date` datetime NOT NULL,
  `text` text NOT NULL,
  `rate` int(2) DEFAULT NULL,
  `who_ip` varchar(40) NOT NULL,
  `knowledge` int(2) DEFAULT NULL,
  `behavior` int(2) DEFAULT NULL,
  `motivation` int(2) DEFAULT NULL,
  `is_checked` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `FK__user` (`who`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='Responses for teachers' AUTO_INCREMENT=22 ;

--
-- Дамп данных таблицы `response`
--

INSERT INTO `response` (`id`, `who`, `date`, `text`, `rate`, `who_ip`, `knowledge`, `behavior`, `motivation`, `is_checked`) VALUES
(5, 56, '2015-10-19 12:12:19', 'коментар', 10, '94.179.124.155', 10, 10, 10, 1),
(7, 51, '2015-11-05 15:41:53', 'cvbfbbvbbgbf', 1, '109.108.253.89', 1, 1, 1, 1),
(9, 22, '2015-11-21 10:02:39', 'ронгглдлбббььть', 5, '81.30.164.98', 5, 5, 5, 0),
(10, 22, '2015-12-25 16:13:57', 'ewterterytyh', 6, '185.39.74.37', 4, 9, 5, 1),
(11, 22, '2015-12-29 07:21:05', 'rtyrthjtyuj yujyuj', 7, '185.39.74.37', 8, 8, 4, 1),
(12, 22, '2015-12-29 07:21:24', 'hjmhjmhjkmhj,    \r\nythk\r\njgmhmkjk', 7, '185.39.74.37', 7, 8, 7, 1),
(13, 22, '2015-12-29 07:21:40', 'yhertum yufgm yugik tu7 iik\r\n\r\n hj hjy \r\ng hj \r\n\r\n\r\n hj uhk k', 7, '185.39.74.37', 6, 6, 10, 1),
(14, 22, '2015-12-29 07:22:03', 'bn fcrk                  y7uj y7uj \r\n jyguj uyhf\r\ngh                j jyg j\r\n kjmhjk\r\n hj ujk', 9, '185.39.74.37', 9, 9, 10, 1),
(15, 22, '2015-12-29 07:22:16', 'bn n6yuer yth\r\ngyh gjny\r\n hgyjnyjh yuhj yuhj', 9, '185.39.74.37', 8, 10, 8, 1),
(16, 22, '2015-12-29 07:22:49', 'g54wtsu ry67u e\r\nn tyh \r\n tyh \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n tdg tyjh yj \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n jyj j yjh\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n yhj uyhj  yhj uyhj  yhj uyhj \r\njh uyjk', 9, '185.39.74.37', 9, 10, 9, 1),
(17, 22, '2015-12-29 07:26:13', 'fhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhnfhdddddddddzjkcvn cjbm nnnnnnnnnnnnnnnnnnnnnnbn mnjkghhhhhhhhhhhk jkhnkjb ,khnjkbhn', 7, '185.39.74.37', 7, 7, 7, 1),
(18, 22, '2015-12-29 07:42:12', '<ul><li> ﻿gffffffffffffffffffffffffffffffgfffffff fffffffffffffffffffffffgfffffffffffffffffffffffff fffffgffffffffffffffffffffffffffffffgfffff fffffffffffffffffffffffffgffffffffffffffff          ffffffffffffffgffffffffffffffffffffffffffffff﻿ ﻿﻿﻿﻿﻿﻿</li></ul>', 8, '185.39.74.37', 8, 8, 8, 1),
(19, 22, '2015-12-29 07:43:07', 'jyhmn bnmbm yhhhhhhhhhhhhhhhhhhht                       ujuhmhuj          uyhj                                    yhjnhguj ufyjhgjjjjjjjjjjjjjjjjjjjjjjjjseryhrrrrrrrr', 8, '185.39.74.37', 8, 9, 8, 1),
(20, 22, '2015-12-29 07:44:30', '\r\nапоппп прррррррррргн\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nrrrrrrrrrrrrrrrrrrr\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nrrrrrrrrrr             rt555\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n55555555555555555555555555              rt5t5t5t5t5t5t5t5t5t5t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n5t5t5t5t5t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t5                  rt5555555555555555555555555555555', 8, '185.39.74.37', 9, 6, 9, 1),
(21, 22, '2015-12-29 12:12:32', 'sdfyhyhyffffffffffffffff fgfgfgfgfgfgfgfgfgfgfgfgfgfgfgfgfg       gfffffffffffffffffffffff          gfffffffffffffffff             gffffffffffffffffh  ь нггшшгншш          ghhhhhhhhhhhhhhhhhhhh                 ghghghghghghghg', 7, '185.39.74.37', 7, 7, 6, 1);

-- --------------------------------------------------------

--
-- Структура таблицы `results`
--

CREATE TABLE IF NOT EXISTS `results` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `session` varchar(255) NOT NULL,
  `jobid` int(11) NOT NULL,
  `status` text NOT NULL,
  `date` date NOT NULL,
  `result` text NOT NULL,
  `warning` text NOT NULL,
  PRIMARY KEY (`id`,`session`(100)),
  UNIQUE KEY `SECONDY` (`session`,`jobid`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=141 ;

--
-- Дамп данных таблицы `results`
--

INSERT INTO `results` (`id`, `session`, `jobid`, `status`, `date`, `result`, `warning`) VALUES
(134, '1241q223f4f2341', 11212, 'done', '2015-07-17', '64\n??????2343VM: 11892; RSS: 980\n', ''),
(135, '1241q223f4f2341', 38, 'done', '2015-07-17', '64\n??????2343VM: 11892; RSS: 984\n', ''),
(136, '1241q223f4f2341', 51, 'done', '2015-07-17', 'Hello World!\nVM: 11888; RSS: 980\n', ''),
(137, '1241q223f4f2341', 12212, 'done', '2015-07-17', '\nVM: 11888; RSS: 984\n', ''),
(138, '1241q223f4f2341', 56, 'failed', '2015-07-22', '', ''),
(139, '1241q223f4f2341', 121, 'failed', '2015-07-23', '', ''),
(140, '1241q223f4f2341', 122125, 'done', '2015-07-24', '\nVM: 11888; RSS: 980\n', '');

-- --------------------------------------------------------

--
-- Структура таблицы `roles`
--

CREATE TABLE IF NOT EXISTS `roles` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `title_en` varchar(20) NOT NULL,
  `title_ru` varchar(20) NOT NULL,
  `title_ua` varchar(20) NOT NULL,
  `description` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='List of teachers roles.' AUTO_INCREMENT=9 ;

--
-- Дамп данных таблицы `roles`
--

INSERT INTO `roles` (`id`, `title_en`, `title_ru`, `title_ua`, `description`) VALUES
(1, 'Trainer', 'Тренер', 'Тренер', 'Trainer. Help student with simple and common problems.'),
(2, 'Consultant', 'Консультант', 'Консультант', 'Online consultations'),
(3, 'Leader', 'Руководитель проекта', 'Керівник проекта', 'Leader for single and team students projects'),
(4, 'Author', 'Автор модуля', 'Автор модуля', 'Module owner'),
(5, 'Admin', 'Админ', 'Адмін', 'Create and describe courses and modules.'),
(8, 'Тестова роль', 'Тестова роль', 'Тестова роль', 'Тест');

-- --------------------------------------------------------

--
-- Структура таблицы `role_attribute`
--

CREATE TABLE IF NOT EXISTS `role_attribute` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `role` int(10) NOT NULL,
  `type` varchar(50) NOT NULL,
  `name_ru` varchar(30) NOT NULL,
  `name_ua` varchar(30) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `role` (`role`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='1 - capacity: number of students\r\n2 - students list: trainer''s students\r\n3 - modules list: leader''s modules\r\n4 - projects list: leader''s projects\r\n5 - modules_consultant' AUTO_INCREMENT=10 ;

--
-- Дамп данных таблицы `role_attribute`
--

INSERT INTO `role_attribute` (`id`, `name`, `role`, `type`, `name_ru`, `name_ua`) VALUES
(1, 'capacity', 1, 'int', 'Количество студентов', 'Кількість студентів'),
(2, 'students_list', 1, 'int', 'Список студентов', 'Список студентів'),
(3, 'modules_list', 2, 'int', 'Список модулей', 'Список модулів'),
(4, 'projects_list', 3, 'int', 'Проекты', 'Проекти'),
(5, 'shedule', 2, 'int', 'Расписание', 'Розклад'),
(6, 'modules_list', 4, 'int', 'Список модулей', 'Список модулів'),
(7, 'modules_list', 3, 'int', 'Список модулей', 'Список модулів'),
(8, 'capacity', 3, 'int', 'Количество студентов', 'Кількість студентів'),
(9, 'Teacher', 8, 'тип', 'Учитель', 'Вчитель');

-- --------------------------------------------------------

--
-- Структура таблицы `share_link`
--

CREATE TABLE IF NOT EXISTS `share_link` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `link` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

--
-- Дамп данных таблицы `share_link`
--

INSERT INTO `share_link` (`id`, `name`, `link`) VALUES
(1, 'OpenBoard', 'https://drive.google.com/file/d/0B3EvwBQUMP1Ya0VUWXhxVjNfRWc/view'),
(2, 'Description about openBoard', 'https://docs.google.com/document/d/1diaMLtBRRN4rTW0s1UyFHG_TD0IF7m3t6GtyPriNAhg/edit#heading=h.gjdgxs');

-- --------------------------------------------------------

--
-- Структура таблицы `skip_task`
--

CREATE TABLE IF NOT EXISTS `skip_task` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `author` int(10) NOT NULL,
  `condition` int(10) NOT NULL,
  `question` int(10) NOT NULL,
  `source` text NOT NULL COMMENT 'Question source code for edit',
  PRIMARY KEY (`id`),
  KEY `FK_skip_task_teacher` (`author`),
  KEY `FK_skip_task_lecture_element` (`condition`),
  KEY `FK_skip_task_question_lecture_element` (`question`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=35 ;

--
-- Дамп данных таблицы `skip_task`
--

INSERT INTO `skip_task` (`id`, `author`, `condition`, `question`, `source`) VALUES
(1, 1, 1863, 1864, '<p>88787<span skip="1:1" style="background:greenyellow">89u8ohfg</span><span skip="2:0" style="background:deeppink">hfgjghj tyry</span></p>\n'),
(2, 1, 1865, 1866, '<p>88787<span skip="1:1" style="background:greenyellow">89u8ohfg</span><span skip="2:0" style="background:deeppink">hfgjghj tyry</span></p>\n'),
(3, 1, 1867, 1868, '<p>Скільки зайців на галявині</p>\n'),
(4, 1, 1869, 1870, '<p>Скільки зайців на галявині&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n\n<p>&nbsp;&nbsp; <span skip="1:1" style="background:greenyellow">5000</span></p>\n\n<p>&nbsp;&nbsp; <span skip="2:0" style="background:deeppink">3000</span></p>\n'),
(5, 1, 1871, 1872, '<p>Скільки зайців на галявині&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n\n<p>&nbsp;&nbsp; <span skip="1:1" style="background:greenyellow">5000</span></p>\n\n<p>&nbsp;&nbsp; <span skip="2:0" style="background:deeppink">3000</span></p>\n'),
(6, 1, 1873, 1874, '<p>Скільки зайців на галявині&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n\n<p>&nbsp;&nbsp; <span skip="1:1" style="background:greenyellow">слово</span></p>\n\n<p>&nbsp;&nbsp; <span skip="2:0" style="background:deeppink">Слово</span></p>\n'),
(7, 1, 1875, 1876, '<p>Вставте пропущене ... &nbsp;&nbsp;</p>\n\n<p>&nbsp;&nbsp; <span skip="1:1" style="background:greenyellow">слово</span></p>\n\n<p>&nbsp;&nbsp; <span skip="2:0" style="background:deeppink">Слово</span></p>\n'),
(8, 1, 1877, 1878, '<p>Якого кольору зайці в полі:</p>\n\n<p><span skip="1:1" style="background:greenyellow">БІЛОГО</span></p>\n\n<p><span skip="2:0" style="background:deeppink">СІРОГО</span></p>\n\n<p>&nbsp;</p>\n'),
(9, 1, 1879, 1880, '<p>Якого кольору зайці в полі:</p>\n\n<p><span skip="1:1" style="background:greenyellow">БІЛОГО</span></p>\n\n<p><span skip="2:0" style="background:deeppink">СІРОГО</span></p>\n\n<p>&nbsp;</p>\n'),
(10, 1, 1881, 1882, '<p>пнррорло</p>\n\n<p><span skip="1:1" style="background:greenyellow">1</span></p>\n\n<p><span skip="2:0" style="background:deeppink">2</span></p>\n'),
(11, 1, 1883, 1884, '<p>пнррорло</p>\n\n<p><span skip="1:1" style="background:greenyellow">1</span></p>\n\n<p><span skip="2:0" style="background:deeppink">2</span></p>\n'),
(12, 1, 1885, 1886, '<p>пнррорлоее е</p>\n\n<p><span skip="1:1" style="background:greenyellow">1 ит&nbsp; </span></p>\n\n<p><span skip="2:0" style="background:deeppink">2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>\n'),
(13, 1, 1888, 1889, '<p>gjghj</p>\n'),
(14, 1, 1890, 1891, '<p>T<span skip="1:0" style="background:deeppink">ESt</span> T<span skip="2:0" style="background:deeppink">ESt</span> T<span skip="3:1" style="background:greenyellow">ESt</span></p>\n<script></script>\n'),
(15, 1, 1892, 1893, '<p>Якого кольору олівец</p>\n\n<p>ь в динозавра?</p>\n\n<p><span style="background-color: rgb(173, 255, 47);">ТЕСт</span>&nbsp;Т<span skip="1:0" style="background: deeppink;">ЕСт</span> Т<span skip="2:1" style="background: greenyellow;">ЕСт</span></p>\n<script></script>'),
(16, 1, 1954, 1955, '<p><span skip="1:1" style="background:greenyellow">дом</span></p>\n'),
(17, 1, 1958, 1959, '<p><span skip="1:1" style="background:greenyellow">r3r53</span></p>\n'),
(18, 1, 1961, 1962, '<p><span skip="1:1" style="background:greenyellow">1</span></p>\n\n<p>2</p>\n'),
(19, 1, 1966, 1967, '<p>тест: введіть відповідь 2+3</p>\n\n<p><span skip="1:1" style="background:greenyellow">5</span></p>\n'),
(20, 1, 1971, 1972, '<p>1+2=<span skip="1:1" style="background:greenyellow">3</span></p>\n'),
(21, 1, 1979, 1980, '<p>.kj./jk./jk/jk/jj/j/jbj/jb/bjv/. m,.</p>\n'),
(22, 1, 1983, 1984, '<p><strong>Порахуйте</strong> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="font-size:28px;"><span style="color:#800000;"><u><em><strong>2+2=</strong></em></u></span></span>?</p>\n\n<p><span skip="1:1" style="background:greenyellow">чотири</span></p>\n\n<p>&nbsp;</p>\n'),
(23, 1, 1986, 1987, '<p>Підрахуйте:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; два+два=</p>\n\n<p><span skip="1:1" style="background:greenyellow">чотири</span></p>\n'),
(24, 1, 1988, 1989, '<p><span skip="1:1" style="background:greenyellow">Урок</span></p>\n\n<p><span skip="2:0" style="background:deeppink">УРОК</span></p>\n'),
(25, 1, 2016, 2017, '<p>&nbsp;бг7н6</p>\n'),
(26, 1, 2019, 2020, '<p>роьттиь</p>\n'),
(27, 1, 2021, 2022, '<p>роьттиь</p>\n'),
(28, 1, 2023, 2024, '<p>роьттиь</p>\n'),
(29, 1, 2025, 2026, '<p>роьттиь</p>\n'),
(30, 1, 2027, 2028, '<p>кег8око</p>\n'),
(31, 1, 2029, 2030, '<p>кег8око</p>\n'),
(32, 1, 2031, 2032, '<p>кег8око</p>\n'),
(33, 1, 2033, 2034, '<p>кег8окогон6г</p>\n'),
(34, 1, 2035, 2036, '<p>роьттиь</p>\n');

-- --------------------------------------------------------

--
-- Структура таблицы `skip_task_answers`
--

CREATE TABLE IF NOT EXISTS `skip_task_answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `id_task` int(10) NOT NULL,
  `answer` varchar(255) NOT NULL,
  `answer_order` int(11) NOT NULL,
  `case_in_sensitive` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'In default - 1 (no case sensitive), else - 0',
  PRIMARY KEY (`id`),
  KEY `FK_skip_task_answers_skip_task` (`id_task`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=36 ;

--
-- Дамп данных таблицы `skip_task_answers`
--

INSERT INTO `skip_task_answers` (`id`, `id_task`, `answer`, `answer_order`, `case_in_sensitive`) VALUES
(1, 1, '89u8ohfg', 1, 1),
(2, 1, 'hfgjghj tyry', 2, 0),
(3, 2, '89u8ohfg', 1, 1),
(4, 2, 'hfgjghj tyry', 2, 0),
(5, 4, '5000', 1, 1),
(6, 4, '3000', 2, 0),
(7, 5, '5000', 1, 1),
(8, 5, '3000', 2, 0),
(9, 6, 'слово', 1, 1),
(10, 6, 'Слово', 2, 0),
(11, 7, 'слово', 1, 1),
(12, 7, 'Слово', 2, 0),
(13, 8, 'БІЛОГО', 1, 1),
(14, 8, 'СІРОГО', 2, 0),
(15, 9, 'ЗЕЛЕНОГО', 1, 1),
(17, 10, '1', 1, 1),
(18, 10, '2', 2, 0),
(19, 11, '1', 1, 1),
(20, 11, '2', 2, 0),
(21, 12, '1 ит&nbsp; ', 1, 1),
(22, 12, '2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ', 2, 0),
(23, 14, 'ESt', 1, 0),
(24, 14, 'ESt', 2, 0),
(25, 14, 'ESt', 3, 1),
(26, 15, 'ЕСт', 1, 0),
(27, 15, 'ЕСт', 2, 1),
(28, 16, 'дом', 1, 1),
(29, 18, '1', 1, 1),
(30, 19, '5', 1, 1),
(31, 20, '3', 1, 1),
(32, 22, 'чотири', 1, 1),
(33, 23, 'чотири', 1, 1),
(34, 24, 'Урок', 1, 1),
(35, 24, 'УРОК', 2, 0);

-- --------------------------------------------------------

--
-- Структура таблицы `skip_task_marks`
--

CREATE TABLE IF NOT EXISTS `skip_task_marks` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user` int(10) NOT NULL,
  `id_task` int(10) NOT NULL,
  `mark` int(10) NOT NULL,
  `time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `FK_skip_task_marks_user` (`user`),
  KEY `FK_skip_task_marks_skip_task` (`id_task`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=92 ;

--
-- Дамп данных таблицы `skip_task_marks`
--

INSERT INTO `skip_task_marks` (`id`, `user`, `id_task`, `mark`, `time`) VALUES
(1, 38, 5, 0, '2015-12-02 10:22:24'),
(2, 38, 5, 1, '2015-12-02 10:22:30'),
(3, 38, 5, 0, '2015-12-02 10:22:57'),
(4, 38, 6, 1, '2015-12-02 10:24:08'),
(5, 38, 6, 0, '2015-12-02 10:24:26'),
(6, 38, 6, 0, '2015-12-02 10:24:37'),
(7, 38, 6, 0, '2015-12-02 10:25:17'),
(8, 38, 6, 0, '2015-12-02 10:25:38'),
(9, 38, 6, 0, '2015-12-02 10:31:01'),
(10, 38, 7, 0, '2015-12-02 10:31:26'),
(11, 38, 7, 0, '2015-12-02 10:31:34'),
(12, 38, 8, 0, '2015-12-02 10:52:48'),
(13, 38, 8, 1, '2015-12-02 10:52:55'),
(14, 38, 8, 0, '2015-12-02 11:02:01'),
(15, 38, 14, 0, '2015-12-03 12:01:23'),
(16, 38, 14, 1, '2015-12-03 12:01:47'),
(17, 38, 15, 0, '2015-12-03 13:17:40'),
(18, 38, 15, 0, '2015-12-03 13:26:01'),
(19, 38, 15, 1, '2015-12-03 13:26:10'),
(20, 38, 15, 0, '2015-12-03 13:28:20'),
(21, 38, 15, 1, '2015-12-03 13:28:28'),
(22, 38, 15, 0, '2015-12-03 13:30:01'),
(23, 38, 15, 0, '2015-12-03 13:30:07'),
(24, 38, 15, 1, '2015-12-03 13:30:12'),
(25, 38, 15, 0, '2015-12-03 13:31:32'),
(26, 38, 15, 1, '2015-12-03 13:31:37'),
(27, 38, 15, 1, '2015-12-03 13:31:47'),
(28, 38, 15, 0, '2015-12-03 13:31:57'),
(29, 38, 15, 0, '2015-12-03 13:32:07'),
(30, 38, 15, 0, '2015-12-03 13:32:13'),
(31, 38, 15, 0, '2015-12-03 13:32:40'),
(32, 38, 15, 1, '2015-12-03 13:32:50'),
(33, 38, 15, 0, '2015-12-03 13:33:46'),
(34, 38, 15, 0, '2015-12-03 18:02:06'),
(35, 38, 15, 0, '2015-12-03 18:02:10'),
(36, 38, 15, 0, '2015-12-03 18:38:08'),
(37, 38, 16, 1, '2015-12-20 20:40:29'),
(38, 38, 16, 1, '2015-12-20 20:40:34'),
(39, 38, 16, 1, '2015-12-20 20:40:36'),
(40, 38, 16, 1, '2015-12-20 20:40:36'),
(41, 38, 16, 1, '2015-12-20 20:40:37'),
(42, 38, 16, 1, '2015-12-20 20:40:37'),
(43, 38, 16, 1, '2015-12-20 20:40:37'),
(44, 38, 16, 1, '2015-12-20 20:40:51'),
(45, 38, 16, 1, '2015-12-20 20:40:51'),
(46, 38, 17, 0, '2015-12-21 07:51:31'),
(47, 38, 17, 0, '2015-12-21 07:51:34'),
(48, 38, 17, 0, '2015-12-21 07:51:34'),
(49, 38, 18, 0, '2015-12-21 09:57:16'),
(50, 38, 18, 1, '2015-12-21 09:57:18'),
(51, 38, 18, 1, '2015-12-21 09:57:36'),
(52, 38, 18, 1, '2015-12-21 10:00:57'),
(53, 38, 19, 1, '2015-12-21 10:07:41'),
(54, 38, 19, 1, '2015-12-21 10:07:45'),
(55, 38, 19, 1, '2015-12-21 10:56:09'),
(56, 51, 20, 0, '2015-12-21 11:11:41'),
(57, 51, 20, 1, '2015-12-21 11:11:45'),
(58, 38, 18, 0, '2015-12-21 11:12:48'),
(59, 38, 18, 1, '2015-12-21 11:12:51'),
(60, 38, 18, 0, '2015-12-21 11:13:00'),
(61, 38, 18, 1, '2015-12-21 11:13:03'),
(62, 38, 18, 1, '2015-12-21 11:13:05'),
(63, 38, 20, 0, '2015-12-21 11:13:51'),
(64, 38, 20, 1, '2015-12-21 11:13:57'),
(65, 38, 20, 1, '2015-12-21 11:13:58'),
(66, 38, 22, 1, '2015-12-24 13:10:11'),
(67, 38, 22, 0, '2015-12-24 13:10:48'),
(68, 38, 22, 0, '2015-12-24 13:10:53'),
(69, 38, 22, 0, '2015-12-24 13:11:00'),
(70, 38, 22, 1, '2015-12-24 13:13:35'),
(71, 38, 22, 1, '2015-12-24 13:14:54'),
(72, 38, 22, 1, '2015-12-24 13:15:00'),
(73, 2, 22, 1, '2015-12-24 13:15:41'),
(74, 38, 23, 1, '2015-12-24 13:21:51'),
(75, 38, 23, 1, '2015-12-24 13:21:58'),
(76, 38, 23, 0, '2015-12-24 13:22:03'),
(77, 22, 23, 1, '2015-12-24 13:24:36'),
(78, 134, 23, 0, '2015-12-24 13:29:13'),
(79, 134, 23, 0, '2015-12-24 13:30:27'),
(80, 38, 20, 1, '2015-12-25 16:50:33'),
(81, 38, 20, 1, '2015-12-25 16:51:02'),
(82, 38, 24, 0, '2015-12-26 13:08:09'),
(83, 38, 24, 1, '2015-12-26 13:08:22'),
(84, 38, 24, 1, '2015-12-26 13:08:49'),
(85, 38, 24, 1, '2015-12-26 13:09:11'),
(86, 38, 24, 1, '2015-12-26 13:10:59'),
(87, 261, 20, 1, '2015-12-28 12:48:20'),
(88, 45, 20, 1, '2016-01-04 07:24:23'),
(89, 2, 23, 0, '2016-01-06 09:43:37'),
(90, 2, 23, 1, '2016-01-06 09:43:44'),
(91, 45, 20, 1, '2016-01-06 18:36:26');

-- --------------------------------------------------------

--
-- Структура таблицы `sourcemessages`
--

CREATE TABLE IF NOT EXISTS `sourcemessages` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `category` varchar(32) NOT NULL,
  `message` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='Table for interface messages (keys).' AUTO_INCREMENT=54656 ;

--
-- Дамп данных таблицы `sourcemessages`
--

INSERT INTO `sourcemessages` (`id`, `category`, `message`) VALUES
(1, 'mainpage', '0001'),
(2, 'mainpage', '0002'),
(3, 'mainpage', '0003'),
(4, 'mainpage', '0004'),
(5, 'slider', '0005'),
(6, 'mainpage', '0006'),
(7, 'mainpage', '0007'),
(8, 'slider', '0008'),
(9, 'regform', '0009'),
(10, 'regform', '0010'),
(11, 'regform', '0011'),
(12, 'regform', '0012'),
(13, 'regform', '0013'),
(14, 'regform', '0014'),
(15, 'regform', '0015'),
(16, 'header', '0016'),
(17, 'header', '0017'),
(18, 'header', '0018'),
(19, 'header', '0019'),
(20, 'header', '0020'),
(21, 'header', '0021'),
(22, 'header', '0022'),
(23, 'footer', '0023'),
(24, 'footer', '0024'),
(25, 'footer', '0025'),
(26, 'footer', '0026'),
(27, 'slider', '0027'),
(28, 'slider', '0028'),
(29, 'slider', '0029'),
(30, 'slider', '0030'),
(31, 'slider', '0031'),
(32, 'aboutus', '0032'),
(33, 'aboutus', '0033'),
(34, 'aboutus', '0034'),
(35, 'aboutus', '0035'),
(36, 'aboutus', '0036'),
(37, 'aboutus', '0037'),
(38, 'step', '0038'),
(39, 'step', '0039'),
(40, 'step', '0040'),
(41, 'step', '0041'),
(42, 'step', '0042'),
(43, 'step', '0043'),
(44, 'step', '0044'),
(45, 'step', '0045'),
(46, 'step', '0046'),
(47, 'step', '0047'),
(48, 'step', '0048'),
(49, 'breadcrumbs', '0049'),
(50, 'breadcrumbs', '0050'),
(51, 'breadcrumbs', '0051'),
(52, 'breadcrumbs', '0052'),
(53, 'breadcrumbs', '0053'),
(54, 'breadcrumbs', '0054'),
(55, 'breadcrumbs', '0055'),
(56, 'breadcrumbs', '0056'),
(57, 'breadcrumbs', '0057'),
(58, 'teachers', '0058'),
(59, 'teachers', '0059'),
(60, 'teachers', '0060'),
(61, 'teachers', '0061'),
(62, 'teachers', '0062'),
(63, 'teachers', '0063'),
(64, 'teacher', '0064'),
(65, 'teacher', '0065'),
(66, 'courses', '0066'),
(67, 'courses', '0067'),
(68, 'courses', '0068'),
(69, 'courses', '0069'),
(70, 'lecture', '0070'),
(71, 'lecture', '0071'),
(72, 'lecture', '0072'),
(73, 'lecture', '0073'),
(74, 'lecture', '0074'),
(75, 'lecture', '0075'),
(76, 'lecture', '0076'),
(77, 'lecture', '0077'),
(78, 'lecture', '0078'),
(79, 'lecture', '0079'),
(80, 'lecture', '0080'),
(81, 'lecture', '0081'),
(82, 'lecture', '0082'),
(83, 'lecture', '0083'),
(84, 'lecture', '0084'),
(85, 'lecture', '0085'),
(86, 'lecture', '0086'),
(87, 'lecture', '0087'),
(88, 'lecture', '0088'),
(89, 'lecture', '0089'),
(90, 'lecture', '0090'),
(91, 'regform', '0091'),
(92, 'regform', '0092'),
(93, 'regform', '0093'),
(94, 'courses', '0094'),
(95, 'profile', '0095'),
(96, 'profile', '0096'),
(97, 'profile', '0097'),
(98, 'profile', '0098'),
(99, 'profile', '0099'),
(100, 'profile', '0100'),
(101, 'profile', '0101'),
(102, 'profile', '0102'),
(103, 'profile', '0103'),
(104, 'profile', '0104'),
(105, 'profile', '0105'),
(106, 'profile', '0106'),
(107, 'profile', '0107'),
(108, 'profile', '0108'),
(109, 'profile', '0109'),
(110, 'profile', '0110'),
(111, 'profile', '0111'),
(112, 'profile', '0112'),
(113, 'profile', '0113'),
(114, 'profile', '0114'),
(115, 'profile', '0115'),
(116, 'profile', '0116'),
(117, 'profile', '0117'),
(118, 'profile', '0118'),
(119, 'profile', '0119'),
(120, 'profile', '0120'),
(121, 'profile', '0121'),
(122, 'profile', '0122'),
(123, 'profile', '0123'),
(124, 'profile', '0124'),
(125, 'profile', '0125'),
(126, 'profile', '0126'),
(127, 'profile', '0127'),
(128, 'profile', '0128'),
(129, 'profile', '0129'),
(130, 'profile', '0130'),
(131, 'profile', '0131'),
(132, 'profile', '0132'),
(133, 'profile', '0133'),
(134, 'profile', '0134'),
(135, 'profile', '0135'),
(136, 'profile', '0136'),
(137, 'header', '0137'),
(138, 'errors', '0138'),
(139, 'errors', '0139'),
(140, 'courses', '0140'),
(141, 'courses', '0141'),
(142, 'courses', '0142'),
(143, 'courses', '0143'),
(144, 'courses', '0144'),
(145, 'courses', '0145'),
(146, 'courses', '0146'),
(147, 'courses', '0147'),
(148, 'courses', '0148'),
(149, 'courses', '0149'),
(150, 'regexp', '0150'),
(151, 'regexp', '0151'),
(152, 'regexp', '0152'),
(153, 'regexp', '0153'),
(154, 'regexp', '0154'),
(155, 'regexp', '0155'),
(156, 'regexp', '0156'),
(157, 'regexp', '0157'),
(158, 'regexp', '0158'),
(159, 'regexp', '0159'),
(160, 'regexp', '0160'),
(161, 'regexp', '0161'),
(162, 'regexp', '0162'),
(163, 'regexp', '0163'),
(164, 'regexp', '0164'),
(165, 'regexp', '0165'),
(166, 'regexp', '0166'),
(167, 'regexp', '0167'),
(168, 'regexp', '0168'),
(169, 'regexp', '0169'),
(170, 'regexp', '0170'),
(171, 'regexp', '0171'),
(172, 'regexp', '0172'),
(173, 'regexp', '0173'),
(174, 'teachers', '0174'),
(175, 'teachers', '0175'),
(176, 'teachers', '0176'),
(177, 'teachers', '0177'),
(178, 'teachers', '0178'),
(179, 'teachers', '0179'),
(180, 'teachers', '0180'),
(181, 'teacher', '0181'),
(182, 'teacher', '0182'),
(183, 'teacher', '0183'),
(184, 'teacher', '0184'),
(185, 'teacher', '0185'),
(186, 'teacher', '0186'),
(187, 'teacher', '0187'),
(188, 'teacher', '0188'),
(189, 'teacher', '0189'),
(190, 'teacher', '0190'),
(191, 'teacher', '0191'),
(192, 'teacher', '0192'),
(193, 'course', '0193'),
(194, 'course', '0194'),
(195, 'profile', '0195'),
(196, 'course', '0196'),
(197, 'course', '0197'),
(198, 'course', '0198'),
(199, 'course', '0199'),
(200, 'course', '0200'),
(201, 'course', '0201'),
(202, 'course', '0202'),
(203, 'course', '0203'),
(204, 'course', '0204'),
(205, 'course', '0205'),
(206, 'course', '0206'),
(207, 'course', '0207'),
(208, 'course', '0208'),
(209, 'course', '0209'),
(210, 'course', '0210'),
(211, 'module', '0211'),
(212, 'module', '0212'),
(213, 'module', '0213'),
(214, 'module', '0214'),
(215, 'module', '0215'),
(216, 'module', '0216'),
(217, 'module', '0217'),
(218, 'module', '0218'),
(219, 'module', '0219'),
(220, 'module', '0220'),
(221, 'module', '0221'),
(222, 'module', '0222'),
(223, 'module', '0223'),
(224, 'module', '0224'),
(225, 'module', '0225'),
(226, 'module', '0226'),
(227, 'module', '0227'),
(228, 'module', '0228'),
(229, 'courses', '0229'),
(230, 'courses', '0230'),
(231, 'courses', '0231'),
(232, 'courses', '0232'),
(233, 'courses', '0233'),
(234, 'courses', '0234'),
(235, 'courses', '0235'),
(236, 'courses', '0236'),
(237, 'exception', '0237'),
(238, 'exception', '0238'),
(239, 'recovery', '0239'),
(240, 'recovery', '0240'),
(241, 'profile', '0241'),
(242, 'regexp', '0242'),
(243, 'regexp', '0243'),
(244, 'regexp', '0244'),
(245, 'regexp', '0245'),
(246, 'regexp', '0246'),
(247, 'regexp', '0247'),
(248, 'regexp', '0248'),
(249, 'regexp', '0249'),
(250, 'profile', '0250'),
(251, 'profile', '0251'),
(252, 'profile', '0252'),
(253, 'profile', '0253'),
(254, 'profile', '0254'),
(255, 'profile', '0255'),
(256, 'profile', '0256'),
(257, 'profile', '0257'),
(258, 'profile', '0258'),
(259, 'profile', '0259'),
(260, 'profile', '0260'),
(261, 'profile', '0261'),
(262, 'regexp', '0262'),
(263, 'regexp', '0263'),
(264, 'regexp', '0264'),
(265, 'regexp', '0265'),
(266, 'regexp', '0266'),
(267, 'regexp', '0267'),
(268, 'error', '0268'),
(269, 'error', '0269'),
(270, 'error', '0270'),
(271, 'error', '0271'),
(272, 'error', '0272'),
(273, 'error', '0273'),
(274, 'error', '0274'),
(275, 'error', '0275'),
(276, 'error', '0276'),
(277, 'error', '0277'),
(278, 'error', '0278'),
(279, 'module', '0279'),
(280, 'module', '0280'),
(281, 'recovery', '0281'),
(282, 'recovery', '0282'),
(283, 'recovery', '0283'),
(284, 'recovery', '0284'),
(285, 'resetpass', '0285'),
(286, 'resetemail', '0286'),
(287, 'resetemail', '0287'),
(288, 'resetemail', '0288'),
(289, 'forgotpass', '0289'),
(290, 'forgotpass', '0290'),
(291, 'forgotpass', '0291'),
(292, 'changeemail', '0292'),
(293, 'changeemail', '0293'),
(294, 'changeemail', '0294'),
(295, 'regexp', '0295'),
(296, 'breadcrumbs', '0296'),
(297, 'graduates', '0297'),
(298, 'activeemail', '0298'),
(299, 'activeemail', '0299'),
(300, 'error', '0300'),
(301, 'error', '0301'),
(302, 'error', '0302'),
(303, 'activeemail', '0303'),
(304, 'activeemail', '0304'),
(305, 'activeemail', '0305'),
(306, 'activeemail', '0306'),
(307, 'activeemail', '0307'),
(308, 'activeemail', '0308'),
(309, 'changeemail', '0309'),
(310, 'changeemail', '0310'),
(311, 'activeemail', '0311'),
(312, 'activeemail', '0312'),
(313, 'activeemail', '0313'),
(314, 'resetpass', '0314'),
(315, 'resetpass', '0315'),
(316, 'graduates', '0316'),
(317, 'graduates', '0317'),
(318, 'graduates', '0318'),
(319, 'graduates', '0319'),
(320, 'graduates', '0320'),
(321, 'lecture', '0321'),
(322, 'courses', '0322'),
(323, 'course', '0323'),
(324, 'course', '0324'),
(325, 'course', '0325'),
(326, 'course', '0326'),
(327, 'course', '0327'),
(328, 'course', '0328'),
(329, 'course', '0329'),
(330, 'course', '0330'),
(331, 'course', '0331'),
(332, 'course', '0332'),
(333, 'course', '0333'),
(334, 'course', '0334'),
(335, 'course', '0335'),
(336, 'course', '0336'),
(337, 'aboutus', '0337'),
(338, 'aboutus', '0338'),
(339, 'aboutus', '0339'),
(340, 'aboutus', '0340'),
(341, 'aboutus', '0341'),
(342, 'aboutus', '0342'),
(343, 'aboutus', '0343'),
(344, 'aboutus', '0344'),
(345, 'aboutus', '0345'),
(346, 'aboutus', '0346'),
(347, 'aboutus', '0347'),
(348, 'aboutus', '0348'),
(349, 'aboutus', '0349'),
(350, 'aboutus', '0350'),
(351, 'aboutus', '0351'),
(352, 'aboutus', '0352'),
(353, 'aboutus', '0353'),
(354, 'aboutus', '0354'),
(355, 'aboutus', '0355'),
(356, 'aboutus', '0356'),
(357, 'aboutus', '0357'),
(358, 'aboutus', '0358'),
(359, 'aboutus', '0359'),
(360, 'aboutus', '0360'),
(361, 'aboutus', '0361'),
(362, 'aboutus', '0362'),
(363, 'aboutus', '0363'),
(364, 'course', '0364'),
(365, 'course', '0365'),
(366, 'course', '0366'),
(367, 'course', '0367'),
(368, 'course', '0368'),
(369, 'module', '0369'),
(370, 'module', '0370'),
(371, 'module', '0371'),
(372, 'module', '0372'),
(373, 'module', '0373'),
(374, 'module', '0374'),
(375, 'module', '0375'),
(376, 'module', '0376'),
(377, 'module', '0377'),
(378, 'module', '0378'),
(379, 'module', '0379'),
(380, 'module', '0380'),
(381, 'module', '0381'),
(382, 'module', '0382'),
(383, 'module', '0383'),
(384, 'module', '0384'),
(385, 'response', '0385'),
(386, 'response', '0386'),
(387, 'coursemanage', '0387'),
(388, 'coursemanage', '0388'),
(389, 'coursemanage', '0389'),
(390, 'coursemanage', '0390'),
(391, 'coursemanage', '0391'),
(392, 'coursemanage', '0392'),
(393, 'coursemanage', '0393'),
(394, 'coursemanage', '0394'),
(395, 'coursemanage', '0395'),
(396, 'coursemanage', '0396'),
(397, 'coursemanage', '0397'),
(398, 'coursemanage', '0398'),
(399, 'coursemanage', '0399'),
(400, 'course', '0400'),
(401, 'course', '0401'),
(402, 'course', '0402'),
(403, 'course', '0403'),
(404, 'course', '0404'),
(405, 'course', '0405'),
(406, 'course', '0406'),
(407, 'course', '0407'),
(408, 'course', '0408'),
(409, 'course', '0409'),
(410, 'course', '0410'),
(411, 'course', '0411'),
(412, 'module', '0412'),
(413, 'module', '0413'),
(414, 'course', '0414'),
(415, 'course', '0415'),
(416, 'error', '0416'),
(417, 'coursemanage', '0417'),
(418, 'teachers', '0418'),
(419, 'coursemanage', '0419'),
(420, 'lecture', '0420'),
(421, 'module', '0421'),
(422, 'lecture', '0422'),
(423, 'graduates', '0423'),
(424, 'graduates', '0424'),
(425, 'course', '0425'),
(426, 'course', '0426'),
(427, 'error', '0427'),
(428, 'error', '0428'),
(429, 'error', '0429'),
(432, 'aboutus', '0432'),
(433, 'aboutus', '0433'),
(434, 'aboutus', '0434'),
(435, 'aboutus', '0435'),
(436, 'aboutus', '0436'),
(437, 'aboutus', '0437'),
(438, 'aboutus', '0438'),
(439, 'aboutus', '0439'),
(440, 'aboutus', '0440'),
(441, 'aboutus', '0441'),
(442, 'aboutus', '0442'),
(443, 'aboutus', '0443'),
(444, 'aboutus', '0444'),
(445, 'aboutus', '0445'),
(446, 'aboutus', '0446'),
(447, 'aboutus', '0447'),
(448, 'aboutus', '0448'),
(449, 'aboutus', '0449'),
(450, 'aboutus', '0450'),
(451, 'aboutus', '0451'),
(452, 'aboutus', '0452'),
(453, 'aboutus', '0453'),
(454, 'aboutus', '0454'),
(455, 'aboutus', '0455'),
(456, 'aboutus', '0456'),
(457, 'aboutus', '0457'),
(458, 'aboutus', '0458'),
(459, 'aboutus', '0459'),
(460, 'aboutus', '0460'),
(461, 'aboutus', '0461'),
(462, 'aboutus', '0462'),
(463, 'aboutus', '0463'),
(464, 'aboutus', '0464'),
(465, 'aboutus', '0465'),
(466, 'aboutus', '0466'),
(467, 'aboutus', '0467'),
(468, 'aboutus', '0468'),
(469, 'aboutus', '0469'),
(470, 'aboutus', '0470'),
(471, 'aboutus', '0471'),
(472, 'aboutus', '0472'),
(473, 'aboutus', '0473'),
(474, 'aboutus', '0474'),
(475, 'aboutus', '0475'),
(476, 'aboutus', '0476'),
(477, 'aboutus', '0477'),
(478, 'aboutus', '0478'),
(479, 'aboutus', '0479'),
(480, 'aboutus', '0480'),
(481, 'aboutus', '0481'),
(482, 'aboutus', '0482'),
(483, 'aboutus', '0483'),
(484, 'aboutus', '0484'),
(485, 'aboutus', '0485'),
(486, 'aboutus', '0486'),
(487, 'aboutus', '0487'),
(488, 'aboutus', '0488'),
(489, 'aboutus', '0489'),
(490, 'aboutus', '0490'),
(491, 'aboutus', '0491'),
(492, 'consultation', '0492'),
(493, 'consultation', '0493'),
(494, 'consultation', '0494'),
(495, 'consultation', '0495'),
(496, 'consultation', '0496'),
(497, 'consultation', '0497'),
(498, 'consultation', '0498'),
(499, 'consultation', '0499'),
(500, 'consultation', '0500'),
(501, 'consultation', '0501'),
(502, 'consultation', '0502'),
(503, 'consultation', '0503'),
(504, 'consultation', '0504'),
(505, 'consultation', '0505'),
(506, 'consultation', '0506'),
(507, 'consultation', '0507'),
(508, 'coursemanage', '0508'),
(509, 'coursemanage', '0509'),
(510, 'coursemanage', '0510'),
(511, 'coursemanage', '0511'),
(512, 'coursemanage', '0512'),
(513, 'coursemanage', '0513'),
(514, 'coursemanage', '0514'),
(515, 'coursemanage', '0515'),
(516, 'coursemanage', '0516'),
(517, 'coursemanage', '0517'),
(518, 'coursemanage', '0518'),
(519, 'coursemanage', '0519'),
(520, 'coursemanage', '0520'),
(521, 'coursemanage', '0521'),
(522, 'coursemanage', '0522'),
(523, 'coursemanage', '0523'),
(524, 'coursemanage', '0524'),
(525, 'coursemanage', '0525'),
(526, 'letter', '0526'),
(527, 'letter', '0527'),
(528, 'letter', '0528'),
(529, 'letter', '0529'),
(530, 'letter', '0530'),
(531, 'letter', '0531'),
(532, 'letter', '0532'),
(533, 'letter', '0533'),
(534, 'letter', '0534'),
(535, 'letter', '0535'),
(536, 'letter', '0536'),
(537, 'letter', '0537'),
(538, 'letter', '0538'),
(539, 'letter', '0539'),
(540, 'letter', '0540'),
(541, 'letter', '0541'),
(542, 'letter', '0542'),
(543, 'finances', '0543'),
(544, 'response', '0544'),
(545, 'profile', '0545'),
(546, 'profile', '0546'),
(547, 'profile', '0547'),
(548, 'profile', '0548'),
(549, 'slider', '0549'),
(550, 'slider', '0550'),
(551, 'slider', '0551'),
(552, 'slider', '0552'),
(553, 'slider', '0553'),
(554, 'slider', '0554'),
(555, 'slider', '0555'),
(556, 'aboutus', '0556'),
(557, 'aboutus', '0557'),
(558, 'aboutus', '0558'),
(559, 'slider', '0559'),
(560, 'slider', '0560'),
(561, 'regexp', '0561'),
(562, 'regexp', '0562'),
(563, 'regexp', '0563'),
(564, 'teachers', '0564'),
(565, 'lecture', '0565'),
(566, 'lecture', '0566'),
(567, 'lecture', '0567'),
(568, 'lecture', '0568'),
(569, 'lecture', '0569'),
(570, 'lecture', '0570'),
(571, 'lecture', '0571'),
(572, 'lecture', '0572'),
(573, 'lecture', '0573'),
(574, 'lecture', '0574'),
(575, 'config', '0575'),
(576, 'validation', '0576'),
(577, 'validation', '0577'),
(578, 'aboutus', '0578'),
(579, 'aboutus', '0579'),
(580, 'aboutus', '0580'),
(581, 'aboutus', '0581'),
(582, 'aboutus', '0582'),
(583, 'aboutus', '0583'),
(584, 'aboutus', '0584'),
(585, 'aboutus', '0585'),
(586, 'aboutus', '0586'),
(587, 'aboutus', '0587'),
(588, 'aboutus', '0588'),
(589, 'aboutus', '0589'),
(590, 'error', '0590'),
(591, 'registration', '0591'),
(592, 'payments', '0592'),
(593, 'payments', '0593'),
(594, 'payments', '0594'),
(595, 'payments', '0595'),
(596, 'payments', '0596'),
(597, 'payments', '0597'),
(598, 'payments', '0598'),
(599, 'payments', '0599'),
(600, 'payments', '0600'),
(601, 'payments', '0601'),
(602, 'payments', '0602'),
(603, 'payments', '0603'),
(604, 'payments', '0604'),
(605, 'payments', '0605'),
(606, 'payments', '0606'),
(607, 'payments', '0607'),
(608, 'profile', '0608'),
(609, 'graduates', '0609'),
(610, 'graduates', '0610'),
(611, 'graduates', '0611'),
(612, 'error', '0612'),
(613, 'lecture', '0613'),
(614, 'lecture', '0614'),
(615, 'lecture', '0615'),
(616, 'lecture', '0616'),
(617, 'lecture', '0617'),
(618, 'edit', '0618'),
(619, 'edit', '0619'),
(620, 'edit', '0620'),
(621, 'edit', '0621'),
(622, 'edit', '0622'),
(623, 'edit', '0623'),
(624, 'edit', '0624'),
(625, 'edit', '0625'),
(626, 'edit', '0626'),
(627, 'edit', '0627'),
(628, 'edit', '0628'),
(629, 'edit', '0629'),
(630, 'edit', '0630'),
(631, 'edit', '0631'),
(632, 'edit', '0632'),
(633, 'edit', '0633'),
(634, 'edit', '0634'),
(635, 'edit', '0635'),
(636, 'validation', '0636'),
(637, 'payment', '0637'),
(638, 'lecture', '0638'),
(639, 'lecture', '0639'),
(640, 'lecture', '0640'),
(641, 'lecture', '0641'),
(642, 'lecture', '0642'),
(643, 'sharing', '0643'),
(644, 'sharing', '0644'),
(645, 'sharing', '0645'),
(646, 'errors', '0646'),
(647, 'module', '0647'),
(648, 'module', '0648'),
(649, 'module', '0649'),
(650, 'module', '0650'),
(651, 'module', '0651'),
(652, 'module', '0652'),
(653, 'module', '0653'),
(654, 'module', '0654'),
(655, 'module', '0655'),
(656, 'payment', '0656'),
(657, 'payment', '0657'),
(658, 'payment', '0658'),
(659, 'lecture', '0659'),
(660, 'lecture', '0660'),
(661, 'payment', '0661'),
(662, 'course', '0662'),
(663, 'lecture', '0663'),
(664, 'course', '0664'),
(665, 'lecture', '0665'),
(666, 'slider', '0666'),
(667, 'course', '0667'),
(668, 'course', '0668'),
(669, 'course', '0669'),
(670, 'course', '0670'),
(671, 'course', '0671'),
(672, 'error', '0672'),
(673, 'course', '0673'),
(674, 'lecture', '0674'),
(675, 'lecture', '0675'),
(676, 'lecture', '0676'),
(677, 'lecture', '0677'),
(678, 'lecture', '0678'),
(679, 'lecture', '0679'),
(680, 'lecture', '0680'),
(681, 'lecture', '0681'),
(682, 'lecture', '0682'),
(683, 'lecture', '0683'),
(684, 'validation', '0684'),
(685, 'validation', '0685'),
(686, 'lecture', '0686'),
(687, 'lecture', '0687'),
(688, 'lecture', '0688'),
(689, 'lecture', '0689'),
(690, 'lecture', '0690'),
(691, 'lecture', '0691'),
(692, 'lecture', '0692'),
(693, 'lecture', '0693'),
(694, 'lecture', '0694'),
(695, 'lecture', '0695'),
(696, 'lecture', '0696'),
(697, 'lecture', '0697'),
(698, 'lecture', '0698'),
(699, 'lecture', '0699'),
(700, 'lecture', '0700'),
(701, 'lecture', '0701'),
(702, 'lecture', '0702'),
(703, 'lecture', '0703'),
(704, 'lecture', '0704'),
(705, 'lecture', '0705'),
(706, 'lecture', '0706'),
(707, 'lecture', '0707'),
(708, 'lecture', '0708'),
(709, 'lecture', '0709'),
(710, 'lecture', '0710'),
(711, 'lecture', '0711'),
(712, 'lecture', '0712'),
(713, 'lecture', '0713'),
(714, 'lecture', '0714'),
(715, 'profile', '0715'),
(716, 'profile', '0716'),
(717, 'profile', '0717'),
(718, 'lecture', '0718'),
(719, 'lecture', '0719'),
(720, 'lecture', '0720'),
(721, 'lecture', '0721'),
(722, 'lecture', '0722'),
(723, 'lecture', '0723'),
(724, 'lecture', '0724'),
(725, 'lecture', '0725'),
(726, 'lecture', '0726'),
(727, 'lecture', '0727'),
(728, 'lecture', '0728'),
(729, 'lecture', '0729'),
(730, 'lecture', '0730'),
(731, 'lecture', '0731'),
(732, 'lecture', '0732'),
(733, 'lecture', '0733'),
(734, 'lecture', '0734'),
(735, 'lecture', '0735'),
(736, 'lecture', '0736'),
(737, 'lecture', '0737'),
(738, 'lecture', '0738'),
(739, 'lecture', '0739'),
(740, 'course', '0740'),
(741, 'course', '0741'),
(742, 'course', '0742'),
(743, 'course', '0743'),
(744, 'course', '0744'),
(745, 'course', '0745'),
(746, 'graduate', '0746'),
(747, 'graduate', '0747'),
(748, 'graduate', '0748'),
(749, 'graduate', '0749'),
(750, 'graduate', '0750'),
(751, 'graduate', '0751'),
(752, 'graduate', '0752'),
(753, 'graduate', '0753'),
(754, 'graduate', '0754'),
(755, 'graduate', '0755'),
(756, 'graduate', '0756'),
(757, 'graduate', '0757'),
(758, 'graduate', '0758'),
(759, 'graduate', '0759'),
(760, 'graduate', '0760'),
(761, 'graduate', '0761'),
(762, 'graduate', '0762'),
(763, 'graduate', '0763'),
(764, 'graduate', '0764'),
(765, 'graduate', '0765'),
(766, 'graduate', '0766'),
(767, 'lecture', '0767'),
(768, 'lecture', '0768'),
(769, 'lecture', '0769'),
(770, 'lecture', '0770'),
(771, 'lecture', '0771'),
(772, 'lecture', '0772'),
(773, 'lecture', '0773'),
(774, 'lecture', '0774'),
(775, 'lecture', '0775'),
(776, 'validation', '0776'),
(777, 'activeemail', '0777'),
(778, 'verification', '0778'),
(779, 'user', '0779'),
(780, 'рпмиаопи', '0780'),
(782, 'Перевірка', '0782'),
(783, 'рмор', '0783'),
(3123, 'dsada', '3123'),
(54655, 'faefd', '54655');

-- --------------------------------------------------------

--
-- Структура таблицы `step`
--

CREATE TABLE IF NOT EXISTS `step` (
  `stepID` int(11) NOT NULL AUTO_INCREMENT,
  `stepNumber` int(11) NOT NULL,
  `stepTitle` varchar(6) NOT NULL,
  `stepImage` varchar(50) NOT NULL,
  `stepText` varchar(6) NOT NULL,
  PRIMARY KEY (`stepID`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=6 ;

--
-- Дамп данных таблицы `step`
--

INSERT INTO `step` (`stepID`, `stepNumber`, `stepTitle`, `stepImage`, `stepText`) VALUES
(1, 1, '0038', 'step1.jpg', '0044'),
(2, 2, '0039', 'step2.jpg', '0045'),
(3, 3, '0040', 'step3.jpg', '0046'),
(4, 4, '0041', 'step4.jpg', '0047'),
(5, 5, '0042', 'step5.jpg', '0048');

-- --------------------------------------------------------

--
-- Структура таблицы `task1`
--

CREATE TABLE IF NOT EXISTS `task1` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `language` varchar(15) DEFAULT NULL,
  `assignment` int(10) DEFAULT NULL,
  `condition` int(11) NOT NULL,
  `author` int(11) DEFAULT NULL,
  `table` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `author` (`author`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='Lectures tasks.' AUTO_INCREMENT=103 ;

--
-- Дамп данных таблицы `task1`
--

INSERT INTO `task1` (`id`, `language`, `assignment`, `condition`, `author`, `table`) VALUES
(50, 'c++', 1, 100, 1, 'assignment_cpp'),
(51, 'c++', 2, 159, 1, 'assignment_cpp'),
(52, 'c++', 3, 160, 1, 'assignment_cpp'),
(53, 'c++', 1, 100, 1, 'assignment_cpp'),
(54, 'c++', 1, 100, 1, 'assignment_cpp'),
(55, 'c++', 1, 111, 1, 'assignment_cpp'),
(56, 'c++', 1, 135, 1, 'assignment_cpp'),
(58, 'c++', 1, 157, 3, 'assignment_cpp'),
(59, 'c++', 1, 175, 5, 'assignment_cpp'),
(60, 'c++', 1, 195, 5, 'assignment_cpp'),
(61, 'c++', 1, 197, 2, 'assignment_cpp'),
(62, 'c++', 1, 208, 2, 'assignment_cpp'),
(63, 'c++', 1, 209, 5, 'assignment_cpp'),
(64, 'c++', 1, 220, 5, 'assignment_cpp'),
(65, 'c++', 1, 224, 5, 'assignment_cpp'),
(66, 'c++', 1, 250, 4, 'assignment_cpp'),
(67, 'c++', 1, 233, 4, 'assignment_cpp'),
(68, 'c++', 14, 302, 1, 'assignment_cpp'),
(72, 'c++', 1, 230, 1, 'assignment_cpp'),
(73, 'c++', 1, 229, 1, 'assignment_cpp'),
(74, 'c++', 1, 230, 1, 'assignment_cpp'),
(75, 'c++', 1, 229, 1, 'assignment_cpp'),
(76, 'c++', 1, 236, 1, 'assignment_cpp'),
(77, 'c++', 1, 400, 1, 'assignment_cpp'),
(78, 'c++', 1, 377, 1, 'assignment_cpp'),
(79, 'c++', 1, 385, 1, 'assignment_cpp'),
(80, 'c++', 1, 90, 1, 'assignment_cpp'),
(81, 'c++', 1, 112, 1, 'assignment_cpp'),
(82, 'c++', 1, 256, 1, 'assignment_cpp'),
(83, 'c++', 1, 279, 1, 'assignment_cpp'),
(85, 'c++', 22, 438, 1, 'assignment_cpp'),
(88, 'c++', 22, 442, 9, 'assignment_cpp'),
(89, 'c++', 25, 448, 1, 'assignment_cpp'),
(90, 'c++', 26, 474, 1, 'assignment_cpp'),
(91, 'c++', 27, 476, 1, 'assignment_cpp'),
(92, 'c++', 28, 477, 1, 'assignment_cpp'),
(93, 'c++', 29, 478, 1, 'assignment_cpp'),
(94, 'c++', 30, 479, 1, 'assignment_cpp'),
(95, 'c++', 31, 481, 1, 'assignment_cpp'),
(96, 'c++', 32, 482, 1, 'assignment_cpp'),
(97, 'java', 33, 483, 1, 'assignment_cpp'),
(98, 'c++', 35, 485, 1, 'assignment_cpp'),
(99, 'c++', 39, 486, 1, 'assignment_cpp'),
(100, 'c++', 40, 497, 1, 'assignment_cpp'),
(101, 'c++', 1, 473, 1, 'assignment_cpp'),
(102, 'с++', 1, 526, 1, 'assignment_cpp');

-- --------------------------------------------------------

--
-- Структура таблицы `task_marks`
--

CREATE TABLE IF NOT EXISTS `task_marks` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `id_user` int(10) NOT NULL,
  `id_task` int(10) NOT NULL,
  `mark` tinyint(1) NOT NULL,
  `comment` varchar(100) NOT NULL,
  `time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `FK_task_marks_user` (`id_user`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='mark : 0 - failed, 1 - success ' AUTO_INCREMENT=2 ;

--
-- Дамп данных таблицы `task_marks`
--

INSERT INTO `task_marks` (`id`, `id_user`, `id_task`, `mark`, `comment`, `time`) VALUES
(1, 51, 77, 1, '', '2015-10-17 10:50:19');

-- --------------------------------------------------------

--
-- Структура таблицы `tbl_migration`
--

CREATE TABLE IF NOT EXISTS `tbl_migration` (
  `version` varchar(180) NOT NULL,
  `apply_time` int(11) DEFAULT NULL,
  PRIMARY KEY (`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `tbl_migration`
--

INSERT INTO `tbl_migration` (`version`, `apply_time`) VALUES
('m000000_000000_base', 1440242985),
('m150630_120815_create_course_modules_table', 1440843848),
('m150714_145200_create_task_table', 1440843848),
('m150714_145405_create_task_marks_table', 1440843848),
('m150815_075731_add_page_title_column', 1440843848),
('m150822_083141_add_column_teacher_table', 1440242987),
('m150825_123908_fix_forums_paths', 1440843925),
('m150826_142847_add_config_table', 1440843925),
('m150831_131521_add_column_cancelled_course_table', 1441447915),
('m150901_114947_add_column_is_checked_to_response', 1441447915),
('m150902_173409_add_aboutus_slider_table', 1441447915),
('m150903_140353_add_hidden_column_config_table', 1441447915),
('m150908_115822_add_column_slider_text_carousel_table', 1441819432),
('m150908_115912_add_translations_for_error_page', 1441819432),
('m150908_231544_create_messsage_code_comment_table', 1441819432),
('m150911_141940_fix_teacher_default_photo', 1442060345),
('m150912_053246_fix_graduate_courses', 1442060345),
('m150912_121254_delete_column_courses_graduate_table', 1442424375),
('m150914_140851_add_column_mandatory_modules', 1442424375),
('m150915_154420_delete_column_aboutus_table', 1442424376),
('m150915_160111_update_step_table_data', 1442424376),
('m150915_225226_update_aboutus_table', 1442424376),
('m150915_232953_add_column_and_data_aboutus_table', 1442424376),
('m150916_130711_drop_old_columns_step_table', 1442424376),
('m150916_132211_add_teacher_name_en_translate_columns', 1442424376),
('m150916_165636_add_translate_column_graduate_page', 1442649436),
('m150918_140820_add_lecture_page_translate', 1442649730),
('m150919_114212_fix_module_alias', 1442665256),
('m150920_212642_add_course_number_column', 1443033939),
('m150920_212657_add_module_number_column', 1443034049),
('m150921_124606_add_unique_index_course_module_tables', 1443034139),
('m150921_135209_change_module_alias_column_size', 1443034145),
('m150921_142735_update_forum_topics_posts_tables_data', 1443034146),
('m150923_125621_add_lecture_page_translation', 1443034146),
('m150924_140424_add_lecture_translation', 1443882352),
('m150924_143850_delete_columns_module_page', 1443882359),
('m150925_141510_add_translations_618_636', 1443882409),
('m150929_125420_create_temp_pay_table', 1443882414),
('m150930_145603_update_avatar_user_table', 1443882414),
('m150930_154814_create_share_link', 1444237833),
('m151001_104542_add_translation_637_646', 1443882414),
('m151001_130056_update_response_table_create_teacher_response_table', 1443882531),
('m151003_123023_add_config_param_coeff_independent_module', 1443882531),
('m151006_130349_add_column_time_to_tests_marks', 1445079019),
('m151006_134030_add_column_time_to_task_marks', 1445079019),
('m151008_144046_add_translation_647_655', 1445079019),
('m151008_193852_resorted_modules_in_course', 1445079019),
('m151011_224109_add_cancelled_column_module_table', 1445079019),
('m151013_115237_fix_lecture_element_table', 1445079019),
('m151013_144739_fix_default_teacher_avatar', 1445079019),
('m151014_105911_add_translations_656_659', 1445079186),
('m151015_120413_add_price_in_course_column', 1445079186),
('m151016_142120_add_translation_662', 1445079186),
('m151021_083705_add_translation_664', 1445424063),
('m151022_112757_add_translation_665_666', 1445597049),
('m151023_081952_add_translations_667_671', 1446485049),
('m151024_085328_add_translation_672_685', 1446485049),
('m151024_115736_add_modules_status', 1446485049),
('m151105_141505_create_plain_task_table', 1447502176),
('m151107_110327_add_translations_686_717', 1447502176),
('m151109_141543_add_translations_718_739', 1447502176),
('m151110_135230_add_translation_740_745', 1447502176),
('m151110_151956_add_translation_746_766', 1447502176),
('m151112_113620_add_translations_767_772', 1447502176),
('m151112_135049_create_plain_task_answer', 1447502176),
('m151113_114517_add_translation_773_778', 1447502176),
('m151116_131923_add_column_carousel_table', 1448216872),
('m151116_150731_add_columns_about_us_slider_table', 1448216872),
('m151118_135452_create_plian_task_marks_table', 1448216872),
('m151118_162503_update_element_type_value', 1448216872),
('m151121_102054_add_verified_column', 1448982674),
('m151124_130902_add_translations_779', 1448982674),
('m151124_131514_add_skip_task_table', 1448982674),
('m151124_131526_add_skip_task_answers_table', 1448982674),
('m151124_131538_add_skip_task_marks_table', 1448982674),
('m151124_154440_update_element_type_table_skip_task', 1448982674),
('m151125_160732_add_column_skip_task_table', 1448982674),
('m151126_135252_add_in_sensitive_column_skip_task_answers', 1448982674),
('m151127_150946_add_column_skip_task_table_source', 1448982674),
('m151130_141203_rename_column_skip_task_marks', 1448982674),
('m151130_152923_add_date_columns_teacher_trainer_table', 1448982675),
('m151201_132542_add_column_plain_task_answer', 1449934321),
('m151203_121422_add_plain_task_answer_teacher_table', 1449934321),
('m151203_131237_update_consultant_modules_teacher_modules_tables', 1449934322),
('m151204_125421_rename_table_messages_to_translate', 1449934322),
('m151215_123044_create_table_user_admin', 1450294268),
('m151215_123056_create_table_user_accountant', 1450294268),
('m151215_123133_import_data_from_user_to_user_admin_and_accountant', 1450294268);

-- --------------------------------------------------------

--
-- Структура таблицы `teacher`
--

CREATE TABLE IF NOT EXISTS `teacher` (
  `teacher_id` int(11) NOT NULL AUTO_INCREMENT,
  `first_name` varchar(35) NOT NULL,
  `middle_name` varchar(35) NOT NULL,
  `last_name` varchar(35) NOT NULL,
  `foto_url` varchar(100) NOT NULL DEFAULT 'noname2.png',
  `subjects` varchar(100) NOT NULL,
  `profile_text_first` text NOT NULL,
  `profile_text_short` text NOT NULL,
  `profile_text_last` text NOT NULL,
  `readMoreLink` varchar(255) NOT NULL,
  `email` varchar(50) NOT NULL,
  `tel` varchar(100) NOT NULL,
  `skype` varchar(50) NOT NULL,
  `rate_knowledge` int(2) NOT NULL,
  `rate_efficiency` int(2) NOT NULL,
  `rate_relations` int(2) NOT NULL,
  `user_id` int(11) NOT NULL,
  `rating` tinyint(2) DEFAULT NULL,
  `isPrint` tinyint(1) NOT NULL DEFAULT '1',
  `first_name_en` varchar(50) DEFAULT NULL,
  `middle_name_en` varchar(50) DEFAULT NULL,
  `last_name_en` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`teacher_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=29 ;

--
-- Дамп данных таблицы `teacher`
--

INSERT INTO `teacher` (`teacher_id`, `first_name`, `middle_name`, `last_name`, `foto_url`, `subjects`, `profile_text_first`, `profile_text_short`, `profile_text_last`, `readMoreLink`, `email`, `tel`, `skype`, `rate_knowledge`, `rate_efficiency`, `rate_relations`, `user_id`, `rating`, `isPrint`, `first_name_en`, `middle_name_en`, `last_name_en`) VALUES
(1, 'ОлександраВас', 'Василівна', 'Сіра', '5681a0df96ef5.jpg', 'кройка и шитье сроков; програмування самоубийств', '<p>\r\n	<strong><a target="_blank" href="http://www.kostyor.ru/poetry/poem40.html">http://www.kostyor.ru/poetry/poem40.html</a></strong>\r\n</p>\r\n<p><span style="font-family: Georgia;"><span style="font-size: 11px;"><span style="background-color: rgb(31, 73, 125);"><u><strong><span style="color: rgb(215, 227, 188);">Олександра Сіра народилася у родині механіка. Її батько мав <a href="https://uk.wikipedia.org/wiki/%D0%93%D1%80%D0%B5%D0%BA%D0%B8" title="Греки">г</a>рецьке походження. Батьки дівчинки розлучилися коли їй було 5 років, надалі її виховувала мати, яка вступила в повторний шлюб у 2000 році. Марина не ладнала звітчимом, і, коли їй виповнилося 16 років, дівчина повідомирпооороопла матері, що збирається покинути будинок. Достеменно невідомо, втекла вона з свого будинку або ж її відпустила мати. Сама Саша пізніше зізнавалася, що в той час робила все те, що не подобалося її батькам і що вони їй забороняли.опророvhvvbvbvb</span></strong></u></span></span></span>\r\n</p>\r\n<p><em></em>\r\n</p>\r\n<p><em></em>\r\n</p>\r\n<p><span style="font-size: 16px;"><span style="background-color: rgb(31, 73, 125);">Восени 2005 року Саша вступила до коледжу на театральні курси. З березня 2006 року вона працювала в закусочній і зібрала $ 7000 для поїздки.</span>\r\n	</span>\r\n</p>\r\n<p>                    Главный бухгалтер акционерного предприятия, специализирующегося на:ghgh\r\n</p>\r\n<ol>\r\n	<li>оказании <del><strong><em>полезных </em></strong></del>услуг горизонтального характера;</li>\r\n	<li>торговле, внешнеэкономической и внутреннеэкономической;</li>\r\n	<li>позитивное обучение швейного мастерства;</li>\r\n</ol>', '<p>Профессиональный111111111 преподаватель бухгалтерского и налогового учета Национальноготранспортного университета кафедры финансов, учета и аудита со стажем преподавательской работы более 25 лет. Закончила аспирантуру, автор 36 научных работ в области учета и аудита, в т.ч. уникальной обучающей методики написания бухгалтерских проводок: <span>"Как украсть и не сесть" </span> и <span>"Как украсть и посадить другого" </span>.</p><p>Главный бухгалтер акционерного предприятия, специализирующегося на:<ul><li>оказании полезных услуг горизонтального характера;</li><li>торговле, внешнеэкономической и внутреннеэкономической;</li><li>позитивное обучение швейного мастерства;</li></ul></p>', '<p>\r\n	<em></em>\r\n</p>\r\n<p><u></u>\r\n</p>\r\n<p><span style="color: rgb(0, 0, 0);">Олександра Сі</span><span style="color: rgb(0, 0, 0);">ра <del><strong><em>виконала гол</em></strong></del></span><strong><em><span style="color: rgb(0, 0, 0);">овну роль у фільмі оскароносного режисера</span></em></strong>\r\n</p>\r\n<p>                        Стівена Содерберга «Дівчина за викликом»[27][28]. Олександра грає дівчину на ім''я Челсі, яка надає ескорт послуги заможним людям. Содерберг взяв її на роль після того, як прочитав статтю про неї у журналі Los Angeles, коментуючи це так: «She''s kind of a new breed, I think. She doesn''t really <del>fit </del>\r\n</p>\r\n<p><del><strong>                        the typical mold of someone who goes into the adult film <em>business. … I''d never heard anybody talk </em></strong></del>\r\n</p>\r\n<p><del><em><strong>                        about the business the way that she ta</strong></em></del>lked about it». Журналіст Скотт Маколей каже, що можливо\r\n</p>\r\n<p>                        Грей вибрала саме цю роль через свій інтерес до незалежних режисерів, таких як Жан-Люк Годар,\r\n</p>\r\n<p>                        Хармоні Корін, Девід Гордон Грін, Мікеланджело Антоніоні, Аньєс Варда та Вільям Клейн.\r\n</p>\r\n<p><br>Коли Олександра  готувалася до ролі у <em>«Дівчині за викликом»,</em>\r\n</p>\r\n<p>                        Содерберг попросив її подивитися «Жити своїм життям» і «Божевільний П''єро»[29].\r\n</p>\r\n<p>                        У фільмі «Жити своїм життям» піднімаються проблеми проституції, звідки Грей могла взяти щось і для своєї ролі, в той час як у «Божевільному П''єро» показані відносини, схожі на ті, що відбуваються між Челсі, її хлопцем і клієнтами.\r\n</p>\r\n<p>Коли Олександра готувалася до ролі у <em>«Дівчині за викликом»,</em>\r\n</p>\r\n<p> Содерберг попросив її подивитися «Жити своїм життям» і «Божевільний П''єро»[29].\r\n</p>\r\n<p> <em>У фільмі «Жити своїм життям» піднімаються проблеми проституції, звідки Грей могла взяти щось і для своєї ролі, в той час як у «Божевільному П''єро» показані відносини,схожі на ті, що відбуваються між Челсі, її хлопцем і клієнтами.\r\n	</em>\r\n</p>', '/profile/index/?idTeacher=6', 'teacher1@gmail.com', '', 'teacher1', 8, 8, 8, 38, 8, 1, 'Oleksandra', 'Vasylivna', 'Sira'),
(2, 'Константин', 'Константинович', 'Константинопольский', 'teacher2.jpg', 'программування БДСМ; программування на Php для пострадавших в ЧАЭС; GlobalLoqic, Samsung, Coqniance', '<p>Hello! fhjhgxkgulchlchlchilcihlchilchjlchl\r\n</p>', '<p>Консультант по вопросам бухгалтерского и налогового учета, отчетности для предприятий разной формы собственности. Преподаватель с многолетним стажем работы. <span>Реально шарит в компьютерах.</span></p><p>Автор технологии повышения квалификации специалистов экономического профиля.</p><p>Опыт преподавательской работы около 20 лет в учебных центрах и ВУЗах Киева. Опыт работы главным бухгалтером, финансовым директором. Большой опыт внедрения программ системы Виндовз 3:11.</p>', '<h2>Hello!cggjj</h2>', '/profile/index/?idTeacher=1', 'teacher2@gmail.com', '433333', 'teacher2', 0, 0, 0, 39, 0, 0, 'Konstantyn', 'Konstantynovych', 'Konstantynopolskyi'),
(3, 'Любовь', 'Анатольевна', 'КтоятакаяЗамухриншская', 'teacher3.jpg', 'Бухгалтер с «О» и до первой отсидки; Программирование своего позитивного прошлого', '', '<p>Практикующий главный бухгалтер. Учредитель ПП <span>«Логика тут безсильна»</span>;</p>\r\n<p>Образование высшее - ДонГУ (1987г.)</p>\r\n<p>Опыт работы 27 лет, в т. ч. преподавания - 9 лет.</p>\r\n<ul><li>специалист по позитивной энергетике;</li><li>эксперт по эффективному ремонту баянов;</li><li>мастер психотерапии для сложных бабушек и дедушек;</li></ul>', '', '/profile/index/?idTeacher=5', 'teacher3@gmail.com', '', 'teacher3', 0, 0, 0, 40, 0, 0, NULL, NULL, NULL),
(4, 'Василий', 'Васильевич', 'Меняетпроффесию', 'teacher4.jpg', 'программування БДСМ; программування на Php для пострадавших в ЧАЭС; GlobalLoqic, Samsung, Coqniance', '', '<p>Консультант по вопросам бухгалтерского и налогового учета, отчетности для предприятий разной формы собственности. Преподаватель с многолетним стажем работы. <span>Реально шарит в компьютерах.</span></p><p>Автор технологии повышения квалификации специалистов экономического профиля.</p><p>Опыт преподавательской работы около 20 лет в учебных центрах и ВУЗах Киева. Опыт работы главным бухгалтером, финансовым директором. Большой опыт внедрения программ системы Виндовз 3:11.</p>', '', '/profile/index/?idTeacher=2', 'teacher4@gmail.com', '', 'teacher4', 0, 0, 0, 41, 0, 0, NULL, NULL, NULL),
(5, 'Ия', 'Тожевна', 'Воваяготова', 'teacher5.jpg', 'программування БДСМ; программування на Php для пострадавших в ЧАЭС; GlobalLoqic, Samsung, Coqniance', '', '<p>Консультант по вопросам бухгалтерского и налогового учета, отчетности для предприятий разной формы собственности. Преподаватель с многолетним стажем работы. <span>Реально шарит в компьютерах.</span></p><p>Автор технологии повышения квалификации специалистов экономического профиля.</p><p>Опыт преподавательской работы около 20 лет в учебных центрах и ВУЗах Киева. Опыт работы главным бухгалтером, финансовым директором. Большой опыт внедрения программ системы Виндовз 3:11.</p>', '', '/profile/index/?idTeacher=3', 'teacher5@gmail.com', '', 'teacher5', 0, 0, 0, 42, 0, 0, NULL, NULL, NULL),
(6, 'Петросян', 'Петросянович', 'Забугорный', 'teacher6.jpg', 'программування БДСМ; программування на Php для пострадавших в ЧАЭС; GlobalLoqic, Samsung, Coqniance', '<p>hello!</p>', '<p>Консультант по вопросам бухгалтерского и налогового учета, отчетности для предприятий разной формы собственности. Преподаватель с многолетним стажем работы. <span>Реально шарит в компьютерах.</span></p><p>Автор технологии повышения квалификации специалистов экономического профиля.</p><p>Опыт преподавательской работы около 20 лет в учебных центрах и ВУЗах Киева. Опыт работы главным бухгалтером, финансовым директором. Большой опыт внедрения программ системы Виндовз 3:11.</p>', '<h3>hello2!</h3>', '/profile/index/?idTeacher=4', 'teacher6@gmail.com', '', 'teacher6', 0, 0, 0, 43, 0, 0, 'Petrosian', 'Petrosianovych', 'Zabuhornundefinedi'),
(8, 'Викладач', 'Викладач', 'Викладач', 'noname2.png', '', '', '', '', '', '1111111111111111111111111111111111111111@gmail.com', '', '', 0, 0, 0, 110, 0, 0, NULL, NULL, NULL),
(9, 'Антон', 'Олексійович', 'Грядченко', 'noname2.png', '', '', '', '', '', 'antongriadchenko@gmail.com', '', '', 6, 6, 6, 109, 6, 1, 'Anton', 'Oleksiiovych', 'Hriadchenko'),
(10, 'Ярослав', 'Іванович', 'Плаксій', 'noname2.png', '', '', '', '', '', 'yaroslav.plaksii@gmail.com', '', '', 0, 0, 0, 108, 0, 1, 'Yaroslav', 'Ivanovych', 'Plaksii'),
(11, 'Юрій', 'Ігорович', 'Мітюшкін', 'noname2.png', '', '', '', '', '', 'permmemo@gmail.com', '', '', 0, 0, 0, 117, 0, 1, 'Yurii', 'Ihorovych', 'Mitiushkin'),
(12, 'Михайло', 'Васильович', 'Чухно', 'noname2.png', '', '', '', '', '', 'chuhno.mv@gmail.com', '', '', 0, 0, 0, 130, 0, 1, 'Mykhailo', 'Vasylovych', 'Chukhno'),
(13, 'Сидоров', 'Денис', 'Денисович', 'noname2.png', '', '', '', '', '', '', '', '', 0, 0, 0, 233, NULL, 0, 'Ya', 'Ya', 'Ya'),
(14, 'Ірина', 'Анатоліївна', 'Канєва', 'noname2.png', '', '', '', '', '', '', '', '', 0, 0, 0, 1, NULL, 0, 'Iryna', 'Anatoliivna', 'Kanieva'),
(15, 'Тестовий', 'Викладач', 'Викладач', 'noname2.png', '', '', '', '', '', '', '', '', 0, 0, 0, 251, NULL, 0, 'Testovyi', 'Vykladach', 'Vykl'),
(16, 'Мовчан', 'Олена', 'Василівна', 'noname2.png', '', '                             ', '                                                                                          ', '                        ', '', '', '1111111111111', '1111111111111111', 0, 0, 0, 254, NULL, 0, 'Uchytel', 'Uchytel', 'Uchytel'),
(17, 'Іванов', 'Іван ', 'Іванович', 'mix_33 (47).jpg', '', '', '', '', '', '', '', '', 0, 0, 0, 253, NULL, 0, 'Uchytel', 'Uchytel', 'Uchytel'),
(18, 'Забіяка', 'Василь', 'Петрович', 'noname2.png', '', '', '', '', '', '', '', '', 0, 0, 0, 253, NULL, 0, 'pa', 'rapone', 'rrrneo'),
(19, 'Семенов', 'Семен', 'Семенович', 'noname2.png', '', '', '', 'jhjk', '', '', '', '', 0, 0, 0, 232, NULL, 0, 'VykladachTest', 'VykladachTest', 'VykladachTest'),
(20, 'Павлова', 'Наталія', 'Сергіївна', 'noname2.png', '', '', '', '', '', '', '', '', 0, 0, 0, 230, NULL, 0, 'avp', 'vpva', 'arar'),
(21, 'ВикладачТест', 'ВикладачТест', 'Учитель', 'noname2.png', '', '', '', '', '', '', '', '', 0, 0, 0, 248, NULL, 0, 'VykladachTest', 'VykladachTest', 'Uchytel'),
(22, 'Анатолій', 'Олегович', 'Легеза', '99.jpg', '', 'апвапва', 'араврара', 'апрпопао', '', 'mar@ukr.net', '0968223366', 'an23', 0, 0, 0, 114, NULL, 0, 'Anatoliy', 'Olegovich', 'Legeza'),
(23, 'Ірина', 'Анатоліївна', 'Легеза', 'noname2.png', '', 'dhfdh', 'fhfghjgf', 'gfjgj', '', 'mar5@ukr.net', '0631050505', 'an232', 0, 0, 0, 133, NULL, 0, 'Anatoliy', 'Olegovich', 'Legeza1'),
(24, 'Милослава', 'Віталіївна', 'Дячук', 'noname2.png', '', 'Трарполр', 'иьтиьтбюью', 'рлрлдюбьюб', '', 'Var1@gmail.com', '0996662233', '', 0, 0, 0, 114, NULL, 0, 'vhnjk', 'hvhnbk', 'gvjhgujhik'),
(25, 'Милослава', 'Віталіївна', 'Дячук', 'Photo-0049.jpg', '', '', '', '', '', '', '', '', 0, 0, 0, 176, NULL, 0, '', '', ''),
(26, 'Милослава', 'Віталіївна', 'Дячук', 'Photo-0049.jpg', '', '', '', '', '', '', '', '', 0, 0, 0, 104, NULL, 0, '', '', ''),
(27, 'Милослава', 'Віталіївна', 'Дячук', '20151221053917.jpg', '', 'fujgkhk', 'gjknj,.', '', '', '', '', '', 0, 0, 0, 126, NULL, 0, 'Myloslava', 'Vitaliivna', 'Diachuk'),
(28, 'Валентин', 'Романович', 'Билецький', 'noname2.png', '', '', '', '', '', '', '', '', 0, 0, 0, 255, NULL, 0, '', '', '');

-- --------------------------------------------------------

--
-- Структура таблицы `teacher_module`
--

CREATE TABLE IF NOT EXISTS `teacher_module` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `idTeacher` int(11) NOT NULL,
  `idModule` int(11) NOT NULL,
  `start_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `end_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_teacher_module_teacher` (`idTeacher`),
  KEY `FK_teacher_module_module` (`idModule`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=84 ;

--
-- Дамп данных таблицы `teacher_module`
--

INSERT INTO `teacher_module` (`id`, `idTeacher`, `idModule`, `start_time`, `end_time`) VALUES
(1, 1, 1, '2015-12-12 15:32:01', NULL),
(2, 2, 1, '2015-12-12 15:32:01', NULL),
(3, 3, 1, '2015-12-12 15:32:01', NULL),
(5, 4, 1, '2015-12-12 15:32:01', NULL),
(6, 3, 2, '2015-12-12 15:32:01', NULL),
(7, 4, 2, '2015-12-12 15:32:01', NULL),
(8, 1, 3, '2015-12-12 15:32:01', NULL),
(9, 4, 3, '2015-12-12 15:32:01', NULL),
(11, 4, 4, '2015-12-12 15:32:01', NULL),
(14, 3, 9, '2015-12-12 15:32:01', NULL),
(15, 4, 9, '2015-12-12 15:32:01', NULL),
(17, 1, 10, '2015-12-12 15:32:01', NULL),
(18, 4, 10, '2015-12-12 15:32:01', NULL),
(19, 1, 7, '2015-12-12 15:32:01', NULL),
(20, 5, 7, '2015-12-12 15:32:01', NULL),
(34, 2, 11, '2015-12-12 15:32:01', NULL),
(35, 1, 14, '2015-12-12 15:32:01', NULL),
(36, 4, 16, '2015-12-12 15:32:01', NULL),
(37, 3, 17, '2015-12-12 15:32:01', NULL),
(38, 1, 18, '2015-12-12 15:32:01', NULL),
(40, 4, 22, '2015-12-12 15:32:01', NULL),
(41, 2, 23, '2015-12-12 15:32:01', NULL),
(44, 1, 20, '2015-12-12 15:32:01', NULL),
(45, 2, 2, '2015-12-12 15:32:01', NULL),
(46, 1, 61, '2015-12-12 15:32:01', NULL),
(47, 9, 1, '2015-12-12 15:32:01', NULL),
(48, 2, 14, '2015-12-12 15:32:01', NULL),
(49, 10, 16, '2015-12-12 15:32:01', NULL),
(50, 11, 3, '2015-12-12 15:32:01', NULL),
(51, 11, 10, '2015-12-12 15:32:01', NULL),
(53, 12, 11, '2015-12-12 15:32:01', NULL),
(54, 10, 4, '2015-12-12 15:32:01', NULL),
(55, 10, 17, '2015-12-12 15:32:01', NULL),
(56, 10, 18, '2015-12-12 15:32:01', NULL),
(57, 10, 20, '2015-12-12 15:32:01', NULL),
(61, 10, 2, '2015-12-12 15:32:01', NULL),
(62, 11, 9, '2015-12-12 15:32:01', NULL),
(63, 10, 131, '2015-12-12 15:32:01', NULL),
(64, 10, 132, '2015-12-12 15:32:01', NULL),
(66, 9, 14, '2015-12-12 15:32:01', NULL),
(68, 1, 23, '2015-12-12 15:32:01', NULL),
(69, 2, 121, '2015-12-12 15:32:01', NULL),
(70, 15, 1, '2015-12-12 15:32:01', NULL),
(72, 16, 1, '2015-12-12 15:32:01', NULL),
(73, 1, 123, '2015-12-12 15:32:01', NULL),
(74, 1, 166, '2015-12-12 15:32:01', NULL),
(75, 21, 166, '2015-12-12 15:32:01', NULL),
(76, 20, 1, '2015-12-17 18:00:10', NULL),
(77, 24, 22, '2015-12-17 18:01:17', NULL),
(78, 1, 58, '2015-12-20 23:29:14', NULL),
(79, 1, 179, '2015-12-24 12:08:28', NULL),
(80, 1, 187, '2015-12-29 16:00:48', NULL),
(81, 1, 188, '2015-12-29 16:01:30', NULL),
(82, 1, 192, '2016-01-05 14:54:36', NULL),
(83, 1, 193, '2016-01-05 14:55:02', NULL);

-- --------------------------------------------------------

--
-- Структура таблицы `teacher_response`
--

CREATE TABLE IF NOT EXISTS `teacher_response` (
  `id_teacher` int(11) NOT NULL,
  `id_response` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `teacher_response`
--

INSERT INTO `teacher_response` (`id_teacher`, `id_response`) VALUES
(109, 5),
(109, 7),
(109, 9),
(38, 10),
(38, 11),
(38, 12),
(38, 13),
(38, 14),
(38, 15),
(38, 16),
(38, 17),
(38, 18),
(38, 19),
(38, 20),
(38, 21);

-- --------------------------------------------------------

--
-- Структура таблицы `teacher_roles`
--

CREATE TABLE IF NOT EXISTS `teacher_roles` (
  `teacher` int(10) NOT NULL,
  `role` int(10) NOT NULL,
  `start_date` date NOT NULL,
  `end_date` date NOT NULL,
  KEY `FK_teacher_roles_teacher` (`teacher`),
  KEY `FK_teacher_roles_roles` (`role`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `teacher_roles`
--

INSERT INTO `teacher_roles` (`teacher`, `role`, `start_date`, `end_date`) VALUES
(1, 4, '2015-12-12', '0000-00-00'),
(1, 1, '0000-00-00', '0000-00-00'),
(2, 2, '0000-00-00', '0000-00-00'),
(5, 4, '0000-00-00', '0000-00-00'),
(6, 2, '0000-00-00', '0000-00-00'),
(3, 3, '0000-00-00', '0000-00-00'),
(4, 3, '0000-00-00', '0000-00-00'),
(3, 4, '0000-00-00', '0000-00-00'),
(3, 2, '2015-09-17', '0000-00-00'),
(2, 1, '0000-00-00', '0000-00-00'),
(3, 1, '0000-00-00', '0000-00-00'),
(4, 1, '0000-00-00', '0000-00-00'),
(6, 1, '0000-00-00', '0000-00-00'),
(1, 3, '0000-00-00', '0000-00-00'),
(2, 3, '0000-00-00', '0000-00-00'),
(5, 3, '2015-06-24', '0000-00-00'),
(6, 3, '0000-00-00', '0000-00-00'),
(5, 1, '2015-06-24', '0000-00-00'),
(4, 2, '2015-06-24', '0000-00-00'),
(5, 2, '2015-06-24', '0000-00-00'),
(1, 4, '2015-12-12', '0000-00-00'),
(2, 4, '2015-06-24', '0000-00-00'),
(4, 4, '2015-06-24', '0000-00-00'),
(5, 4, '2015-06-24', '0000-00-00'),
(6, 4, '2015-06-24', '0000-00-00'),
(9, 2, '2015-09-17', '0000-00-00'),
(11, 2, '2015-09-24', '0000-00-00'),
(12, 2, '2015-10-05', '0000-00-00'),
(21, 4, '2015-12-12', '0000-00-00'),
(15, 4, '2015-12-12', '0000-00-00'),
(1, 2, '2015-12-25', '0000-00-00');

-- --------------------------------------------------------

--
-- Структура таблицы `temp_pay`
--

CREATE TABLE IF NOT EXISTS `temp_pay` (
  `id_account` int(11) NOT NULL AUTO_INCREMENT,
  `id_user` int(11) NOT NULL,
  `date` int(11) NOT NULL,
  `id_course` int(11) DEFAULT NULL,
  `id_module` int(11) DEFAULT NULL,
  `summa` float NOT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=157 ;

--
-- Дамп данных таблицы `temp_pay`
--

INSERT INTO `temp_pay` (`id_account`, `id_user`, `date`, `id_course`, `id_module`, `summa`) VALUES
(1, 51, 1443884895, 1, NULL, 1624),
(2, 51, 1443884940, 1, NULL, 1624),
(3, 51, 1443885376, 1, NULL, 1624),
(4, 51, 1443885808, NULL, 1, 6500),
(5, 167, 1443905035, NULL, 10, 3000),
(6, 167, 1443905381, 1, NULL, 1624),
(7, 206, 1444035548, 1, NULL, 1624),
(8, 206, 1444037824, 13, NULL, 1750),
(9, 206, 1444037880, 3, NULL, 4690),
(10, 2, 1444041445, 1, NULL, 1624),
(11, 2, 1444044941, NULL, 1, 6500),
(12, 38, 1444052973, NULL, 61, 0),
(13, 38, 1444053066, NULL, 1, 6500),
(14, 38, 1444053087, NULL, 1, 6500),
(15, 38, 1444053137, NULL, 18, 3000),
(16, 204, 1444054112, 1, NULL, 1624),
(17, 38, 1444054147, 1, NULL, 1624),
(18, 206, 1444064783, 1, NULL, 1624),
(19, 45, 1444066519, 4, NULL, 4200),
(20, 38, 1444128519, 3, NULL, 4690),
(21, 106, 1444136895, NULL, 1, 6500),
(22, 106, 1444136975, NULL, 144, 0),
(23, 106, 1444137036, NULL, 23, 3000),
(24, 206, 1444137740, 1, NULL, 1624),
(25, 206, 1444137763, NULL, 23, 3000),
(26, 206, 1444137780, NULL, 1, 6500),
(27, 206, 1444137826, NULL, 2, 3200),
(28, 206, 1444137847, NULL, 139, 0),
(29, 206, 1444137910, NULL, 1, 6500),
(30, 206, 1444137927, NULL, 139, 0),
(31, 206, 1444137974, NULL, 146, 123456),
(32, 206, 1444138015, 6, NULL, 4970),
(33, 206, 1444138037, NULL, 58, 0),
(34, 106, 1444138199, 13, NULL, 1750),
(35, 206, 1444138206, NULL, 59, 0),
(36, 106, 1444139263, 5, NULL, 4130),
(37, 106, 1444139284, 5, NULL, 4130),
(38, 22, 1444160902, 6, NULL, 4970),
(39, 22, 1444160963, 1, NULL, 1624),
(40, 22, 1444161126, 1, NULL, 1624),
(41, 22, 1444162079, 2, NULL, 4550),
(42, 206, 1444211441, NULL, 1, 6500),
(43, 206, 1444211508, NULL, 2, 3200),
(44, 206, 1444211533, 3, NULL, 4690),
(45, 206, 1444211575, 5, NULL, 4130),
(46, 206, 1444211606, 2, NULL, 4550),
(47, 38, 1444212781, 1, NULL, 1624),
(48, 206, 1444217811, 5, NULL, 4130),
(49, 38, 1444218156, 4, NULL, 4200),
(50, 38, 1444221017, 6, NULL, 4970),
(51, 38, 1444226532, 2, NULL, 4550),
(52, 38, 1444235439, 3, NULL, 4690),
(53, 206, 1444237531, 13, NULL, 1750),
(54, 206, 1444238364, 7, NULL, 508),
(55, 38, 1444238425, NULL, 1, 7800),
(56, 38, 1444238628, 18, NULL, 2392),
(57, 206, 1444239313, 1, NULL, 97),
(58, 206, 1444239332, 5, NULL, 492),
(59, 206, 1444239373, 2, NULL, 135),
(60, 38, 1444239518, 7, NULL, 102),
(61, 172, 1444240706, 1, NULL, 1624),
(62, 38, 1444376294, 1, NULL, 1624),
(63, 22, 1444576104, NULL, 23, 3600),
(64, 22, 1444576203, NULL, 23, 3600),
(65, 228, 1444727115, 1, NULL, 1624),
(66, 228, 1444727193, 1, NULL, 39),
(67, 230, 1444743534, 1, NULL, 1624),
(68, 230, 1444744046, 1, NULL, 1624),
(69, 230, 1444894726, 1, NULL, 1624),
(70, 205, 1444986304, 18, NULL, 3640),
(71, 205, 1444986318, NULL, 1, 7800),
(72, 38, 1444986928, 6, NULL, 4970),
(73, 38, 1444986960, NULL, 146, 148147),
(74, 38, 1444986984, NULL, 11, 3600),
(75, 38, 1444987092, NULL, 1, 7800),
(76, 38, 1444987101, NULL, 2, 3840),
(77, 38, 1444987109, NULL, 3, 4200),
(78, 38, 1444987119, NULL, 4, 3600),
(79, 38, 1444987141, NULL, 7, 3600),
(80, 38, 1444987151, NULL, 9, 3600),
(81, 38, 1444987163, NULL, 10, 3600),
(82, 38, 1444987215, NULL, 11, 3600),
(83, 38, 1444987264, 6, NULL, 4970),
(84, 38, 1444987361, NULL, 23, 3600),
(85, 38, 1445008850, 1, NULL, 1044),
(86, 38, 1445008869, 1, NULL, 193),
(87, 38, 1445012428, 6, NULL, 4970),
(88, 38, 1445079458, NULL, 1, 1300),
(89, 2, 1445079496, 1, NULL, 3850),
(90, 2, 1445174714, 1, NULL, 3073),
(91, 22, 1445246933, 1, NULL, 3073),
(92, 38, 1445246964, 1, NULL, 3073),
(93, 22, 1445247011, 3, NULL, 175),
(94, 38, 1445250453, 1, NULL, 3073),
(95, 38, 1445252297, NULL, 23, 20),
(96, 22, 1445253548, 1, NULL, 3073),
(97, 38, 1445254183, NULL, 11, 28),
(98, 38, 1445254183, NULL, 11, 28),
(99, 38, 1445254246, NULL, 2, 24),
(100, 38, 1445254260, 1, NULL, 3073),
(101, 38, 1445254273, 3, NULL, 175),
(102, 22, 1445267851, 1, NULL, 3073),
(103, 45, 1445345579, 1, NULL, 3073),
(104, 205, 1445416997, NULL, 11, 210),
(105, 38, 1445417399, 1, NULL, 3073),
(106, 38, 1445419454, 3, NULL, 175),
(107, 38, 1445426685, 1, NULL, 1010),
(108, 38, 1445426755, 5, NULL, 98),
(109, 38, 1445428626, 1, NULL, 3073),
(110, 52, 1445434300, 5, NULL, 98),
(111, 52, 1445434347, 1, NULL, 3073),
(112, 52, 1445435398, 5, NULL, 12),
(113, 52, 1445435414, 5, NULL, 10),
(114, 38, 1445436802, 7, NULL, 14),
(115, 22, 1445505272, 1, NULL, 3073),
(116, 38, 1445589723, 5, NULL, 9),
(117, 38, 1445589993, 1, NULL, 366),
(118, 207, 1445591725, 1, NULL, 366),
(119, 242, 1445594558, 1, NULL, 1010),
(120, 38, 1445597176, 1, NULL, 3073),
(121, 22, 1445599466, 1, NULL, 3073),
(122, 228, 1445603444, 1, NULL, 366),
(123, 38, 1445604646, NULL, 3, 195),
(124, 38, 1445604695, 5, NULL, 10),
(125, 38, 1445679372, 5, NULL, 98),
(126, 22, 1445681973, 1, NULL, 3073),
(127, 230, 1445930155, 1, NULL, 3073),
(128, 38, 1446660276, 1, NULL, 3073),
(129, 38, 1446661108, 3, NULL, 15),
(130, 38, 1446663718, 1, NULL, 3073),
(131, 52, 1446719204, 1, NULL, 3073),
(132, 22, 1446734462, 1, NULL, 1010),
(133, 39, 1446742895, 1, NULL, 3073),
(134, 204, 1447360166, 1, NULL, 3073),
(135, 38, 1447869292, 1, NULL, 268),
(136, 38, 1448097022, 1, NULL, 272),
(137, 22, 1448100083, 1, NULL, 366),
(138, 22, 1448100380, 1, NULL, 366),
(139, 38, 1448113090, 1, NULL, 1010),
(140, 22, 1448284860, 1, NULL, 4390),
(141, 22, 1448383217, 1, NULL, 4390),
(142, 38, 1448723057, 1, NULL, 4390),
(143, 22, 1449002801, 1, NULL, 4390),
(144, 22, 1449484455, 1, NULL, 366),
(145, 38, 1449675724, 1, NULL, 272),
(146, 38, 1449675811, 1, NULL, 272),
(147, 38, 1449675835, 1, NULL, 272),
(148, 254, 1449850895, 1, NULL, 4390),
(149, 22, 1450354315, 1, NULL, 268),
(150, 38, 1451058371, 1, NULL, 4390),
(151, 261, 1451395554, 3, NULL, 3250),
(152, 261, 1452001195, 1, NULL, 366),
(153, 261, 1452001203, 1, NULL, 366),
(154, 261, 1452001555, 1, NULL, 4390),
(155, 22, 1452014893, 1, NULL, 4390),
(156, 22, 1452102174, 1, NULL, 4390);

-- --------------------------------------------------------

--
-- Структура таблицы `tests`
--

CREATE TABLE IF NOT EXISTS `tests` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `block_element` int(10) NOT NULL,
  `author` int(10) NOT NULL,
  `title` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=299 ;

--
-- Дамп данных таблицы `tests`
--

INSERT INTO `tests` (`id`, `block_element`, `author`, `title`) VALUES
(35, 310, 2, 'hystjhytw'),
(36, 311, 2, 'i578ik57'),
(37, 349, 1, 'тест 1'),
(38, 350, 1, 'тест'),
(39, 353, 1, 'jfjhjkgkg'),
(40, 358, 1, 'ghghghghghg'),
(41, 386, 1, 'Основы алгоритмизации и языки программирования'),
(42, 387, 1, ''),
(43, 388, 1, ''),
(44, 389, 1, ''),
(45, 390, 1, ''),
(46, 391, 1, ''),
(47, 392, 1, '1'),
(48, 393, 1, ''),
(49, 394, 1, ''),
(50, 397, 1, ''),
(51, 399, 1, ''),
(52, 401, 1, ''),
(53, 402, 1, ''),
(54, 403, 1, ''),
(55, 404, 1, ''),
(56, 405, 1, ''),
(57, 406, 1, 'dddd'),
(58, 407, 1, 'bgfg'),
(59, 408, 1, ''),
(60, 409, 1, 'rertfert'),
(61, 415, 1, ''),
(62, 418, 1, ''),
(63, 436, 1, 'тест'),
(64, 454, 1, ''),
(65, 455, 1, ''),
(66, 456, 1, ''),
(67, 457, 1, ''),
(68, 458, 1, ''),
(69, 459, 1, ''),
(70, 460, 1, ''),
(71, 461, 1, ''),
(72, 484, 1, ''),
(73, 493, 1, ''),
(74, 498, 1, 'yjrkjir7k'),
(75, 504, 1, 'test'),
(76, 505, 1, 'efer'),
(77, 509, 1, '1'),
(78, 471, 1, 'test'),
(79, 492, 1, 'bhjb'),
(80, 515, 1, 'ьтиптипситясбп'),
(81, 524, 1, 'тест'),
(82, 525, 1, ''),
(83, 528, 1, ''),
(84, 535, 1, '111111111'),
(85, 536, 1, '123123'),
(86, 538, 1, '11111111111111111111111111111111111111111111111111'),
(87, 540, 1, 'ffff'),
(88, 541, 1, 'QBASIC — это'),
(89, 542, 1, 'QBASIC — это'),
(90, 543, 1, 'QBASIC — это'),
(91, 546, 1, NULL),
(92, 547, 1, NULL),
(93, 549, 1, NULL),
(94, 552, 1, NULL),
(95, 553, 1, NULL),
(96, 494, 1, 'test'),
(97, 494, 1, 'test'),
(98, 555, 2, NULL),
(99, 556, 2, NULL),
(100, 557, 2, NULL),
(101, 560, 2, NULL),
(102, 564, 1, NULL),
(103, 569, 2, NULL),
(104, 571, 1, NULL),
(105, 577, 1, NULL),
(106, 578, 1, NULL),
(107, 579, 1, NULL),
(108, 580, 1, NULL),
(109, 585, 1, NULL),
(110, 586, 1, NULL),
(111, 587, 1, NULL),
(112, 531, 1, '2'),
(113, 530, 1, 'bkj'),
(114, 529, 1, 'nkl'),
(115, 590, 1, NULL),
(116, 591, 1, NULL),
(117, 593, 1, NULL),
(118, 594, 1, NULL),
(119, 595, 1, NULL),
(120, 596, 1, NULL),
(121, 597, 1, NULL),
(122, 601, 1, NULL),
(123, 602, 1, NULL),
(124, 603, 1, NULL),
(125, 728, 1, NULL),
(126, 732, 9, NULL),
(127, 736, 9, NULL),
(128, 739, 9, NULL),
(129, 743, 9, NULL),
(130, 747, 9, NULL),
(131, 750, 9, NULL),
(132, 751, 1, NULL),
(133, 754, 9, NULL),
(134, 757, 9, NULL),
(135, 760, 9, NULL),
(136, 765, 9, NULL),
(137, 769, 9, NULL),
(138, 773, 9, NULL),
(139, 776, 9, NULL),
(140, 780, 9, NULL),
(141, 783, 9, NULL),
(142, 789, 9, NULL),
(143, 792, 9, NULL),
(144, 795, 9, NULL),
(145, 799, 9, NULL),
(146, 802, 9, NULL),
(147, 806, 9, NULL),
(148, 809, 9, NULL),
(149, 812, 9, NULL),
(150, 815, 9, NULL),
(151, 818, 9, NULL),
(152, 822, 9, NULL),
(153, 825, 9, NULL),
(154, 828, 9, NULL),
(155, 829, 1, NULL),
(156, 830, 1, NULL),
(157, 831, 1, NULL),
(158, 832, 1, NULL),
(159, 833, 1, NULL),
(160, 836, 1, NULL),
(161, 837, 1, NULL),
(162, 838, 1, NULL),
(163, 839, 1, NULL),
(164, 840, 1, NULL),
(165, 841, 1, NULL),
(166, 842, 1, NULL),
(167, 843, 1, NULL),
(168, 844, 1, NULL),
(169, 845, 1, NULL),
(170, 846, 1, NULL),
(171, 852, 11, NULL),
(172, 857, 9, NULL),
(173, 860, 9, NULL),
(174, 867, 9, NULL),
(175, 873, 9, NULL),
(176, 874, 9, NULL),
(177, 877, 9, NULL),
(178, 880, 9, NULL),
(179, 884, 9, NULL),
(180, 899, 9, NULL),
(181, 902, 9, NULL),
(182, 905, 9, NULL),
(183, 917, 9, NULL),
(184, 918, 9, NULL),
(185, 919, 9, NULL),
(186, 920, 9, NULL),
(187, 921, 9, NULL),
(188, 924, 9, NULL),
(189, 928, 9, NULL),
(190, 932, 9, NULL),
(191, 936, 9, NULL),
(192, 939, 9, NULL),
(193, 942, 9, NULL),
(194, 945, 9, NULL),
(195, 948, 9, NULL),
(196, 951, 9, NULL),
(197, 954, 9, NULL),
(198, 956, 1, NULL),
(199, 958, 1, NULL),
(200, 963, 1, NULL),
(201, 964, 1, NULL),
(202, 968, 1, NULL),
(203, 970, 1, NULL),
(204, 976, 2, NULL),
(205, 955, 1, NULL),
(206, 1002, 1, NULL),
(207, 1039, 1, NULL),
(208, 1047, 11, NULL),
(209, 1065, 11, NULL),
(210, 1079, 11, NULL),
(211, 1084, 11, NULL),
(212, 1105, 1, NULL),
(213, 1121, 1, NULL),
(214, 1131, 1, NULL),
(215, 1132, 1, NULL),
(216, 1274, 1, NULL),
(217, 1275, 1, NULL),
(218, 1283, 1, NULL),
(219, 1285, 1, NULL),
(220, 1286, 1, NULL),
(221, 1287, 1, NULL),
(222, 1288, 1, NULL),
(223, 1302, 1, NULL),
(224, 1318, 1, NULL),
(225, 1340, 1, NULL),
(226, 1368, 1, NULL),
(227, 1369, 1, NULL),
(228, 1373, 1, NULL),
(229, 1376, 1, NULL),
(230, 1377, 1, NULL),
(231, 1378, 1, NULL),
(232, 1385, 1, NULL),
(233, 1389, 1, NULL),
(234, 1393, 1, NULL),
(235, 1394, 1, NULL),
(236, 1400, 2, NULL),
(237, 1402, 1, NULL),
(238, 1406, 1, NULL),
(239, 1407, 1, NULL),
(240, 1413, 1, NULL),
(241, 1425, 2, NULL),
(242, 1444, 1, NULL),
(243, 1471, 1, NULL),
(244, 1472, 1, NULL),
(245, 1477, 1, NULL),
(246, 1481, 1, NULL),
(247, 1482, 1, NULL),
(248, 1498, 1, NULL),
(249, 1505, 1, NULL),
(250, 1512, 1, NULL),
(251, 1513, 1, NULL),
(252, 1519, 1, NULL),
(253, 1526, 1, NULL),
(254, 1527, 1, NULL),
(255, 1543, 1, NULL),
(256, 1545, 1, NULL),
(257, 1560, 1, NULL),
(258, 1570, 1, NULL),
(259, 1588, 1, NULL),
(260, 1590, 1, NULL),
(261, 1605, 1, NULL),
(262, 1702, 1, NULL),
(263, 1703, 1, NULL),
(264, 1764, 1, NULL),
(265, 1770, 1, NULL),
(266, 1826, 1, NULL),
(267, 1840, 1, NULL),
(268, 1841, 1, NULL),
(269, 1853, 1, NULL),
(270, 1861, 1, NULL),
(271, 1887, 1, NULL),
(272, 1896, 1, NULL),
(273, 1897, 1, NULL),
(274, 1900, 1, NULL),
(275, 1901, 1, NULL),
(276, 1902, 1, NULL),
(277, 1903, 1, NULL),
(278, 1904, 1, NULL),
(279, 1905, 1, NULL),
(280, 1907, 1, NULL),
(281, 1913, 1, NULL),
(282, 1943, 1, NULL),
(283, 1944, 1, NULL),
(284, 1956, 1, NULL),
(285, 1960, 1, NULL),
(286, 1981, 1, NULL),
(287, 1997, 1, NULL),
(288, 1998, 1, NULL),
(289, 1999, 1, NULL),
(290, 2000, 1, NULL),
(291, 2001, 1, NULL),
(292, 2002, 1, NULL),
(293, 2003, 1, NULL),
(294, 2004, 1, NULL),
(295, 2005, 1, NULL),
(296, 2008, 1, NULL),
(297, 2009, 1, NULL),
(298, 2011, 1, NULL);

-- --------------------------------------------------------

--
-- Структура таблицы `tests_answers`
--

CREATE TABLE IF NOT EXISTS `tests_answers` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `id_test` int(10) NOT NULL,
  `answer` varchar(255) NOT NULL,
  `is_valid` tinyint(4) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_tests_answers_tests` (`id_test`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=997 ;

--
-- Дамп данных таблицы `tests_answers`
--

INSERT INTO `tests_answers` (`id`, `id_test`, `answer`, `is_valid`) VALUES
(22, 35, 'gtsrth', 0),
(23, 35, 'grtstgsr', 1),
(24, 35, 'gtsrtg', 0),
(25, 36, '58i4', 1),
(26, 36, 'i68i4', 1),
(27, 36, 'u686', 0),
(28, 37, '3', 0),
(29, 37, '4', 1),
(30, 37, '5', 0),
(31, 37, '6', 0),
(32, 38, '3', 0),
(33, 38, '4', 1),
(34, 38, '5', 0),
(35, 38, '6', 0),
(36, 39, '1', 1),
(37, 39, '2', 0),
(38, 39, '3', 0),
(39, 39, '4', 1),
(40, 40, '1', 1),
(41, 40, '2', 0),
(42, 40, '3', 0),
(43, 40, '4', 0),
(44, 40, '5', 0),
(45, 40, '6', 0),
(46, 40, '7', 0),
(47, 40, '8', 0),
(48, 40, '9', 0),
(49, 40, '10', 0),
(50, 41, 'указание на выполнение действий', 1),
(51, 41, 'система правил, описывающая последовательность действий, которые необходимо выполнить для решения задачи', 0),
(52, 41, 'процесс выполнения вычислений, приводящих к решению задачи.', 0),
(53, 42, 'информативность', 0),
(54, 42, 'дискретность', 1),
(55, 42, 'массовость', 1),
(56, 42, 'оперативность', 0),
(57, 42, 'определенность', 0),
(58, 42, 'цикличность', 0),
(59, 42, 'результативность.', 1),
(60, 43, '', 1),
(61, 44, '', 1),
(62, 44, '', 0),
(63, 44, '', 0),
(64, 44, '', 0),
(65, 45, '', 0),
(66, 45, '', 1),
(67, 45, '', 0),
(68, 45, '', 0),
(69, 46, 'система правил, описывающая последовательность действий, которые необходимо выполнить для решения задачи', 0),
(70, 46, 'указание на выполнение действий из заданного набора', 0),
(71, 46, 'область внешней памяти для хранения текстовых, числовых данных и другой информации', 0),
(72, 46, 'последовательность команд, реализующая алгоритм решения задачи.', 1),
(73, 47, '1', 1),
(74, 47, '1', 1),
(75, 47, '1', 1),
(76, 48, 'Отримати освіту', 1),
(77, 48, 'Знати і розуміти основи математики.', 1),
(78, 48, 'Натхнення.', 1),
(79, 48, 'Працювати та отримувати фаховий досвід.', 1),
(80, 48, 'Постійно вдосконалюватись.', 1),
(81, 49, 'Української', 0),
(82, 49, 'Англійської', 1),
(83, 49, 'Мови машиних кодів', 0),
(84, 49, 'Мови програмування', 1),
(85, 50, 'стійкою', 1),
(86, 50, 'безкоштовною', 0),
(87, 50, 'ефективною', 1),
(88, 50, 'гарною', 0),
(89, 50, 'веселою', 0),
(90, 50, 'зручною', 1),
(91, 51, 'Постановка задачі, створення моделі програми.', 0),
(92, 51, 'Планування та вибір методу рішення задачі.', 0),
(93, 51, 'Розробка алгоритму.', 0),
(94, 51, 'Кодування.', 1),
(95, 51, 'Тестування.', 0),
(96, 51, 'Аналіз результатів роботи програми, складання технічної документації.', 0),
(97, 51, 'Подальше супроводження.', 0),
(98, 52, 'система правил, описывающая последовательность действий, которые необходимо выполнить для решения задачи', 1),
(99, 52, 'система правил, описывающая последовательность действий, которые необходимо выполнить для решения задачи', 0),
(100, 52, 'система правил, описывающая последовательность действий, которые необходимо выполнить для решения задачи', 0),
(101, 53, 'пооператорное выполнение программы', 1),
(102, 53, 'пооператорное выполнение программы', 0),
(103, 53, 'пооператорное выполнение программы', 0),
(104, 54, 'пооператорное выполнение программы', 1),
(105, 54, 'поиск файлов на диске', 0),
(106, 54, 'полное выполнение программы.', 0),
(107, 55, ' переводит исходный текст в машинный код', 0),
(108, 55, 'формирует текстовый файл', 0),
(109, 55, 'записывает машинный код в форме загрузочного файла', 1),
(110, 56, 'алгоритмический язык, использующий команды MS-DOS', 1),
(111, 56, 'алгоритмический язык программирования, работающий в режиме интерпретации', 0),
(112, 56, 'алгоритмический язык, работающий только в среде Windows.', 1),
(113, 57, 'fdfsds', 1),
(114, 57, 'gfghgfhfg', 0),
(115, 58, 'fghfghgf', 0),
(116, 58, 'fghgfhf', 1),
(117, 58, 'hgfhfghfgh', 0),
(118, 59, 'буквы латинского алфавита', 1),
(119, 59, 'буквы русского алфавита', 0),
(120, 59, 'буквы греческого алфавита', 0),
(121, 59, 'цифры', 1),
(122, 59, 'знаки арифметических операций: +, -, /, "', 1),
(123, 59, 'знаки операций отношений: >, <, =, >=, <=, <>', 1),
(124, 59, 'специальные знаки:!,?, #, %,&, $,«,«,,.,,', 1),
(125, 59, 'специальные знаки:!,?, #, %,&, $,«,«,,.,,', 0),
(126, 59, 'круглые скобки () и) квадратные скобки.', 1),
(127, 59, '', 0),
(128, 60, 'etert', 0),
(129, 60, 'ertert', 0),
(130, 60, 'ertert', 0),
(131, 60, 'etert', 1),
(132, 60, 'etert', 0),
(133, 60, 'etertet', 0),
(134, 60, 'etert', 0),
(135, 60, 'etert', 0),
(136, 60, 'etrt', 0),
(137, 60, 'erterter', 0),
(138, 60, 'eterterte', 0),
(139, 61, 'числовые;', 1),
(140, 61, 'текстовые:', 1),
(141, 61, 'указатели', 0),
(142, 61, 'типы данных', 0),
(143, 61, 'записи', 0),
(144, 62, '+В, -14, 21.5Е2, 0.05', 1),
(145, 62, ' 3.4*Е8, 45.Е2, -16', 0),
(146, 62, ' 18.2, .05Е1, -18', 1),
(147, 62, '0.05Е5, ±16, -21,5', 0),
(148, 62, '21-Ю2, -18, 45.2', 0),
(149, 63, 'відповідь 1', 0),
(150, 63, 'відповідь 2', 1),
(151, 63, 'відповідь 3', 0),
(152, 64, 'зберігання інформації', 0),
(153, 64, 'розповсюдження інформації', 0),
(154, 64, 'обчислення інформації', 1),
(155, 64, 'демонстрація інформації', 0),
(156, 65, 'додавання', 1),
(157, 65, 'віднімання', 1),
(158, 65, 'множення', 0),
(159, 65, 'ділення', 0),
(160, 66, 'Висока температура.', 1),
(161, 66, 'Занадто яскраве світло.', 0),
(162, 66, 'Швидкий вихід зі строю ламп.', 1),
(163, 66, 'Радиаційне випромінювання.', 0),
(164, 67, 'Використання відновлювальних джерел енергії', 0),
(165, 67, 'Винайдення транзистора.', 1),
(166, 67, 'Зміна конструкції електроної лампи.', 0),
(167, 67, 'Винайдення магнітної стрічки.', 0),
(168, 68, 'Вони менші за транзистори.', 1),
(169, 68, 'Їх виробництво дешевше.', 1),
(170, 68, 'Вони не гріються.', 0),
(171, 68, 'Вони працюють безшумно.', 0),
(172, 68, 'У них значно більша за транзистори швидкодія.', 1),
(173, 69, 'Електроні лампи - інтегральні мікросхеми - транзистори - мікропроцесори.', 0),
(174, 69, 'Транзистори - електроні лампи - мікпропроцесори - інтегральні мікросхеми.', 0),
(175, 69, 'Електроні лампи - мікропроцесори - транзистори - інтегральні мікросхеми.', 0),
(176, 69, 'Електроні лампи - транзистори - інтегральні мікросхеми - мікропроцесори.', 1),
(177, 70, 'Материнська плата.', 1),
(178, 70, 'Прінтер.', 0),
(179, 70, 'Процесор', 1),
(180, 70, 'Монітор', 0),
(181, 70, 'Оперативна пам’ять', 1),
(182, 70, 'Жорсткий диск.', 1),
(183, 70, 'Дисковод.', 0),
(184, 70, '', 0),
(185, 71, 'Материнська плата.', 1),
(186, 71, 'Прінтер.', 0),
(187, 71, 'Процесор', 1),
(188, 71, 'Монітор', 0),
(189, 71, 'Оперативна пам’ять', 1),
(190, 71, 'Жорсткий диск.', 1),
(191, 71, 'Дисковод.', 0),
(192, 72, '', 0),
(193, 73, '1', 1),
(194, 74, 'u467uj467', 0),
(195, 74, 'jru7ui78', 1),
(196, 74, 'ur674', 0),
(197, 75, 'answer 1', 0),
(198, 75, 'answer 2', 1),
(199, 75, 'answer 3', 1),
(200, 76, 'ferfref', 1),
(201, 76, 'rfrefref', 0),
(202, 77, '1', 1),
(203, 77, '1', 1),
(204, 77, '1', 1),
(205, 80, 'лаоправпрвапралпав', 1),
(206, 80, 'оапрлаврпларпла', 0),
(207, 81, 'тест', 1),
(208, 81, '', 0),
(209, 82, 'служебное слово на языке QBASIC', 0),
(210, 82, 'область памяти, в которой хранится некоторое значение', 1),
(211, 82, ' значение регистра.', 0),
(212, 83, ' любая последовательность любых символов', 0),
(213, 83, 'последовательность латинских букв, цифр, специальных знаков (кроме пробел', 1),
(214, 83, 'которая всегда должна начинаться с латинской буквы', 0),
(215, 83, 'последовательность русских, латинских букв, начинающихся с латинской буквы и из специальных знаков, допускающая знак подчеркивания.', 0),
(216, 84, '1212', 1),
(217, 84, '1212', 0),
(218, 84, '21212', 0),
(219, 84, '121212', 0),
(220, 85, ')', 1),
(221, 85, '(', 0),
(222, 86, 'dfsf', 1),
(223, 87, '1', 0),
(224, 87, '2', 0),
(225, 87, '3', 0),
(226, 87, '5', 0),
(227, 87, '4', 1),
(228, 88, 'алгоритмический язык, использующий команды MS-DOS', 1),
(229, 88, 'алгоритмический язык программирования, работающий в режиме интерпретации', 0),
(230, 88, 'алгоритмический язык, работающий только в среде Windows.', 1),
(231, 89, 'QBASIC — это', 1),
(232, 89, 'QBASIC — это', 1),
(233, 90, 'QBASIC — это', 0),
(234, 90, 'QBASIC — это', 0),
(235, 90, 'QBASIC — это', 1),
(236, 91, '1', 1),
(237, 92, 'выфявыфяы', 0),
(238, 92, 'выфв', 0),
(239, 93, 'роа', 1),
(240, 94, 'прикладное программное обеспечение, используемое для создания текстовых документов и работы с ними', 1),
(241, 94, 'прикладное программное обеспечение, используемое для создания таблиц и работы с ними', 0),
(242, 94, 'прикладное программное обеспечение, используемое для автоматизации задач бухгалтерского учета.', 0),
(243, 95, 'именами столбцов', 0),
(244, 95, 'областью пересечения строк и столбцов', 0),
(245, 95, 'номерами строк.', 0),
(246, 98, '"', 1),
(247, 98, '№', 0),
(248, 98, ';', 1),
(249, 98, '%', 0),
(250, 99, '???????????????????????', 0),
(251, 99, '%%%%%%%%%%%%', 1),
(252, 99, '@@@@@@@@@@@', 0),
(253, 99, '################', 0),
(254, 100, '!!!!!!!!!!!!!!!!!!!!!', 0),
(255, 100, '??????????????', 0),
(256, 100, '!?!?!?', 1),
(257, 101, '          ', 0),
(258, 102, '1', 1),
(259, 103, 'тьтьтиьт', 0),
(260, 103, 'тьтиьттьть', 1),
(261, 103, 'ьитьстьтиьт', 0),
(262, 103, 'ьитьтьтьт', 0),
(263, 104, 'ваава', 0),
(264, 105, '100', 0),
(265, 105, '200', 0),
(266, 105, '300', 0),
(267, 105, '400', 0),
(268, 105, '500', 1),
(269, 106, '1000', 0),
(270, 106, '2000', 0),
(271, 106, '3000', 0),
(272, 106, '4000', 0),
(273, 106, '5000', 1),
(274, 107, '1000', 0),
(275, 107, '2000', 0),
(276, 107, '3000', 0),
(277, 107, '4000', 0),
(278, 107, '5000', 1),
(279, 108, 'Відповідь 1', 1),
(280, 108, 'відповідь 2', 0),
(281, 108, 'Відповідь', 0),
(282, 109, 'fgdfg', 0),
(283, 109, 'fgdfg', 1),
(284, 109, 'fgfdgdf', 0),
(285, 110, 'rdgdh', 0),
(286, 110, 'ghghg', 0),
(287, 110, 'cghghf', 0),
(288, 110, 'xghgfh', 0),
(289, 110, 'xghxgfh', 0),
(290, 110, 'ghghfh', 1),
(291, 110, 'gfhghgfhgf', 0),
(292, 110, 'ghxfghfgh', 1),
(293, 111, 'cnjvhn', 0),
(294, 111, 'cnhh', 1),
(295, 111, 'xhjghj', 0),
(296, 111, 'xfjhj', 0),
(297, 111, 'fgjhjhg', 0),
(298, 115, 'cbcvbcvbc', 1),
(299, 115, 'cbcvbcvbc', 0),
(300, 116, 'dfkvmfd', 1),
(301, 116, 'dfkvmfd', 0),
(302, 116, 'dfkvmfd', 0),
(303, 117, '1000', 0),
(304, 117, '1000', 0),
(305, 117, '1000', 0),
(306, 117, '1000', 0),
(307, 117, '1000', 1),
(308, 118, '"6. Название теста - Белая береза Под моим окном Принакрылась снегом, Точно серебром.  На пушистых ветках Снежною каймой Распустились кисти Белой бахромой."', 0),
(309, 118, '"6. Название теста - Белая береза Под моим окном Принакрылась снегом, Точно серебром.  На пушистых ветках Снежною каймой Распустились кисти Белой бахромой."', 1),
(310, 118, '"6. Название теста - Белая береза Под моим окном Принакрылась снегом, Точно серебром.  На пушистых ветках Снежною каймой Распустились кисти Белой бахромой."', 0),
(311, 118, '"6. Название теста - Белая береза Под моим окном Принакрылась снегом, Точно серебром.  На пушистых ветках Снежною каймой Распустились кисти Белой бахромой."', 1),
(312, 119, '3', 0),
(313, 119, '3', 0),
(314, 119, '3', 1),
(315, 120, 'апрапап', 0),
(316, 120, 'апрапап', 1),
(317, 120, 'апрапап', 1),
(318, 120, 'апрапап', 0),
(319, 121, '2121', 0),
(320, 121, '2121', 1),
(321, 122, '3', 0),
(322, 122, '6', 0),
(323, 122, '10', 0),
(324, 122, '4', 1),
(325, 122, '4', 1),
(326, 123, '5', 1),
(327, 123, '1', 0),
(328, 123, '7', 1),
(329, 123, '2', 0),
(330, 124, 'hmhnmnm', 1),
(331, 125, 'процесор', 0),
(332, 125, 'принтер', 0),
(333, 125, 'клавіатура', 1),
(334, 125, 'монітор', 0),
(335, 126, 'Алфавітно-цифрові клавіші.', 1),
(336, 126, 'Керуючі клавіші.', 1),
(337, 126, 'Функціональні клавіші.', 1),
(338, 126, 'Клавіші керування курсором.', 1),
(339, 126, 'Цифрова клавіатура.', 1),
(340, 126, 'Знакові клавіші.', 0),
(341, 127, 'Оптичні', 1),
(343, 127, 'Оптико-механічні', 0),
(344, 128, 'Кулькова ручка.', 1),
(345, 128, 'Олівець', 1),
(346, 128, 'Зошит', 0),
(347, 128, 'Лінійка', 0),
(348, 129, 'веб-камери', 0),
(349, 129, 'відеокарти', 1),
(350, 129, 'аудіокарти', 0),
(351, 129, 'дисковода', 0),
(352, 130, 'принтер', 1),
(353, 130, 'материнська плата', 0),
(354, 130, 'системний блок', 0),
(355, 130, 'монітор', 0),
(356, 131, 'обробки команд виконуваної програми;', 0),
(357, 131, 'читання / запису даних з зовнішнього носія;', 1),
(358, 131, 'зберігання команд виконуваної програми;', 0),
(359, 131, 'довготривалого зберігання інформації;', 0),
(360, 131, 'виведення інформації на папір.', 0),
(361, 132, '1000', 0),
(362, 132, '2000', 0),
(363, 132, '3000', 0),
(364, 132, '4000', 0),
(365, 132, '5000', 1),
(366, 133, 'Як послідовність зображень.', 0),
(367, 133, 'Як послідовність зображень та звуків.', 0),
(368, 133, 'Як послідовність 0 та 1.', 1),
(369, 134, '1000', 0),
(370, 134, '1024', 0),
(371, 134, '1048,58', 1),
(372, 134, '1038,55', 0),
(373, 135, 'Кеш-пам’ять.', 0),
(374, 135, 'Оперативна пам’ять.', 0),
(375, 135, 'Постійна пам’ять.', 1),
(376, 136, 'Оперативна пам’ять.', 0),
(377, 136, 'Рухова пам’ять.', 1),
(378, 136, 'Флеш-пам’ять.', 0),
(379, 136, 'Словесно-логічна пам’ять.', 1),
(380, 136, 'Кеш-пам’ять', 0),
(381, 137, 'Ієрархічні', 1),
(382, 137, 'Субординовані', 0),
(383, 137, 'Кластерні.', 1),
(384, 137, 'Систематизовані', 0),
(385, 137, 'Розподілені', 1),
(386, 138, 'Контролює дії користувача.', 0),
(387, 138, 'Керує апаратними складовими комп’ютера.', 1),
(388, 138, 'Забезпечує взаємодію комп’ютера та користувача.', 1),
(389, 139, 'Системне', 0),
(390, 139, 'Прикладне', 1),
(391, 139, 'Інструментальне', 0),
(392, 140, 'Програмне забезпечення, яке шкодить здоров’ю людини.', 0),
(393, 140, 'Програмне забезпечення, яке забирає вільний час.', 0),
(394, 140, 'Програмне забезпечення, яке перешкоджає нормальній роботі комп’ютера.', 1),
(395, 141, 'Вірус', 0),
(396, 141, 'Бактерія', 1),
(397, 141, 'Драйвер', 1),
(398, 141, 'Троянські програми.', 0),
(399, 141, 'Хробаки.', 0),
(400, 141, 'Змії.', 1),
(401, 142, 'У ЕОМ використовується десяткова система числення.', 1),
(402, 142, 'ЕОМ контролюється попередньо розробленим алгоритмом, який викладений зрозумілим для машини чином.', 0),
(403, 142, 'У пам’яті ЕОМ зберігаються лише дані, а команди, які необхідно виконувати вводяться у ЕОМ програмістом, безпосередньо перед їх виконанням.', 1),
(404, 142, 'Щоб знайти необхідну комірку пам’яті необхідно перебрати всі, поки не буде знайдена потрібна.', 1),
(405, 142, 'Існує можливість розробити програму таким чином, щоб при певних умовах виконувались різні ділянки коду.', 0),
(406, 143, 'Команди обов’язково записуються у сусідні комірки пам’яті.', 1),
(407, 143, 'Дані обов’язково записуються у сусідні комірки пам’яті.', 0),
(408, 143, 'Остання команда має бути командою завершення роботи.', 1),
(409, 143, 'Для виконання операції достатньо знати тип операції.', 0),
(410, 143, 'Дані у пам’яті зберігаються у зручному для людини вигляді.', 0),
(411, 143, 'Керуючий пристрій містить регістр, яку називають “лічильник команд”.', 0),
(412, 143, 'Всі команди виконуються послідовно, перехід на команду, яка не є наступною неможливий.', 0),
(413, 144, 'Висока вартість виробництва комп’ютерів на архітектурі фон Неймана.', 0),
(414, 144, 'Обмеженність швидкості виконання операцій максимально можливою швидкістю передачі інформації від пам’яті до арифметико-логічного пристрою', 1),
(415, 144, 'Виконання програм відбувається тільки поступово.', 1),
(416, 144, 'Для написання складної програми потрібно написати велику кількість команд, адже перелік зрозумілих для машини команд дуже обмежений.', 1),
(417, 145, 'Можливість виконання декількох операцій одночасно.', 0),
(418, 145, 'Команди та дані для їх виконання поступають до арифметико-логічного пристрою різними шляхами.', 1),
(419, 145, 'Відсутній пристрій вводу-ведення.', 0),
(420, 146, 'Модифікована гарвардська архітектура', 0),
(421, 146, 'Розширена гарвардьска архітекутра', 0),
(422, 146, 'Гібридна гарвардська архітектура', 1),
(423, 147, 'Кремній', 1),
(424, 147, 'Плутоній', 0),
(425, 147, 'Пластмаса', 0),
(426, 147, 'Дерево', 0),
(427, 148, 'так', 1),
(428, 148, 'ні', 0),
(429, 148, 'важко відповісти', 0),
(430, 149, '16 000 000 біт', 0),
(431, 149, '100 000 000 біт', 0),
(432, 149, '1 600 000 000 біт', 1),
(433, 149, '2 000 000 біт', 0),
(434, 150, 'Вікна та папки на комп’ютері.', 0),
(435, 150, 'Робочий стіл.', 0),
(436, 150, 'Спеціальна програма (комплекс програм), яка забезпечує взаємодію між користувачем та комп’ютером.', 1),
(437, 151, 'Керує апаратним забезпеченням комп’ютера.', 1),
(438, 151, 'Навчає комп’ютер виконувати певні операції.', 0),
(439, 151, 'Дозволяє обробляти текст.', 0),
(440, 151, 'Примушує комп’ютер виконувати дії, які задає користувач.', 1),
(441, 151, 'Дозволяє встановлювати та запускати на комп’ютері різні програми, які необхідні для користувача.', 1),
(442, 152, 'UNIX', 0),
(443, 152, 'OS/2', 0),
(444, 152, 'Atlas', 0),
(445, 152, 'Windows 3.1', 0),
(446, 152, 'Windows 95', 0),
(447, 152, 'DOS', 1),
(448, 152, 'MacOS', 0),
(449, 152, 'Linux', 0),
(450, 153, 'Вони безкоштовні.', 1),
(451, 153, 'Вони дуже поширені та виробники обладнання підтрумують драйвера у актуальному стані.', 0),
(452, 153, 'Вони оптимізовані для роботи на конкретній архітектурі процесора.', 0),
(453, 153, 'Вони мають вбудовані засоби захисту.', 1),
(454, 154, 'Ядро', 0),
(455, 154, 'Програми для роботи з текстом.', 1),
(456, 154, 'Драйвери', 0),
(457, 154, 'Набір системних утиліт.', 0),
(458, 154, 'Інтерфейс взаємодії з користувачем.', 0),
(459, 154, 'Програми для роботи в мережі інтернет.', 1),
(460, 155, '-1', 1),
(461, 155, '-2', 0),
(462, 155, '-3', 0),
(463, 155, '-4', 0),
(464, 155, '-5', 0),
(465, 155, '-6', 1),
(466, 156, 'информативность', 0),
(467, 156, 'дискретность', 1),
(468, 156, 'массовость', 1),
(469, 156, 'оперативность', 0),
(470, 156, 'определенность', 1),
(471, 156, 'цикличность', 0),
(472, 156, 'результативность.', 1),
(473, 156, 'вапияпвярвп', 0),
(474, 157, 'словесным', 1),
(475, 157, ' словесно-графическим', 0),
(476, 157, 'графическим', 0),
(477, 157, 'формально-словесным', 1),
(478, 157, 'на алгоритмическом языке', 1),
(479, 157, 'последовательностью байтов.', 0),
(480, 158, '1000', 0),
(481, 158, '2000', 0),
(482, 158, '30000', 0),
(483, 158, '5456456', 0),
(484, 158, '5654654', 0),
(485, 158, '4565465', 0),
(486, 158, '4564565', 0),
(487, 158, '5645654654', 0),
(488, 158, '356565465', 0),
(489, 158, '56456456456', 1),
(490, 159, 'система правил, описывающая последовательность действий, которые необходимо выполнить для решения задачи', 0),
(491, 159, 'указание на выполнение действий из заданного набора', 0),
(492, 159, 'область внешней памяти для хранения текстовых, числовых данных и другой информации', 0),
(493, 159, 'последовательность команд, реализующая алгоритм решения задачи.', 1),
(494, 160, 'переводит исходный текст в машинный код', 0),
(495, 160, 'формирует текстовый файл', 0),
(496, 160, 'записывает машинный код в форме загрузочного файла.', 1),
(497, 161, 'алгоритмический язык, использующий команды MS-DOS', 0),
(498, 161, 'алгоритмический язык программирования, работающий в режиме интерпретации', 0),
(499, 161, 'записывает машинный код в форме загрузочного файла.', 1),
(500, 162, 'буквы латинского алфавита', 1),
(501, 162, 'буквы русского алфавита', 0),
(502, 162, 'буквы греческого алфавита', 0),
(503, 162, 'цифры', 1),
(504, 162, 'знаки арифметических операций: +, -, /, "', 1),
(505, 162, 'знаки операций отношений: >, <, =, >=, <=, <>', 1),
(506, 162, 'специальные знаки:!,?, #, %,&, $,«,«,,.,,', 1),
(507, 162, 'круглые скобки () и) квадратные скобки.', 1),
(508, 163, 'буквы латинского алфавита', 1),
(509, 163, 'буквы русского алфавита', 0),
(510, 163, 'буквы греческого алфавита', 0),
(511, 163, 'цифры', 1),
(512, 163, 'знаки арифметических операций: +, -, /, "', 1),
(513, 163, 'знаки операций отношений: >, <, =, >=, <=, <>', 1),
(514, 163, 'специальные знаки:!,?, #, %,&, $,«,«,,.,,', 1),
(515, 163, 'круглые скобки () и) квадратные скобки.', 1),
(516, 164, 'числовые;', 1),
(517, 164, 'текстовые', 1),
(518, 164, 'указатели', 0),
(519, 164, 'типы данных', 0),
(520, 164, 'записи.', 0),
(521, 165, 'целые', 1),
(522, 165, 'с фиксированной точкой', 0),
(523, 165, 'в виде строк', 1),
(524, 165, 'с плавающей точкой.', 1),
(525, 166, '+В, -14, 21.5Е2, 0.05', 1),
(526, 166, ' 3.4*Е8, 45.Е2, -16', 0),
(527, 166, '18.2, .05Е1, -18', 1),
(528, 166, '0.05Е5, ±16, -21,5', 0),
(529, 166, '21-Ю2, -18, 45.2', 0),
(530, 167, 'верно', 1),
(531, 167, 'неверно', 0),
(532, 168, ' чисел', 1),
(533, 168, 'констант', 1),
(534, 168, 'команд MS-DOS', 0),
(535, 168, 'машинных команд', 0),
(536, 168, 'переменных', 1),
(537, 168, 'функций', 1),
(538, 168, 'круглых скобок', 1),
(539, 168, ' квадратных скобок.', 0),
(540, 169, 'служебное слово на языке QBASIC', 0),
(541, 169, 'область памяти, в которой хранится некоторое значение', 1),
(542, 169, ' значение регистра.', 0),
(543, 170, '!', 1),
(544, 170, '№', 1),
(545, 170, ')(', 0),
(546, 170, '+', 0),
(547, 170, '=', 0),
(548, 170, '-', 0),
(549, 170, '+/-', 1),
(550, 170, '*', 1),
(551, 171, 'Можливість зберігати жорстко обмежену кількість структур', 1),
(552, 171, 'Виділення суттєвого неперервного сегмента пам''яті', 1),
(553, 171, 'Складність доступу до окремої структури', 0),
(554, 171, 'Необхідність наперед знати розмір масиву', 1),
(555, 172, 'F', 0),
(556, 172, 'E', 0),
(557, 172, 'D', 0),
(558, 172, 'C', 0),
(559, 172, 'B', 0),
(560, 172, 'A', 0),
(561, 172, '9', 0),
(562, 172, '8', 0),
(563, 172, '7', 1),
(564, 172, '6', 1),
(565, 172, '5', 1),
(566, 172, '4', 1),
(567, 172, '3', 1),
(568, 172, '2', 1),
(569, 172, '1', 1),
(570, 172, '0', 1),
(571, 173, '155', 0),
(572, 173, '255', 1),
(573, 173, '245', 0),
(574, 173, '555', 0),
(575, 174, '10001110', 0),
(576, 174, '10001001', 1),
(577, 174, '01001101', 0),
(578, 174, '10011011', 0),
(579, 175, '415', 0),
(580, 175, '389', 0),
(581, 175, '479', 1),
(582, 175, '513', 0),
(583, 176, '55', 1),
(584, 176, '43', 0),
(585, 176, '87', 0),
(586, 176, '85', 0),
(587, 177, '<p>Рецеп приготування страви.</p>\r\n', 1),
(588, 177, '<p>Порядок евакуації у надзвичайній ситуації.</p>\r\n', 1),
(589, 177, '<p>Прохання матері купити на базарі картоплю та ще якісь овочів.</p>\r\n', 0),
(590, 178, 'Зрозумілість', 1),
(591, 178, 'Компактність', 0),
(592, 178, 'Визначеність', 1),
(593, 178, 'Повторюваність', 0),
(594, 178, 'Масовість', 1),
(595, 178, 'Дискретність', 1),
(596, 178, 'Результативність', 1),
(597, 179, 'Так', 0),
(598, 179, 'Ні', 1),
(599, 179, 'Складно відповісти', 0),
(600, 180, 'Метод батога та пряника', 0),
(601, 180, 'Метод «від балди».', 0),
(602, 180, 'Метод північно-західного кута.', 1),
(603, 181, 'Перед початком розробки програми команда програмістів має виконати певні оздоровчі процедури.', 0),
(604, 181, 'При запуску програма виконує певні процедури над вхідними даними.', 0),
(605, 181, 'Код програми розбивається на логічно завершені ділянки, які виділяються у окремі процедури (функції), кожна з яких здійснює певну цілісну дію.', 1),
(606, 182, 'Так', 1),
(607, 182, 'Ні', 0),
(608, 182, 'Важко відповісти.', 0),
(609, 183, 'Розробка програми починаючи з верхнього рядка і до низу.', 0),
(610, 183, 'Розробка спочатку головної частини програми “логіки”, а потім – всіх модулів нижчих рівнів.', 1),
(611, 183, 'Перед початком написання програми програміст має спуститись у двір подихати свіжим повітрям.', 0),
(612, 184, 'Команда програмістів має здійснити сходження на найближчу гору.', 0),
(613, 184, 'Написання програми починається з кінця.', 0),
(614, 184, 'Спочатку розробляються модулі програми нижчого рівня, потім поєднуються у модулі вищого рівня, які в свою чергу поєднуються у готову програму.', 1),
(615, 185, 'Введення поняття циклів.', 1),
(616, 185, 'Введення поняття операторів умовного переходу.', 1),
(617, 185, 'Поява нових структур даних.', 0),
(618, 186, 'Автомобіль', 0),
(619, 186, 'Креслення автомобіля, по яким програміст може собі його виготовити.', 0),
(620, 186, 'Можливість використати вже готові класи у своїй роботі для спрощення розробки програми.', 1),
(621, 187, 'Знання передаються від батька до сина.', 0),
(622, 187, 'Можливість створити новий клас на основі існуючого з метою розширення функціоналу.', 1),
(623, 187, 'Об’єкт може успадкувати інформацію з іншого об’єкту.', 0),
(624, 188, 'Це мова, яка зрозуміла комп’ютеру та використовується для складання програм.', 1),
(625, 188, 'Це мова, якою користуються програмісти для спілкування між собою.', 0),
(626, 188, 'Це мова, яка використовується програмами при обміні даними.', 0),
(627, 189, 'Вона незрозуміла для програміста на перший погляд.', 1),
(628, 189, 'Їх складно перенести на інший комп’ютер.', 1),
(629, 189, 'Для використання машинної мови потрібно заливати в комп’ютер машинне масло.', 0),
(630, 190, 'Набір команд для програмування.', 0),
(631, 190, 'Спеціальна програма для перекладу команд асемблерної мови на мову машинних кодів.', 1),
(632, 190, 'Перша мова програмування.', 0),
(633, 191, 'того, що комп’ютери сталі розумніші', 0),
(634, 191, 'того, що комп’ютери змогли спілкуватись з програмістом.', 0),
(635, 191, 'того, що програма має більш зрозумілий вигляд, команди основані на звичній людській мові.', 1),
(636, 192, 'Розділення програми на структурні частини.', 1),
(637, 192, 'Технологія програмування стала більш структурованою, чітко визначено з чого почати розробку програми та кожен наступний крок.', 0),
(638, 192, 'Використання структур даних для різних змінних, які логічно поєднанні між собою.', 1),
(639, 193, 'Воно виникло пізніше.', 0),
(640, 193, 'Об’єкт являє собою сукупність структур.', 0),
(641, 193, 'Об’єкт це поєднання структури даних та методів, які видозмінюють ці дані.', 1),
(642, 194, 'JavaScript', 1),
(643, 194, 'C++', 0),
(644, 194, 'PHP', 1),
(645, 194, 'SWIFT', 0),
(646, 194, 'Ruby On Rails', 1),
(647, 194, 'Objective-C', 0),
(648, 195, 'Спільнота програмістів, у якій вони між собою спілкуються та обмінюються досвідом.', 0),
(649, 195, 'Спеціальні програми, які полегшують роботу програміста, допомагають у розробці програми.', 1),
(650, 195, 'Територія, де більше всього працює програмістів.', 0),
(651, 196, 'Використання стандартизованої мови програмування підвищує якість програмного продукту.', 0),
(652, 196, 'Використання нестандартизованої мови програмування перешкоджає продажу програми.', 0),
(653, 196, 'Можливість використання різних середовищ розробки для однієї мови програмування.', 1),
(654, 197, 'Введення можливості – визнання її не рекомендованою для використання  - визнання її застарівшою.', 0),
(655, 197, 'Введення можливості – визнання її не рекомендованою для використання  - визнання її застарівшою – виключення можливості зі стандарту.', 1),
(656, 197, 'Введення можливості – визнання її застарівшою – виключення можливості зі стандарту.', 0),
(657, 197, 'Введення можливості – визнання її не рекомендованою для використання – виключення можливості зі стандарту.', 0),
(658, 197, 'Введення можливості - визнання її застарівшою - визнання її не рекомендованою для використання – виключення можливості зі стандарту.', 0),
(659, 198, 'и ти', 1),
(660, 198, 'итит', 0),
(661, 198, 'чст', 0),
(662, 199, 'hm', 0),
(663, 199, 'gjm', 1),
(664, 199, 'gj', 0),
(665, 200, '7', 1),
(666, 200, '5', 0),
(667, 200, '8', 0),
(668, 201, '1', 0),
(669, 201, '2', 0),
(670, 201, '3', 0),
(671, 201, '4', 1),
(672, 201, '5', 0),
(673, 202, '1', 0),
(674, 202, '2', 0),
(675, 202, '3', 0),
(676, 202, '4', 1),
(677, 202, '5', 1),
(678, 203, '1', 0),
(679, 203, '2', 0),
(680, 203, '3', 0),
(681, 203, '4', 1),
(682, 203, '1', 0),
(683, 203, '2', 0),
(684, 203, '3', 0),
(685, 203, '4', 1),
(686, 204, 'vbc', 0),
(687, 204, 'cvb', 0),
(688, 204, 'vb', 0),
(689, 204, 'cvb', 1),
(690, 204, 'cvb', 0),
(691, 204, 'vb', 0),
(692, 204, 'cvb', 0),
(693, 204, 'v', 0),
(694, 204, 'cvb', 1),
(695, 205, 'n', 1),
(696, 205, 'b', 0),
(697, 206, 'feqf', 0),
(698, 206, 'feraqrfq', 1),
(699, 206, 'fefwe', 0),
(700, 207, 'смсмсмсмс', 0),
(701, 207, 'івавіавіаів', 1),
(702, 207, 'івавіавіа', 0),
(703, 208, 'a', 0),
(704, 208, 'b', 0),
(705, 208, 'c', 1),
(706, 209, 'Не зміниться', 0),
(707, 209, 'Не буде виведено число 24', 1),
(708, 209, 'Останнім буде виведено число 33', 0),
(709, 209, 'Покажчик вийде за межі масиву', 1),
(710, 210, 'Так', 0),
(711, 210, 'Ні - результат 0! потрібно прописати в ній окремо', 1),
(712, 210, 'Ні - програма зациклиться', 1),
(713, 210, 'Ні - факторіал 0 не існує!', 0),
(714, 211, '1 байт', 1),
(715, 211, '2 байти', 0),
(716, 211, '4 байти', 0),
(717, 211, '8 байт', 0),
(718, 212, 'bnbfbgdbvsv', 0),
(719, 212, 'jhgjhfhnhdh', 1),
(720, 212, 'kgjfhgdgd', 0),
(721, 212, 'kmhgnfgbfdvv', 0),
(722, 213, 'словесным', 1),
(723, 213, 'словесно-графическим', 0),
(724, 213, 'графическим', 1),
(725, 213, 'формально-словесным', 1),
(726, 213, 'на алгоритмическом языке', 1),
(727, 213, 'оследовательностью байтов', 0),
(728, 214, 'буквы латинского алфавита', 1),
(729, 214, 'буквы русского алфавита', 0),
(730, 214, 'буквы греческого алфавита', 0),
(731, 214, 'цифры', 1),
(732, 214, 'знаки арифметических операций: +, -, /, "', 1),
(733, 214, 'знаки операций отношений: >, <, =, >=, <=, <>', 1),
(734, 214, 'специальные знаки:!,?, #, %,&, $,«,«,,.,,', 1),
(735, 214, 'круглые скобки () и) квадратные скобки.', 1),
(736, 215, 'правильна', 1),
(737, 215, 'неправильна', 0),
(738, 215, 'пуста', 0),
(739, 215, '????????????????', 0),
(740, 215, '::::::::::::::::::::::::::', 0),
(741, 216, 'sfdsf', 0),
(742, 217, '11', 0),
(743, 217, '12', 1),
(744, 217, '13', 0),
(745, 218, 'asdsd', 0),
(746, 218, 'asas', 1),
(747, 218, 'asasa', 0),
(748, 219, 'eytshfghfgh', 0),
(749, 219, 'sfghfghfghf', 1),
(750, 219, 'gfghfghfghfghgfhgfh', 0),
(751, 220, 'gbfgnfdbgmndbgmfnd', 1),
(752, 220, 'fbgfmdngbfdmngbfmgbf', 0),
(753, 220, 'hjn ghjkghjgkjhfghkjfgkjhfghkjgfhkjfgh', 0),
(754, 221, 'uioyuutyutyuytu', 1),
(755, 221, 'uiyuiu', 0),
(756, 221, 'ygjkhtkjgherkurthkrthkrthkjthkrtjhktrhyrtkyhrtkhrgkhrgkjhgkhrgkhkgm', 1),
(757, 221, 'dkjghgjhkj', 0),
(758, 222, 'hjh', 1),
(759, 223, 'cvhjcgj', 0),
(760, 223, 'cghjcghj', 1),
(761, 223, 'cgjghjhj', 0),
(762, 224, 'Відповідь 1', 0),
(763, 224, 'Відповідь 2', 1),
(764, 224, 'відповідь 3', 0),
(765, 225, 'ddd', 1),
(766, 225, 'ddddd', 0),
(767, 226, 'івапвапавп', 0),
(768, 226, 'віапвапавп', 1),
(769, 226, 'впвапвапвап', 0),
(770, 226, 'вапвапавпапа', 0),
(771, 227, 'івапавп', 0),
(772, 227, 'іапвапвап', 1),
(773, 227, 'впапапап', 0),
(774, 228, 'перша', 0),
(775, 228, 'друга пральна', 1),
(776, 229, '1', 1),
(777, 230, '11', 1),
(778, 230, '222', 0),
(779, 231, '111', 1),
(780, 231, '2222', 0),
(781, 232, 'fyjf', 1),
(782, 232, 'tyuu', 0),
(783, 232, 'eyutu', 0),
(784, 232, 'ryhury', 0),
(785, 233, 'ропо', 0),
(786, 233, 'попро', 0),
(787, 233, 'попоп', 0),
(788, 234, '1', 0),
(789, 234, '2', 0),
(790, 235, '1', 0),
(791, 235, '2', 0),
(792, 236, 'fgh', 0),
(793, 236, 'gh', 1),
(794, 236, 'gh', 0),
(795, 237, 'ddd', 1),
(796, 237, 'ddddd', 0),
(797, 238, 'fhgh', 0),
(798, 238, 'fghgh', 1),
(799, 238, 'fhfghg', 0),
(800, 239, '1', 0),
(801, 239, '2', 1),
(802, 239, '3', 1),
(803, 240, 'пап', 0),
(804, 240, 'апа', 1),
(805, 240, 'апа', 0),
(806, 241, 'вапа', 0),
(807, 241, 'вапавп', 0),
(808, 241, 'вапапа', 0),
(809, 241, 'ыапвапв', 0),
(810, 241, 'авпвапыв', 1),
(811, 241, 'вапвапва', 0),
(812, 241, 'вапвапва', 0),
(813, 241, 'вапвфпв', 1),
(814, 242, '1', 1),
(815, 242, '2', 1),
(816, 242, '3', 1),
(817, 242, '4', 0),
(818, 242, '5', 1),
(819, 242, '6', 0),
(820, 242, '7', 1),
(821, 243, 'bjk', 0),
(822, 243, 'bk', 1),
(823, 244, 'vgh', 0),
(824, 244, 'vh', 1),
(825, 244, 'h', 0),
(826, 245, '1', 1),
(827, 245, '2', 0),
(828, 246, 'апрп', 0),
(829, 246, 'апрапр', 1),
(830, 246, 'арар', 0),
(831, 247, 'ваап', 1),
(832, 247, 'вапап', 0),
(833, 247, 'вапап', 1),
(834, 248, 'yyr', 1),
(835, 248, 'tytyt', 0),
(836, 248, 'dhydfh', 0),
(837, 249, '1', 0),
(838, 249, '2', 1),
(839, 249, '3', 1),
(840, 250, '1', 0),
(841, 250, '2', 1),
(842, 251, 'gdfgdfg', 1),
(843, 251, 'gdfgdfgdfgdfg', 0),
(844, 252, '1', 1),
(845, 253, 'івівів', 1),
(846, 254, 'іцувіцув', 1),
(847, 255, 'ппппп', 1),
(848, 255, 'пппппппп', 0),
(849, 256, 'sdddd', 1),
(850, 257, 'вапрол', 1),
(851, 257, 'апролдж', 0),
(852, 257, 'вапролд', 0),
(853, 258, 'аааа', 1),
(854, 258, 'ааааа', 0),
(855, 258, 'аааа', 0),
(856, 259, 'яс', 1),
(857, 259, 'яс', 1),
(858, 259, 'яс', 1),
(859, 259, 'яс', 0),
(860, 259, 'яс', 0),
(861, 259, 'яс', 0),
(862, 259, 'яс', 0),
(863, 259, 'яс', 0),
(864, 259, 'яс', 0),
(865, 259, 'яс', 0),
(866, 260, 'strretjerj', 1),
(867, 260, 'efawefgwer', 0),
(868, 260, 'wgaegaergae', 0),
(869, 261, 'рррр', 1),
(870, 261, 'рррррр', 0),
(871, 261, 'ррррр', 0),
(872, 262, '4r3rr3r4', 1),
(873, 263, '4444', 1),
(874, 263, '4trfedffedf', 0),
(875, 264, 'dffdfdg', 1),
(876, 264, 'dfdfdg', 0),
(877, 264, 'g', 0),
(878, 264, 'fh', 0),
(879, 264, 'gh', 0),
(880, 264, 'hgh', 0),
(881, 264, 'hg', 0),
(882, 264, 'nn', 0),
(883, 264, 'ghg', 0),
(884, 264, 'nn', 0),
(885, 264, 'gj', 0),
(886, 264, 'khjk', 0),
(887, 264, 'kkjk', 0),
(888, 264, 'kjk', 0),
(889, 264, 'kjhk', 0),
(890, 264, 'kk', 0),
(891, 264, 'uykyuk', 0),
(892, 264, 'kukuuk', 0),
(893, 264, 'kujku', 0),
(894, 264, 'kukuku', 0),
(895, 264, 'kukuk', 0),
(896, 265, 'kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkghjhjjhhjjkhhjhkhjhkjhkkjjkkjklkjjl', 0),
(897, 265, 'tyn', 0),
(898, 265, 'nn', 0),
(899, 265, 'h', 0),
(900, 265, 'nnnnn', 1),
(901, 265, 'nn', 0),
(902, 265, 'nnn', 1),
(903, 265, 'nn', 0),
(904, 265, 'nnn', 0),
(905, 265, 'nn', 1),
(906, 265, 'n', 0),
(907, 265, 'n', 0),
(908, 265, 'nnnn bhbbb nnnj', 0),
(909, 265, 'nn', 0),
(910, 265, 'nnnnnnnnnn', 0),
(911, 266, 'ьрьлрол', 1),
(912, 267, 'так', 1),
(913, 267, 'ні', 0),
(914, 267, 'не знаю', 0),
(917, 268, 'вцв', 1),
(918, 268, 'цуц', 0),
(919, 269, 'неен', 0),
(920, 269, 'кееннн', 1),
(921, 270, '<p>вппаппп</p>\r\n', 0),
(922, 270, '<p>веврнродл</p>\r\n', 1),
(923, 271, '<p>зеленого</p>\r\n', 1),
(924, 271, '<p>красного</p>\r\n', 0),
(925, 271, '<p>малинового</p>\r\n', 0),
(926, 271, '<p>черного</p>\r\n', 0),
(927, 272, '<p>квепроол <img alt="\\large 5^{2}" src="http://latex.codecogs.com/gif.latex?%5Clarge%205%5E%7B2%7D" /></p>\r\n', 1),
(928, 272, '<p>}&amp;</p>\r\n', 0),
(929, 272, '<p>ккккккк</p>\r\n', 0),
(930, 273, '<p><b>asdasdasd</b></p>\r\n', 1),
(931, 274, '<p>пквп</p>\r\n', 1),
(932, 275, '<p><img alt="\\large 2&lt; 5" src="http://latex.codecogs.com/gif.latex?%5Clarge%202%3C%205" /></p>\r\n', 1),
(933, 275, '<p><img alt="\\large n \\to 100" src="http://latex.codecogs.com/gif.latex?%5Clarge%20n%20%5Cto%20100" /></p>\r\n', 0),
(935, 275, '<p><img alt="\\binom{2}{10}" src="http://latex.codecogs.com/gif.latex?%5Cbinom%7B2%7D%7B10%7D" /></p>\r\n', 0),
(936, 275, '<p><img alt="\\binom{2}{10}" src="http://latex.codecogs.com/gif.latex?%5Cbinom%7B2%7D%7B10%7D" /></p>\r\n', 0),
(937, 276, '<p><img alt="2 &lt; 5" src="http://latex.codecogs.com/gif.latex?2%20%3C%205" /></p>\r\n', 0),
(938, 276, '<p><img alt="n \\to 100" src="http://latex.codecogs.com/gif.latex?n%20%5Cto%20100" /></p>\r\n', 0),
(939, 276, '<p><img alt="\\binom{2}{10}" src="http://latex.codecogs.com/gif.latex?%5Cbinom%7B2%7D%7B10%7D" /></p>\r\n', 1),
(940, 277, '<p><img alt="\\left ( 5 \\right )" src="http://latex.codecogs.com/gif.latex?%5Cleft%20%28%205%20%5Cright%20%29" /><br />\r\n<img alt="" src="http://latex.codecogs.com/gif.latex?" /></p>\r\n', 1),
(941, 277, '<p><img alt="\\binom{5}{8}" src="http://latex.codecogs.com/gif.latex?%5Cbinom%7B5%7D%7B8%7D" /></p>\r\n', 0),
(942, 277, '<p><img alt="\\sqrt{9}" src="http://latex.codecogs.com/gif.latex?%5Csqrt%7B9%7D" /></p>\r\n', 0),
(943, 277, '<p><img alt="\\begin{bmatrix} 1 &amp;2 &amp;3 \\\\ 4&amp;5 &amp;6 \\end{bmatrix}" src="http://latex.codecogs.com/gif.latex?%5Cbegin%7Bbmatrix%7D%201%20%262%20%263%20%5C%5C%204%265%20%266%20%5Cend%7Bbmatrix%7D" /></p>\r\n', 0),
(944, 277, '<p><img alt="\\begin{pmatrix} &amp; &amp; \\\\ &amp; &amp; \\end{pmatrix}" src="http://latex.codecogs.com/gif.latex?%5Cbegin%7Bpmatrix%7D%20%26%20%26%20%5C%5C%20%26%20%26%20%5Cend%7Bpmatrix%7D" /> про</p>\r\n', 0),
(945, 277, '<p>олодлд</p>\r\n', 0),
(946, 278, '<p><span class="math-tex">\\(x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\)</span></p>\r\n', 1),
(947, 278, '<p><img alt="\\left \\| 8 \\right \\| 88" src="http://latex.codecogs.com/gif.latex?%5Cleft%20%5C%7C%208%20%5Cright%20%5C%7C%2088" /></p>\r\n', 1),
(948, 278, '<p style="text-align: center;"><strong>&para;</strong></p>\r\n', 0),
(949, 278, '<p><img alt="67 \\sum 6\\cdot 4" src="http://latex.codecogs.com/gif.latex?67%20%5Csum%206%5Ccdot%204" /></p>\r\n', 0),
(950, 279, '<p><img alt="\\begin{bmatrix} &amp; &amp; \\\\ &amp; &amp; \\\\ &amp; &amp; \\\\ &amp; &amp; \\\\ &amp; &amp; \\end{bmatrix}" src="http://latex.codecogs.com/gif.latex?%5Cbegin%7Bbmatrix%7D%20%26%20%26%20%5C%5C%20%26%20%26%20%5C%5C%20%26%20%26%20%5C%5C%20%26%20%26%2', 1),
(951, 279, '<p>dvcb</p>\r\n', 0),
(952, 280, '<p>папапа</p>\r\n', 0),
(953, 280, '<p>k()</p>\r\n', 1),
(954, 280, '<p>цувцувцуцква<sub>аа</sub></p>\r\n', 0),
(955, 281, '<p>yiyu</p>\r\n', 1),
(956, 281, '<p>ukuk</p>\r\n', 0),
(957, 282, '<p>ryhrtyh</p>\r\n', 1),
(958, 283, '<p>teryer</p>\r\n', 1),
(959, 283, '<p>ertrt</p>\r\n', 1),
(960, 284, '<p>cfhfc</p>\r\n', 1),
(961, 285, '<p>1</p>\r\n', 1),
(962, 285, '<p>2</p>\r\n', 0),
(963, 286, '<p><u><strong>органічні та неорганічні</strong></u></p>\r\n', 1),
(964, 286, '<p><u><strong>чисті і брудні</strong></u></p>\r\n', 0),
(965, 286, '<p><u><strong>крихкі і ламкі</strong></u></p>\r\n', 0),
(966, 287, '<p><strong>сммирт ть ьтьтитолтололгопгнр</strong></p>\r\n\r\n<p><strong><img alt="\\left ( \\left \\{ 5 \\right \\} \\right )" height="19" src="http://qa.intita.com/content/module_187/lecture_518/images/20151229173444.gif" width="39" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp', 0),
(967, 287, '<p><span style="color: rgb(34, 34, 34); font-family: ''Helvetica Neue'', Helvetica, Roboto, Arial, sans-serif; font-size: 14.44px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 23.104px; orphans: auto; t', 1),
(968, 288, '<p><span style="color: rgb(34, 34, 34); font-family: ''Helvetica Neue'', Helvetica, Roboto, Arial, sans-serif; font-size: 14.44px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 23.104px; orphans: auto; t', 1),
(969, 288, '<p>віпвіапванрап</p>\r\n', 0),
(970, 289, '<p>гопропро</p>\r\n', 1),
(971, 289, '<p>рпшлорло</p>\r\n', 0),
(972, 290, '<p>рапр</p>\r\n', 1),
(973, 290, '<p>г756г6н7гш7г6ш7шл</p>\r\n', 0),
(974, 291, '<p>56г768г678</p>\r\n', 1),
(975, 291, '<p>6868г678678</p>\r\n', 0),
(976, 291, '<p>6867878678</p>\r\n', 0),
(977, 292, '<p><span class="math-tex">\\(x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\)</span></p>\r\n', 1),
(978, 292, '<p>екгегенг</p>\r\n', 0),
(979, 292, '<p>гнгшнг7шгш</p>\r\n', 0),
(980, 293, '<p><img alt="\\left ( 5 \\right )" src="http://qa.intita.com/content/module_187/lecture_518/images/20151229180635.gif" /></p>\r\n', 0);
INSERT INTO `tests_answers` (`id`, `id_test`, `answer`, `is_valid`) VALUES
(981, 293, '<p><img alt="\\begin{bmatrix} 2 &amp; &amp; &amp; 5&amp; \\\\ &amp; &amp; 4&amp; &amp; \\end{bmatrix}" src="http://qa.intita.com/content/module_187/lecture_518/images/20151229180726.gif" /></p>\r\n', 1),
(982, 293, '<p><img alt="\\begin{bmatrix} &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\\\ &amp; &amp; &amp; &amp; &amp; &amp; &amp; \\end{bmatrix}" src="http://qa.intita.com/content/module_187/lecture_518/images/20151229180745.gif" /></p>\r\n', 0),
(983, 294, '<p>кенке некн</p>\r\n', 1),
(984, 294, '<p>When the teacher adds the test - the test is not displayed correctly</p>\r\n', 1),
(985, 295, '<p>гношлнгл<img alt="\\sum" src="http://qa.intita.com/content/module_187/lecture_518/images/20151229184556.gif" /></p>\r\n', 1),
(986, 295, '<p>иориортл шортогшшшшшшшшшшшшшшргш <span class="math-tex">\\(x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\)</span></p>\r\n', 1),
(987, 295, '<p>амам</p>\r\n', 0),
(988, 295, '<p>ампама</p>\r\n', 0),
(989, 296, '<p>fvfggv</p>\r\n', 1),
(990, 296, '<p>fbvfgvb</p>\r\n', 0),
(991, 296, '<p>fvfv</p>\r\n', 0),
(992, 297, '<p><img alt="\\doteq 7879" src="http://qa.intita.com/content/module_188/lecture_522/images/20160104184146.gif" />ftrf 78 u8y9ho ioykhnkjmb</p>\r\n', 1),
(993, 297, '<p><span style="color:#FF0000;">yguuihoijokp tgfgvuygu<img alt="\\alpha" src="http://qa.intita.com/content/module_188/lecture_522/images/20160104184208.gif" /></span></p>\r\n', 0),
(994, 297, '<p>fdcghfvuly t78ot o7t78o t78</p>\r\n', 0),
(995, 298, '<p><img alt="\\frac{3}{3}" src="http://qa.intita.com/content/module_193/lecture_537/images/20160105182832.gif" /></p>\r\n', 1),
(996, 298, '<p><img alt="\\left ( 3 \\right 3)" src="http://qa.intita.com/content/module_193/lecture_537/images/20160105182851.gif" /></p>\r\n', 0);

-- --------------------------------------------------------

--
-- Структура таблицы `tests_marks`
--

CREATE TABLE IF NOT EXISTS `tests_marks` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `id_user` int(10) NOT NULL,
  `id_test` int(10) NOT NULL,
  `mark` tinyint(1) NOT NULL,
  `time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `FK_tests_marks_user` (`id_user`),
  KEY `FK_tests_marks_tests` (`id_test`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='mark: 0 - failed, 1 - success' AUTO_INCREMENT=939 ;

--
-- Дамп данных таблицы `tests_marks`
--

INSERT INTO `tests_marks` (`id`, `id_user`, `id_test`, `mark`, `time`) VALUES
(14, 51, 35, 1, '2015-10-17 10:50:18'),
(15, 51, 35, 1, '2015-10-17 10:50:18'),
(16, 51, 35, 1, '2015-10-17 10:50:18'),
(17, 51, 35, 1, '2015-10-17 10:50:18'),
(18, 51, 35, 0, '2015-10-17 10:50:18'),
(19, 51, 35, 0, '2015-10-17 10:50:18'),
(20, 51, 35, 1, '2015-10-17 10:50:18'),
(21, 51, 35, 0, '2015-10-17 10:50:18'),
(22, 51, 35, 1, '2015-10-17 10:50:18'),
(23, 51, 36, 0, '2015-10-17 10:50:18'),
(24, 51, 36, 1, '2015-10-17 10:50:18'),
(25, 51, 36, 1, '2015-10-17 10:50:18'),
(26, 51, 36, 1, '2015-10-17 10:50:18'),
(27, 51, 36, 0, '2015-10-17 10:50:18'),
(28, 51, 36, 1, '2015-10-17 10:50:18'),
(29, 51, 36, 1, '2015-10-17 10:50:18'),
(30, 51, 36, 1, '2015-10-17 10:50:18'),
(31, 51, 36, 1, '2015-10-17 10:50:18'),
(32, 51, 36, 1, '2015-10-17 10:50:18'),
(33, 51, 36, 1, '2015-10-17 10:50:18'),
(34, 51, 36, 1, '2015-10-17 10:50:18'),
(35, 51, 36, 0, '2015-10-17 10:50:18'),
(36, 51, 36, 0, '2015-10-17 10:50:18'),
(37, 51, 36, 1, '2015-10-17 10:50:18'),
(38, 51, 35, 1, '2015-10-17 10:50:18'),
(39, 51, 35, 1, '2015-10-17 10:50:18'),
(40, 51, 35, 1, '2015-10-17 10:50:18'),
(41, 51, 35, 0, '2015-10-17 10:50:18'),
(42, 51, 36, 1, '2015-10-17 10:50:18'),
(43, 51, 35, 1, '2015-10-17 10:50:18'),
(44, 51, 35, 0, '2015-10-17 10:50:18'),
(45, 51, 36, 1, '2015-10-17 10:50:18'),
(46, 51, 35, 1, '2015-10-17 10:50:18'),
(47, 51, 35, 1, '2015-10-17 10:50:18'),
(48, 51, 35, 0, '2015-10-17 10:50:18'),
(49, 51, 35, 1, '2015-10-17 10:50:18'),
(50, 51, 48, 1, '2015-10-17 10:50:18'),
(51, 51, 36, 0, '2015-10-17 10:50:18'),
(52, 56, 38, 1, '2015-10-17 10:50:18'),
(53, 56, 38, 0, '2015-10-17 10:50:18'),
(54, 56, 38, 1, '2015-10-17 10:50:18'),
(55, 56, 38, 0, '2015-10-17 10:50:18'),
(56, 121, 41, 1, '2015-10-17 10:50:18'),
(57, 121, 42, 1, '2015-10-17 10:50:18'),
(58, 121, 42, 1, '2015-10-17 10:50:18'),
(59, 121, 42, 0, '2015-10-17 10:50:18'),
(60, 121, 42, 1, '2015-10-17 10:50:18'),
(61, 121, 42, 1, '2015-10-17 10:50:18'),
(62, 121, 42, 0, '2015-10-17 10:50:18'),
(63, 121, 41, 0, '2015-10-17 10:50:18'),
(64, 121, 41, 0, '2015-10-17 10:50:18'),
(65, 121, 45, 1, '2015-10-17 10:50:18'),
(66, 121, 45, 1, '2015-10-17 10:50:18'),
(67, 121, 45, 1, '2015-10-17 10:50:18'),
(68, 121, 52, 0, '2015-10-17 10:50:18'),
(69, 121, 52, 0, '2015-10-17 10:50:18'),
(70, 121, 52, 0, '2015-10-17 10:50:18'),
(71, 121, 52, 0, '2015-10-17 10:50:18'),
(72, 121, 52, 0, '2015-10-17 10:50:18'),
(73, 121, 52, 0, '2015-10-17 10:50:18'),
(74, 121, 53, 1, '2015-10-17 10:50:18'),
(75, 121, 53, 1, '2015-10-17 10:50:18'),
(76, 121, 53, 1, '2015-10-17 10:50:18'),
(77, 121, 53, 1, '2015-10-17 10:50:18'),
(78, 121, 54, 0, '2015-10-17 10:50:18'),
(79, 121, 54, 0, '2015-10-17 10:50:18'),
(80, 121, 54, 1, '2015-10-17 10:50:18'),
(81, 121, 53, 1, '2015-10-17 10:50:18'),
(82, 121, 53, 1, '2015-10-17 10:50:18'),
(83, 121, 56, 0, '2015-10-17 10:50:18'),
(84, 121, 56, 0, '2015-10-17 10:50:18'),
(85, 121, 56, 0, '2015-10-17 10:50:18'),
(86, 121, 59, 0, '2015-10-17 10:50:18'),
(87, 121, 59, 0, '2015-10-17 10:50:18'),
(88, 121, 59, 0, '2015-10-17 10:50:18'),
(89, 121, 59, 0, '2015-10-17 10:50:18'),
(90, 121, 59, 0, '2015-10-17 10:50:18'),
(91, 121, 59, 0, '2015-10-17 10:50:18'),
(92, 121, 61, 1, '2015-10-17 10:50:18'),
(93, 121, 61, 1, '2015-10-17 10:50:18'),
(94, 121, 61, 0, '2015-10-17 10:50:18'),
(95, 121, 61, 0, '2015-10-17 10:50:18'),
(96, 121, 61, 0, '2015-10-17 10:50:18'),
(97, 121, 61, 0, '2015-10-17 10:50:18'),
(98, 121, 61, 1, '2015-10-17 10:50:18'),
(99, 121, 62, 0, '2015-10-17 10:50:18'),
(100, 121, 62, 0, '2015-10-17 10:50:18'),
(101, 121, 62, 0, '2015-10-17 10:50:18'),
(102, 121, 62, 0, '2015-10-17 10:50:18'),
(103, 51, 57, 1, '2015-10-17 10:50:18'),
(104, 51, 57, 0, '2015-10-17 10:50:18'),
(105, 51, 58, 0, '2015-10-17 10:50:18'),
(106, 51, 58, 1, '2015-10-17 10:50:18'),
(107, 51, 58, 0, '2015-10-17 10:50:18'),
(108, 121, 55, 0, '2015-10-17 10:50:18'),
(109, 121, 55, 0, '2015-10-17 10:50:18'),
(110, 121, 55, 1, '2015-10-17 10:50:18'),
(111, 121, 56, 0, '2015-10-17 10:50:18'),
(112, 121, 41, 0, '2015-10-17 10:50:18'),
(113, 51, 41, 1, '2015-10-17 10:50:18'),
(114, 51, 41, 0, '2015-10-17 10:50:18'),
(115, 51, 41, 0, '2015-10-17 10:50:18'),
(116, 51, 45, 1, '2015-10-17 10:50:18'),
(117, 51, 53, 1, '2015-10-17 10:50:18'),
(118, 51, 53, 1, '2015-10-17 10:50:18'),
(119, 51, 53, 1, '2015-10-17 10:50:18'),
(120, 51, 55, 0, '2015-10-17 10:50:18'),
(121, 51, 39, 0, '2015-10-17 10:50:18'),
(122, 51, 63, 0, '2015-10-17 10:50:18'),
(123, 51, 63, 0, '2015-10-17 10:50:18'),
(124, 51, 63, 1, '2015-10-17 10:50:18'),
(125, 51, 63, 0, '2015-10-17 10:50:18'),
(126, 51, 63, 0, '2015-10-17 10:50:18'),
(127, 51, 56, 0, '2015-10-17 10:50:18'),
(128, 51, 56, 0, '2015-10-17 10:50:18'),
(129, 51, 56, 0, '2015-10-17 10:50:18'),
(130, 51, 56, 0, '2015-10-17 10:50:18'),
(131, 51, 56, 0, '2015-10-17 10:50:18'),
(132, 51, 56, 0, '2015-10-17 10:50:18'),
(133, 45, 48, 1, '2015-10-17 10:50:18'),
(134, 45, 49, 0, '2015-10-17 10:50:18'),
(135, 45, 51, 0, '2015-10-17 10:50:18'),
(136, 45, 50, 0, '2015-10-17 10:50:18'),
(137, 45, 48, 1, '2015-10-17 10:50:18'),
(138, 45, 48, 1, '2015-10-17 10:50:18'),
(139, 45, 49, 0, '2015-10-17 10:50:18'),
(140, 45, 48, 1, '2015-10-17 10:50:18'),
(141, 51, 39, 0, '2015-10-17 10:50:18'),
(142, 51, 74, 1, '2015-10-17 10:50:18'),
(143, 51, 48, 1, '2015-10-17 10:50:18'),
(144, 51, 48, 1, '2015-10-17 10:50:18'),
(145, 51, 49, 1, '2015-10-17 10:50:18'),
(146, 51, 50, 0, '2015-10-17 10:50:18'),
(147, 51, 51, 1, '2015-10-17 10:50:18'),
(148, 51, 51, 0, '2015-10-17 10:50:18'),
(149, 51, 64, 1, '2015-10-17 10:50:18'),
(150, 51, 65, 0, '2015-10-17 10:50:18'),
(151, 51, 66, 1, '2015-10-17 10:50:18'),
(152, 51, 67, 1, '2015-10-17 10:50:18'),
(153, 51, 69, 1, '2015-10-17 10:50:18'),
(154, 51, 48, 1, '2015-10-17 10:50:18'),
(155, 51, 49, 0, '2015-10-17 10:50:18'),
(156, 51, 41, 0, '2015-10-17 10:50:18'),
(157, 51, 41, 0, '2015-10-17 10:50:18'),
(158, 51, 42, 0, '2015-10-17 10:50:18'),
(159, 51, 42, 0, '2015-10-17 10:50:18'),
(160, 51, 42, 0, '2015-10-17 10:50:18'),
(161, 51, 41, 0, '2015-10-17 10:50:18'),
(162, 22, 81, 1, '2015-10-17 10:50:18'),
(163, 22, 82, 0, '2015-10-17 10:50:18'),
(164, 22, 82, 0, '2015-10-17 10:50:18'),
(165, 22, 82, 0, '2015-10-17 10:50:18'),
(166, 22, 83, 0, '2015-10-17 10:50:18'),
(167, 22, 83, 0, '2015-10-17 10:50:18'),
(168, 22, 48, 1, '2015-10-17 10:50:18'),
(169, 22, 49, 1, '2015-10-17 10:50:18'),
(170, 22, 51, 1, '2015-10-17 10:50:18'),
(171, 56, 87, 1, '2015-10-17 10:50:18'),
(172, 56, 87, 0, '2015-10-17 10:50:18'),
(173, 56, 87, 0, '2015-10-17 10:50:18'),
(174, 51, 56, 0, '2015-10-17 10:50:18'),
(175, 51, 56, 0, '2015-10-17 10:50:18'),
(176, 51, 56, 0, '2015-10-17 10:50:18'),
(177, 51, 56, 0, '2015-10-17 10:50:18'),
(178, 51, 56, 0, '2015-10-17 10:50:18'),
(179, 51, 88, 0, '2015-10-17 10:50:18'),
(180, 51, 89, 1, '2015-10-17 10:50:18'),
(181, 51, 89, 1, '2015-10-17 10:50:18'),
(182, 51, 89, 1, '2015-10-17 10:50:18'),
(183, 51, 89, 0, '2015-10-17 10:50:18'),
(184, 51, 89, 1, '2015-10-17 10:50:18'),
(185, 51, 90, 1, '2015-10-17 10:50:18'),
(186, 51, 90, 1, '2015-10-17 10:50:18'),
(187, 51, 90, 1, '2015-10-17 10:50:18'),
(188, 22, 91, 1, '2015-10-17 10:50:18'),
(189, 51, 73, 1, '2015-10-17 10:50:18'),
(190, 51, 102, 1, '2015-10-17 10:50:18'),
(191, 51, 102, 1, '2015-10-17 10:50:18'),
(192, 51, 102, 1, '2015-10-17 10:50:18'),
(193, 22, 98, 0, '2015-10-17 10:50:18'),
(194, 22, 99, 1, '2015-10-17 10:50:18'),
(195, 22, 100, 1, '2015-10-17 10:50:18'),
(196, 22, 98, 0, '2015-10-17 10:50:18'),
(197, 22, 101, 0, '2015-10-17 10:50:18'),
(198, 51, 81, 1, '2015-10-17 10:50:18'),
(199, 129, 107, 1, '2015-10-17 10:50:18'),
(200, 129, 108, 1, '2015-10-17 10:50:18'),
(201, 129, 109, 1, '2015-10-17 10:50:18'),
(202, 129, 110, 0, '2015-10-17 10:50:18'),
(203, 129, 111, 0, '2015-10-17 10:50:18'),
(204, 51, 116, 1, '2015-10-17 10:50:18'),
(205, 51, 39, 0, '2015-10-17 10:50:18'),
(210, 51, 74, 0, '2015-10-17 10:50:18'),
(211, 51, 39, 0, '2015-10-17 10:50:18'),
(212, 51, 75, 0, '2015-10-17 10:50:18'),
(217, 51, 76, 0, '2015-10-17 10:50:18'),
(218, 51, 76, 1, '2015-10-17 10:50:18'),
(219, 51, 76, 0, '2015-10-17 10:50:18'),
(220, 51, 118, 0, '2015-10-17 10:50:18'),
(221, 51, 118, 0, '2015-10-17 10:50:18'),
(222, 51, 118, 0, '2015-10-17 10:50:18'),
(223, 51, 56, 1, '2015-10-17 10:50:18'),
(224, 51, 56, 0, '2015-10-17 10:50:18'),
(225, 51, 56, 0, '2015-10-17 10:50:18'),
(226, 51, 56, 1, '2015-10-17 10:50:18'),
(227, 51, 122, 1, '2015-10-17 10:50:18'),
(228, 51, 122, 1, '2015-10-17 10:50:18'),
(229, 51, 122, 1, '2015-10-17 10:50:18'),
(230, 51, 122, 0, '2015-10-17 10:50:18'),
(231, 51, 122, 0, '2015-10-17 10:50:18'),
(232, 51, 123, 1, '2015-10-17 10:50:18'),
(233, 51, 123, 0, '2015-10-17 10:50:18'),
(234, 51, 123, 0, '2015-10-17 10:50:18'),
(235, 51, 123, 0, '2015-10-17 10:50:18'),
(236, 51, 59, 0, '2015-10-17 10:50:18'),
(237, 51, 59, 0, '2015-10-17 10:50:18'),
(238, 51, 59, 0, '2015-10-17 10:50:18'),
(239, 51, 53, 1, '2015-10-17 10:50:18'),
(240, 51, 55, 0, '2015-10-17 10:50:18'),
(241, 51, 53, 1, '2015-10-17 10:50:18'),
(242, 51, 53, 1, '2015-10-17 10:50:18'),
(243, 51, 42, 0, '2015-10-17 10:50:18'),
(244, 51, 42, 1, '2015-10-17 10:50:18'),
(245, 51, 39, 0, '2015-10-17 10:50:18'),
(246, 129, 124, 1, '2015-10-17 10:50:18'),
(247, 45, 51, 1, '2015-10-17 10:50:18'),
(248, 51, 125, 0, '2015-10-17 10:50:18'),
(249, 51, 50, 1, '2015-10-17 10:50:18'),
(250, 51, 142, 1, '2015-10-17 10:50:18'),
(251, 51, 143, 1, '2015-10-17 10:50:18'),
(252, 51, 144, 1, '2015-10-17 10:50:18'),
(253, 51, 145, 1, '2015-10-17 10:50:18'),
(254, 51, 146, 1, '2015-10-17 10:50:18'),
(255, 51, 147, 1, '2015-10-17 10:50:18'),
(256, 51, 148, 1, '2015-10-17 10:50:18'),
(257, 51, 149, 1, '2015-10-17 10:50:18'),
(259, 51, 150, 1, '2015-10-17 10:50:18'),
(261, 51, 151, 1, '2015-10-17 10:50:18'),
(262, 51, 152, 1, '2015-10-17 10:50:18'),
(263, 51, 153, 1, '2015-10-17 10:50:18'),
(264, 51, 154, 1, '2015-10-17 10:50:18'),
(266, 51, 172, 1, '2015-10-17 10:50:18'),
(267, 51, 173, 1, '2015-10-17 10:50:18'),
(268, 51, 174, 1, '2015-10-17 10:50:18'),
(269, 51, 175, 1, '2015-10-17 10:50:18'),
(270, 51, 176, 1, '2015-10-17 10:50:18'),
(271, 51, 177, 1, '2015-10-17 10:50:18'),
(272, 51, 178, 1, '2015-10-17 10:50:18'),
(273, 51, 177, 1, '2015-10-17 10:50:18'),
(274, 51, 179, 1, '2015-10-17 10:50:18'),
(275, 51, 180, 1, '2015-10-17 10:50:18'),
(276, 51, 181, 1, '2015-10-17 10:50:18'),
(277, 51, 182, 1, '2015-10-17 10:50:18'),
(278, 51, 183, 1, '2015-10-17 10:50:18'),
(279, 51, 184, 1, '2015-10-17 10:50:18'),
(280, 51, 185, 1, '2015-10-17 10:50:18'),
(281, 51, 186, 1, '2015-10-17 10:50:18'),
(282, 51, 187, 1, '2015-10-17 10:50:18'),
(283, 51, 188, 1, '2015-10-17 10:50:18'),
(284, 51, 192, 1, '2015-10-17 10:50:18'),
(285, 51, 190, 1, '2015-10-17 10:50:18'),
(286, 51, 189, 1, '2015-10-17 10:50:18'),
(287, 51, 191, 1, '2015-10-17 10:50:18'),
(288, 51, 193, 1, '2015-10-17 10:50:18'),
(289, 51, 194, 1, '2015-10-17 10:50:18'),
(290, 51, 195, 1, '2015-10-17 10:50:18'),
(291, 51, 196, 1, '2015-10-17 10:50:18'),
(292, 51, 197, 1, '2015-10-17 10:50:18'),
(293, 132, 48, 0, '2015-10-17 10:50:18'),
(294, 132, 48, 0, '2015-10-17 10:50:18'),
(295, 132, 48, 0, '2015-10-17 10:50:18'),
(296, 132, 64, 1, '2015-10-17 10:50:18'),
(297, 52, 48, 1, '2015-10-17 10:50:18'),
(298, 44, 64, 1, '2015-10-17 10:50:18'),
(299, 44, 65, 0, '2015-10-17 10:50:18'),
(300, 44, 65, 1, '2015-10-17 10:50:18'),
(301, 44, 66, 1, '2015-10-17 10:50:18'),
(302, 44, 67, 1, '2015-10-17 10:50:18'),
(303, 44, 68, 1, '2015-10-17 10:50:18'),
(304, 44, 68, 0, '2015-10-17 10:50:18'),
(305, 44, 68, 1, '2015-10-17 10:50:18'),
(306, 44, 69, 1, '2015-10-17 10:50:18'),
(307, 52, 49, 0, '2015-10-17 10:50:18'),
(308, 52, 49, 1, '2015-10-17 10:50:18'),
(309, 52, 50, 1, '2015-10-17 10:50:18'),
(310, 52, 64, 1, '2015-10-17 10:50:18'),
(311, 52, 65, 0, '2015-10-17 10:50:18'),
(312, 52, 65, 1, '2015-10-17 10:50:18'),
(313, 22, 50, 1, '2015-10-17 10:50:18'),
(314, 133, 64, 1, '2015-10-17 10:50:18'),
(315, 45, 64, 1, '2015-10-17 10:50:18'),
(316, 45, 49, 0, '2015-10-17 10:50:18'),
(317, 45, 49, 0, '2015-10-17 10:50:18'),
(318, 45, 49, 0, '2015-10-17 10:50:18'),
(319, 45, 49, 1, '2015-10-17 10:50:18'),
(320, 45, 50, 0, '2015-10-17 10:50:18'),
(321, 45, 50, 0, '2015-10-17 10:50:18'),
(322, 45, 50, 1, '2015-10-17 10:50:18'),
(323, 45, 71, 0, '2015-10-17 10:50:18'),
(324, 45, 71, 0, '2015-10-17 10:50:18'),
(325, 45, 71, 1, '2015-10-17 10:50:18'),
(326, 22, 48, 1, '2015-10-17 10:50:18'),
(327, 123, 48, 1, '2015-10-17 10:50:18'),
(328, 134, 150, 1, '2015-10-17 10:50:18'),
(329, 22, 48, 1, '2015-10-17 10:50:18'),
(330, 22, 49, 0, '2015-10-17 10:50:18'),
(331, 22, 49, 0, '2015-10-17 10:50:18'),
(332, 22, 49, 1, '2015-10-17 10:50:18'),
(333, 51, 71, 0, '2015-10-17 10:50:18'),
(334, 51, 71, 1, '2015-10-17 10:50:18'),
(335, 51, 126, 1, '2015-10-17 10:50:18'),
(336, 51, 128, 1, '2015-10-17 10:50:18'),
(337, 51, 129, 1, '2015-10-17 10:50:18'),
(338, 123, 48, 1, '2015-10-17 10:50:18'),
(339, 123, 49, 1, '2015-10-17 10:50:18'),
(340, 51, 207, 1, '2015-10-17 10:50:18'),
(341, 22, 213, 1, '2015-10-17 10:50:18'),
(342, 22, 214, 1, '2015-10-17 10:50:18'),
(343, 22, 215, 1, '2015-10-17 10:50:18'),
(344, 22, 215, 0, '2015-10-17 10:50:18'),
(345, 22, 215, 0, '2015-10-17 10:50:18'),
(346, 22, 214, 0, '2015-10-17 10:50:18'),
(347, 166, 64, 1, '2015-10-17 10:50:18'),
(348, 166, 188, 1, '2015-10-17 10:50:18'),
(349, 166, 189, 1, '2015-10-17 10:50:18'),
(350, 166, 190, 0, '2015-10-17 10:50:18'),
(351, 166, 190, 1, '2015-10-17 10:50:18'),
(352, 166, 191, 1, '2015-10-17 10:50:18'),
(353, 166, 192, 1, '2015-10-17 10:50:18'),
(354, 166, 193, 0, '2015-10-17 10:50:18'),
(355, 166, 193, 1, '2015-10-17 10:50:18'),
(356, 166, 194, 0, '2015-10-17 10:50:18'),
(357, 166, 194, 0, '2015-10-17 10:50:18'),
(358, 166, 194, 0, '2015-10-17 10:50:18'),
(359, 166, 194, 0, '2015-10-17 10:50:18'),
(360, 166, 194, 0, '2015-10-17 10:50:18'),
(361, 166, 194, 0, '2015-10-17 10:50:18'),
(362, 166, 194, 0, '2015-10-17 10:50:18'),
(363, 166, 194, 0, '2015-10-17 10:50:18'),
(364, 166, 194, 0, '2015-10-17 10:50:18'),
(365, 166, 195, 1, '2015-10-17 10:50:18'),
(366, 166, 196, 1, '2015-10-17 10:50:18'),
(367, 166, 213, 0, '2015-10-17 10:50:18'),
(368, 166, 213, 0, '2015-10-17 10:50:18'),
(369, 22, 48, 1, '2015-10-17 10:50:18'),
(370, 22, 153, 0, '2015-10-17 10:50:18'),
(371, 167, 48, 1, '2015-10-17 10:50:18'),
(372, 167, 49, 1, '2015-10-17 10:50:18'),
(373, 167, 50, 1, '2015-10-17 10:50:18'),
(374, 167, 64, 1, '2015-10-17 10:50:18'),
(375, 129, 48, 1, '2015-10-17 10:50:18'),
(376, 129, 49, 1, '2015-10-17 10:50:18'),
(377, 129, 49, 0, '2015-10-17 10:50:18'),
(378, 129, 49, 0, '2015-10-17 10:50:18'),
(379, 129, 49, 0, '2015-10-17 10:50:18'),
(380, 51, 222, 1, '2015-10-17 10:50:18'),
(381, 22, 231, 1, '2015-10-17 10:50:18'),
(382, 22, 232, 0, '2015-10-17 10:50:18'),
(383, 22, 232, 1, '2015-10-17 10:50:18'),
(384, 22, 233, 0, '2015-10-17 10:50:18'),
(385, 22, 233, 0, '2015-10-17 10:50:18'),
(386, 22, 233, 0, '2015-10-17 10:50:18'),
(387, 53, 188, 1, '2015-10-17 10:50:18'),
(388, 53, 189, 1, '2015-10-17 10:50:18'),
(389, 53, 190, 0, '2015-10-17 10:50:18'),
(390, 53, 190, 1, '2015-10-17 10:50:18'),
(391, 53, 191, 1, '2015-10-17 10:50:18'),
(392, 52, 181, 0, '2015-10-17 10:50:18'),
(393, 52, 181, 1, '2015-10-17 10:50:18'),
(394, 52, 180, 1, '2015-10-17 10:50:18'),
(395, 52, 182, 1, '2015-10-17 10:50:18'),
(396, 52, 176, 0, '2015-10-17 10:50:18'),
(397, 52, 174, 1, '2015-10-17 10:50:18'),
(398, 189, 191, 0, '2015-10-17 10:50:18'),
(399, 189, 191, 0, '2015-10-17 10:50:18'),
(400, 189, 191, 1, '2015-10-17 10:50:18'),
(401, 167, 208, 1, '2015-10-17 10:50:18'),
(402, 45, 150, 1, '2015-10-17 10:50:18'),
(403, 45, 151, 1, '2015-10-17 10:50:18'),
(404, 45, 152, 0, '2015-10-17 10:50:18'),
(405, 45, 152, 0, '2015-10-17 10:50:18'),
(406, 45, 152, 0, '2015-10-17 10:50:18'),
(407, 45, 152, 1, '2015-10-17 10:50:18'),
(408, 45, 153, 0, '2015-10-17 10:50:18'),
(409, 45, 153, 0, '2015-10-17 10:50:18'),
(410, 45, 153, 0, '2015-10-17 10:50:18'),
(411, 45, 65, 1, '2015-10-17 10:50:18'),
(412, 2, 133, 0, '2015-10-17 10:50:18'),
(413, 2, 133, 0, '2015-10-17 10:50:18'),
(414, 2, 133, 1, '2015-10-17 10:50:18'),
(415, 2, 231, 1, '2015-10-17 10:50:18'),
(416, 167, 209, 1, '2015-10-17 10:50:18'),
(417, 205, 48, 0, '2015-10-17 10:50:18'),
(418, 205, 48, 0, '2015-10-17 10:50:18'),
(419, 205, 48, 0, '2015-10-17 10:50:18'),
(420, 205, 48, 0, '2015-10-17 10:50:18'),
(421, 205, 48, 1, '2015-10-17 10:50:18'),
(422, 205, 49, 0, '2015-10-17 10:50:18'),
(423, 205, 49, 0, '2015-10-17 10:50:18'),
(424, 205, 49, 0, '2015-10-17 10:50:18'),
(425, 205, 49, 1, '2015-10-17 10:50:18'),
(426, 106, 208, 0, '2015-10-17 10:50:18'),
(427, 106, 208, 0, '2015-10-17 10:50:18'),
(428, 106, 208, 1, '2015-10-17 10:50:18'),
(429, 106, 209, 0, '2015-10-17 10:50:18'),
(430, 106, 209, 0, '2015-10-17 10:50:18'),
(431, 106, 209, 0, '2015-10-17 10:50:18'),
(432, 106, 209, 1, '2015-10-17 10:50:18'),
(433, 106, 210, 1, '2015-10-17 10:50:18'),
(434, 106, 211, 1, '2015-10-17 10:50:18'),
(435, 167, 208, 0, '2015-10-17 10:50:18'),
(436, 167, 208, 0, '2015-10-17 10:50:18'),
(437, 167, 208, 1, '2015-10-17 10:50:18'),
(438, 167, 208, 1, '2015-10-17 10:50:18'),
(439, 167, 210, 0, '2015-10-17 10:50:18'),
(440, 167, 210, 0, '2015-10-17 10:50:18'),
(441, 167, 210, 0, '2015-10-17 10:50:18'),
(442, 167, 210, 0, '2015-10-17 10:50:18'),
(443, 167, 210, 0, '2015-10-17 10:50:18'),
(444, 167, 210, 0, '2015-10-17 10:50:18'),
(445, 167, 210, 0, '2015-10-17 10:50:18'),
(446, 167, 210, 0, '2015-10-17 10:50:18'),
(447, 167, 210, 0, '2015-10-17 10:50:18'),
(448, 167, 210, 0, '2015-10-17 10:50:18'),
(449, 167, 210, 0, '2015-10-17 10:50:18'),
(450, 167, 210, 1, '2015-10-17 10:50:18'),
(451, 22, 208, 0, '2015-10-17 10:50:18'),
(452, 22, 208, 1, '2015-10-17 10:50:18'),
(453, 167, 208, 0, '2015-10-17 10:50:18'),
(454, 167, 208, 0, '2015-10-17 10:50:18'),
(455, 167, 208, 1, '2015-10-17 10:50:18'),
(456, 167, 208, 1, '2015-10-17 10:50:18'),
(457, 51, 208, 1, '2015-10-17 10:50:18'),
(458, 22, 208, 1, '2015-10-17 10:50:18'),
(459, 51, 208, 1, '2015-10-17 10:50:18'),
(460, 206, 48, 0, '2015-10-17 10:50:18'),
(461, 206, 48, 0, '2015-10-17 10:50:18'),
(462, 206, 48, 1, '2015-10-17 10:50:18'),
(463, 206, 49, 1, '2015-10-17 10:50:18'),
(464, 206, 48, 1, '2015-10-17 10:50:18'),
(465, 224, 208, 1, '2015-10-17 10:50:18'),
(466, 167, 208, 1, '2015-10-17 10:50:18'),
(467, 167, 208, 1, '2015-10-17 10:50:18'),
(468, 167, 208, 1, '2015-10-17 10:50:18'),
(469, 167, 208, 1, '2015-10-17 10:50:18'),
(470, 22, 208, 1, '2015-10-17 10:50:18'),
(471, 22, 208, 1, '2015-10-17 10:50:18'),
(472, 22, 208, 1, '2015-10-17 10:50:18'),
(473, 22, 208, 1, '2015-10-17 10:50:18'),
(474, 51, 208, 1, '2015-10-17 10:50:18'),
(475, 51, 208, 1, '2015-10-17 10:50:18'),
(476, 51, 208, 1, '2015-10-17 10:50:18'),
(477, 22, 49, 0, '2015-10-17 10:50:18'),
(478, 22, 49, 0, '2015-10-17 10:50:18'),
(479, 22, 49, 0, '2015-10-17 10:50:18'),
(480, 22, 49, 0, '2015-10-17 10:50:18'),
(481, 22, 49, 0, '2015-10-17 10:50:18'),
(482, 22, 49, 0, '2015-10-17 11:12:00'),
(483, 22, 49, 0, '2015-10-17 11:12:05'),
(484, 22, 49, 1, '2015-10-17 11:12:28'),
(485, 22, 49, 1, '2015-10-17 16:31:49'),
(486, 235, 48, 1, '2015-10-18 08:39:06'),
(487, 22, 48, 0, '2015-10-19 09:40:30'),
(488, 22, 48, 1, '2015-10-19 09:40:37'),
(489, 22, 48, 0, '2015-10-19 09:41:03'),
(490, 22, 48, 0, '2015-10-19 09:41:10'),
(491, 22, 48, 0, '2015-10-19 09:47:18'),
(492, 22, 48, 0, '2015-10-19 09:47:22'),
(493, 22, 48, 0, '2015-10-19 09:47:46'),
(494, 22, 48, 1, '2015-10-19 09:47:51'),
(495, 22, 49, 0, '2015-10-19 10:00:03'),
(496, 22, 49, 0, '2015-10-19 10:00:10'),
(497, 22, 49, 1, '2015-10-19 10:00:22'),
(498, 22, 48, 0, '2015-10-19 13:09:33'),
(499, 22, 48, 1, '2015-10-19 13:09:42'),
(500, 22, 49, 0, '2015-10-22 09:50:31'),
(501, 22, 49, 0, '2015-10-22 09:50:38'),
(502, 22, 49, 0, '2015-10-22 09:50:39'),
(503, 22, 49, 1, '2015-10-22 09:50:57'),
(504, 22, 48, 0, '2015-10-22 12:50:56'),
(505, 22, 48, 0, '2015-10-22 13:14:08'),
(506, 38, 256, 1, '2015-10-23 08:21:04'),
(507, 242, 48, 1, '2015-10-23 10:03:55'),
(508, 242, 49, 1, '2015-10-23 10:04:15'),
(509, 38, 257, 1, '2015-10-24 08:04:42'),
(510, 38, 257, 0, '2015-10-24 08:04:58'),
(511, 38, 258, 1, '2015-11-04 14:29:02'),
(512, 38, 48, 1, '2015-11-04 17:44:13'),
(513, 51, 65, 1, '2015-11-05 11:32:46'),
(514, 51, 68, 1, '2015-11-05 15:45:37'),
(515, 51, 69, 1, '2015-11-05 15:45:59'),
(516, 51, 69, 1, '2015-11-05 15:47:00'),
(517, 51, 69, 1, '2015-11-05 15:49:33'),
(518, 51, 64, 1, '2015-11-05 15:50:16'),
(519, 51, 65, 0, '2015-11-05 15:50:27'),
(520, 51, 65, 0, '2015-11-05 15:50:34'),
(521, 51, 65, 1, '2015-11-05 15:50:40'),
(522, 51, 66, 0, '2015-11-05 15:50:53'),
(523, 51, 66, 0, '2015-11-05 15:51:01'),
(524, 51, 66, 0, '2015-11-05 15:51:16'),
(525, 51, 66, 1, '2015-11-05 15:51:21'),
(526, 51, 67, 1, '2015-11-05 15:51:34'),
(527, 51, 68, 0, '2015-11-05 15:51:46'),
(528, 51, 68, 0, '2015-11-05 15:51:52'),
(529, 51, 68, 0, '2015-11-05 15:51:57'),
(530, 51, 68, 0, '2015-11-05 15:52:09'),
(531, 51, 68, 0, '2015-11-05 15:52:13'),
(532, 51, 68, 0, '2015-11-05 15:52:19'),
(533, 51, 68, 0, '2015-11-05 15:52:23'),
(534, 51, 68, 0, '2015-11-05 15:52:27'),
(535, 51, 68, 0, '2015-11-05 15:52:32'),
(536, 51, 68, 0, '2015-11-05 15:52:37'),
(537, 51, 68, 0, '2015-11-05 15:52:42'),
(538, 51, 69, 1, '2015-11-05 15:52:52'),
(539, 51, 71, 1, '2015-11-05 15:53:09'),
(540, 51, 125, 1, '2015-11-05 15:53:23'),
(541, 51, 69, 0, '2015-11-05 17:24:10'),
(542, 51, 69, 0, '2015-11-05 17:24:16'),
(543, 51, 69, 1, '2015-11-05 17:24:21'),
(544, 51, 68, 1, '2015-11-05 17:27:28'),
(545, 51, 69, 0, '2015-11-05 17:27:50'),
(546, 51, 69, 1, '2015-11-05 17:27:56'),
(547, 51, 66, 0, '2015-11-05 17:28:20'),
(548, 51, 66, 0, '2015-11-05 17:28:25'),
(549, 51, 64, 1, '2015-11-05 17:28:52'),
(550, 51, 65, 1, '2015-11-05 17:29:13'),
(551, 51, 66, 1, '2015-11-05 17:29:38'),
(552, 51, 69, 0, '2015-11-05 17:29:55'),
(553, 51, 69, 1, '2015-11-05 17:30:00'),
(554, 51, 71, 1, '2015-11-05 17:32:10'),
(555, 51, 69, 1, '2015-11-05 17:33:01'),
(556, 2, 69, 1, '2015-11-05 17:35:05'),
(557, 2, 65, 0, '2015-11-05 17:42:58'),
(558, 2, 65, 0, '2015-11-05 17:43:35'),
(559, 2, 65, 0, '2015-11-05 17:43:43'),
(560, 2, 65, 1, '2015-11-05 17:44:05'),
(561, 2, 66, 0, '2015-11-05 17:44:18'),
(562, 2, 66, 0, '2015-11-05 17:44:24'),
(563, 2, 66, 0, '2015-11-05 17:44:36'),
(564, 2, 66, 1, '2015-11-05 17:44:49'),
(565, 2, 67, 0, '2015-11-05 17:45:05'),
(566, 51, 69, 1, '2015-11-05 17:50:53'),
(567, 51, 69, 1, '2015-11-06 08:40:21'),
(568, 51, 69, 1, '2015-11-06 08:45:29'),
(569, 38, 49, 1, '2015-11-09 10:56:02'),
(570, 38, 50, 1, '2015-11-09 13:40:23'),
(571, 38, 259, 0, '2015-11-11 11:07:53'),
(572, 38, 263, 1, '2015-11-17 10:33:30'),
(573, 51, 48, 1, '2015-11-18 08:51:02'),
(574, 51, 48, 1, '2015-11-18 08:51:43'),
(575, 51, 48, 1, '2015-11-18 08:56:21'),
(576, 51, 48, 1, '2015-11-18 08:56:41'),
(577, 22, 48, 1, '2015-11-18 08:59:02'),
(578, 22, 48, 1, '2015-11-18 08:59:02'),
(579, 51, 48, 1, '2015-11-18 09:18:24'),
(580, 2, 48, 1, '2015-11-18 09:20:31'),
(581, 51, 48, 1, '2015-11-18 09:21:32'),
(582, 252, 48, 1, '2015-11-18 09:23:05'),
(583, 51, 48, 0, '2015-11-18 09:24:39'),
(584, 22, 48, 1, '2015-11-21 09:56:05'),
(585, 22, 49, 1, '2015-11-23 13:44:14'),
(586, 56, 48, 1, '2015-11-23 13:59:31'),
(587, 56, 49, 1, '2015-11-23 13:59:48'),
(588, 38, 266, 1, '2015-11-24 13:29:27'),
(589, 51, 48, 1, '2015-11-24 18:06:09'),
(590, 51, 49, 1, '2015-11-24 18:06:21'),
(591, 38, 267, 1, '2015-11-24 19:18:53'),
(592, 51, 49, 1, '2015-11-28 12:15:51'),
(593, 51, 49, 1, '2015-11-30 12:58:54'),
(594, 38, 279, 1, '2015-12-14 14:26:31'),
(595, 38, 281, 0, '2015-12-14 14:32:31'),
(596, 38, 281, 0, '2015-12-14 14:33:04'),
(597, 38, 281, 0, '2015-12-14 14:33:56'),
(598, 38, 281, 0, '2015-12-14 15:11:53'),
(599, 38, 152, 0, '2015-12-16 19:41:22'),
(600, 38, 125, 0, '2015-12-17 12:02:14'),
(601, 38, 125, 0, '2015-12-17 12:02:27'),
(602, 22, 49, 0, '2015-12-17 16:57:20'),
(603, 22, 49, 1, '2015-12-17 16:57:27'),
(604, 253, 48, 1, '2015-12-17 18:43:05'),
(605, 253, 49, 1, '2015-12-17 18:43:13'),
(606, 22, 48, 1, '2015-12-19 10:02:36'),
(607, 22, 49, 1, '2015-12-19 10:02:48'),
(608, 22, 280, 0, '2015-12-19 10:09:21'),
(609, 22, 280, 1, '2015-12-19 10:09:26'),
(610, 22, 282, 1, '2015-12-19 10:12:26'),
(611, 22, 283, 1, '2015-12-19 10:13:29'),
(612, 22, 283, 1, '2015-12-19 10:20:01'),
(613, 22, 283, 1, '2015-12-19 12:10:35'),
(614, 38, 133, 1, '2015-12-19 13:06:51'),
(615, 38, 135, 1, '2015-12-19 13:07:12'),
(616, 38, 150, 0, '2015-12-19 13:08:52'),
(617, 38, 150, 0, '2015-12-19 13:09:05'),
(618, 38, 150, 1, '2015-12-19 13:09:18'),
(619, 38, 150, 1, '2015-12-19 13:09:36'),
(620, 38, 172, 0, '2015-12-19 13:10:44'),
(621, 38, 284, 1, '2015-12-21 07:49:09'),
(622, 2, 285, 1, '2015-12-21 09:56:34'),
(623, 38, 285, 0, '2015-12-21 09:57:07'),
(624, 38, 285, 1, '2015-12-21 09:57:11'),
(625, 38, 286, 0, '2015-12-24 12:37:17'),
(626, 38, 286, 1, '2015-12-24 12:37:25'),
(627, 38, 286, 0, '2015-12-24 12:37:50'),
(628, 38, 286, 1, '2015-12-24 12:37:57'),
(629, 38, 48, 1, '2015-12-24 12:40:56'),
(630, 22, 48, 1, '2015-12-24 12:42:00'),
(631, 2, 48, 1, '2015-12-24 12:53:05'),
(632, 38, 286, 1, '2015-12-24 12:53:17'),
(633, 22, 286, 1, '2015-12-24 13:24:20'),
(634, 22, 286, 1, '2015-12-25 12:57:41'),
(635, 38, 71, 1, '2015-12-25 16:51:39'),
(636, 253, 50, 1, '2015-12-28 12:10:03'),
(637, 261, 48, 0, '2015-12-28 12:24:16'),
(638, 261, 48, 1, '2015-12-28 12:24:21'),
(639, 261, 49, 1, '2015-12-28 12:24:30'),
(640, 261, 50, 1, '2015-12-28 12:47:14'),
(641, 261, 64, 0, '2015-12-28 12:48:38'),
(642, 261, 64, 1, '2015-12-28 12:48:48'),
(643, 261, 65, 0, '2015-12-28 12:51:49'),
(644, 261, 65, 1, '2015-12-28 12:51:54'),
(645, 261, 66, 1, '2015-12-28 12:52:29'),
(646, 261, 67, 0, '2015-12-28 12:52:40'),
(647, 261, 67, 1, '2015-12-28 12:52:44'),
(648, 261, 68, 0, '2015-12-28 12:53:00'),
(649, 261, 68, 0, '2015-12-28 12:53:05'),
(650, 261, 68, 0, '2015-12-28 12:53:09'),
(651, 261, 68, 0, '2015-12-28 12:53:15'),
(652, 261, 68, 0, '2015-12-28 12:53:29'),
(653, 261, 68, 0, '2015-12-28 12:53:34'),
(654, 261, 68, 1, '2015-12-28 12:54:34'),
(655, 261, 69, 1, '2015-12-28 12:54:48'),
(656, 261, 71, 1, '2015-12-28 12:55:06'),
(657, 38, 49, 1, '2015-12-28 20:29:20'),
(658, 38, 49, 1, '2015-12-28 20:29:28'),
(659, 38, 286, 1, '2015-12-28 20:31:51'),
(660, 38, 286, 1, '2015-12-28 20:32:09'),
(661, 38, 292, 1, '2015-12-29 18:05:52'),
(662, 38, 296, 1, '2015-12-29 18:55:05'),
(663, 261, 296, 1, '2015-12-29 18:57:39'),
(664, 261, 296, 1, '2015-12-29 18:58:59'),
(665, 38, 297, 1, '2016-01-04 18:42:38'),
(666, 38, 297, 0, '2016-01-04 18:44:04'),
(667, 38, 297, 1, '2016-01-04 18:44:10'),
(668, 38, 297, 1, '2016-01-04 18:45:09'),
(669, 38, 297, 1, '2016-01-04 18:45:21'),
(670, 38, 297, 1, '2016-01-04 18:45:21'),
(671, 38, 297, 1, '2016-01-04 18:45:21'),
(672, 38, 297, 1, '2016-01-04 18:45:29'),
(673, 38, 297, 1, '2016-01-04 18:45:30'),
(674, 38, 297, 1, '2016-01-04 18:45:30'),
(675, 38, 48, 1, '2016-01-04 18:46:10'),
(676, 38, 48, 1, '2016-01-04 18:46:11'),
(677, 38, 48, 1, '2016-01-04 18:46:11'),
(678, 38, 48, 1, '2016-01-04 18:46:11'),
(679, 38, 48, 1, '2016-01-04 18:46:11'),
(680, 38, 48, 1, '2016-01-04 18:46:11'),
(681, 38, 48, 1, '2016-01-04 18:46:16'),
(682, 38, 48, 1, '2016-01-04 18:46:16'),
(683, 38, 48, 1, '2016-01-04 18:46:16'),
(684, 38, 48, 1, '2016-01-04 18:46:16'),
(685, 38, 48, 1, '2016-01-04 18:46:50'),
(686, 38, 48, 1, '2016-01-04 18:46:51'),
(687, 38, 50, 1, '2016-01-04 18:47:17'),
(688, 38, 50, 1, '2016-01-04 18:47:18'),
(689, 38, 50, 1, '2016-01-04 18:47:18'),
(690, 38, 50, 1, '2016-01-04 18:47:18'),
(691, 38, 50, 1, '2016-01-04 18:47:18'),
(692, 38, 50, 1, '2016-01-04 18:47:21'),
(693, 38, 50, 1, '2016-01-04 18:47:22'),
(694, 38, 50, 1, '2016-01-04 18:47:22'),
(695, 38, 50, 1, '2016-01-04 18:47:22'),
(696, 38, 50, 1, '2016-01-04 18:47:22'),
(697, 38, 50, 1, '2016-01-04 18:47:22'),
(698, 38, 64, 0, '2016-01-04 18:49:19'),
(699, 38, 64, 0, '2016-01-04 18:49:19'),
(700, 38, 64, 0, '2016-01-04 18:49:19'),
(701, 38, 64, 0, '2016-01-04 18:49:19'),
(702, 38, 64, 0, '2016-01-04 18:49:19'),
(703, 38, 64, 0, '2016-01-04 18:49:22'),
(704, 38, 64, 0, '2016-01-04 18:49:22'),
(705, 38, 64, 0, '2016-01-04 18:49:22'),
(706, 38, 64, 0, '2016-01-04 18:49:23'),
(707, 38, 64, 0, '2016-01-04 18:49:23'),
(708, 38, 64, 1, '2016-01-04 18:49:28'),
(709, 38, 64, 1, '2016-01-04 18:49:28'),
(710, 38, 64, 1, '2016-01-04 18:49:29'),
(711, 38, 64, 1, '2016-01-04 18:51:22'),
(712, 38, 64, 1, '2016-01-04 18:51:23'),
(713, 38, 64, 1, '2016-01-04 18:51:23'),
(714, 38, 64, 1, '2016-01-04 18:51:23'),
(715, 38, 64, 1, '2016-01-04 18:51:23'),
(716, 38, 64, 1, '2016-01-04 18:51:23'),
(717, 38, 64, 1, '2016-01-04 18:51:28'),
(718, 38, 64, 1, '2016-01-04 18:51:28'),
(719, 38, 64, 1, '2016-01-04 18:55:38'),
(720, 38, 65, 1, '2016-01-04 18:55:56'),
(721, 38, 66, 0, '2016-01-04 18:56:06'),
(722, 38, 66, 0, '2016-01-04 18:56:09'),
(723, 38, 66, 0, '2016-01-04 18:56:10'),
(724, 38, 66, 0, '2016-01-04 18:56:10'),
(725, 38, 66, 0, '2016-01-04 18:56:10'),
(726, 38, 66, 0, '2016-01-04 18:56:10'),
(727, 38, 66, 0, '2016-01-04 18:56:11'),
(728, 38, 66, 0, '2016-01-04 19:00:53'),
(729, 38, 64, 1, '2016-01-04 19:01:07'),
(730, 38, 64, 1, '2016-01-04 19:01:27'),
(731, 38, 64, 1, '2016-01-04 19:01:28'),
(732, 38, 48, 1, '2016-01-04 19:02:39'),
(733, 261, 125, 1, '2016-01-04 19:14:40'),
(734, 261, 125, 1, '2016-01-04 19:14:42'),
(735, 261, 125, 1, '2016-01-04 19:14:42'),
(736, 261, 125, 1, '2016-01-04 19:14:42'),
(737, 261, 125, 1, '2016-01-04 19:14:42'),
(738, 261, 125, 1, '2016-01-04 19:14:42'),
(739, 261, 125, 1, '2016-01-04 19:14:42'),
(740, 261, 125, 1, '2016-01-04 19:14:43'),
(741, 261, 125, 1, '2016-01-04 19:14:48'),
(742, 261, 125, 1, '2016-01-04 19:14:48'),
(743, 261, 125, 1, '2016-01-04 19:14:50'),
(744, 261, 125, 1, '2016-01-04 19:14:50'),
(745, 261, 125, 1, '2016-01-04 19:14:50'),
(746, 261, 125, 1, '2016-01-04 19:14:50'),
(747, 261, 125, 1, '2016-01-04 19:14:50'),
(748, 261, 125, 1, '2016-01-04 19:14:50'),
(749, 261, 125, 1, '2016-01-04 19:14:51'),
(750, 261, 125, 1, '2016-01-04 19:14:51'),
(751, 261, 125, 1, '2016-01-04 19:14:51'),
(752, 261, 125, 1, '2016-01-04 19:14:51'),
(753, 261, 125, 1, '2016-01-04 19:14:51'),
(754, 261, 125, 1, '2016-01-04 19:14:51'),
(755, 261, 125, 1, '2016-01-04 19:15:10'),
(756, 261, 125, 1, '2016-01-04 19:15:24'),
(757, 261, 125, 1, '2016-01-04 19:15:25'),
(758, 261, 125, 1, '2016-01-04 19:15:25'),
(759, 261, 125, 1, '2016-01-04 19:15:25'),
(760, 261, 125, 1, '2016-01-04 19:15:25'),
(761, 261, 125, 1, '2016-01-04 19:15:27'),
(762, 261, 125, 1, '2016-01-04 19:16:09'),
(763, 261, 125, 1, '2016-01-04 19:16:10'),
(764, 261, 125, 1, '2016-01-04 19:16:10'),
(765, 261, 125, 1, '2016-01-04 19:16:10'),
(766, 261, 125, 1, '2016-01-04 19:16:42'),
(767, 261, 125, 1, '2016-01-04 19:16:43'),
(768, 261, 125, 1, '2016-01-04 19:16:43'),
(769, 261, 125, 1, '2016-01-04 19:16:43'),
(770, 261, 125, 1, '2016-01-04 19:16:45'),
(771, 261, 126, 0, '2016-01-04 19:17:33'),
(772, 261, 126, 0, '2016-01-04 19:17:34'),
(773, 261, 126, 0, '2016-01-04 19:17:34'),
(774, 261, 126, 0, '2016-01-04 19:17:34'),
(775, 261, 126, 0, '2016-01-04 19:17:34'),
(776, 261, 126, 0, '2016-01-04 19:17:34'),
(777, 261, 126, 0, '2016-01-04 19:17:34'),
(778, 261, 126, 0, '2016-01-04 19:17:34'),
(779, 261, 126, 0, '2016-01-04 19:17:43'),
(780, 261, 126, 0, '2016-01-04 19:17:43'),
(781, 261, 126, 0, '2016-01-04 19:17:43'),
(782, 261, 126, 0, '2016-01-04 19:17:43'),
(783, 261, 126, 0, '2016-01-04 19:17:43'),
(784, 261, 126, 0, '2016-01-04 19:17:43'),
(785, 261, 126, 0, '2016-01-04 19:17:43'),
(786, 261, 126, 0, '2016-01-04 19:17:43'),
(787, 261, 126, 0, '2016-01-04 19:17:43'),
(788, 261, 126, 0, '2016-01-04 19:17:43'),
(789, 261, 126, 0, '2016-01-04 19:17:44'),
(790, 261, 126, 0, '2016-01-04 19:17:44'),
(791, 261, 126, 0, '2016-01-04 19:17:44'),
(792, 261, 126, 0, '2016-01-04 19:17:44'),
(793, 261, 126, 0, '2016-01-04 19:17:44'),
(794, 261, 126, 0, '2016-01-04 19:17:44'),
(795, 261, 126, 0, '2016-01-04 19:18:04'),
(796, 261, 125, 1, '2016-01-04 19:18:42'),
(797, 261, 125, 1, '2016-01-04 19:18:44'),
(798, 261, 125, 1, '2016-01-04 19:18:44'),
(799, 261, 125, 1, '2016-01-04 19:18:44'),
(800, 261, 125, 1, '2016-01-04 19:18:44'),
(801, 261, 125, 1, '2016-01-04 19:18:44'),
(802, 261, 125, 1, '2016-01-04 19:18:44'),
(803, 261, 125, 1, '2016-01-04 19:18:44'),
(804, 261, 125, 1, '2016-01-04 19:18:49'),
(805, 261, 126, 0, '2016-01-04 19:19:33'),
(806, 261, 126, 0, '2016-01-04 19:19:34'),
(807, 261, 126, 0, '2016-01-04 19:19:34'),
(808, 261, 126, 0, '2016-01-04 19:19:34'),
(809, 261, 126, 0, '2016-01-04 19:19:34'),
(810, 261, 126, 0, '2016-01-04 19:19:34'),
(811, 261, 126, 0, '2016-01-04 19:19:38'),
(812, 261, 126, 0, '2016-01-04 19:19:40'),
(813, 261, 126, 0, '2016-01-04 19:19:40'),
(814, 261, 126, 0, '2016-01-04 19:19:41'),
(815, 261, 126, 0, '2016-01-04 19:19:41'),
(816, 261, 126, 0, '2016-01-04 19:19:41'),
(817, 261, 126, 0, '2016-01-04 19:19:52'),
(818, 261, 126, 0, '2016-01-04 19:20:17'),
(819, 261, 126, 0, '2016-01-04 19:20:19'),
(820, 261, 126, 0, '2016-01-04 19:20:19'),
(821, 261, 126, 0, '2016-01-04 19:20:19'),
(822, 261, 126, 0, '2016-01-04 19:20:19'),
(823, 261, 126, 0, '2016-01-04 19:20:19'),
(824, 261, 126, 0, '2016-01-04 19:20:19'),
(825, 261, 126, 0, '2016-01-04 19:20:21'),
(826, 261, 126, 0, '2016-01-04 19:20:27'),
(827, 261, 126, 0, '2016-01-04 19:20:28'),
(828, 261, 126, 0, '2016-01-04 19:20:28'),
(829, 261, 126, 0, '2016-01-04 19:20:28'),
(830, 261, 126, 0, '2016-01-04 19:20:32'),
(831, 261, 126, 1, '2016-01-04 19:20:54'),
(832, 261, 126, 1, '2016-01-04 19:20:55'),
(833, 261, 126, 1, '2016-01-04 19:20:55'),
(834, 261, 126, 1, '2016-01-04 19:20:55'),
(835, 261, 126, 1, '2016-01-04 19:20:55'),
(836, 261, 126, 1, '2016-01-04 19:20:55'),
(837, 261, 126, 1, '2016-01-04 19:20:55'),
(838, 261, 126, 1, '2016-01-04 19:21:03'),
(839, 261, 126, 1, '2016-01-04 19:21:04'),
(840, 261, 126, 1, '2016-01-04 19:21:04'),
(841, 261, 126, 1, '2016-01-04 19:21:04'),
(842, 261, 126, 1, '2016-01-04 19:21:04'),
(843, 261, 126, 1, '2016-01-04 19:21:04'),
(844, 261, 126, 1, '2016-01-04 19:21:04'),
(845, 261, 126, 1, '2016-01-04 19:21:04'),
(846, 261, 126, 1, '2016-01-04 19:21:04'),
(847, 261, 126, 1, '2016-01-04 19:21:04'),
(848, 261, 126, 1, '2016-01-04 19:21:04'),
(849, 261, 126, 1, '2016-01-04 19:21:04'),
(850, 261, 126, 1, '2016-01-04 19:21:04'),
(851, 261, 126, 1, '2016-01-04 19:21:04'),
(852, 261, 126, 1, '2016-01-04 19:21:24'),
(853, 261, 126, 1, '2016-01-04 19:21:24'),
(854, 261, 126, 1, '2016-01-04 19:21:24'),
(855, 261, 126, 1, '2016-01-04 19:21:24'),
(856, 261, 126, 1, '2016-01-04 19:21:24'),
(857, 261, 126, 1, '2016-01-04 19:21:24'),
(858, 261, 126, 1, '2016-01-04 19:21:24'),
(859, 261, 126, 1, '2016-01-04 19:21:24'),
(860, 261, 126, 1, '2016-01-04 19:21:24'),
(861, 261, 126, 1, '2016-01-04 19:21:24'),
(862, 261, 126, 1, '2016-01-04 19:21:24'),
(863, 261, 126, 1, '2016-01-04 19:21:24'),
(864, 261, 126, 1, '2016-01-04 19:22:34'),
(865, 261, 126, 1, '2016-01-04 19:22:50'),
(866, 261, 126, 1, '2016-01-04 19:22:52'),
(867, 261, 126, 1, '2016-01-04 19:22:53'),
(868, 261, 126, 0, '2016-01-04 19:28:49'),
(869, 2, 48, 1, '2016-01-05 10:04:43'),
(870, 2, 48, 1, '2016-01-05 10:04:43'),
(871, 2, 48, 1, '2016-01-05 10:04:43'),
(872, 2, 48, 1, '2016-01-05 10:04:43'),
(873, 2, 48, 1, '2016-01-05 10:04:43'),
(874, 2, 48, 1, '2016-01-05 10:04:44'),
(875, 2, 48, 1, '2016-01-05 10:04:44'),
(876, 2, 48, 1, '2016-01-05 10:04:45'),
(877, 2, 48, 1, '2016-01-05 10:04:45'),
(878, 2, 48, 1, '2016-01-05 10:04:47'),
(879, 2, 48, 1, '2016-01-05 10:04:47'),
(880, 2, 48, 1, '2016-01-05 10:04:47'),
(881, 2, 48, 1, '2016-01-05 10:04:47'),
(882, 2, 48, 1, '2016-01-05 10:05:14'),
(883, 2, 48, 1, '2016-01-05 10:05:14'),
(884, 2, 48, 1, '2016-01-05 10:05:15'),
(885, 2, 48, 1, '2016-01-05 10:05:15'),
(886, 2, 48, 1, '2016-01-05 10:05:15'),
(887, 2, 48, 1, '2016-01-05 10:05:15'),
(888, 2, 50, 0, '2016-01-05 10:05:33'),
(889, 2, 50, 0, '2016-01-05 10:05:34'),
(890, 2, 50, 0, '2016-01-05 10:05:34'),
(891, 2, 50, 0, '2016-01-05 10:05:34'),
(892, 2, 50, 0, '2016-01-05 10:05:34'),
(893, 2, 50, 0, '2016-01-05 10:05:34'),
(894, 2, 50, 0, '2016-01-05 10:05:34'),
(895, 2, 50, 0, '2016-01-05 10:05:36'),
(896, 2, 50, 0, '2016-01-05 10:05:37'),
(897, 2, 50, 0, '2016-01-05 10:05:37'),
(898, 2, 50, 0, '2016-01-05 10:05:37'),
(899, 2, 50, 0, '2016-01-05 10:05:37'),
(900, 2, 50, 0, '2016-01-05 10:05:37'),
(901, 2, 50, 0, '2016-01-05 10:05:37'),
(902, 2, 50, 0, '2016-01-05 10:05:37'),
(903, 2, 50, 0, '2016-01-05 10:05:37'),
(904, 2, 50, 0, '2016-01-05 10:05:38'),
(905, 2, 50, 0, '2016-01-05 10:05:38'),
(906, 2, 50, 0, '2016-01-05 10:05:38'),
(907, 2, 50, 0, '2016-01-05 10:05:38'),
(908, 2, 50, 0, '2016-01-05 10:05:38'),
(909, 2, 50, 1, '2016-01-05 10:05:47'),
(910, 2, 50, 1, '2016-01-05 10:05:47'),
(911, 2, 50, 1, '2016-01-05 10:05:47'),
(912, 2, 50, 1, '2016-01-05 10:05:47'),
(913, 2, 50, 1, '2016-01-05 10:05:48'),
(914, 2, 50, 1, '2016-01-05 10:05:48'),
(915, 2, 50, 1, '2016-01-05 10:05:48'),
(916, 2, 50, 1, '2016-01-05 10:05:48'),
(917, 2, 50, 1, '2016-01-05 10:05:48'),
(918, 2, 50, 1, '2016-01-05 10:05:48'),
(919, 2, 50, 1, '2016-01-05 10:05:48'),
(920, 2, 50, 1, '2016-01-05 10:05:48'),
(921, 2, 50, 1, '2016-01-05 10:05:48'),
(922, 2, 50, 1, '2016-01-05 10:05:48'),
(923, 2, 50, 1, '2016-01-05 10:05:48'),
(924, 2, 50, 1, '2016-01-05 10:05:48'),
(925, 2, 50, 1, '2016-01-05 10:05:48'),
(926, 2, 50, 1, '2016-01-05 10:05:48'),
(927, 2, 50, 1, '2016-01-05 10:05:48'),
(928, 2, 50, 1, '2016-01-05 10:05:48'),
(929, 45, 66, 0, '2016-01-05 15:51:50'),
(930, 45, 66, 1, '2016-01-05 15:51:56'),
(931, 38, 298, 1, '2016-01-05 18:29:20'),
(932, 2, 286, 1, '2016-01-06 09:43:29'),
(933, 38, 298, 1, '2016-01-09 09:30:06'),
(934, 38, 298, 0, '2016-01-09 09:35:27'),
(935, 38, 285, 1, '2016-01-09 11:19:35'),
(936, 38, 285, 1, '2016-01-09 11:19:36'),
(937, 38, 285, 1, '2016-01-09 11:19:36'),
(938, 38, 285, 1, '2016-01-09 11:19:37');

-- --------------------------------------------------------

--
-- Структура таблицы `trainer_student`
--

CREATE TABLE IF NOT EXISTS `trainer_student` (
  `trainer` int(10) NOT NULL,
  `student` int(10) NOT NULL,
  `start_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `end_time` datetime DEFAULT NULL,
  KEY `FK_trainer_student_teacher` (`trainer`),
  KEY `FK_trainer_student_user` (`student`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `trainer_student`
--

INSERT INTO `trainer_student` (`trainer`, `student`, `start_time`, `end_time`) VALUES
(1, 55, '2015-12-01 15:11:14', NULL),
(1, 51, '2015-12-01 15:11:14', NULL),
(2, 52, '2015-12-01 15:11:14', NULL),
(3, 54, '2015-12-01 15:11:14', NULL),
(4, 11, '2015-12-01 15:11:14', NULL),
(5, 54, '2015-12-01 15:11:14', NULL),
(6, 22, '2015-12-01 15:11:14', NULL);

-- --------------------------------------------------------

--
-- Структура таблицы `translate`
--

CREATE TABLE IF NOT EXISTS `translate` (
  `id_record` int(10) NOT NULL AUTO_INCREMENT,
  `id` int(11) NOT NULL,
  `language` varchar(16) NOT NULL,
  `translation` text NOT NULL,
  PRIMARY KEY (`id_record`),
  KEY `FK_messages_sourcemessages` (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2517 ;

--
-- Дамп данных таблицы `translate`
--

INSERT INTO `translate` (`id_record`, `id`, `language`, `translation`) VALUES
(2, 2, 'ua', 'Про нас'),
(3, 3, 'ua', 'Як розпочати навчання?'),
(4, 4, 'ua', 'детальніше ...'),
(5, 5, 'ua', 'ПРОГРАМУЙ МАЙБУТНЄ!'),
(6, 6, 'ua', 'Важлива інформація про навчання разом з нами'),
(7, 7, 'ua', 'П’ять кроків до здійснення твоїх мрій'),
(8, 8, 'ua', 'ПОЧАТИ  />'),
(9, 9, 'ua', 'Реєстрація в один клік'),
(10, 10, 'ua', 'Введіть дані в форму нижче'),
(11, 11, 'ua', 'розширена реєстрація'),
(12, 12, 'ua', 'Зареєструватись через соцмережі'),
(13, 13, 'ua', 'ПОЧАТИ />'),
(14, 14, 'ua', 'Електронна пошта'),
(15, 15, 'ua', 'Пароль'),
(16, 16, 'ua', 'Курси'),
(17, 17, 'ua', 'Форум'),
(18, 18, 'ua', 'Про нас'),
(19, 19, 'ua', 'Вхід'),
(20, 20, 'ua', 'Вихід'),
(21, 21, 'ua', 'Викладачі'),
(22, 22, 'ua', 'Вихід'),
(23, 23, 'ua', 'телефон:  +38 0432 52 82 67'),
(24, 24, 'ua', 'тел. моб. +38 067 431 20 10'),
(25, 25, 'ua', 'ел. пошта: intita.hr@gmail.com'),
(26, 26, 'ua', 'скайп: int.ita'),
(27, 27, 'ua', 'Ми гарантуємо тобі отримання пропозиції працевлаштування<br>\r\nпісля успішного завершення навчання!'),
(28, 28, 'ua', 'Не упусти свій шанс змінити світ - отримай якісну та сучасну освіту<br>\r\nі стань класним спеціалістом!'),
(29, 29, 'ua', 'Один рік наполегливого та цікавого навчання - і ти станеш професійним програмістом<br>\r\nготовим працювати в індустрії інформаційних технологій!\r\n'),
(30, 30, 'ua', 'Хочеш стати висококласним спеціалістом? Приймай вірне рішення - навчайся разом з нами!<br>\r\nМи працюємо на результат!'),
(31, 31, 'ua', 'Не втрачай свій шанс на творчу, цікаву, гідну та перспективну працю –<br>\r\n плануй своє професійне майбутнє вже сьогодні!'),
(32, 32, 'ua', 'Про що мрієш ти?'),
(33, 33, 'ua', 'Навчання майбутнього'),
(34, 34, 'ua', 'Важливі питання'),
(35, 35, 'ua', 'Можливо, це свобода жити\r\nсвоїм життям? Самостійно керувати\r\nвласним часом з можливістю\r\nзаробляти, улюбленою справою\r\nі отримувати задоволення\r\nвід сучасної професії?'),
(36, 36, 'ua', 'На відміну від традиційних\r\nзакладів, ми навчаємо \r\nне задля оцінок. Ми працюємо\r\nіндивідуально з кожним \r\nстудентом, щоб досягти 100%\r\nзасвоєння необхідних знань.'),
(37, 37, 'ua', 'Ми пропонуємо кожному\r\nнашому випускнику гарантоване\r\nотримання пропозиції\r\nпрацевлаштування протягом 4-6-ти\r\nмісяців після успішного\r\nзавершення навчання.'),
(38, 38, 'ua', 'Реєстрація на сайті'),
(39, 39, 'ua', 'Вибір курсу чи модуля'),
(40, 40, 'ua', 'Проплата за навчання'),
(41, 41, 'ua', 'Освоєння матеріалу'),
(42, 42, 'ua', 'Завершення курсу'),
(43, 43, 'ua', 'крок'),
(44, 44, 'ua', 'Щоб отримати доступ до курсів та пройти безкоштовні модулі і заняття зареєструйся на сайті. Реєстрація дозволить тобі оцінити якість та зручність нашого продукту, який стане для тебе надійним партнером і порадником в професійній самореалізації.'),
(45, 45, 'ua', 'Щоб стати спеціалістом певного напрямку та рівня (отримати професійну спеціалізацію), вибери для проходження відповідний курс. Якщо Тебе цікавить виключно поглиблення знань в певному напрямку інформаційних технологій, то вибери відповідний модуль для проходження.'),
(46, 46, 'ua', 'Щоб розпочати проходження курсу чи модуля вибери схему оплати (вся сума за курс, оплата модулів, оплата потриместрово, помісячно тощо) та здійсни оплату зручним Тобі способом (схему оплати курсу чи модуля можна змінювати, також можлива помісячна оплата в кредит).'),
(47, 47, 'ua', 'Вивчення матеріалу можливе шляхом читання тексту чи/і перегляду відео для кожного заняття.\r\nПід час проходження заняття виконуй Проміжні тестові завдання. По завершенню кожного заняття виконуй Підсумкове тестове завдання. Кожен модуль завершується Індивідуальним проектом чи Екзаменом. 	Можна отримати індивідуальну консультацію викладача чи консультацію онлайн.'),
(48, 48, 'ua', 'Підсумком курсу є Командний дипломний проект, який виконується разом з іншими студентами (склад команди формуєш самостійно чи рекомендує тренер, який затверджує тему і технічне завдання проекту). Здача проекту передбачає передзахист та захист в он-лайн режимі із представленням технічної документації. Після захисту видається диплом та рекомендація для стажування чи працевлаштування.'),
(49, 49, 'ua', 'Головна'),
(50, 50, 'ua', 'Курси'),
(51, 51, 'ua', 'Про нас'),
(52, 52, 'ua', 'Викладачі'),
(53, 53, 'ua', 'Форум'),
(54, 54, 'ua', 'Профіль'),
(55, 55, 'ua', 'Редагувати профіль'),
(56, 56, 'ua', 'Реєстрація'),
(57, 57, 'ua', 'Профіль викладача'),
(58, 58, 'ua', 'Наші викладачі'),
(59, 59, 'ua', 'персональна сторінка'),
(60, 60, 'ua', 'Якщо ви професійний ІТ-шник і бажаєте викладати окремі ІТ теми чи модулі і співпрацювати з нами в напрямку підготовки програмістів, напишіть нам листа.'),
(61, 61, 'ua', 'Веде модулі:'),
(62, 62, 'ua', 'Читати повністю'),
(63, 63, 'ua', 'Відгуки'),
(64, 64, 'ua', 'Розділ:'),
(65, 65, 'ua', 'Про викладача:'),
(66, 66, 'ua', 'Наші курси'),
(67, 67, 'ua', 'Концепція підготовки'),
(68, 68, 'ua', 'Рівень курсу:'),
(69, 69, 'ua', 'Мови курсу:'),
(70, 70, 'ua', 'Курс:'),
(71, 71, 'ua', 'мова:'),
(72, 72, 'ua', 'Модуль:'),
(73, 73, 'ua', 'Заняття'),
(74, 74, 'ua', 'Тип:'),
(75, 75, 'ua', 'Тривалість:'),
(76, 76, 'ua', 'хв'),
(77, 77, 'ua', 'Викладач'),
(78, 78, 'ua', 'детальніше'),
(79, 79, 'ua', 'Запланувати консультацію'),
(80, 80, 'ua', 'Зміст'),
(81, 81, 'ua', 'показати'),
(82, 82, 'ua', 'приховати'),
(83, 83, 'ua', 'Відео'),
(84, 84, 'ua', 'Зразок коду'),
(85, 85, 'ua', 'Інструкція'),
(86, 86, 'ua', 'Завдання'),
(87, 87, 'ua', 'переглянути знову попереднє заняття'),
(88, 88, 'ua', 'НАСТУПНЕ ЗАНЯТТЯ />'),
(89, 89, 'ua', 'Відповісти'),
(90, 90, 'ua', 'Підсумкове завдання'),
(91, 91, 'ua', 'Увійти/зареєструватись через соцмережі'),
(92, 92, 'ua', 'Забули пароль?'),
(93, 93, 'ua', 'УВІЙТИ />'),
(94, 94, 'ua', 'Стан курсу: '),
(95, 95, 'ua', 'Профіль студента'),
(96, 96, 'ua', 'Редагувати </br> профіль'),
(97, 97, 'ua', ' років'),
(98, 98, 'ua', ' рік'),
(99, 99, 'ua', ' роки'),
(100, 100, 'ua', 'Про себе:'),
(101, 101, 'ua', 'Електронна пошта:'),
(102, 102, 'ua', 'Телефон:'),
(103, 103, 'ua', 'Освіта:'),
(104, 104, 'ua', 'Інтереси:'),
(105, 105, 'ua', 'Звідки дізнався про Вас:'),
(106, 106, 'ua', 'Форма навчання:'),
(107, 107, 'ua', 'Завершені курси:'),
(108, 108, 'ua', 'Мої курси'),
(109, 109, 'ua', 'Розклад'),
(110, 110, 'ua', 'Консультації'),
(111, 111, 'ua', 'Екзамени'),
(112, 112, 'ua', 'Проекти'),
(113, 113, 'ua', 'Мій рейтинг'),
(114, 114, 'ua', 'Завантаження'),
(115, 115, 'ua', 'Листування'),
(116, 116, 'ua', 'Мої оцінювання'),
(117, 117, 'ua', 'Фінанси'),
(118, 118, 'ua', 'Поточний курс:'),
(119, 119, 'ua', 'Незавершений курс:'),
(120, 120, 'ua', 'Завершений курс:'),
(121, 121, 'ua', 'Необхідно здійснити наступну проплату до'),
(122, 122, 'ua', 'Сума проплати:'),
(123, 123, 'ua', ' грн'),
(124, 124, 'ua', 'Індивідуальний модульний проект'),
(125, 125, 'ua', 'Командний дипломний проект'),
(126, 126, 'ua', 'Тип'),
(127, 127, 'ua', 'Дата'),
(128, 128, 'ua', 'Час'),
(129, 129, 'ua', 'Викладач'),
(130, 130, 'ua', 'Тема'),
(131, 131, 'ua', 'Е'),
(132, 132, 'ua', 'К'),
(133, 133, 'ua', 'ІМП'),
(134, 134, 'ua', 'КДП'),
(135, 135, 'ua', ' сильний початківець'),
(136, 136, 'ua', ' українська'),
(137, 137, 'ua', 'Випускники'),
(138, 138, 'ua', 'Вибачте, Ви не можете переглядати цю лекцію. Щоб отримати доступ до цієї лекції, зареєструйтесь або увійдіть у свій аккаунт.'),
(139, 139, 'ua', 'Вибачте, Ви не можете переглядати цю лекцію. Щоб отримати доступ до цієї лекції, увійдіть у свій аккаунт та оплатіть доступ до лекції.'),
(140, 140, 'ua', 'Для початківців'),
(141, 141, 'ua', 'Для спеціалістів'),
(142, 142, 'ua', 'Для експертів'),
(143, 143, 'ua', 'Усі курси'),
(144, 144, 'ua', 'знижка'),
(145, 145, 'ua', 'Оцінка:'),
(146, 146, 'ua', 'детальніше ...'),
(147, 147, 'ua', 'Вартість: '),
(148, 148, 'ua', 'Спочатку навчання створюється стійкий фундамент для підготовки програмістів: необхідні знання елементарної математики, будови комп’ютера і основ програмування.'),
(149, 149, 'ua', '<p>Потім вивчаються основні принципи програмування на базі класичних комп&rsquo;ютерних наук і методологій: алгоритмічна мова;елементи вищої та дискретної математики і комбінаторики; структури даних, розробка і аналіз алгоритмів.                                 \r\n<p>Після чого формується база для переходу до сучасних технологій програмування: об’єктно-орієнтоване програмування; проектування баз даних.\r\n<p>Завершення процесу підготовки шляхом конкретного застосування отриманих знань на реальних проектах із засвоєнням сучасних методів і технологій, які використовуються в ІТ індустрії компаніями.'),
(150, 1, 'en', 'INTITA'),
(151, 2, 'en', 'About us'),
(152, 3, 'en', 'How to start learning?'),
(153, 4, 'en', 'Read more...'),
(154, 5, 'en', 'PROGRAM THE FUTURE'),
(155, 6, 'en', 'Find out more about studying with us '),
(156, 7, 'en', 'Five steps to make your dreams true.'),
(157, 8, 'en', 'START />'),
(158, 9, 'en', 'One click registration'),
(159, 10, 'en', 'Fill out the form below:'),
(160, 11, 'en', 'extended registration'),
(161, 12, 'en', 'Sign up with social networks'),
(162, 13, 'en', 'START />'),
(163, 14, 'en', 'Email'),
(164, 15, 'en', 'password'),
(165, 16, 'en', 'Courses'),
(166, 17, 'en', 'Forum'),
(167, 18, 'en', 'About us'),
(168, 19, 'en', 'log in'),
(169, 20, 'en', 'log out'),
(170, 21, 'en', 'Teachers'),
(171, 22, 'en', 'log out'),
(172, 23, 'en', 'phone: +38 0432 52 82 67'),
(173, 24, 'en', 'cell phone: +38 067 431 20 10'),
(174, 25, 'en', 'e-mail: intita.hr@gmail.com'),
(175, 26, 'en', 'skype: int.ita'),
(176, 27, 'en', 'We guarantee you will receive offers of employment <br> after the successful completion of the course!\r\n'),
(177, 28, 'en', 'Don`t miss your chance to change the world! Get up-to-date quality education<br> and become a professional programmer!'),
(178, 29, 'en', 'A year of persistent but interesting learning is enough to become a professional programmer<br>\r\nready to work in the  field of information technology!'),
(179, 30, 'en', 'Would you like to become a highly qualified programmer? Make the right decision,<br> join us for learning! We aim for results!'),
(180, 31, 'en', 'Don`t lose the chance to find creative, interesting and perspective work,<br>\r\nplan your future today!'),
(181, 32, 'en', 'What do you dream about?'),
(182, 33, 'en', 'Education of the  future'),
(183, 34, 'en', 'Notice:'),
(184, 35, 'en', 'Perhaps, it is the freedom to live your own way of life?\r\nManage your time and \r\nearn  good money by  doing what you like \r\nand enjoy\r\nmodern profession?'),
(185, 36, 'en', 'Unlike traditional schools	                             \r\nwe teach not for  the sake of good marks.                                  \r\nWe work individually   	                                 \r\nwith each student to help him/her get                          \r\n100% of sufficient  knowledge he/she needs.'),
(186, 37, 'en', 'We guarantee all our graduates will have an internship and offers of employment during 4-6 months after successful course completion…'),
(187, 38, 'en', 'Register on the site'),
(188, 39, 'en', 'Choosing a course or a module'),
(189, 40, 'en', 'Payment for study'),
(190, 41, 'en', 'Learning the material'),
(191, 42, 'en', 'Ending the course'),
(192, 43, 'en', 'step'),
(193, 44, 'en', 'To get access to the course, free modules and classes you may register on the site.\r\nRegistration enables you to try quality and convenience of our product, which  will be your  reliable partner and professional  adviser.'),
(194, 45, 'en', 'To gain competence in definite direction and level (to get professional specialization) you may \r\nselect an appropriate course. If you are interested only in deepening your knowledge of certain IT area, choose appropriate module for studying.'),
(195, 46, 'en', 'Before you start a course or a  module select one of the payment methods (full course payment, payment for each module, payment for each trimester, monthly payment, loan  payment  etc.) or  pay in convenient for YOU  way (you can change the payment scheme, loan monthly payment is possible).'),
(196, 47, 'en', 'You can learn the material by either  reading the text or/and watching the video of each lesson. You may do Intermediate test assignments during the lessons. You may do Final test assignment after each lesson. Each module ends with Individual project or Exam. Besides we provide individual or online consultations.'),
(197, 48, 'en', 'Team capstone  project is a summary of the course, you will do it together with other students (you may form the team  by yourself or it can be recommended by your supervisor, who claims  \r\nthe theme and specification of your project). There are two stages of defending the project,  previous \r\ndefense and online defense,  you should also   provide  technical documentation for your project. After  completing and defending the project you get a diploma and internship or  employment recommendations.'),
(198, 49, 'en', 'Home'),
(199, 50, 'en', 'Courses'),
(200, 51, 'en', 'About us'),
(201, 52, 'en', 'Teachers'),
(202, 53, 'en', 'Forum'),
(203, 54, 'en', 'Profile'),
(204, 55, 'en', 'Edit profile'),
(205, 56, 'en', 'Registration'),
(206, 57, 'en', 'Teacher profile'),
(207, 58, 'en', 'Our teachers'),
(208, 59, 'en', 'personal <br>page'),
(209, 60, 'en', 'If you are an expert in IT and want to teach IT material or modules and collaborate with us on  educating future   programmers, contact us...'),
(210, 61, 'en', 'His/her modules'),
(211, 62, 'en', 'Read more'),
(212, 63, 'en', 'Students reviews'),
(213, 64, 'en', 'Section:'),
(214, 65, 'en', 'About the teacher:'),
(215, 66, 'en', 'Our courses'),
(216, 67, 'en', 'The concept of learning with INTITA'),
(217, 68, 'en', 'Level: '),
(218, 69, 'en', 'Languages: '),
(219, 70, 'en', 'Course:'),
(220, 71, 'en', 'lang:'),
(221, 72, 'en', 'Module:'),
(222, 73, 'en', 'Lecture '),
(223, 74, 'en', 'Type:'),
(224, 75, 'en', 'Duration:'),
(225, 76, 'en', 'min'),
(226, 77, 'en', 'Teacher'),
(227, 78, 'en', 'more'),
(228, 79, 'en', 'Plan consultation'),
(229, 80, 'en', 'Content'),
(230, 81, 'en', 'show'),
(231, 82, 'en', 'hide'),
(232, 83, 'en', 'Videos'),
(233, 84, 'en', 'Sample code'),
(234, 85, 'en', 'Instruction'),
(235, 86, 'en', 'Task'),
(236, 87, 'en', 'review the previous lesson'),
(237, 88, 'en', 'NEXT LECTURE />'),
(238, 89, 'en', 'Reply'),
(239, 90, 'en', 'Final task'),
(240, 91, 'en', 'Social login/Sign up with social networks'),
(241, 92, 'en', 'Forget password?'),
(242, 93, 'en', 'SIGN IN />'),
(243, 94, 'en', 'Course availability:'),
(244, 95, 'en', 'Student Profile'),
(245, 96, 'en', 'Edit </br> profile'),
(246, 97, 'en', ' years'),
(247, 98, 'en', ' year'),
(248, 99, 'en', ' years'),
(249, 100, 'en', 'About myself:'),
(250, 101, 'en', 'Email:'),
(251, 102, 'en', 'Phone:'),
(252, 103, 'en', 'Education:'),
(253, 104, 'en', 'Interests:'),
(254, 105, 'en', 'Where learned you:'),
(255, 106, 'en', 'Learning:'),
(256, 107, 'en', 'Completion of the course:'),
(257, 108, 'en', 'My courses'),
(258, 109, 'en', 'Timetable'),
(259, 110, 'en', 'Consultation'),
(260, 111, 'en', 'Exams'),
(261, 112, 'en', 'Projects'),
(262, 113, 'en', 'My rating'),
(263, 114, 'en', 'Downloads'),
(264, 115, 'en', 'Correspondence'),
(265, 116, 'en', 'My assessment'),
(266, 117, 'en', 'Finances'),
(267, 118, 'en', 'Current course:'),
(268, 119, 'en', 'Unfinished course:'),
(269, 120, 'en', 'Completed course:'),
(270, 121, 'en', 'Please make the following payments to'),
(271, 122, 'en', 'Amount of payment:'),
(272, 123, 'en', ' UAH'),
(273, 124, 'en', 'Individual modular project'),
(274, 125, 'en', 'Team thesis project'),
(275, 126, 'en', 'Type'),
(276, 127, 'en', 'Date'),
(277, 128, 'en', 'Time'),
(278, 129, 'en', 'Teacher'),
(279, 130, 'en', 'Theme'),
(280, 131, 'en', 'E'),
(281, 132, 'en', 'C'),
(282, 133, 'en', 'IMP'),
(283, 134, 'en', 'TTP'),
(284, 135, 'en', ' strong junior'),
(285, 136, 'en', ' ukrainian'),
(286, 137, 'en', 'Alumni'),
(287, 138, 'en', 'Sorry, you couldn\\''t view this lecture.Please login for getting access to this material.'),
(288, 139, 'en', 'Sorry, you couldn\\''t view this lecture.\r\nYou don\\''t have access to this lecture.\r\nPlease go to your profile and pay access.'),
(289, 140, 'en', 'For beginners'),
(290, 141, 'en', 'For professionals'),
(291, 142, 'en', 'For experts'),
(292, 143, 'en', 'All courses'),
(293, 144, 'en', 'discount'),
(294, 145, 'en', 'Сourse rate:'),
(295, 146, 'en', 'details ...'),
(296, 147, 'en', 'Price:'),
(297, 148, 'en', 'We start with fundamental skills required to become a programmer: needed knowledge of Elementary Math, Computer Architecture and Programming basics.'),
(298, 149, 'en', '<P>Then we teach the main principles of programming based on classical computer science and methodology, algorithmic language, higher and discrete math elements and combinatorics, data structure and algorithm development and analyses.\r\n<P>After that we form the basis for learning modern programming technologies like object-oriented programming and database designing\r\n<P>Ultimately, the acquired knowledge is implemented in real projects which include modern methods and technologies which IT companies use.'),
(299, 1, 'ru', 'INTITA'),
(300, 2, 'ru', 'О нас'),
(301, 3, 'ru', 'Как проходит обучение?'),
(302, 4, 'ru', 'далее ...'),
(303, 5, 'ru', 'ПРОГРАММИРУЙ БУДУЩЕЕ'),
(304, 6, 'ru', 'Важная информация про обучение вместе с нами'),
(305, 7, 'ru', 'Пять шагов к исполнения твоих желаний'),
(306, 8, 'ru', 'НАЧАТЬ  />'),
(307, 9, 'ru', 'Готовы начать?'),
(308, 10, 'ru', 'Введите данные в форму ниже'),
(309, 11, 'ru', 'расширенная регистрация'),
(310, 12, 'ru', 'Регистрация через соцсети'),
(311, 13, 'ru', 'НАЧАТЬ />'),
(312, 14, 'ru', 'Электронная почта'),
(313, 15, 'ru', 'Пароль'),
(314, 16, 'ru', 'Курсы'),
(315, 17, 'ru', 'Форум'),
(316, 18, 'ru', 'О нас'),
(317, 19, 'ru', 'Вход'),
(318, 20, 'ru', 'Выход'),
(319, 21, 'ru', 'Преподаватели'),
(320, 22, 'ru', 'Выход'),
(321, 23, 'ru', 'телефон: +38 0432 52 82 67 '),
(322, 24, 'ru', 'тел. моб. +38 067 431 20 10'),
(323, 25, 'ru', 'эл. почта: intita.hr@gmail.com'),
(324, 26, 'ru', 'скайп: int.ita'),
(325, 27, 'ru', 'Мы гарантируем получение предложения работы<br>\r\nпосле успешного завершения обучения!'),
(326, 28, 'ru', 'Хочешь стать классным специалистом?<br>\r\nпринимай правильное решение - поступай в IТ Академию  ИНТИТА!'),
(327, 29, 'ru', 'Один год упорного и интересного обучения - и ты станешь проессиональным программистом.<br>\r\nУчиться тяжело -зато легко найти работу!'),
(328, 30, 'ru', 'Не упускай свой шанс на достойную и интересную работу - <br>\r\nпрограммируй свое будущее уже сегодня!'),
(329, 31, 'ru', 'Текст на пятой картинке слайдера'),
(330, 32, 'ru', 'О чем ты мечтаешь?'),
(331, 33, 'ru', 'Обучение будущего'),
(332, 34, 'ru', 'Вопросы'),
(333, 35, 'ru', 'Может, это возможность жить своей жизнью? Самостоятельно распоряжаться своим временем с возможностью зарабатывать, занимаясь любимым делом и получать удовольстие от современной профессии?'),
(334, 36, 'ru', 'В отличие от традиционных заведений, мы не учим ради оценок. Мы индивидуально работаем с каждым студентом, чтобы достичь 100% усвоения необходимых знаний.'),
(335, 37, 'ru', 'Мы предлагаем каждому выпускнику гарантированное получение предложения работы в течении 4-6-ти месяцев после успешного завершения обучения.'),
(336, 38, 'ru', 'Регистрация на сайте'),
(337, 39, 'ru', 'Выбор курса или модуля'),
(338, 40, 'ru', 'Оплата'),
(339, 41, 'ru', 'Изучение материала'),
(340, 42, 'ru', 'Завершение курса'),
(341, 43, 'ru', 'шаг'),
(342, 44, 'ru', 'Чтобы получить доступ к курсам и пройти бесплатные модули и занятия зарегистрируйся на сайте. Регистрация позволит тебе оценить качество и удобство нашего продукт , который станет для тебя надежным партнером и советчиком в профессиональной самореализации.'),
(343, 45, 'ru', 'Чтобы стать специалистом определенного направления и уровня ( получить профессиональную специализацию ) выбери для прохождения соответствующий курс . Если Тебя интересует исключительно углубления знаний в определенном направлении информационных технологий , то выбери соответствующий модуль для прохождения .'),
(344, 46, 'ru', 'Чтобы начать прохождении курса модуля выбери схему оплаты ( вся сумма за курс , оплата модулей , оплата потриместрово , помесячно и т.д.) и исполни оплату удобным Тебе способом ( схему оплаты курса или модуля можно изменять , также возможна помесячная оплата в кредит ) .'),
(345, 47, 'ru', 'Изучать материал возможно путем чтения текста и/или просмотра видео для каждого занятия. Во время прохождения занятия решай Промежуточные тестовые задания. По завершению каждого занятия решай Финальное тестовое задание. Каждый модуль завершается И ндивидуальным проектом или Экзаменом. Можно получить индивидуальную консультацию преподавателя или консультацию онлайн.'),
(346, 48, 'ru', 'Завершением курса есть Командный дипломный проект, который исполняется вместе с другими студентами (склад команды формируешь самостоятельно или рекондует тренер, который утверждает тему и техническое задание проекта). Сдача проекта предусматривает предзащиту и защиту в онлайн-режиме с представлением техдокументации. После защиты выдается диплом и рекомендация для трудоустройства. '),
(347, 49, 'ru', 'Главная'),
(348, 50, 'ru', 'Курсы'),
(349, 51, 'ru', 'О нас'),
(350, 52, 'ru', 'Преподаватели'),
(351, 53, 'ru', 'Форум'),
(352, 54, 'ru', 'Профиль'),
(353, 55, 'ru', 'Редактировать профиль'),
(354, 56, 'ru', 'Регистрация'),
(355, 57, 'ru', 'Профиль преподавателя'),
(356, 58, 'ru', 'Наши преподаватели'),
(357, 59, 'ru', 'персональная страница'),
(358, 60, 'ru', 'Если Вы профессиональный ІТ-шник и хотите преподавать некоторые ІТ курсы и сотрудничать с нами в подготовке программистов, напишите нам письмо.'),
(359, 61, 'ru', 'Ведет модули:'),
(360, 62, 'ru', 'Читать полностью'),
(361, 63, 'ru', 'Отзывы'),
(362, 64, 'ru', 'Раздел:'),
(363, 65, 'ru', 'О преподавателе:'),
(364, 66, 'ru', 'Наши курсы'),
(365, 67, 'ru', 'Концепция подготовки'),
(366, 68, 'ru', 'Уровень курса:'),
(367, 69, 'ru', 'Языки курса:'),
(368, 70, 'ru', 'Курс:'),
(369, 71, 'ru', 'язык:'),
(370, 72, 'ru', 'Модуль:'),
(371, 73, 'ru', 'Занятие '),
(372, 74, 'ru', 'Тип:'),
(373, 75, 'ru', 'Время:'),
(374, 76, 'ru', 'мин'),
(375, 77, 'ru', 'Преподаватель'),
(376, 78, 'ru', 'детальнее'),
(377, 79, 'ru', 'Запланировать консультацию'),
(378, 80, 'ru', 'Содержание'),
(379, 81, 'ru', 'показать'),
(380, 82, 'ru', 'скрыть'),
(381, 83, 'ru', 'Видео'),
(382, 84, 'ru', 'Пример кода'),
(383, 85, 'ru', 'Инструкция'),
(384, 86, 'ru', 'Задание'),
(385, 87, 'ru', 'просмотреть снова предыдущее занятие'),
(386, 88, 'ru', 'СЛЕДУЮЩЕЕ ЗАНЯТИЕ />'),
(387, 89, 'ru', 'Ответить'),
(388, 90, 'ru', 'Итоговое задание'),
(389, 91, 'ru', 'Войти/зарегистрироваться через соцсети'),
(390, 92, 'ru', 'Забыли пароль?'),
(391, 93, 'ru', 'ВОЙТИ />'),
(392, 94, 'ru', 'Статус курса: '),
(393, 95, 'ru', 'Профиль студента'),
(394, 96, 'ru', 'Редактировать </br> профиль'),
(395, 97, 'ru', ' лет'),
(396, 98, 'ru', ' год'),
(397, 99, 'ru', ' года'),
(398, 100, 'ru', 'Про себя:'),
(399, 101, 'ru', 'Электронная почта:'),
(400, 102, 'ru', 'Телефон:'),
(401, 103, 'ru', 'Образование:'),
(402, 104, 'ru', 'Интересы:'),
(403, 105, 'ru', 'Откуда узнал о Вас:'),
(404, 106, 'ru', 'Форма обучения:'),
(405, 107, 'ru', 'Завершенные курсы:'),
(406, 108, 'ru', 'Мои курсы'),
(407, 109, 'ru', 'Расписание'),
(408, 110, 'ru', 'Консультации'),
(409, 111, 'ru', 'Экзамены'),
(410, 112, 'ru', 'Проекты'),
(411, 113, 'ru', 'Мой рейтинг'),
(412, 114, 'ru', 'Загрузки'),
(413, 115, 'ru', 'Переписка'),
(414, 116, 'ru', 'Мои оценки'),
(415, 117, 'ru', 'Финансы'),
(416, 118, 'ru', 'Текущий курс:'),
(417, 119, 'ru', 'Незавершенный курс:'),
(418, 120, 'ru', 'Завершен курс:'),
(419, 121, 'ru', 'Необходимо осуществить следующую проплату до'),
(420, 122, 'ru', 'Сумма оплаты:'),
(421, 123, 'ru', ' грн'),
(422, 124, 'ru', 'Индивидуальный модульный проект'),
(423, 125, 'ru', 'Командный дипломный проект'),
(424, 126, 'ru', 'Тип'),
(425, 127, 'ru', 'Дата'),
(426, 128, 'ru', 'Время'),
(427, 129, 'ru', 'Преподаватель'),
(428, 130, 'ru', 'Тема'),
(429, 131, 'ru', 'Э'),
(430, 132, 'ru', 'К'),
(431, 133, 'ru', 'ИМП'),
(432, 134, 'ru', 'КДП'),
(433, 135, 'ru', ' начинающий сильный'),
(434, 136, 'ru', ' украинский'),
(435, 137, 'ru', 'Выпускники'),
(436, 138, 'ru', 'Извините, Вы не можете просматривать эту лекцию. Пожалуйста, зарестрируйтесь для доступа к этой лекции.'),
(437, 139, 'ru', 'Извините, Вы не можете просматривать эту лекцию. Вы не имеете доступа к этой лекции. Пожалуйста, зайдите в свой аккаунт и оплатите доступ.'),
(438, 140, 'ru', 'Для начинающих'),
(439, 141, 'ru', 'Для специалистов'),
(440, 142, 'ru', 'Для экспертов'),
(441, 143, 'ru', 'Все курсы'),
(442, 144, 'ru', 'скидка'),
(443, 145, 'ru', 'Оценка:'),
(444, 146, 'ru', 'детальнее ...'),
(445, 147, 'ru', 'Стоимость:'),
(446, 148, 'ru', 'В начале обучения формируется стойкий фундамент для подготовки программистов: необходимые знания элементарной математики, устройства компьютера и основ информатики.'),
(447, 149, 'ru', '<p>Потом изучаются основные принципы программирования на базе классических компьютерних наук и методологий: алгоритмический язык; элементы высшей и дискретной математики, комбинаторики; структуры данных, разработка и анализ алгоритмов.\r\n<P> После чего формируется база для перехода к современным технологиям программирования: объектно-ориентированное программирование; проектирования баз данных.\r\n<P> Завершением процесса подготовки есть конкретное применение полученных знаний на реальных проектах с усвоением современных методов и технологий, используемых в ИТ индустрии компаниями.'),
(448, 150, 'ua', 'Персональні дані'),
(449, 150, 'ru', 'Персональные данные'),
(450, 150, 'en', 'Personal info'),
(451, 151, 'ua', 'Студент'),
(452, 151, 'ru', 'Студент'),
(453, 151, 'en', 'Student'),
(454, 152, 'ua', 'введіть в форматі дд/мм/рррр'),
(455, 152, 'ru', 'введите в формате дд/мм/гггг'),
(456, 152, 'en', 'enter as dd/mm/yyyy'),
(457, 153, 'ua', 'введіть Ваші інтереси (через кому)'),
(458, 153, 'ru', 'введите Ваши интересы (через запятую)'),
(459, 153, 'en', 'enter Your interests '),
(460, 154, 'ua', 'звідки Ви про нас дізналися?'),
(461, 154, 'en', 'where you hear about us?'),
(462, 154, 'ru', 'откуда Вы о нас узнали?'),
(463, 155, 'ua', 'ВІДПРАВИТИ />'),
(464, 155, 'ru', 'ОТПРАВИТЬ />'),
(465, 155, 'en', 'SEND />'),
(466, 156, 'ua', 'Завантажити фото профілю'),
(467, 156, 'ru', 'Загрузить фото профиля'),
(468, 156, 'en', 'Download your profile avatar'),
(469, 157, 'ua', 'ВИБЕРІТЬ ФАЙЛ'),
(470, 157, 'ru', 'ВЫБЕРИТЕ ФАЙЛ'),
(471, 157, 'en', 'CHOOSE FILE'),
(472, 158, 'ua', 'Розмір фото до 5 Mб'),
(473, 158, 'ru', 'Размер фото до 5 Mб'),
(474, 158, 'en', 'Photo size to 5 Mб'),
(475, 159, 'ua', 'Файл не вибрано...'),
(476, 159, 'ru', 'Файл не выбран...'),
(477, 159, 'en', 'The file is not selected'),
(478, 160, 'ua', 'Ім''я'),
(479, 160, 'ru', 'Имя'),
(480, 160, 'en', 'Name'),
(481, 161, 'ua', 'Роль'),
(482, 161, 'ru', 'Роль'),
(483, 161, 'en', 'Role'),
(484, 162, 'ua', 'Прізвище'),
(485, 162, 'ru', 'Фамилия'),
(486, 162, 'en', 'Last name'),
(487, 163, 'ua', 'Нік'),
(488, 163, 'ru', 'Ник'),
(489, 163, 'en', 'Nickname'),
(490, 164, 'ua', 'Дата народження'),
(491, 164, 'ru', 'Дата рождения'),
(492, 164, 'en', 'Date of birth'),
(493, 165, 'ua', 'Телефон'),
(494, 165, 'ru', 'Телефон'),
(495, 165, 'en', 'Phone'),
(496, 166, 'ua', 'Адреса'),
(497, 166, 'ru', 'Адрес'),
(498, 166, 'en', 'Address'),
(499, 167, 'ua', 'Освіта'),
(500, 167, 'ru', 'Образование'),
(501, 167, 'en', 'Education'),
(502, 168, 'ua', 'Форма навчання'),
(503, 168, 'ru', 'Форма обучения'),
(504, 168, 'en', 'Education form'),
(505, 169, 'ua', 'Захоплення'),
(506, 169, 'ru', 'Увлечения'),
(507, 169, 'en', 'Interests'),
(508, 170, 'ua', 'Про себе'),
(509, 170, 'ru', 'О себе'),
(510, 170, 'en', 'About myself'),
(511, 171, 'ua', 'Пароль'),
(512, 171, 'ru', 'Пароль'),
(513, 171, 'en', 'Password'),
(514, 172, 'ua', 'Повтор пароля'),
(515, 172, 'ru', 'Повтор пароля'),
(516, 172, 'en', 'Repeat password'),
(517, 173, 'ua', 'ЗБЕРЕГТИ'),
(518, 173, 'ru', 'СОХРАНИТЬ'),
(519, 173, 'en', 'SAVE'),
(520, 174, 'ua', 'Ім''я'),
(521, 174, 'ru', 'Имя'),
(522, 174, 'en', 'Name'),
(523, 175, 'ua', 'Прізвище'),
(524, 175, 'ru', 'Фамилия'),
(525, 175, 'en', 'Last name'),
(526, 176, 'ua', 'Вік'),
(527, 176, 'ru', 'Возраст'),
(528, 176, 'en', 'Age'),
(529, 177, 'ua', 'Освіта'),
(530, 177, 'ru', 'Образование'),
(531, 177, 'en', 'Education'),
(532, 178, 'ua', 'Телефон'),
(533, 178, 'ru', 'Телефон'),
(534, 178, 'en', 'Phone'),
(535, 179, 'ua', 'Які курси Ви готові викладати'),
(536, 179, 'ru', 'Какие курсы Вы готовы преподавать'),
(537, 179, 'en', 'What courses you ready to teach '),
(538, 180, 'ua', 'Відправити'),
(539, 180, 'ru', 'Отправить'),
(540, 180, 'en', 'Send'),
(541, 181, 'ua', 'Відгуки студентів про викладача:'),
(542, 181, 'ru', 'Отзывы студентов о преподавателе:'),
(543, 181, 'en', 'Guest students of the teacher:'),
(544, 182, 'ua', 'Середня оцінка: '),
(545, 182, 'ru', 'Средний балл:'),
(546, 182, 'en', 'Average rate:'),
(547, 183, 'ua', 'Знання: '),
(548, 183, 'ru', 'Знания:'),
(549, 183, 'en', 'Knowledge:'),
(550, 184, 'ua', 'Ефективність: '),
(551, 184, 'ru', 'Эффективность:'),
(552, 184, 'en', 'Efficiency:'),
(553, 185, 'ua', 'Відношення до студента: '),
(554, 185, 'ru', 'Отношение к студенту:'),
(555, 185, 'en', 'Relationship to student:'),
(556, 186, 'ua', 'Оцінка: '),
(557, 186, 'ru', 'Оценка:'),
(558, 186, 'en', 'Rating:'),
(559, 187, 'ua', 'Твій відгук'),
(560, 187, 'ru', 'Твой отзыв'),
(561, 187, 'en', 'Your review:'),
(562, 188, 'ua', 'Ваша оцінка'),
(563, 188, 'ru', 'Ваша оценка'),
(564, 188, 'en', 'Your rate'),
(565, 189, 'ua', 'Знання викладача:'),
(566, 189, 'ru', 'Знания преподавателя:'),
(567, 189, 'en', 'Teacher knowledge:'),
(568, 190, 'ua', 'Ефективність: '),
(569, 190, 'ru', 'Эффективность:'),
(570, 190, 'en', 'Efficiency:'),
(571, 191, 'ua', 'Ставлення до студента:'),
(572, 191, 'ru', 'Отношение к студенту:'),
(573, 191, 'en', 'Relationship to student:'),
(574, 192, 'ua', 'Відправити'),
(575, 192, 'ru', 'Отправить'),
(576, 192, 'en', 'Send'),
(577, 193, 'ua', 'Рівень: '),
(578, 193, 'ru', 'Уровень:'),
(579, 193, 'en', 'Level:'),
(580, 194, 'ua', 'Тривалість: '),
(581, 194, 'ru', 'Длительность:'),
(582, 194, 'en', 'Course duration:'),
(583, 195, 'ua', 'Відгуків немає.'),
(584, 195, 'ru', 'Отзывов нет.'),
(585, 195, 'en', 'There are not any reviews.'),
(586, 196, 'ua', 'Схеми проплат'),
(587, 196, 'ru', 'Схемы оплаты'),
(588, 196, 'en', 'Ways of pay'),
(589, 197, 'ua', 'Ціна за весь курс наперед:'),
(590, 197, 'ru', 'Цена за весь курс наперед:'),
(591, 197, 'en', 'Advance payment  for the whole course:'),
(592, 198, 'ua', 'проплати за курс:'),
(593, 198, 'ru', 'оплаты за курс:'),
(594, 198, 'en', ' payments of'),
(595, 199, 'ua', 'проплати за курс:'),
(596, 199, 'ru', 'оплаты за курс:'),
(597, 199, 'en', 'pays for course:'),
(598, 200, 'ua', 'помісячно:'),
(599, 200, 'ru', 'ежемесячно:'),
(600, 200, 'en', '12 monthly payments of'),
(601, 201, 'ua', 'кредит на 2 роки:'),
(602, 201, 'ru', 'кредит на 2 года:'),
(603, 201, 'en', '2 year loan:'),
(604, 202, 'ua', 'кредит на 3 роки:'),
(605, 202, 'ru', 'кредит на 3 года:'),
(606, 202, 'en', '3-year-loan'),
(607, 203, 'ua', 'Оцінка: '),
(608, 203, 'ru', 'Оценка:'),
(609, 203, 'en', 'Course rate: '),
(610, 204, 'ua', 'Для кого:'),
(611, 204, 'ru', 'Для кого:'),
(612, 204, 'en', 'For whom:'),
(613, 205, 'ua', 'Чому Ти навчишся?'),
(614, 205, 'ru', 'Чему Ты научишься?'),
(615, 205, 'en', 'Why do you learn ?'),
(616, 206, 'ua', 'Що Ти отримаєш?'),
(617, 206, 'ru', 'Что ты получишь?'),
(618, 206, 'en', 'What you get?'),
(619, 207, 'ua', 'Викладачі'),
(620, 207, 'ru', 'Преподаватели'),
(621, 207, 'en', 'Teachers'),
(622, 208, 'ua', 'Модуль'),
(623, 208, 'ru', 'Модуль'),
(624, 208, 'en', 'Module'),
(625, 209, 'ua', 'орієнтовно'),
(626, 209, 'ru', 'около'),
(627, 209, 'en', 'approximately'),
(628, 210, 'ua', 'знижка'),
(629, 210, 'ru', 'скидка'),
(630, 210, 'en', 'discount'),
(631, 211, 'ua', 'Модуль:'),
(632, 211, 'ru', 'Модуль:'),
(633, 211, 'en', 'Module:'),
(634, 212, 'ua', 'Заняття:'),
(635, 212, 'ru', 'Занятие:'),
(636, 212, 'en', 'lectures'),
(637, 213, 'ua', 'Тривалість:'),
(638, 213, 'ru', 'Длительность:'),
(639, 213, 'en', 'Duration:'),
(640, 214, 'ua', 'Рівень:'),
(641, 214, 'ru', 'Уровень:'),
(642, 214, 'en', 'Level:'),
(643, 215, 'ua', 'Тривалість:'),
(644, 215, 'ru', 'Длительность:'),
(645, 215, 'en', 'Duration:'),
(646, 216, 'ua', 'занять'),
(647, 216, 'ru', 'занятий'),
(648, 216, 'en', 'lessons'),
(649, 217, 'ua', 'орієнтовно'),
(650, 217, 'ru', 'ориентировочно'),
(651, 217, 'en', 'approximately'),
(652, 218, 'ua', 'дн.'),
(653, 218, 'ru', 'дн.'),
(654, 218, 'en', 'days'),
(655, 219, 'ua', 'год./день'),
(656, 219, 'ru', 'ч./день'),
(657, 219, 'en', 'hours/a day'),
(658, 220, 'ua', 'дні/тиждень'),
(659, 220, 'ru', 'дня/неделю'),
(660, 220, 'en', 'days/a week'),
(661, 221, 'ua', 'Вартість:'),
(662, 221, 'ru', 'Cтоимость:'),
(663, 221, 'en', 'Cost:'),
(664, 222, 'ua', '$.'),
(665, 222, 'ru', '$.'),
(666, 222, 'en', '$.'),
(667, 223, 'ua', 'в межах курсу'),
(668, 223, 'ru', 'в рамках курса'),
(669, 223, 'en', 'within a year'),
(670, 224, 'ua', 'Оцінка:'),
(671, 224, 'ru', 'Оценка:'),
(672, 224, 'en', 'Module rate:'),
(673, 225, 'ua', 'Заняття модуля'),
(674, 225, 'ru', 'Занятия модуля'),
(675, 225, 'en', 'Lessons of module'),
(676, 227, 'ua', 'Викладач:'),
(677, 227, 'ru', 'Преподаватель:'),
(678, 227, 'en', 'Teacher:'),
(679, 228, 'ru', 'персональная страница'),
(680, 228, 'en', 'personal page'),
(681, 228, 'ua', 'персональна сторінка'),
(682, 226, 'ru', 'Занятие'),
(683, 226, 'en', 'Lecture'),
(684, 226, 'ua', 'Заняття'),
(685, 229, 'ua', '<p>Потім вивчаються основні принципи програмування на базі класичних комп’ютерних наук і методологій, алгоритмічна мова, eлементи вищої та дискретної математики і комбінаторики, структури даних, розробка і аналіз алгоритмів." +                                  "<p>Після чого формується база для переходу до сучасних технологій програмування об’єктно-орієнтоване програмування, проектування баз даних." +                                   "<p>Завершення процесу підготовки шляхом конкретного застосування отриманих знань на реальних проектах із засвоєнням сучасних методів і технологій, які використовуються в ІТ індустрії компаніями.'),
(686, 229, 'ru', '<P>Затем изучаются основные принципы программирования на базе классических компьютерных наук и методологий, алгоритмический язык, eлементы высшей и дискретной математики и комбинаторики, структуры данных, разработка и анализ алгоритмов."+\r\n                                  "<P>После чего формируется база для перехода к современным технологиям программирования объектно-ориентированное программирование, проектирование баз данных." +\r\n                                   "<P>Завершение процесса подготовки путем конкретного применения полученных знаний на реальных проектах с усвоением современных методов и технологий, используемых в ИТ индустрии компаниями.'),
(687, 229, 'en', '<P> Then we study the basic principles of programming based on classic computer books sciences and methodologies algorithmic language, elements of higher and discrete mathematics and combinatorics; data structures, design and analysis of algorithms. "+\r\n                                  "<P> After that formed the basis for the transition to modern programming technologies, object-oriented programming, database design." +\r\n                                   "<P> Completion of training by specific application of knowledge to real projects with the assimilation of modern methods and technologies used in IT industry companies.'),
(688, 230, 'ua', 'розробляється'),
(689, 230, 'ru', 'в разработке'),
(690, 230, 'en', 'coming soon'),
(691, 231, 'ua', 'доступний'),
(692, 231, 'ru', 'доступен'),
(693, 231, 'en', 'available'),
(694, 232, 'ua', 'стажер'),
(695, 232, 'ru', 'стажер'),
(696, 232, 'en', 'intern'),
(697, 233, 'ua', 'початківець'),
(698, 233, 'ru', 'начинающий'),
(699, 233, 'en', 'junior'),
(700, 234, 'ua', 'сильний початківець'),
(701, 234, 'ru', 'начинающий сильный'),
(702, 234, 'en', 'strong junior'),
(703, 235, 'ua', 'середній'),
(704, 235, 'ru', 'средний'),
(705, 235, 'en', 'middle'),
(706, 236, 'ua', 'високий'),
(707, 236, 'ru', 'высокий'),
(708, 236, 'en', 'senior'),
(709, 241, 'ua', 'Профіль викладача'),
(710, 241, 'ru', 'Профиль преподавателя'),
(711, 241, 'en', 'Teacher profile'),
(712, 246, 'ua', 'посилання на профіль Vkontakte'),
(713, 246, 'ru', 'ссылка на профиль Vkontakte'),
(714, 245, 'en', 'link to LinkedIn profile'),
(715, 247, 'ua', 'посилання на профіль Twitter'),
(716, 247, 'ru', 'ссылка на профиль Twitter'),
(717, 254, 'ua', 'Мої розрахунки'),
(718, 254, 'ru', 'Мои расчеты'),
(719, 254, 'en', 'My finance'),
(720, 255, 'ua', 'Проплати:'),
(721, 255, 'ru', 'Проплаты:'),
(722, 255, 'en', 'Payment:'),
(723, 256, 'ua', 'проплачені повністю'),
(724, 256, 'ru', 'проплаченные полностью'),
(725, 256, 'en', 'are paid completely'),
(726, 257, 'ua', 'проплачені частково'),
(727, 257, 'ru', 'проплаченные частично'),
(728, 257, 'en', 'are paid partly'),
(729, 247, 'en', 'link to Twitter profile'),
(730, 248, 'ua', 'Змінити пароль'),
(731, 248, 'ru', 'Изменить пароль'),
(732, 248, 'en', 'Change password'),
(733, 253, 'ua', 'Замовити </br>електронний </br>сертифікат'),
(734, 253, 'ru', 'Заказать </ br> электронный </ br> сертификат'),
(735, 253, 'en', 'Order </ br> e </ br> certificate'),
(736, 249, 'ua', 'ЗБЕРЕГТИ />'),
(737, 249, 'ru', 'СОХРАНИТЬ />'),
(738, 249, 'en', 'SAVE />'),
(739, 252, 'ua', 'Екзаменаційний проект'),
(740, 252, 'ru', 'Экзаменационный проект'),
(741, 252, 'en', 'Examination project'),
(742, 250, 'ua', 'Модуль'),
(743, 250, 'ru', 'Модуль'),
(744, 250, 'en', 'Module'),
(745, 251, 'ua', 'Екзамен'),
(746, 251, 'ru', 'Экзамен'),
(747, 251, 'en', 'Exam'),
(748, 258, 'ua', 'Проплачено:'),
(749, 258, 'ru', 'Проплачено:'),
(750, 258, 'en', 'Paid for:'),
(751, 259, 'ua', '$'),
(752, 259, 'ru', '$'),
(753, 259, 'en', '$'),
(754, 260, 'ua', 'Проплачені модулі:'),
(755, 260, 'ru', 'Проплаченные модули:'),
(756, 260, 'en', 'Bribed modules:'),
(757, 261, 'ua', 'Сплатити зараз'),
(758, 261, 'ru', 'Оплатить сейчас'),
(759, 261, 'en', 'Pay now'),
(760, 243, 'en', 'link to Facebook profile'),
(761, 244, 'ua', 'посилання на профіль Google+'),
(762, 244, 'ru', 'ссылка на профиль Google+'),
(763, 244, 'en', 'link to Google+ profile'),
(764, 245, 'ua', 'посилання на профіль LinkedIn'),
(765, 245, 'ru', 'ссылка на профиль LinkedIn'),
(766, 262, 'ua', 'дд.мм.рррр'),
(767, 262, 'ru', 'дд.мм.гггг'),
(768, 262, 'en', 'dd.mm.yyyy'),
(769, 263, 'ua', 'Діючий пароль'),
(770, 263, 'ru', 'Действующий пароль'),
(771, 263, 'en', 'Current password'),
(772, 266, 'ua', 'Забули пароль?'),
(773, 266, 'ru', 'Забыли пароль?'),
(774, 266, 'en', 'Forgot your password?'),
(775, 268, 'ua', 'Будь ласка заповніть поле');
INSERT INTO `translate` (`id_record`, `id`, `language`, `translation`) VALUES
(776, 268, 'ru', 'Пожалуйста заполните поле'),
(777, 268, 'en', 'Please fill out the field'),
(778, 269, 'ua', 'Паролі не співпадають'),
(779, 269, 'ru', 'Пароли не совпадают'),
(780, 269, 'en', 'Passwords do not match'),
(781, 273, 'ua', 'Невірна електронна пошта або пароль'),
(782, 273, 'ru', 'Неверная электронная почта или пароль'),
(783, 273, 'en', 'Incorrect email or password'),
(784, 274, 'ua', 'Невірний пароль'),
(785, 274, 'ru', 'Неверный пароль'),
(786, 274, 'en', 'Invalid password'),
(787, 267, 'ua', 'ЗБЕРЕГТИ />'),
(788, 267, 'ru', 'СОХРАНИТЬ />'),
(789, 267, 'en', 'SAVE />'),
(790, 264, 'ua', 'Новий пароль'),
(791, 264, 'ru', 'Новый пароль'),
(792, 264, 'en', 'New password'),
(793, 265, 'ua', 'Повторіть новий пароль'),
(794, 265, 'ru', 'Повторите новый пароль'),
(795, 265, 'en', 'Repeat your new password'),
(796, 242, 'ua', 'Електронна пошта'),
(797, 242, 'ru', 'Электронная почта'),
(798, 242, 'en', 'Email'),
(799, 243, 'ua', 'посилання на профіль Facebook'),
(800, 243, 'ru', 'ссылка на профиль Facebook'),
(801, 246, 'en', 'link to Vkontakte profile'),
(802, 270, 'ua', 'не може бути пустою'),
(803, 270, 'ru', 'не может быть пустым'),
(804, 270, 'en', 'can not be empty'),
(805, 271, 'ua', 'Електронна пошта не являється правильною'),
(806, 271, 'ru', 'Электронная почта не является правильной'),
(807, 271, 'en', 'Email is incorrect'),
(808, 272, 'ua', 'Електронна пошта уже зайнята'),
(809, 272, 'ru', 'Электронная почта уже занята'),
(810, 272, 'en', 'Email already occupied'),
(811, 279, 'ua', 'ПОЧАТИ МОДУЛЬ />'),
(812, 279, 'ru', 'НАЧАТЬ МОДУЛЬ />'),
(813, 279, 'en', 'START MODULE />'),
(814, 280, 'ua', 'ПОЧАТИ КУРС />'),
(815, 280, 'ru', 'НАЧАТЬ КУРС />'),
(816, 280, 'en', 'START THE COURSE />'),
(817, 237, 'ru', 'Запрашиваемая страница не существует.'),
(818, 237, 'en', 'The requested page does not exist.'),
(819, 237, 'ua', 'Запрошена сторінка не існує.'),
(820, 237, 'ru', 'Запрашиваемая страница не существует.'),
(822, 237, 'ru', 'Запрашиваемая страница не существует.'),
(824, 238, 'ua', 'Час дії посилання для відновлення паролю вичерпано.'),
(825, 238, 'ru', 'Время действия ссылки для восстановления пароля исчерпан.'),
(826, 238, 'en', 'Time for action restoration link exhausted.'),
(827, 239, 'ua', 'Для відновлення паролю перейдіть по посиланню нижче:'),
(828, 239, 'ru', 'Для восстановления пароля перейдите по ссылке ниже:'),
(829, 239, 'en', 'To recover your password click on the link below:'),
(830, 240, 'ua', 'Нажміть тут для відновлення паролю'),
(831, 240, 'ru', 'Нажмите здесь для восстановления пароля'),
(832, 240, 'en', 'Click here for password recovery'),
(833, 238, 'ua', 'Час дії посилання для відновлення паролю вичерпано.'),
(834, 238, 'ru', 'Время действия ссылки для восстановления пароля исчерпан.'),
(836, 239, 'ua', 'Для відновлення паролю перейдіть по посиланню нижче:'),
(837, 239, 'ru', 'Для восстановления пароля перейдите по ссылке ниже:'),
(839, 240, 'ua', 'Нажміть тут для відновлення паролю'),
(840, 240, 'ru', 'Нажмите здесь для восстановления пароля'),
(842, 281, 'ua', 'Відновлення паролю'),
(843, 281, 'ru', 'Восстановление пароля'),
(844, 281, 'en', 'Password recovery'),
(845, 282, 'ua', 'Підтвердження email'),
(846, 282, 'ru', 'Подтверждение email'),
(847, 282, 'en', 'Сonfirmation email'),
(848, 283, 'ua', 'Для підтвердження email перейдіть по посиланню нижче:'),
(849, 283, 'ru', 'Для подтверждения email перейдите по ссылке ниже:'),
(850, 283, 'en', 'For confirmation email click on the link below:'),
(851, 284, 'ua', 'Нажміть тут для підтвердження email'),
(852, 284, 'ru', 'Нажмите здесь для подтверждения email'),
(853, 284, 'en', 'Click here to confirm your email'),
(854, 285, 'ua', 'Відновлення паролю'),
(855, 285, 'ru', 'Восстановление пароля'),
(856, 285, 'en', 'Password recovery'),
(857, 286, 'ua', 'Зміна email'),
(858, 286, 'ru', 'Смена email'),
(859, 286, 'en', 'Change email'),
(860, 287, 'ua', 'Вітаємо!'),
(861, 287, 'ru', 'Поздравляем!'),
(862, 287, 'en', 'Congratulations!'),
(863, 288, 'ua', 'Ви успішно змінили пароль.'),
(864, 288, 'ru', 'Вы успешно изменили пароль.'),
(865, 288, 'en', 'You have successfully changed your password.'),
(866, 289, 'ua', 'Відновлення паролю'),
(867, 289, 'ru', 'Восстановление пароля'),
(868, 289, 'en', 'Password recovery'),
(869, 290, 'ua', 'Щоб відновити пароль, введіть свою електронну пошту нижче. На данну електронну пошту буде відправлено посиланням для відновлення паролю. Термін дії посилання 30 хв.'),
(870, 290, 'ru', 'Чтобы восстановить пароль, введите свою электронную почту ниже. На эту электронную почту будет отправлено ссылкой для восстановления пароля. Срок действия ссылки 30 мин.'),
(871, 290, 'en', 'To reset your password, enter your email below. In this e-mail will be sent a link to reset your password. The link 30 min.'),
(872, 291, 'ua', 'ВІДПРАВИТИ />'),
(873, 291, 'ru', 'ОТПРАВИТЬ />'),
(874, 291, 'en', 'SEND />'),
(875, 292, 'ua', 'Зміна email'),
(876, 292, 'ru', 'Изменение email'),
(877, 292, 'en', 'Changing email'),
(878, 293, 'ua', 'Введіть нову електронну пошту в поле нижче.На дану електронну пошту буде відправлено посиланням для підтвердження дійсності адреси. Термін дії посилання 30 хв.'),
(879, 293, 'ru', 'Введите новую электронную почту в поле ниже.На данную электронную почту будет отправлено ссылкой для подтверждения подлинности адреса. Срок действия ссылки 30 мин.'),
(880, 293, 'en', 'Enter a new e-mail in this field below.Na email will be sent a link to confirm validity of the address. The link 30 min.'),
(881, 294, 'ua', 'ВІДПРАВИТИ />'),
(882, 294, 'ru', 'ОТПРАВИТЬ />'),
(883, 294, 'en', 'SEND />'),
(884, 295, 'ua', 'Змінити email'),
(885, 295, 'ru', 'Изменить email'),
(886, 295, 'en', 'Change email'),
(887, 238, 'ua', 'Час дії посилання для відновлення паролю вичерпано.'),
(888, 238, 'ru', 'Время действия ссылки для восстановления пароля исчерпан.'),
(890, 239, 'ua', 'Для відновлення паролю перейдіть по посиланню нижче:'),
(891, 239, 'ru', 'Для восстановления пароля перейдите по ссылке ниже:'),
(893, 240, 'ua', 'Нажміть тут для відновлення паролю'),
(894, 240, 'ru', 'Нажмите здесь для восстановления пароля'),
(896, 281, 'ua', 'Відновлення паролю'),
(897, 281, 'ru', 'Восстановление пароля'),
(898, 281, 'en', 'Password recovery'),
(899, 282, 'ua', 'Підтвердження email'),
(900, 282, 'ru', 'Подтверждение email'),
(901, 282, 'en', 'Сonfirmation email'),
(902, 283, 'ua', 'Для підтвердження email перейдіть по посиланню нижче:'),
(903, 283, 'ru', 'Для подтверждения email перейдите по ссылке ниже:'),
(904, 283, 'en', 'For confirmation email click on the link below:'),
(905, 284, 'ua', 'Нажміть тут для підтвердження email'),
(906, 284, 'ru', 'Нажмите здесь для подтверждения email'),
(907, 284, 'en', 'Click here to confirm your email'),
(908, 285, 'ua', 'Відновлення паролю'),
(909, 285, 'ru', 'Восстановление пароля'),
(910, 285, 'en', 'Password recovery'),
(911, 286, 'ua', 'Зміна email'),
(912, 286, 'ru', 'Смена email'),
(913, 286, 'en', 'Change email'),
(914, 287, 'ua', 'Вітаємо!'),
(915, 287, 'ru', 'Поздравляем!'),
(916, 287, 'en', 'Congratulations!'),
(917, 288, 'ua', 'Ви успішно змінили електронну пошту.'),
(918, 288, 'ru', 'Вы успешно изменили email.'),
(919, 288, 'en', 'You have successfully changed your email.'),
(920, 289, 'ua', 'Відновлення паролю'),
(921, 289, 'ru', 'Восстановление пароля'),
(922, 289, 'en', 'Password recovery'),
(923, 290, 'ua', 'Щоб відновити пароль, введіть свою електронну пошту нижче. На данну електронну пошту буде відправлено посилання для відновлення паролю. Термін дії посилання 30 хв.'),
(924, 290, 'ru', 'Чтобы восстановить пароль, введите свою электронную почту ниже. На эту электронную почту будет отправлена ссылка для восстановления пароля. Срок действия ссылки 30 мин.'),
(925, 290, 'en', 'To reset your password, enter your email below. In this e-mail will be sent a link to reset your password. The link 30 min.'),
(926, 291, 'ua', 'ВІДПРАВИТИ />'),
(927, 291, 'ru', 'ОТПРАВИТЬ />'),
(928, 291, 'en', 'SEND />'),
(929, 292, 'ua', 'Зміна email'),
(930, 292, 'ru', 'Изменение email'),
(931, 292, 'en', 'Changing email'),
(932, 293, 'ua', 'Введіть нову електронну пошту в поле нижче.На дану електронну пошту буде відправлено посилання для підтвердження дійсності адреси. Термін дії посилання 30 хв.'),
(933, 293, 'ru', 'Введите новую электронную почту в поле ниже.На данную электронную почту будет отправлена ссылка для подтверждения подлинности адреса. Срок действия ссылки 30 мин.'),
(934, 293, 'en', 'Enter a new e-mail in this field below.Na email will be sent a link to confirm validity of the address. The link 30 min.'),
(935, 294, 'ua', 'ВІДПРАВИТИ />'),
(936, 294, 'ru', 'ОТПРАВИТЬ />'),
(937, 294, 'en', 'SEND />'),
(938, 295, 'ua', 'Змінити email'),
(939, 295, 'ru', 'Изменить email'),
(940, 295, 'en', 'Change email'),
(941, 296, 'ua', 'Випускники'),
(942, 296, 'ru', 'Выпускники'),
(943, 296, 'en', 'Alumni'),
(944, 297, 'ua', 'Наші випускники'),
(945, 297, 'ru', 'Наши выпускники'),
(946, 297, 'en', 'Our graduates'),
(947, 298, 'ua', 'Дякуємо за реєстрацію!'),
(948, 298, 'ru', 'Спасибо за регистрацию!'),
(949, 298, 'en', 'Thanks for signing up!'),
(950, 299, 'ua', 'Дякуємо за реєстрацію на сайті! Для активації Вашого облікового запису, будь ласка перейдіть за посиланням: '),
(951, 299, 'ru', 'Спасибо за регистрацию на сайте! Для активации учетной записи, пожалуйста перейдите по ссылке: '),
(952, 299, 'en', 'Thank you for registering on the site! To activate your account, please go to: '),
(953, 300, 'ua', 'Ви ввели невірні дані.'),
(954, 300, 'ru', 'Вы ввели неверные данные.'),
(955, 300, 'en', 'You entered incorrect data.'),
(956, 301, 'ua', 'Ви ввели не дійсну електронну адресу'),
(957, 301, 'ru', 'Вы ввели недействительный электронный адрес'),
(958, 301, 'en', 'You entered is not a valid email address'),
(959, 302, 'ua', 'Розмір файла перевищує 5 Мб'),
(960, 302, 'ru', 'Размер файла превышает 5 Мб'),
(961, 302, 'en', 'File size exceeds 5 MB'),
(962, 303, 'ua', 'Активація облікового запису'),
(963, 303, 'ru', 'Активация учетной записи'),
(964, 303, 'en', 'Account Activation'),
(965, 304, 'ua', 'Ви успішно активували обліковий запис'),
(966, 304, 'ru', 'Вы успешно активировали аккаунт'),
(967, 304, 'en', 'You have successfully activated your account'),
(968, 305, 'ua', 'Спасибі, тепер ваша реєстрація завершена. Щоб увійти на сайт під Вашим обліковим записом, введіть електронну пошту та пароль в формі Вхід.'),
(969, 305, 'ru', 'Спасибо, теперь ваша регистрация завершена. Чтобы войти на сайт под вашей учетной записью, введите адрес электронной почты и пароль в форме Вход.'),
(970, 305, 'en', 'Thank you, now your registration is complete. To enter the site under your account, enter your email and password in the login form.'),
(971, 306, 'ua', 'Дякуємо за реєстрацію!'),
(972, 306, 'ru', 'Спасибо за регистрацию!'),
(973, 306, 'en', 'Thanks for signing up!'),
(974, 307, 'ua', 'На адресу'),
(975, 307, 'ru', 'На адрес'),
(976, 307, 'en', 'Addressed'),
(977, 308, 'ua', 'було відправлено листа з інструкціями щодо активації облікового запису. Після отримання листа по електронній пошті, ви ПОВИННІ відвідати URL, вказаний у листі, щоб активувати ваш аккаунт.'),
(978, 308, 'ru', 'было отправлено письмо с инструкциями по активации аккаунта. После получения письма по электронной почте, вы ДОЛЖНЫ посетить URL, указанный в письме, чтобы активировать ваш аккаунт.'),
(979, 308, 'en', 'was sent a letter with instructions to activate your account. After receiving an e-mail, you should visit URL, specified in the email to activate your account.'),
(980, 309, 'ua', 'Зміна email'),
(981, 309, 'ru', 'Изменение email'),
(982, 309, 'en', 'Changing email'),
(983, 310, 'ua', 'було відправлено листа з інструкціями процедури зміни email. Після отримання листа по електронній пошті, ВИ ПОВИННІ відвідати URL, вказаний у листі, щоб зміна email прошла успішно.'),
(984, 310, 'ru', 'было отправлено письмо с инструкциями процедуры изменения email. После получения письма по электронной почте, ВЫ ДОЛЖНЫ посетить URL, указанный в письме, чтобы изменение email прошла успешно.'),
(985, 310, 'en', 'sent a letter to the instructions procedures change email. After receiving an e-mail, you must visit the URL, specified in the letter to change email passed successfully.'),
(986, 311, 'ua', 'Обліковий запис не активовано'),
(987, 311, 'ru', 'Аккаунт не активирован'),
(988, 311, 'en', 'Your account is not activated'),
(989, 312, 'ua', 'Спочатку активуйте обліковий запис'),
(990, 312, 'ru', 'Сначала активируйте аккаунт'),
(991, 312, 'en', 'First activate account'),
(992, 313, 'ua', 'Перед тим як увійти на сайт, активуйте Ваш обліковий запис. Лист з активацією був відправлений на електронну пошту:'),
(993, 313, 'ru', 'Перед тем как войти на сайт, активируйте Ваш аккаунт. Письмо с активацией был отправлен на электронную почту:'),
(994, 313, 'en', 'Before you sign activate your account. The letter was sent with the activation e-mail:'),
(995, 314, 'ua', 'Зміна паролю'),
(996, 314, 'ru', 'Изменение пароля'),
(997, 314, 'en', 'Password Reset'),
(998, 315, 'ua', 'було відправлено листа з інструкціями процедури зміни паролю. Після отримання листа по електронній пошті, ВИ ПОВИННІ відвідати URL, вказаний у листі, щоб змінити пароль.'),
(999, 315, 'ru', 'было отправлено письмо с инструкциями процедуры смены пароля. После получения письма по электронной почте, ВЫ ДОЛЖНЫ посетить URL, указанный в письме, чтобы изменить пароль.'),
(1000, 315, 'en', 'sent a letter with procedure instructions to reset your password. After receiving an e-mail, you must visit the URL, specified in the email to reset your password.'),
(1001, 422, 'ua', 'У даному занятті ще нічого немає ('),
(1002, 422, 'ru', 'В данном занятии еще ничего нет ('),
(1003, 315, 'ru', 'было отправлено письмо с инструкциями процедуры смены пароля. После получения письма по электронной почте, ВЫ ДОЛЖНЫ посетить URL, указанный в письме, чтобы изменить пароль.'),
(1004, 315, 'en', 'sent a letter with procedure instructions to reset your password. After receiving an e-mail, you must visit the URL, specified in the email to reset your password.'),
(1005, 422, 'en', 'There are not any content in this lecture ('),
(1009, 316, 'en', 'Position:'),
(1010, 316, 'ua', 'Посада:'),
(1011, 316, 'ru', 'Должность:'),
(1012, 317, 'en', 'Place of work:'),
(1013, 317, 'ua', 'Місце роботи:'),
(1014, 317, 'ru', 'Место работы:'),
(1015, 318, 'en', 'Completed by him/her:'),
(1016, 318, 'ua', 'Курс закінчив:'),
(1017, 318, 'ru', 'Курс закончил:'),
(1018, 319, 'en', 'Rating:'),
(1019, 319, 'ua', 'Рейтинг:'),
(1020, 319, 'ru', 'Рейтинг:'),
(1021, 320, 'en', 'Issue:'),
(1022, 320, 'ua', 'Випуск:'),
(1023, 320, 'ru', 'Выпуск:'),
(1025, 337, 'ua', 'Спробуємо вгадати:'),
(1026, 337, 'en', 'Try to guess:'),
(1027, 337, 'ru', 'Попробуем угадать:'),
(1028, 338, 'ua', 'власна квартира'),
(1030, 338, 'ru', 'собственная квартира'),
(1031, 339, 'ua', 'чи навіть будинок?'),
(1032, 339, 'en', 'or even house?'),
(1033, 339, 'ru', 'или даже дом?'),
(1034, 340, 'ua', 'ГАРНИЙ'),
(1035, 340, 'en', 'GOOD'),
(1036, 340, 'ru', 'ХОРОШИЙ'),
(1037, 341, 'ua', 'автомобіль'),
(1038, 341, 'en', 'car'),
(1039, 341, 'ru', 'автомобиль'),
(1040, 342, 'ua', 'закордонні'),
(1041, 342, 'en', 'foreign'),
(1042, 342, 'ru', 'заграничные'),
(1043, 343, 'ua', 'подорожі,'),
(1044, 343, 'en', 'trips'),
(1045, 343, 'ru', 'путешествия'),
(1046, 344, 'ua', 'можливо'),
(1047, 344, 'en', 'perhaps'),
(1048, 344, 'ru', 'возможно'),
(1049, 345, 'ua', 'ДО ЕКЗОТИЧНИХ КРАЇН?'),
(1050, 345, 'en', 'TO EXOTIC COUNTRIES?'),
(1051, 345, 'ru', 'В ЭКЗОТИЧЕСКИЕ СТРАНЫ?'),
(1052, 346, 'ua', 'Забезпечене'),
(1053, 346, 'en', 'Rich'),
(1054, 346, 'ru', 'Обеспеченная'),
(1055, 347, 'ua', 'життя'),
(1056, 347, 'en', 'life'),
(1057, 347, 'ru', 'жизнь'),
(1058, 348, 'ua', 'для себе і близьких,'),
(1059, 348, 'en', 'for themselves and loved once'),
(1060, 348, 'ru', 'для себя и близких'),
(1061, 349, 'ua', 'коли не доводиться думати про'),
(1062, 349, 'en', 'when you have not think about'),
(1063, 349, 'ru', 'когда не приходится думать о'),
(1064, 350, 'ua', 'гроші?'),
(1065, 350, 'en', 'money?'),
(1066, 350, 'ru', 'деньгах?'),
(1067, 351, 'ua', 'А, може, це свобода жити своїм <br>життям? Самостійно керувати <br> власним часом з можливістю <br>працювати за <span>зручним <br>графіком</span> без необхідності <br>щодня їздити на роботу, але<br> при цьому мати стабільно<br> високий дохід?'),
(1068, 351, 'en', 'And, perhaps, is the freedom to live<br> their lives? Independently manage <br> own time with the ability to work on <br> <span>convenient schedule </ span> without the need <br> daily commute to work, but still have <br> <br> stable high income?'),
(1069, 351, 'ru', 'А, может, это свобода жить своей жизнью? Самостоятельно управлять собственным временем с возможностью работать по <span> удобному графику </ span> без необходимости ежедневно ездить на работу, но при этом иметь стабильно высокий доход?'),
(1070, 352, 'ua', 'Як щодо'),
(1071, 352, 'en', 'What about'),
(1072, 352, 'ru', 'Что насчёт'),
(1073, 353, 'ua', '/в місяць?'),
(1074, 353, 'en', ' per month?'),
(1075, 353, 'ru', '/в месяц?'),
(1076, 354, 'ua', 'з можливістю працювати за гнучким<br>графіком та дистанційно? Ти думаєш, що в<br>нашій країні такі умови лише у керівників<br>та власників бізнесу?<br><br>У нас хороша новина:<br>'),
(1077, 354, 'en', 'with the ability to work flexible schedule and <br> remotely? You think that in our country <br> conditions only <br> managers and business owners? <br> <br> We have good news:<br>'),
(1078, 354, 'ru', 'с возможностью работать по гибкому <br> графику и дистанционно? Ты думаешь, что в <br> нашей стране такие условия только у руководителей <br> и владельцев бизнеса? <br> <br> У нас хорошая новость: <br>'),
(1079, 355, 'ua', 'вже через рік-два-три так зможеш<br>заробляти і<br><br>ТИ . . . '),
(1080, 355, 'en', 'in a year or two or three so <br> able to earn and <br> <br> you. . .'),
(1081, 355, 'ru', 'уже через год-два-три так сможешь <br> зарабатывать и <br> <br> ТЫ. . .'),
(1082, 356, 'ua', 'Професія майбутнього'),
(1083, 356, 'en', 'Occupation future'),
(1084, 356, 'ru', 'Профессия будущего'),
(1085, 357, 'ua', 'Сьогодні у тебе є реальна можливість <br>\r\n																				 поєднати хороший заробіток, гнучкий<br>\r\n																				 графік роботи та зручність<br>\r\n																				 дистанційної роботи. І це не<br>\r\n																				 “заработок в интернете”, про який<br>\r\n																				 кричить банерна реклама на багатьох<br>\r\n																				 сайтах. Ми віримо у те, що високого <br>\r\n																				 стабільного доходу можна досягти <br>\r\n																				 лише за допомогою власних зусиль.'),
(1086, 357, 'en', 'Today you have a real opportunity <br>\r\n																				 combine the good salary, flexible <br>\r\n																				 schedule and convenience <br>\r\n																				 teleworking. This is not <br>\r\n																				 "Earnings on the Internet", which <br>\r\n																				 screaming banner ads on many <br>\r\n																				 sites. We believe that high <br>\r\n																				 stable income can be achieved <br>\r\n																				 only through their own efforts.'),
(1087, 357, 'ru', 'Сегодня у тебя есть реальная возможность <br>\r\n																				 совместить хороший заработок, гибкий <br>\r\n																				 график работы и удобство <br>\r\n																				 дистанционной работы. И это не <br>\r\n																				 "Заработок в интернете", о котором <br>\r\n																				 кричит баннерная реклама на многих <br>\r\n																				 сайтах. Мы верим в то, что высокого <br>\r\n																				 стабильного дохода можно достичь <br>\r\n																				 только с помощью собственных усилий.'),
(1088, 358, 'ua', 'Ми живемо в епоху, коли'),
(1089, 358, 'en', 'We live in an era when'),
(1090, 358, 'ru', 'Мы живем в эпоху, когда'),
(1091, 359, 'ua', 'ГОЛОВНИМ ДВИГУНОМ РОЗВИТКУ СВІТОВОЇ ЕКОНОМІКИ Є ІНФОРМАЦІЙНІ   <br>ТЕХНОЛОГІЇ'),
(1092, 359, 'en', 'THE MAIN ENGINE OF THE GLOBAL ECONOMY ARE <br> INFORMATION TECHNOLOGY'),
(1093, 359, 'ru', 'ГЛАВНЫМ ДВИГАТЕЛЕМ РАЗВИТИЯ МИРОВОЙ ЭКОНОМИКИ ЕСТЬ ИНФОРМАЦИОННЫЕ <br> ТЕХНОЛОГИИ'),
(1094, 360, 'ua', 'Як?'),
(1095, 360, 'en', 'How?'),
(1096, 360, 'ru', 'Как?'),
(1097, 361, 'ua', '<li>Вони дозволяють досягти нових проривних результатів у   <br>\r\n																						 традиційних галузях: виробництві та послугах.</li>\r\n																				 <li>саме інформаційні технології повністю змінили і <br>\r\n																						 продовжують трансформувати індустрії звязку,   <br>\r\n																						 розваг (книги, музика, фільми), банківських послуг;</li>\r\n																				 <li>також такі традиційні бізнеси, як послуги таксі (Uber);</li>\r\n																				 <li>  готелів (Airbnb);</li>\r\n																				 <li>навчання (Coursera).</li>'),
(1098, 361, 'en', '<li> They can achieve new breakthrough results in <br>\r\n																							traditional industries, manufacturing and services. </ li>\r\n																							<li> information technology is completely changed and <br>\r\n																							communication industry continues to transform, <br>\r\n																							entertainment (books, music, movies), banking services; </ li>\r\n																							<li> as traditional businesses such as taxi services (Uber); </ li>\r\n																							<li> hotels (Airbnb); </ li>\r\n																							<li> Learning (Coursera). </ li>'),
(1099, 361, 'ru', '<li> Они позволяют достичь новых прорывных результатов в <br>\r\n																							традиционных отраслях: производстве и услугах. </ li>\r\n																							<li> именно информационные технологии полностью изменили и <br>\r\n																							продолжают трансформировать индустрии связи, <br>\r\n																							развлечений (книги, музыка, фильмы), банковских услуг; </ li>\r\n																							<li> также такие традиционные бизнесы, как услуги такси (Uber); </ li>\r\n																							<li> гостиниц (Airbnb); </ li>\r\n																							<li> обучения (Coursera). </ li>'),
(1100, 362, 'ua', 'Герої інформаційної епохи - це спеціалісти з інформаційних технологій.<br>\r\n																				 Вони знаходяться на передовій змін, вони придумали та<br>\r\n																				 продовжують розвивати Windows, iOS, Android, а також мільйони<br>\r\n																				 додатків до них, вони створюють соціальні мережі, сайти та бази<br>\r\n																				 даних.'),
(1101, 362, 'en', 'Heroes of the information age - the specialists in information technologies. <br>\r\n																				 They are at the forefront of change, they came up and <br>\r\n																				 continue to develop Windows, iOS, Android, and millions <br>\r\n																				 annexes, they create social networks, websites and database <br>\r\n																				 data.'),
(1102, 362, 'ru', 'Герои информационной эпохи - это специалисты по информационным технологиям. <br>\r\n																				 Они находятся на передовой изменений, они придумали и <br>\r\n																				 продолжают развивать Windows, iOS, Android, а также миллионы <br>\r\n																				 приложений к ним, они создают социальные сети, сайты и базы <br>\r\n																				 данных.'),
(1103, 363, 'ua', 'Розпочинай вчитися вже зараз!'),
(1104, 363, 'en', 'Starts learn now!'),
(1105, 363, 'ru', 'Начинай учиться уже сейчас!'),
(1106, 337, 'ua', 'Спробуємо вгадати:'),
(1107, 337, 'en', 'Try to guess:'),
(1108, 337, 'ru', 'Попробуем угадать:'),
(1109, 338, 'ua', 'власна квартира'),
(1111, 338, 'ru', 'собственная квартира'),
(1112, 339, 'ua', 'чи навіть будинок?'),
(1113, 339, 'en', 'or even a house?'),
(1114, 339, 'ru', 'или даже дом?'),
(1115, 340, 'ua', 'ГАРНИЙ'),
(1116, 340, 'en', 'A NICE'),
(1117, 340, 'ru', 'ХОРОШИЙ'),
(1118, 341, 'ua', 'автомобіль'),
(1119, 341, 'en', 'car'),
(1120, 341, 'ru', 'автомобиль'),
(1121, 342, 'ua', 'закордонні'),
(1122, 342, 'en', ' '),
(1123, 342, 'ru', 'заграничные'),
(1124, 343, 'ua', 'подорожі,'),
(1125, 343, 'en', ' '),
(1126, 343, 'ru', 'путешествия'),
(1127, 344, 'ua', 'можливо'),
(1128, 344, 'en', ' '),
(1129, 344, 'ru', 'возможно'),
(1130, 345, 'ua', 'ДО ЕКЗОТИЧНИХ КРАЇН?'),
(1131, 345, 'en', 'TRAVELLING ABROAD?'),
(1132, 345, 'ru', 'В ЭКЗОТИЧЕСКИЕ СТРАНЫ?'),
(1133, 346, 'ua', 'Забезпечене'),
(1134, 346, 'en', 'To have financial'),
(1135, 346, 'ru', 'Обеспеченная'),
(1136, 347, 'ua', 'життя'),
(1137, 347, 'en', 'security'),
(1138, 347, 'ru', 'жизнь'),
(1139, 348, 'ua', 'для себе та близьких,'),
(1140, 348, 'en', 'for yourself and your family?'),
(1141, 348, 'ru', 'для себя и близких'),
(1142, 349, 'ua', 'коли не доводиться думати про'),
(1143, 349, 'en', ' '),
(1144, 349, 'ru', 'когда не приходится думать о'),
(1145, 350, 'ua', 'гроші?'),
(1146, 350, 'en', ' '),
(1147, 350, 'ru', 'деньгах?'),
(1148, 351, 'ua', 'А, може, це свобода жити своїм життям? Самостійно керувати власним часом з можливістю працювати за зручним графіком без необхідності щодня їздити на роботу, але при цьому мати стабільно високий дохід?'),
(1149, 351, 'en', 'Or, perhaps, it is the freedom to live your own way of  life? Manage your  own time  with a possibility to work flexitime without going to  work every day, but at the same time having a stable and high income?'),
(1150, 351, 'ru', 'А, может, это свобода жить своей жизнью? Самостоятельно управлять собственным временем с возможностью работать по <span> удобному графику </ span> без необходимости ежедневно ездить на работу, но при этом иметь стабильно высокий доход?'),
(1151, 352, 'ua', 'Як щодо'),
(1152, 352, 'en', 'What about earning'),
(1153, 352, 'ru', 'Что насчёт'),
(1154, 353, 'ua', '/в місяць?'),
(1155, 353, 'en', ' per month?'),
(1156, 353, 'ru', '/в месяц?'),
(1157, 354, 'ua', 'з можливістю працювати за гнучким графіком та дистанційно? Ти думаєш, що в нашій країні такі умови можливі лише для керівників та власників бізнесу?<br><br>У нас хороша новина:<br>'),
(1158, 354, 'en', 'with a possibility to have  flexible  work schedule or work remotely? Do you think that in our country  only managers and business owners can have such benefits ?<br> <br> We have good news:<br>'),
(1159, 354, 'ru', 'с возможностью работать по гибкому <br> графику и дистанционно? Ты думаешь, что в <br> нашей стране такие условия только у руководителей <br> и владельцев бизнеса? <br> <br> У нас хорошая новость: <br>'),
(1160, 355, 'ua', 'вже через рік-два-три так зможеш<br>заробляти і<br><br>ТИ . . . '),
(1161, 355, 'en', 'in a year , two or three you will have them as  well.'),
(1162, 355, 'ru', 'уже через год-два-три так сможешь <br> зарабатывать и <br> <br> ТЫ. . .'),
(1163, 356, 'ua', 'Професія майбутнього'),
(1164, 356, 'en', 'Profession of the  future'),
(1165, 356, 'ru', 'Профессия будущего'),
(1166, 357, 'ua', 'Сьогодні у тебе є реальна можливість поєднати гарний заробіток, гнучкий графік роботи та зручність дистанційної роботи. І це не фантомні схеми швидкого збагачення, які обіцяє численна банерна реклама. Віримо, що високого стабільного доходу можна досягти лише за допомогою власних зусиль.'),
(1167, 357, 'en', 'Today you have a real opportunity to combine  a good salary, flexible working hours with the  convenience of distance work. And it is not  phantom get - rich- quick schemes  promised by a lot of  banner ads.\r\nWe believe that stable , high income can be achieved only by dint of your efforts.'),
(1168, 357, 'ru', 'Сегодня у тебя есть реальная возможность <br>\r\n																				 совместить хороший заработок, гибкий <br>\r\n																				 график работы и удобство <br>\r\n																				 дистанционной работы. И это не <br>\r\n																				 "Заработок в интернете", о котором <br>\r\n																				 кричит баннерная реклама на многих <br>\r\n																				 сайтах. Мы верим в то, что высокого <br>\r\n																				 стабильного дохода можно достичь <br>\r\n																				 только с помощью собственных усилий.'),
(1169, 358, 'ua', 'Ми живемо в епоху, коли'),
(1170, 358, 'en', 'We live in  the age when'),
(1171, 358, 'ru', 'Мы живем в эпоху, когда'),
(1172, 359, 'ua', 'ГОЛОВНИМ ДВИГУНОМ РОЗВИТКУ СВІТОВОЇ ЕКОНОМІКИ Є ІНФОРМАЦІЙНІ ТЕХНОЛОГІЇ (IT).'),
(1173, 359, 'en', ' INFORMATION TECHNOLOGY (IT) IS THE ENFINE OF WORLD ECONOMY'),
(1174, 359, 'ru', 'ГЛАВНЫМ ДВИГАТЕЛЕМ РАЗВИТИЯ МИРОВОЙ ЭКОНОМИКИ ЕСТЬ ИНФОРМАЦИОННЫЕ <br> ТЕХНОЛОГИИ'),
(1175, 360, 'ua', 'Як?'),
(1176, 360, 'en', 'How?'),
(1177, 360, 'ru', 'Как?'),
(1178, 361, 'ua', '<li>Вони дозволяють досягти проривних результатів у традиційних галузях: виробництві та послугах;</li>\r\n<li>Саме інформаційні технології повністю змінили і продовжують трансформувати індустрії звязку, розваг (книги, музика, фільми), банківських послуг;</li>\r\n<li>а також такі традиційні бізнеси, як послуги таксі (Uber);</li>\r\n<li>готелів (Airbnb);</li>\r\n<li>навчання (Coursera).</li>'),
(1179, 361, 'en', '<li>IT allows us to achieve breakthrough results in traditional industries such as  manufacturing and  providing services;</ li>\r\n<li>Information technologies entirely transformed and continue changing communication, entertainment(books, music,films) industries , banking and traditional business services;</ li>\r\n<li>such as taxi(Uber);</ li>\r\n<li>hotels(Airbnb);</ li>\r\n<li>education(Coursera).</ li>'),
(1180, 361, 'ru', '<li> Они позволяют достичь новых прорывных результатов в <br>\r\n																							традиционных отраслях: производстве и услугах. </ li>\r\n																							<li> именно информационные технологии полностью изменили и <br>\r\n																							продолжают трансформировать индустрии связи, <br>\r\n																							развлечений (книги, музыка, фильмы), банковских услуг; </ li>\r\n																							<li> также такие традиционные бизнесы, как услуги такси (Uber); </ li>\r\n																							<li> гостиниц (Airbnb); </ li>\r\n																							<li> обучения (Coursera). </ li>'),
(1181, 362, 'ua', 'Герої інформаційної епохи - це спеціалісти з інформаційних технологій. Вони знаходяться на передовій змін, вони придумали та продовжують розвивати Windows, iOS, Android, а також мільйони додатків до них, вони створюють соціальні мережі, сайти та бази даних.'),
(1182, 362, 'en', 'The heroes of  the information age are information technologies specialists who are at the forefront of changes. They have  invented and continue developing Windows, iOS, Android and millions apps  for them. They create social networks, sites and databases.'),
(1183, 362, 'ru', 'Герои информационной эпохи - это специалисты по информационным технологиям. <br>\r\n																				 Они находятся на передовой изменений, они придумали и <br>\r\n																				 продолжают развивать Windows, iOS, Android, а также миллионы <br>\r\n																				 приложений к ним, они создают социальные сети, сайты и базы <br>\r\n																				 данных.'),
(1184, 363, 'ua', 'Розпочинай вчитися вже зараз!'),
(1185, 363, 'en', 'Starts learn now!'),
(1186, 363, 'ru', 'Начинай учиться уже сейчас!'),
(1187, 321, 'en', 'Contents:'),
(1188, 321, 'ua', 'Зміст:'),
(1189, 321, 'ru', 'Содержание:'),
(1190, 364, 'ua', 'Модуль'),
(1191, 364, 'ru', 'Модуль'),
(1192, 364, 'en', 'Module'),
(1193, 365, 'ua', 'Новий модуль:'),
(1194, 365, 'ru', 'Новый модуль:'),
(1195, 365, 'en', 'New module:'),
(1196, 366, 'ua', 'Модуль'),
(1197, 366, 'ru', 'Модуль'),
(1198, 366, 'en', 'Module'),
(1199, 367, 'ua', 'Додати'),
(1200, 367, 'ru', 'Добавить'),
(1201, 367, 'en', 'Add'),
(1202, 368, 'ua', 'Скасувати'),
(1203, 368, 'ru', 'Отменить'),
(1204, 368, 'en', 'Cancel'),
(1205, 369, 'ua', 'Введіть назву модуля'),
(1206, 369, 'ru', 'Введите название модуля'),
(1207, 369, 'en', 'Enter the name of the module'),
(1208, 370, 'ua', 'Введіть кількість годин в день'),
(1209, 370, 'ru', 'Введите количество часов в день'),
(1210, 370, 'en', 'Enter the number of hours per day'),
(1211, 371, 'ua', 'Введіть кількість днів на тиждень'),
(1212, 371, 'ru', 'Введите количество дней в неделю'),
(1213, 371, 'en', 'Enter the number of days a week'),
(1214, 372, 'ua', 'Введіть ціну модуля'),
(1215, 372, 'ru', 'Введите цену модуля'),
(1216, 372, 'en', 'Enter price module'),
(1217, 373, 'ua', 'Редагувати список занять'),
(1218, 373, 'ru', 'Редактировать список занятий'),
(1219, 373, 'en', 'Edit the list of classes'),
(1220, 374, 'ua', 'Додати заняття'),
(1221, 374, 'ru', 'Добавить занятия'),
(1222, 374, 'en', 'Add occupation'),
(1223, 375, 'ua', 'У даному модулі занять немає.'),
(1224, 375, 'ru', 'В данном модуле занятий нет.'),
(1225, 375, 'en', 'This module classes there.'),
(1226, 376, 'ua', 'Ви впевнені, що хочете видалити дане заняття?'),
(1227, 376, 'ru', 'Вы уверены, что хотите удалить данное занятие?'),
(1228, 376, 'en', 'Are you sure you want to remove this class?'),
(1229, 377, 'ua', 'Ви впевнені, що хочете видалити це заняття?'),
(1230, 377, 'ru', 'Вы уверены, что хотите удалить это занятие?'),
(1231, 377, 'en', 'Are you sure you want to delete this session?'),
(1232, 378, 'ua', 'Дезактивувати заняття'),
(1233, 378, 'ru', 'Дезактивировать занятие'),
(1234, 378, 'en', 'Deactivate lesson'),
(1235, 379, 'ua', 'Підняти заняття вгору на 1 позицію'),
(1236, 379, 'ru', 'Поднять занятие вверх на 1 позицию'),
(1237, 379, 'en', 'Lift the lesson up to the 1 position'),
(1238, 380, 'ua', 'Опустити модуль вниз на 1 позицію'),
(1239, 380, 'ru', 'Опустить занятие вниз на 1 позицию'),
(1240, 380, 'en', 'Lower the lesson down to the 1 position'),
(1241, 381, 'ua', 'Заняття'),
(1242, 381, 'ru', 'Занятие'),
(1243, 381, 'en', 'Lesson'),
(1244, 382, 'ua', 'Нове заняття:'),
(1245, 382, 'ru', 'Новое занятие:'),
(1246, 382, 'en', 'New lesson:'),
(1247, 383, 'ua', 'Додати'),
(1248, 383, 'ru', 'Добавить'),
(1249, 383, 'en', 'Add'),
(1250, 384, 'ua', 'Скасувати'),
(1251, 384, 'ru', 'Отменить'),
(1252, 384, 'en', 'Cancel'),
(1253, 385, 'ua', 'Спочатку оцініть викладача по трьох критеріях'),
(1254, 385, 'ru', 'Сначала оцените преподавателя по трем критериям'),
(1255, 385, 'en', 'At first rate teacher three criteria'),
(1256, 386, 'ua', 'Ваш відгук відправлено. Зачекайте модерації.'),
(1257, 386, 'ru', 'Ваш отзыв отправлен. Подождите модерации.'),
(1258, 386, 'en', 'Your review has been sent. Wait moderation.'),
(1259, 387, 'ua', 'Поле обов''язкове для заповнення'),
(1260, 387, 'ru', 'Поле обязательное для заполнения'),
(1261, 387, 'en', 'This field is required'),
(1262, 388, 'ua', 'Введіть ціле невід''ємне число'),
(1263, 388, 'ru', 'Введите целое неотрицательное число'),
(1264, 388, 'en', 'Enter a non-negative integer'),
(1265, 389, 'ua', 'Введіть дату в форматі рррр-мм-дд'),
(1266, 389, 'ru', 'Введите дату в формате гггг-мм-дд'),
(1267, 389, 'en', 'Enter the date in yyyy-mm-dd'),
(1268, 390, 'ua', 'Курси'),
(1269, 390, 'ru', 'Курсы'),
(1270, 390, 'en', 'Courses'),
(1271, 391, 'ua', 'Створити'),
(1272, 391, 'ru', 'Создать'),
(1273, 391, 'en', 'Create'),
(1274, 392, 'ua', 'Список курсів'),
(1275, 392, 'ru', 'Список курсов'),
(1276, 392, 'en', 'List of courses'),
(1277, 393, 'ua', 'Управління курсами'),
(1278, 393, 'ru', 'Управление курсами'),
(1279, 393, 'en', 'Management courses'),
(1280, 394, 'ua', 'Створити курс'),
(1281, 394, 'ru', 'Создать курс'),
(1282, 394, 'en', 'Create course'),
(1283, 395, 'ua', 'РРРР-ММ-ДД'),
(1284, 395, 'ru', 'ГГГГ-ММ-ДД'),
(1285, 395, 'en', 'YYYY-MM-DD'),
(1286, 396, 'ua', 'В розробці'),
(1287, 396, 'ru', 'В разработке'),
(1288, 396, 'en', 'In development'),
(1289, 397, 'ua', 'Готовий'),
(1290, 397, 'ru', 'Готовый'),
(1291, 397, 'en', 'Ready'),
(1292, 398, 'ua', 'Створити'),
(1293, 398, 'ru', 'Создать'),
(1294, 398, 'en', 'Create'),
(1295, 399, 'ua', 'Зберегти'),
(1296, 399, 'ru', 'Сохранить'),
(1297, 399, 'en', 'Save'),
(1298, 400, 'ua', 'Мова'),
(1299, 400, 'ru', 'Язык'),
(1300, 400, 'en', 'Language'),
(1301, 401, 'ua', 'Назва'),
(1302, 401, 'ru', 'Название'),
(1303, 401, 'en', 'Title'),
(1304, 402, 'ua', 'Тривалість в годинах'),
(1305, 402, 'ru', 'Продолжительность в часах'),
(1306, 402, 'en', 'Duration in hours'),
(1307, 403, 'ua', 'Кількість модулів'),
(1308, 403, 'ru', 'Количество модулей'),
(1309, 403, 'en', 'Number of units'),
(1310, 404, 'ua', 'Вартість'),
(1311, 404, 'ru', 'Стоимость'),
(1312, 404, 'en', 'Price'),
(1313, 405, 'ua', 'Для кого'),
(1314, 405, 'ru', 'Для кого'),
(1315, 405, 'en', 'For whom'),
(1316, 406, 'ua', 'Що навчитеся'),
(1317, 406, 'ru', 'Что научитесь'),
(1318, 406, 'en', 'What learn'),
(1319, 407, 'ua', 'Що отримаєте'),
(1320, 407, 'ru', 'Что получите'),
(1321, 407, 'en', 'Things get'),
(1322, 408, 'ua', 'Зображення'),
(1323, 408, 'ru', 'Изображения'),
(1324, 408, 'en', 'Image'),
(1325, 409, 'ua', 'Рівень'),
(1326, 409, 'ru', 'Уровень'),
(1327, 409, 'en', 'Level'),
(1328, 410, 'ua', 'Початок'),
(1329, 410, 'ru', 'Начало'),
(1330, 410, 'en', 'Beginning'),
(1331, 411, 'ua', 'Статус'),
(1332, 411, 'ru', 'Статус'),
(1333, 411, 'en', 'Status'),
(1334, 412, 'ua', 'Поле обов''язкове для заповнення'),
(1335, 412, 'ru', 'Поле обязательное для заполнения'),
(1336, 412, 'en', 'This field is required'),
(1337, 413, 'ua', 'Введіть ціле невід''ємне число'),
(1338, 413, 'ru', 'Введите целое неотрицательное число'),
(1339, 413, 'en', 'Enter a non-negative integer'),
(1340, 322, 'ua', '$.'),
(1341, 322, 'ru', '$.'),
(1342, 322, 'en', '$.'),
(1343, 323, 'ua', 'проплати'),
(1344, 323, 'ru', 'проплаты'),
(1345, 323, 'en', 'payments'),
(1346, 324, 'ua', 'проплат'),
(1347, 324, 'ru', 'проплат'),
(1348, 324, 'en', 'payments'),
(1349, 325, 'ua', 'кредит на 3 роки, помісячно:'),
(1350, 325, 'ru', 'кредит на 3 года, помесячно:'),
(1351, 325, 'en', 'credit for 3 years, month:'),
(1352, 326, 'ua', 'кредит на 4 роки, помісячно:'),
(1353, 326, 'ru', 'кредит на 4 года, помесячно:'),
(1354, 326, 'en', 'credit for 4 years, month:'),
(1355, 322, 'ua', '$.'),
(1356, 322, 'ru', '$.'),
(1357, 322, 'en', '$.'),
(1358, 323, 'ua', 'проплати'),
(1359, 323, 'ru', 'проплаты'),
(1360, 323, 'en', 'payments'),
(1361, 324, 'ua', 'проплат'),
(1362, 324, 'ru', 'проплат'),
(1363, 324, 'en', 'payments'),
(1364, 325, 'ua', 'кредит на 3 роки, помісячно:');
INSERT INTO `translate` (`id_record`, `id`, `language`, `translation`) VALUES
(1365, 325, 'ru', 'кредит на 3 года, помесячно:'),
(1366, 325, 'en', 'credit for 3 years, month:'),
(1367, 326, 'ua', 'кредит на 4 роки, помісячно:'),
(1368, 326, 'ru', 'кредит на 4 года, помесячно:'),
(1370, 326, 'ua', 'кредит на 4 роки, помісячно:'),
(1371, 326, 'ru', 'кредит на 4 года, помесячно:'),
(1373, 327, 'ua', 'кредит на 5 роки, помісячно:'),
(1374, 327, 'ru', 'кредит на 5 года, помесячно:'),
(1375, 327, 'en', 'credit for 5 years, month:'),
(1376, 328, 'ua', 'ПОЧАТИ КУРС />'),
(1377, 328, 'ru', 'НАЧАТЬ КУРС />'),
(1378, 328, 'en', 'START THE COURSE />'),
(1379, 329, 'ua', 'Редагувати список модулів'),
(1380, 329, 'ru', 'Редактировать список модулей'),
(1381, 329, 'en', 'Edit the list of modules'),
(1382, 330, 'ua', 'Модулі'),
(1383, 330, 'ru', 'Модули'),
(1384, 330, 'en', 'Modules'),
(1385, 331, 'ua', 'У даному курсі модулів немає.'),
(1386, 331, 'ru', 'В данном курсе модулей нет.'),
(1387, 331, 'en', 'In this course modules there.'),
(1388, 332, 'ua', 'Ви впевнені що хочете видалити модуль?'),
(1389, 332, 'ru', 'Вы уверены что хотите удалить модуль?'),
(1390, 332, 'en', 'Are you sure you want to delete the module?'),
(1391, 333, 'ua', 'Дезактивувати модуль'),
(1392, 333, 'ru', 'Дезактивировать модуль'),
(1393, 333, 'en', 'Deactivate module'),
(1394, 334, 'ua', 'Підняти модуль вгору на 1 позицію'),
(1395, 334, 'ru', 'Поднять модуль вверх на 1 позицию'),
(1396, 334, 'en', 'Lift the module up to the 1 position'),
(1397, 335, 'ua', 'Опустити модуль вниз на 1 позицію'),
(1398, 335, 'ru', 'Опустить модуль вниз на 1 позицию'),
(1399, 335, 'en', 'Lower the module down to the 1 position'),
(1400, 336, 'ua', 'Додати модуль'),
(1401, 336, 'ru', 'Добавить модуль'),
(1402, 336, 'en', 'Add your module'),
(1403, 414, 'ua', 'Розгорнути схеми проплат'),
(1404, 414, 'ru', 'Развернуть схемы проплат'),
(1405, 414, 'en', 'Show the payment plan'),
(1406, 415, 'ua', 'Згорнути схеми проплат'),
(1407, 415, 'ru', 'Свернуть схемы проплат'),
(1408, 415, 'en', 'Hide the payment plan'),
(1409, 416, 'ua', 'Недопустимі символи!'),
(1410, 416, 'ru', 'Недопустимые символы!'),
(1411, 416, 'en', 'Invalid characters!'),
(1412, 417, 'ua', 'Для відображення у вигляді не нумерованого списку, розділяйте пункти символом '';'''),
(1413, 417, 'ru', 'Для отражения в виде не нумерованного списка, разделяйте пункты символом '';'''),
(1414, 417, 'en', 'To display as a not numbered list, separate the items with '';'''),
(1415, 418, 'ua', 'Email'),
(1416, 418, 'ru', 'Email'),
(1417, 418, 'en', 'Email'),
(1418, 420, 'ua', 'Відео'),
(1419, 420, 'ru', 'Видео'),
(1420, 420, 'en', 'Video'),
(1421, 419, 'ua', 'Введіть ціле невід''ємне число'),
(1422, 419, 'ru', 'Введите целое неотрицательное число'),
(1423, 419, 'en', 'Enter a non-negative integer'),
(1424, 421, 'ua', 'безкоштовно'),
(1425, 421, 'ru', 'бесплатно'),
(1426, 421, 'en', 'free'),
(1427, 424, 'ua', 'Розгорнути відгук про навчання'),
(1428, 424, 'ru', 'Развернуть отзыв об обучении'),
(1429, 424, 'en', 'Show the  review about study with us'),
(1430, 423, 'ua', 'Згорнути відгук про навчання'),
(1431, 423, 'ru', 'Свернуть отзыв об обучении'),
(1432, 423, 'en', 'Hide the review about study with us'),
(1433, 425, 'ua', 'кредит на '),
(1434, 425, 'ru', 'кредит на'),
(1435, 425, 'en', 'credit for'),
(1436, 426, 'ua', 'роки:'),
(1437, 426, 'ru', 'года:'),
(1438, 426, 'en', 'years:'),
(1439, 427, 'ua', 'Введіть дату народження в форматі дд/мм/рррр'),
(1440, 427, 'ru', 'Введите дату рождения в формате дд/мм/гггг'),
(1441, 427, 'en', 'Enter your date of birth in the format DD/MM/YYYY'),
(1442, 428, 'ua', 'Введіть вік в числовому форматі (від 16 до 100)'),
(1443, 428, 'ru', 'Введите возраст в числовом формате (от 16 до 100)'),
(1444, 428, 'en', 'Enter age in numerical format (16 to 100)'),
(1445, 429, 'ua', 'Недопустимі символи!'),
(1446, 429, 'ru', 'Недопустимые символы!'),
(1447, 429, 'en', 'Invalid characters!'),
(1448, 430, 'ua', 'Розгорнути історію навчання'),
(1449, 430, 'ru', 'Развернуть историю обучения'),
(1450, 430, 'en', 'Open history teaching'),
(1451, 431, 'ua', 'Згорнути історію навчання'),
(1452, 431, 'ru', 'Свернуть историю обучения'),
(1453, 431, 'en', 'Close study history'),
(1454, 338, 'en', 'Your own apartment'),
(1455, 432, 'ua', 'Не потрібно відвідувати навчальний заклад, Академія з тобою всюди.<br>'),
(1456, 432, 'ru', 'Не нужно посещать учебное заведение, Академия с тобой повсюду.<br>'),
(1457, 432, 'en', 'You needn`t go to the  Academy, it is  always with you.<br>'),
(1458, 433, 'ua', 'Навіть якщо ти у місці, де немає звязку та інтернету, ти можеш переглядати лекції в <span class="pinkword">офлайн-режимі</span>, а практичну частину зробити пізніше, коли зявиться доступ.'),
(1459, 433, 'ru', 'Даже если ты в месте, где нет связи и интернета, ты можешь просматривать лекции в <span class="pinkword"> офлайн-режиме</span>, а практическую часть сделать позже, когда появится доступ.'),
(1460, 433, 'en', 'Even if you have no Internet connection, you can look through the material <span class="pinkword">offline</span>.'),
(1461, 434, 'ua', 'Кит другий.<br> Орієнтація на ринок.'),
(1462, 434, 'ru', 'Кит второй.<br> Ориентация на рынок.'),
(1463, 434, 'en', 'Principle 2<br>  Market targeting'),
(1464, 435, 'ua', 'Ми даємо тобі лише <span class="pinkword">100%</span> необхідні знання. Ми поважаємо гуманітарні дисципліни та фундаментальні точні науки, які входять до  складу обовязкових для вивчення у вишах, але переконані, що вони не є обовязковими для того, щоб стати <span class="blueword">професіоналом у сфері ІТ</span>. Ми вважаємо, що кожен має вирішувати індивідуально, що вивчати та чим цікавитись за межами своєї професії.<br>У той же час у програмах вишів відсутні критичні для професійного успіху дисципліни, або ж вони викладаються недостатньо професійно (англійська мова для ІТ-спеціалістів, проектний менеджмент тощо).<br>'),
(1465, 435, 'ru', 'Мы даем тебе только <span class = "pinkword"> 100%</span> необходимые знания. Мы уважаем гуманитарные дисциплины и фундаментальные точные науки, которые входят в состав обязательных для изучения в вузах, но убеждены, что они не являются обязательными для того, чтобы стать <span class = "blueword"> профессионалом в сфере ИТ</span>. Мы считаем, что каждый должен решать индивидуально, что изучать и чем интересоваться вне своей профессии. <br>В то же время в программах вузов отсутствуют критические для профессионального успеха дисциплины, или же они излагаются недостаточно профессионально (английский язык для ИТ-специалистов, проектный менеджмент). <br>'),
(1466, 435, 'en', 'We are giving you <span class="pinkword">100%</span> only  necessary knowledge. We respect the humanitarian  and fundamental exact sciences, which university students are obliged to study, but we consider  that you will not require such  knowledge  to become a  <span class="blueword">professional in the field of information technology</span>. You can  certainly decide what to study and what hobby to have in your free time. <br>At the same time, university programs are missing some subjects critical for professional success or  they are not professionally taught (English for IT, project management, etc.).<br>'),
(1467, 436, 'ua', 'Інформаційні технології - це дисципліна, яка змінюється кожного дня, програми вишів просто не встигають адаптуватися до такої швидкості змін. <span class="blueword">ІНТІТА</span> слідкує за змінами щодня, і адаптує як навчальну програму, так і зміст окремих предметів за необхідністю миттєво. Ми завжди у пошуку нового матеріалу, який можна передати студентам академії.'),
(1468, 436, 'ru', 'Информационные технологии - это дисциплина, которая меняется каждый день, программы вузов просто не успевают адаптироваться к такой скорости изменений. <span class = "blueword"> ИНТИТА</span> следит за изменениями в день, и адаптирует как учебную программу, так и содержание отдельных предметов при необходимости мгновенно. Мы всегда в поиске нового материала, который можно передать студентам академии.'),
(1469, 436, 'en', 'Information technology is a  subject which is constantly changing,  universities do not manage to adapt to such  fast changes.  <span class="blueword">INTITA</span> monitors changes every day  and instantly  adapts both  the program and subject content to new requirements. We are always in search of new material to share with our students.'),
(1470, 437, 'ua', 'Порівнюючи звичайний технічний виш та академію <span class="blueword">ІНТІТА</span>, ти можеш думати про сімейний <span class="pinkword">універсал</span> та болід <span class="sunword">Формула-1</span>. Перший підходить для широкого кола завдань, але він значно програє позашляховикам у прохідності, міні-венам у місткості, лімузинам - у комфорті, спoртивним автомобілям - у швидкості та керуванні.'),
(1471, 437, 'ru', 'Сравнивая обычный технический вуз и академию <span class = "blueword"> ИНТИТА</span>, ты можешь думать о семейном <span class = "pinkword"> универсал</span> и болид <span class = "sunword"> Формула 1</span>. Первый подходит для широкого круга задач, но он значительно проигрывает внедорожникам в проходимости, мини-венам в емкости, лимузинам - в комфорте, спoртивним автомобилям - в скорости и управлении.'),
(1472, 437, 'en', 'Comparing average technical university  with <span class = "blueword">INTITA</span> Academy is like comparing  the <span class = "pinkword">family car</span> with  <span class = "sunword">formula 1</span> bolid. The first is suitable for a wide range of tasks, but it is not so permeable like  off-road cars, not so capacious like minivans, not so comfortable like limousines and not so fast and controlled like sport cars.'),
(1473, 438, 'ua', 'Другий сконструйовано лише заради максимальної швидкості та маневреності, жертвуючи усім іншим. І в результаті ми не зробимо з тебе універсально освічену людину, яка розбирається потрохи у всьому, ми підготуємо тебе <span class = "blueword">професіоналом світового класу</span> в області програмування.'),
(1474, 438, 'ru', 'Второй сконструирован исключительно для максимальной скорости и маневренности, жертвуя всем остальным. И в результате мы не сделаем из тебя универсально образованного человека, который разбирается понемногу во всем, мы подготовим тебя <span class = "blueword">профессионалом мирового класса</span> в области программирования.'),
(1475, 438, 'en', 'The second one is designed only for maximal speed and maneuverability, sacrificing everything else. So, we don’t try to give you knowledge in a variety of  different subjects to make you know-it-all specialist, we teach you to become a <span class = "blueword">world-class professional programmer</span>.'),
(1476, 439, 'ua', 'Кит третій.<br> Результативність.'),
(1477, 439, 'ru', 'Кит третий.<br> Результативность.'),
(1478, 439, 'en', ' Principle 3<br> Managing for result'),
(1479, 440, 'ua', 'На відміну від традиційних закладів, ми навчаємо не задля оцінок. Ми працюємо <span class="sunword">індивідуально</span> з кожним студентом, щоб досягти 100% засвоєння необхідних знань (ми даємо лише необхідні знання).'),
(1480, 440, 'ru', 'В отличие от традиционных заведений, мы учим не для оценок. Мы работаем <span class = "sunword"> индивидуально</span> с каждым студентом, чтобы достичь 100% усвоение необходимых знаний (мы даем только необходимые знания).'),
(1481, 440, 'en', 'Unlike traditional educational institutions we don`t teach you for the sake of  getting a good mark. We work <span class = "sunword">individually</span> with every student to help him/her achieve 100%  sufficient knowledge (we don`t provide you with  unnecessary things at all).'),
(1482, 441, 'ua', 'Ми не обмежуємо тебе у часі, теоретично ти можеш навчатися як завгодно довго. Ми беремо на себе зобовязання навчити тебе програмуванню, незважаючи на те, які знання у тебе вже є. Єдиними передумовами для початку занять є <span class="blueword">бажання</span>, час на навчання, наявність хоча б простенького комп’ютера та вміння читати та писати.'),
(1483, 441, 'ru', 'Мы не ограничиваем тебя во времени, теоретически ты можешь учиться сколь угодно долго. Мы берем на себя обязательства научить тебя программированию, несмотря на то, какие знания у тебя уже есть. Единственными предпосылками для начала занятий является <span class = "blueword"> желание</span>, время на обучение, наличие хотя бы простенького компьютера и умение читать и писать.'),
(1484, 441, 'en', 'We don`t limit your time of studying you may take as long as you need. We take responsibility to teach you programming  independently of  the knowledge you have already possess.\r\nThe only prerequisites for starting the course is a <span class = "blueword">desire</span> and  time for learning, a computer and an ability to read and write.'),
(1485, 442, 'ua', 'Починаючи з першого заняття, ти робитимеш завдання з реального світу програмування. Ближче до закінчення навчання ти будеш приймати участь у створенні реальних програмних продуктів для ринку.'),
(1486, 442, 'ru', 'Начиная с первого занятия, ты будешь делать задачи из реального мира программирования. Ближе к окончанию учебы ты будешь принимать участие в создании реальных программных продуктов для рынка.'),
(1487, 442, 'en', 'Starting from the first lesson you will perform real programming tasks and finishing the course you will participate in real software development practices.'),
(1488, 443, 'ua', '“Три кити” Академії ІНТІТА'),
(1489, 443, 'ru', 'Три кита Академии ИНТИТА'),
(1490, 443, 'en', 'Three  basic principles of INTITA Academy'),
(1491, 444, 'ua', 'Кит перший. Гнучкість та зручність.'),
(1492, 444, 'ru', 'Кит первый. Гибкость и удобство.'),
(1493, 444, 'en', 'Principle 1 Flexibility and convenience'),
(1494, 445, 'ua', 'Ти можеш <span class="blueword">самостійно</span> будувати графік навчання, виходячи з власних потреб та цілей. Якщо ти хочеш закінчити навчання та почати працювати вже через рік, обирай інтенсивне навчання та займайся 6-8 годин в день. Якщо ти хочеш освоїти програмування '),
(1495, 445, 'ru', 'Ты можешь <span class = "blueword"> самостоятельно</span> строить график обучения, исходя из собственных потребностей и целей. Если ты хочешь закончить учебу и начать работать уже через год, выбирай интенсивное обучение и занимайся 6-8 часов в день. Если ты хочешь освоить программирование'),
(1496, 445, 'en', 'You can schedule courses <span class = "blueword">at your convenience</span> taking into consideration  your own needs and goals. If you want to complete education and start working just  in a year, select intensive learning for  6-8 hours  daily. But  if you want to learn programming'),
(1497, 446, 'ua', '<span class="redword"> поступово</span>, не жертвуючи іншими важливими для тебе речами, ти можеш займатися ті ж 6-8 годин, але у тиждень.'),
(1498, 446, 'ru', '<span class =" redword "> постепенно</span>, не жертвуя другими важными для тебя вещами, ты можешь заниматься те же 6-8 часов, но в неделю.'),
(1499, 446, 'en', '<span class =" redword "> steadily</span> without sacrificing important things in your life, then you can study   6-8 hours per week.'),
(1500, 447, 'ua', 'Ми <span class="pinkword">гарантуємо</span> тобі стажування і <span class="blackword">100%</span> отримання пропозиції працевлаштування протягом 4-6-ти місяців після успішного завершення навчання. Так впевнено стверджувати нам дозволяє той факт, що усі наші випускники працюють тими на кого навчались - <span class="blueword">програмістами</span>.'),
(1501, 447, 'ru', 'Мы <span class = "pinkword"> гарантируем</span> тебе стажировку и <span class = "blackword"> 100%</span> получение предложения трудоустройства в течение 4-6 месяцев после успешного завершения обучения. Так уверенно утверждать нам позволяет тот факт, что все наши выпускники работают теми на кого учились - <span class = "blueword"> программистами</span>.'),
(1502, 447, 'en', 'We  <span class = "pinkword">guarantee</span> you will have an internship and offers of employment during 4-6 months after successful completion of a  course. The proof is in our graduates : <span class = "blackword">100% </span>of them  work as <span class = "blueword">programmers</span>.'),
(1503, 448, 'ua', 'ІНТІТА.<br> переваги наочно:'),
(1504, 448, 'ru', 'ИНТИТА.<br> преимущества наглядно:'),
(1505, 448, 'en', 'INTITA.<br> Demonstrably advantages:'),
(1506, 449, 'ua', 'Традиційне навчання'),
(1507, 449, 'ru', 'Традиционное обучение'),
(1508, 449, 'en', 'Traditional education'),
(1509, 450, 'ua', 'Необхідність відвідувати заняття у класі'),
(1510, 450, 'ru', 'Необходимость заниматься в классе'),
(1511, 450, 'en', 'Necessity to attend  classes'),
(1512, 451, 'ua', 'Заняття за фіксованим графіком'),
(1513, 451, 'ru', 'Занятия по фиксированному графику'),
(1514, 451, 'en', 'Fixed class-schedule'),
(1515, 452, 'ua', 'Жорстко визначена навчальна програма, привязана до часових рамок (академічний рік)'),
(1516, 452, 'ru', 'Жестко определена учебная программа, привязана к временных рамок (академический год)'),
(1517, 452, 'en', 'Fixed education programme and academic calendar'),
(1518, 453, 'ua', 'Лекції та семінари, як основа навчального процесу (вивчення теорії)'),
(1519, 453, 'ru', 'Лекции и семинары, как основа учебного процесса (изучение теории)'),
(1520, 453, 'en', 'Lectures and seminars are the basis of learning process (theory learning)'),
(1521, 454, 'ua', 'Оцінки за якість засвоєних знань за певний час'),
(1522, 454, 'ru', 'Оценки за качество усвоенных знаний за определенное время'),
(1523, 454, 'en', 'Marks are given during educational process'),
(1524, 455, 'ua', 'Диплом про вищу освіту видається через 5-6 років за умови засвоєння великої кількості непрофільних знань (мова, історія, філософія тощо)'),
(1525, 455, 'ru', 'Диплом о высшем образовании выдается через 5-6 лет при условии усвоения большого количества непрофильных знаний (язык, история, философия и т.д.)'),
(1526, 455, 'en', 'Certificates are given after 5-6 years of studies only after a huge amount of non-core knowledge has been gained (culture, history, philosophy, etc.)'),
(1527, 456, 'ua', 'ІНТІТА'),
(1528, 456, 'ru', 'ИНТИТА'),
(1529, 456, 'en', 'INTITA'),
(1530, 457, 'ua', 'Навчання у себе вдома'),
(1531, 457, 'ru', 'Обучение у себя дома'),
(1532, 457, 'en', 'Education at home'),
(1533, 458, 'ua', 'Заняття за індивідуальним графіком'),
(1534, 458, 'ru', 'Занятия по индивидуальному графику'),
(1535, 458, 'en', 'Self-paced course'),
(1536, 459, 'ua', 'Можливість обирати предмети та термін навчання'),
(1537, 459, 'ru', 'Возможность выбирать предметы и срок обучения'),
(1538, 459, 'en', 'Possibility to choose learning subjects and time frames'),
(1539, 460, 'ua', 'Практичні заняття з першого дня навчання, створення реальних працюючих проектів'),
(1540, 460, 'ru', 'Практические занятия с первого дня обучения, создание реальных работающих проектов'),
(1541, 460, 'en', 'Practical lessons starting from the first day, developing real projects'),
(1542, 461, 'ua', 'Оцінок немає, лише “знання засвоєні” чи “потрібно навчатися далі”'),
(1543, 461, 'ru', 'Оценок нет, только "знания усвоены" или "нужно учиться дальше"'),
(1544, 461, 'en', 'No marks, only “passed” or “have to continue studying”'),
(1545, 462, 'ua', 'Лише практичні знання, які будуть потрібні тобі у роботі та житті: програмування, англійська мова, побудова карєри на ринку інформаційних технологій, основи життєвого успіху.'),
(1546, 462, 'ru', 'Только практические знания, которые будут нужны тебе в работе и жизни: программирование, английский язык, построение карьеры на рынке информационных технологий, основы жизненного успеха.'),
(1547, 462, 'en', 'Only practical knowledge that is needed in future work and life: programming, English , IT career building, life success seminars.'),
(1548, 463, 'ua', 'Переваги'),
(1549, 463, 'ru', 'Преимущества'),
(1550, 463, 'en', 'Advantages'),
(1551, 464, 'ua', 'Комфортна домашня атмосфера, економія часу та коштів на поїздки'),
(1552, 464, 'ru', 'Комфортная домашняя атмосфера, экономия времени и средств на поездки'),
(1553, 464, 'en', 'Comfort home atmosphere,saving  time and transportation costs'),
(1554, 465, 'ua', 'Можливість підлаштувати графік навчання під власні потреби'),
(1555, 465, 'ru', 'Возможность подстроить график обучения под собственные нужды'),
(1556, 465, 'en', 'Possibility to adjust  schedule to your own needs'),
(1557, 466, 'ua', 'Навчання в комфортному темпі за власним графіком, не обмежене часом'),
(1558, 466, 'ru', 'Обучение в комфортном темпе по собственному графику, не ограниченное время'),
(1559, 466, 'en', 'Comfort education tempo driven by your own, not limited schedule'),
(1560, 467, 'ua', 'Отримання реального робочого досвіду вже протягом навчання, портфоліо готових робіт на момент закінчення навчання'),
(1561, 467, 'ru', 'Получение реального рабочего опыта уже в течение обучения, портфолио готовых работ на момент окончания обучения'),
(1562, 467, 'en', 'Real work experience during education and a portfolio of completed projects after graduation'),
(1563, 468, 'ua', 'Навчання до позитивного результату: до повного засвоєння необхідних знань'),
(1564, 468, 'ru', 'Обучение к положительному результату: к полного усвоения необходимых знаний'),
(1565, 468, 'en', 'Education for a positive result: until all the necessary skills are gained'),
(1566, 469, 'ua', 'Весь час навчання витрачається на отримання <span class="blueword">корисних практичних знань</span>, тому термін навчання скорочуються, а кількість практичних засвоєних знань більша, ніж у традиційних закладах.'),
(1567, 469, 'ru', 'Все время обучения тратится на получение <span class="blueword">полезных практических знаний</span>, поэтому срок обучения сокращаются, а количество практических усвоенных знаний больше, чем в традиционных заведениях.'),
(1568, 469, 'en', 'All  time is assigned for getting <span class="blueword">useful practical knowledge</span>, thus education terms are decreased and the amount of gained skills is greater than in traditional institutions'),
(1569, 470, 'ua', 'Чи ви відрізняєтесь від інших?'),
(1570, 470, 'ru', 'Отличаетесь ли вы от других?'),
(1571, 470, 'en', 'What makes your course different from all the  others?'),
(1572, 471, 'ua', 'Скільки триває навчання, як швидко я зможу почати заробляти?'),
(1573, 471, 'ru', 'Сколько длится обучение, как быстро я смогу начать зарабатывать?'),
(1574, 471, 'en', 'How long is the course and how soon  can I start  making  money?'),
(1575, 472, 'ua', 'Чи отримаю я державний диплом про освіту?'),
(1576, 472, 'ru', 'Получу ли я государственный диплом об образовании?'),
(1577, 472, 'en', 'Will I receive a state- recognized education diploma?'),
(1578, 473, 'ua', 'Чому навчання коштує так дешево (дорого) у порівнянні з іншими курсами?'),
(1579, 473, 'ru', 'Почему обучение стоит так дешево (дорого) по сравнению с другими курсами?'),
(1580, 473, 'en', 'Why is the course so cheap(expensive) compared  to alternatives?'),
(1581, 474, 'ua', 'Чому онлайн навчання коштує дорожче у порівнянні з офлайн навчанням?'),
(1582, 474, 'ru', 'Почему онлайн обучение стоит дороже по сравнению с оффлайн обучением?'),
(1583, 474, 'en', 'Why is online education  more expensive than offline one?'),
(1584, 475, 'ua', 'У мене зараз немає необхідних коштів, чи можу я навчатися у кредит?'),
(1585, 475, 'ru', 'У меня сейчас нет средств, могу ли я учиться в кредит?'),
(1586, 475, 'en', 'Now I do not have enough money to pay for the course  can I get a study loan?'),
(1587, 476, 'ua', 'Чи маю я укладати договір на навчання?'),
(1588, 476, 'ru', 'Имею ли я заключать договор на обучение?'),
(1589, 476, 'en', 'Should I conclude a study contract?'),
(1590, 477, 'ua', 'Я чув від знайомого, що він освоїв програмування самотужки, це можливо?'),
(1591, 477, 'ru', 'Я слышал от знакомого, что он освоил программирование самостоятельно, это возможно?'),
(1592, 477, 'en', 'I heard from a friend that he had  learnt programming on his own. Is it possible?'),
(1593, 478, 'ua', 'У мене у школі було погано з математикою / я давно не займався математикою. Це може завадити мені навчитися програмуванню?'),
(1594, 478, 'ru', 'У меня в школе было плохо с математикой / я давно не занимался математикой. Это может помешать мне научиться программированию?'),
(1595, 478, 'en', 'I was bad at math at school/I have not not been learning mathematics for a long time. Can this be an obstacle to learning programming?'),
(1596, 479, 'ua', 'Мені 34 роки, чи можу я зараз розпочати навчання?'),
(1597, 479, 'ru', 'Мне 34 года, могу ли я сейчас начать обучение?'),
(1598, 479, 'en', 'I am 34 years old. Can I start learning now?'),
(1599, 480, 'ua', 'Я чув думку, що професія програміста технічна, а я - людина творча. Чи підійде програмування мені?'),
(1600, 480, 'ru', 'Я слышал мнение, что профессия программиста техническая, а я - человек творческий. Подойдет программирования мне?'),
(1601, 480, 'en', 'I heard that profession of a  programmer is technical, but I am creative. Will programming fit me?'),
(1602, 481, 'ua', 'Ми гарантуємо стажування і 100% отримання пропозиції працевлаштування протягом 4-6-ти місяців після успішного завершення навчання. Так впевнено стверджувати нам дозволяє той факт, що усі наші випускники працюють програмістами.'),
(1603, 481, 'ru', 'Мы гарантируем стажировку и 100% получения предложения трудоустройства в течение 4-6 месяцев после успешного завершения обучения. Так уверенно утверждать нам позволяет тот факт, что все наши выпускники работают программистами.'),
(1604, 481, 'en', 'We guarantee you will have an internship and offers of employment during 4-6 months after successful completion of a  course. The proof is in our graduates : 100% of them  work as programmers.'),
(1605, 482, 'ua', 'Навчання не має фіксованого терміну і залежить виключно від темпу, який обереш ти. Ми рекомендуємо кожному студенту його індивідуальний темп.'),
(1606, 482, 'ru', 'Обучение не имеет фиксированного срока и зависит исключительно от темпа, который выберешь ты. Мы рекомендуем каждому студенту его индивидуальный темп.'),
(1607, 482, 'en', 'The time for learning is not limited it depends only on your own pace. We suggest  that every student choose  his/her own tempo of learning.'),
(1608, 483, 'ua', 'Ми видаємо диплом після проходження курсу та сертифікат після проходження модуля власного зразка. Ми не видаємо дипломів державного зразка, наша ціль - забезпечити передумови для гарантованого працевлаштування слухачів.'),
(1609, 483, 'ru', 'Мы выдаем диплом после прохождения курса и сертификат после прохождения модуля собственного образца. Мы не выдаем дипломов государственного образца, наша цель - обеспечить предпосылки для гарантированного трудоустройства слушателей.'),
(1610, 483, 'en', 'We give a  personalized diploma after completion of the course and  a personalized certificate after you finish the module. We don`t provide a state- recognized education diploma because our goal  is to ensure job opportunities for graduates.'),
(1611, 484, 'ua', 'Вартість навчання економічно обгрунтована і буде тобою відроблена менше, ніж за рік роботи на позиції програміста-початківця.'),
(1612, 484, 'ru', 'Стоимость обучения экономически обоснована и будет тобой отработанных меньше, чем за год работы на позиции программиста начинающего.'),
(1613, 484, 'en', 'The cost of our course is economically justified and you can make the money in less than a year working as a junior programmer.'),
(1614, 485, 'ua', 'При онлайн навчанні ми використовуємо персоналізований підхід до кожного студента, що вимагає більшої уваги викладачів, аніж при навчанні груп.'),
(1615, 485, 'ru', 'При онлайн обучении мы используем персонализированный подход к каждому студенту, что требует большего внимания преподавателей, чем при обучении групп.'),
(1616, 485, 'en', 'We use individual approach to every student teaching him/her  online, it requires more time and effort of teachers than working in groups.'),
(1617, 486, 'ua', 'Так, ми пропонуємо гнучкий підхід в оплаті за навчання - можливе кредитування навчання на 2-3 роки, що дозволить тобі виплачувати основну суму вже після працевлаштування.'),
(1618, 486, 'ru', 'Так, мы предлагаем гибкий подход в оплате за обучение - возможно кредитование обучения на 2-3 года, что позволит тебе выплачивать основную сумму уже после трудоустройства.'),
(1619, 486, 'en', 'Yes. We offer a flexible approach to payment for a course. It is possible to get 2-3 year  loan  that will allow you to pay the bigger part after you find a job.'),
(1620, 487, 'ua', 'Договір уладається лише при оформленні кредиту на навчання.'),
(1621, 487, 'ru', 'Договор уладаеться только при оформлении кредита на обучение.'),
(1622, 487, 'en', 'Only when you take a study  loan.'),
(1623, 488, 'ua', 'Так, на ринку багато “програмістів-самоучок”, але вони, як правило, пройшли довгий шлях (як правило більше 5 років) для того, щоб навчитись програмуванню, ми - один із ефективних варіантів стати кваліфікованим програмістом за короткий час.'),
(1624, 488, 'ru', 'Так, на рынке много "программистов-самоучек", но они, как правило, прошли долгий путь (как правило более 5 лет) для того, чтобы научиться программированию, мы - один из эффективных вариантов стать квалифицированным программистом за короткое время.'),
(1625, 488, 'en', 'Yes, there are a lot of “self-taught programmers” in the labor market, but they as a rule come  a long way (more than 5 years) to learn programming. We offer one of the most effective ways to become a skilled programmer in a short term.'),
(1626, 489, 'ua', 'Математика допомагає краще розвинути логічне мислення і знання елементарної математики необхідні обов’язково, проте, не математичне, а логічне мислення визначає наскільки гарний програміст і тільки невеликий відсоток гарних математиків стають професійними програмістами.'),
(1627, 489, 'ru', 'Математика помогает лучше развить логическое мышление и знание элементарной математики необходимы обязательно, однако, математическое, а логическое мышление определяет насколько хороший программист и только небольшой процент хороших математиков становятся профессиональными программистами.'),
(1628, 489, 'en', 'Math helps to improve logical thinking that is why knowledge  of elementary math is a must. However, not mathematical but logical thinking defines how good a programmer is and only a small percentage of good mathematicians become professional programmers.'),
(1629, 490, 'ua', 'Верхньої вікової межі для того, щоб вивчати програмування - немає, люди і старшого віку розпочинали і досягали гарних результатів. Життєвий досвід людям старшого віку дозволяє ефективніше побудувати навчальний процес і швидше кар’єрно зростати.'),
(1630, 490, 'ru', 'Верхней возрастной границы для того, чтобы изучать программирование - нет, люди и старшего возраста начинали и достигали хороших результатов. Жизненный опыт людям старшего возраста позволяет эффективнее построить учебный процесс и быстрее карьерно расти.'),
(1631, 490, 'en', 'There is no age maximum for participants.  Even older people started  learning and reached good results. Experience allows older adults arrange an  educational process more effectively and  improve a career faster.'),
(1632, 491, 'ua', 'Програмування - це і є творчість, варто спробувати, щоб зрозуміти чи це твоє покликання.'),
(1633, 491, 'ru', 'Программирование - это и есть творчество, стоит попробовать, чтобы понять это твое призвание.'),
(1634, 491, 'en', 'Programming is creative. You need to try it  to understand whether the profession fits you or not.'),
(1635, 492, 'ua', 'Викладач'),
(1636, 492, 'ru', 'Преподаватель'),
(1637, 492, 'en', 'Lecturer'),
(1638, 493, 'ua', 'у Вас буде запланована консультація по темі'),
(1639, 493, 'ru', 'у Вас будет запланирована консультация по теме'),
(1640, 493, 'en', 'you will be scheduled consultations on the topic'),
(1641, 494, 'ua', 'викладач'),
(1642, 494, 'ru', 'преподаватель'),
(1643, 494, 'en', 'lecturer'),
(1644, 495, 'ua', 'Для підтвердження натисніть ''Добре''.'),
(1645, 495, 'ru', 'Для подтверждения нажмите ''Хорошо''.'),
(1646, 495, 'en', 'To confirm, click ''OK''.'),
(1647, 496, 'ua', 'Добре'),
(1648, 496, 'ru', 'Хорошо'),
(1649, 496, 'en', 'OK'),
(1650, 497, 'ua', 'Скасувати'),
(1651, 497, 'ru', 'Отменить'),
(1652, 497, 'en', 'Сancel'),
(1653, 498, 'ua', 'Вітаємо!'),
(1654, 498, 'ru', 'Поздравляем!'),
(1655, 498, 'en', 'Congratulations!'),
(1656, 499, 'ua', 'Виберіть годину'),
(1657, 499, 'ru', 'Выберите время'),
(1658, 499, 'en', 'Choose a time'),
(1659, 500, 'ua', 'Ви можете обрати декілька консультацій. Використовуйте клавіші <span class="colorP">Ctrl</span> або <span class="colorP">Shift</span>.'),
(1660, 500, 'ru', 'Вы можете выбрать несколько консультаций. Используйте клавиши <span class = "colorP"> Ctrl </span> или <span class = "colorP"> Shift </span>.'),
(1661, 500, 'en', 'You can select multiple consultations. Use the <span class = "colorP"> Ctrl </span> or <span class = "colorP"> Shift </span>.'),
(1662, 501, 'ua', 'Назад'),
(1663, 501, 'ru', 'Назад'),
(1664, 501, 'en', 'Back'),
(1665, 502, 'ua', 'Далі'),
(1666, 502, 'ru', 'Дальше'),
(1667, 502, 'en', 'Next'),
(1668, 503, 'ua', 'Вибачте, час даної консультації вже зайнятий. Перейдіть на'),
(1669, 503, 'ru', 'Извините, время данной консультации уже занято. Перейдите на'),
(1670, 503, 'en', 'Sorry, this time consultations are unavailable. Go to'),
(1671, 504, 'ua', 'сторінку'),
(1672, 504, 'ru', 'страницу'),
(1673, 504, 'en', 'page'),
(1674, 505, 'ua', 'консультацій та виберіть інший час.'),
(1675, 505, 'ru', 'консультаций и выберите другое время.'),
(1676, 505, 'en', 'of consultations and choose another time.'),
(1677, 506, 'ua', 'Консультації'),
(1678, 506, 'ru', 'Консультации'),
(1679, 506, 'en', 'Consultations'),
(1680, 507, 'ua', 'Консультація зайнята'),
(1681, 507, 'ru', 'Консультация занята'),
(1682, 507, 'en', 'Consultation unavailable'),
(1683, 508, 'ua', 'Курси'),
(1684, 508, 'ru', 'Курсы'),
(1685, 508, 'en', 'Courses'),
(1686, 509, 'ua', 'Управління'),
(1687, 509, 'ru', 'Управление'),
(1688, 509, 'en', 'Management'),
(1689, 510, 'ua', 'Список курсів'),
(1690, 510, 'ru', 'Список курсов'),
(1691, 510, 'en', 'List of courses'),
(1692, 511, 'ua', 'Створити курс'),
(1693, 511, 'ru', 'Создать курс'),
(1694, 511, 'en', 'Create course'),
(1695, 512, 'ua', 'Управління курсами'),
(1696, 512, 'ru', 'Управление курсами'),
(1697, 512, 'en', 'Management courses'),
(1698, 513, 'ua', 'Ви можете використовувати вирази'),
(1699, 513, 'ru', 'Вы можете использовать выражения'),
(1700, 513, 'en', 'You can use expressions'),
(1701, 514, 'ua', 'або'),
(1702, 514, 'ru', 'или'),
(1703, 514, 'en', 'or'),
(1704, 515, 'ua', 'Розширений пошук'),
(1705, 515, 'ru', 'Расширенный поиск'),
(1706, 515, 'en', 'Advanced Search'),
(1707, 516, 'ua', 'Показано курсів'),
(1708, 516, 'ru', 'Показано курсов'),
(1709, 516, 'en', 'Showing courses'),
(1710, 517, 'ua', 'Нічого не знайдено'),
(1711, 517, 'ru', 'Ничего не найдено'),
(1712, 517, 'en', 'Nothing found'),
(1713, 518, 'ua', 'Ви впевнені?'),
(1714, 518, 'ru', 'Вы уверены?'),
(1715, 518, 'en', 'Are you sure?'),
(1716, 519, 'ua', 'Назва курсу'),
(1717, 519, 'ru', 'Название курса'),
(1718, 519, 'en', 'Name of course'),
(1719, 520, 'ua', 'Рівень'),
(1720, 520, 'ru', 'Уровень'),
(1721, 520, 'en', 'Level'),
(1722, 521, 'ua', 'Тривалість курсу'),
(1723, 521, 'ru', 'Продолжительность курса'),
(1724, 521, 'en', 'Duration of course'),
(1725, 522, 'ua', 'Вартість курсу'),
(1726, 522, 'ru', 'Стоимость курса'),
(1727, 522, 'en', 'Price of course'),
(1728, 523, 'ua', 'Показати курс'),
(1729, 523, 'ru', 'Показать курс'),
(1730, 523, 'en', 'Show course'),
(1731, 524, 'ua', 'Оновити курс'),
(1732, 524, 'ru', 'Обновить курс'),
(1733, 524, 'en', 'Refresh course'),
(1734, 525, 'ua', 'Видалити курс'),
(1735, 525, 'ru', 'Удалить курс'),
(1736, 525, 'en', 'Remove course'),
(1737, 526, 'ua', 'Виберіть адресата'),
(1738, 526, 'ru', 'Выберите адресата'),
(1739, 526, 'en', 'Choose a addressee'),
(1740, 527, 'ua', 'Тема:');
INSERT INTO `translate` (`id_record`, `id`, `language`, `translation`) VALUES
(1741, 527, 'ru', 'Тема: '),
(1742, 527, 'en', 'Theme: '),
(1743, 528, 'ua', 'Статус: '),
(1744, 528, 'ru', 'Статус: '),
(1745, 528, 'en', 'Status: '),
(1746, 529, 'ua', 'лист прочитаний отримувачем'),
(1747, 529, 'ru', 'письмо прочитано получателем'),
(1748, 529, 'en', 'letter read by the recipient'),
(1749, 530, 'ua', 'отримувач ще не прочитав листа'),
(1750, 530, 'ru', 'получатель еще не прочитал письмо'),
(1751, 530, 'en', 'the recipient has not read the letter'),
(1752, 531, 'ua', 'Листування'),
(1753, 531, 'ru', 'Переписка'),
(1754, 531, 'en', 'Correspondence'),
(1755, 532, 'ua', 'Вхідні'),
(1756, 532, 'ru', 'Входящие'),
(1757, 532, 'en', 'Incoming'),
(1758, 533, 'ua', 'Вихідні'),
(1759, 533, 'ru', 'Исходящие'),
(1760, 533, 'en', 'Output'),
(1761, 534, 'ua', 'Створити'),
(1762, 534, 'ru', 'Создать'),
(1763, 534, 'en', 'Create'),
(1764, 535, 'ua', 'Отриманих листів немає'),
(1765, 535, 'ru', 'Полученных писем нет'),
(1766, 535, 'en', 'No received Letters'),
(1767, 536, 'ua', 'Відправлених листів немає'),
(1768, 536, 'ru', 'Отправленных писем нет'),
(1769, 536, 'en', 'No sent letters'),
(1770, 537, 'ua', 'Ваш лист успішно відправлений'),
(1771, 537, 'ru', 'Ваше письмо успешно отправлено'),
(1772, 537, 'en', 'Your letter sent successfully'),
(1773, 538, 'ua', 'Заповніть всі поля перед відправкою'),
(1774, 538, 'ru', 'Заполните все поля перед отправкой'),
(1775, 538, 'en', 'Fill in all the fields before sending'),
(1776, 539, 'ua', 'Кому:'),
(1777, 539, 'ru', 'Кому:'),
(1778, 539, 'en', 'To:'),
(1779, 540, 'ua', 'Зміст:'),
(1780, 540, 'ru', 'Содержание:'),
(1781, 540, 'en', 'Contents'),
(1782, 541, 'ua', 'Надіслати'),
(1783, 541, 'ru', 'Отправить'),
(1784, 541, 'en', 'Send'),
(1785, 542, 'ua', 'Відповісти'),
(1786, 542, 'ru', 'Ответить'),
(1787, 542, 'en', 'Answer'),
(1788, 543, 'ua', 'Проплачених курсів немає'),
(1789, 543, 'ru', 'Проплаченных курсов нет'),
(1790, 543, 'en', 'No courses paid for'),
(1791, 544, 'ua', 'Відгук не може бути пустим'),
(1792, 544, 'ru', 'Отзыв не может быть пустым'),
(1793, 544, 'en', 'Feedback can not be empty'),
(1794, 545, 'ua', 'Розклад пустий'),
(1795, 545, 'ru', 'Расписание пустое'),
(1796, 545, 'en', 'Timetable empty'),
(1797, 546, 'ua', 'Ви впевнені, що хочете відмінити консультацію?'),
(1798, 546, 'ru', 'Вы уверены, что хотите отменить консультацию?'),
(1799, 546, 'en', 'Are you sure You want to cancel the consultation?'),
(1800, 547, 'ua', 'Відмінити консультацію'),
(1801, 547, 'ru', 'Отменить консультацию'),
(1802, 547, 'en', 'Delete consultation'),
(1803, 548, 'ua', 'Оцінювань немає'),
(1804, 548, 'ru', 'Оценок нет'),
(1805, 548, 'en', 'No mark'),
(1806, 549, 'ua', 'ПРО ЩО МРІЄШ ТИ?'),
(1807, 549, 'ru', 'О ЧЕМ МЕЧТАЕШЬ ТЫ?'),
(1808, 549, 'en', 'WHAT DO YOU DREAM ABOUT?'),
(1809, 550, 'ua', 'Власна квартира в <br>сучасному мегаполісі? <br>Чи гарний автомобіль?'),
(1810, 550, 'ru', 'Собственная квартира в <br>современном мегаполисе? <br>Хороший автомобиль?'),
(1811, 550, 'en', 'Having your own apartment<br> in modern megapolis?<br> Or a nice car?'),
(1812, 551, 'ua', 'Професія майбутнього?<br> Цікава і перспективна, яка <br>проникає в усі сфери нашого життя!'),
(1813, 551, 'ru', 'Профессия будущего? <br>Интересная и перспективная, которая <br>проникает во все сферы нашей жизни!'),
(1814, 551, 'en', 'A profession of the future?<br>Interesting and perspective work<br> which improves all spheres of our life!'),
(1815, 552, 'ua', 'Гарний автомобіль? <br>Чи власний будинок <br>в затишній місцині?'),
(1816, 552, 'ru', 'Хороший автомобиль? <br>ли собственный дом <br>в тихом местечке?'),
(1817, 552, 'en', 'A nice car<br> or a private house<br> in a quiet place?'),
(1818, 553, 'ua', 'Мандрівки за кордон? <br>Цікаві подорожі з гарними друзями <br>чи коханою людиною!'),
(1819, 553, 'ru', 'Путешествия за границу? <br>Интересные путешествия с хорошими друзьями <br>или любимым человеком!'),
(1820, 553, 'en', 'Travelling abroad?<br> Interesting trips with close friends<br> and beloved person?'),
(1821, 554, 'ua', 'Забезпечене життя <br>для себе та близьких, коли <br>не доводиться думати про гроші?'),
(1822, 554, 'ru', 'Обеспеченную жизнь <br>для себя и близких, когда <br>не приходится думать о деньгах?'),
(1823, 554, 'en', 'Financial security<br>  for yourself<br> and your family?'),
(1824, 555, 'ua', 'Може, це свобода жити своїм життям? <br>Самостійно керувати <br>власним часом!'),
(1825, 555, 'ru', 'Может, это свобода жить своей жизнью? <br>Самостоятельно управлять <br>собственным временем!'),
(1826, 555, 'en', 'Or, perhaps, it is the freedom<br> to live your own<br> way of  life?'),
(1827, 556, 'ua', 'Про що зараз мрієш ти?'),
(1828, 556, 'ru', 'О чем сейчас мечтаешь ты?'),
(1829, 556, 'en', 'What are you dreaming  about now?'),
(1830, 557, 'ua', 'Навчання майбутнього вже сьогодні'),
(1831, 557, 'ru', 'Обучение будущего уже сегодня'),
(1832, 557, 'en', 'Education of the future available  today'),
(1833, 558, 'ua', 'Питання, які нам часто ставлять'),
(1834, 558, 'ru', 'Часто задаваемые вопросы'),
(1835, 558, 'en', 'FAQ'),
(1836, 559, 'ua', 'Не втрачай шансу на творчу, цікаву та перспективну працю –<br> плануй своє професійне майбутнє вже сьогодні!'),
(1837, 559, 'ru', 'Не теряй шанса на творческую, интересную и перспективную работу - <br> планируй свое профессиональное будущее уже сегодня!'),
(1838, 559, 'en', 'Don`t lose the chance to find creative, interesting and perspective work,<br>  plan your future today!'),
(1839, 560, 'ua', 'Мрієш заробляти улюбленою справою і отримувати задоволення від сучасної професії?<br> Скористайся можливістю потрапити у світ інформаційних технологій!'),
(1840, 560, 'ru', 'Мечтаешь зарабатывать любимым делом и получать удовольствие от современной профессии?<br> Воспользуйся возможностью попасть в мир информационных технологий!'),
(1841, 560, 'en', 'You wish to make money  doing what you like and enjoy modern career, don`t you!<br> Choose your  way to IT world!'),
(1842, 561, 'ua', 'Видалити аватар'),
(1843, 561, 'ru', 'Удалить аватар'),
(1844, 561, 'en', 'Remove avatar'),
(1845, 562, 'ua', 'Основне'),
(1846, 562, 'ru', 'Основное'),
(1847, 562, 'en', 'Main'),
(1848, 563, 'ua', 'Додаткове'),
(1849, 563, 'ru', 'Дополнительное'),
(1850, 563, 'en', 'Advanced'),
(1851, 564, 'ua', 'Ваше повідомлення відправлено'),
(1852, 564, 'ru', 'Ваше сообщение отправлено'),
(1853, 564, 'en', 'Your message has been sent'),
(1854, 1, 'ua', 'INTITA'),
(1855, 565, 'ua', 'Тест'),
(1856, 565, 'ru', 'Тест'),
(1857, 565, 'en', 'Test'),
(1858, 566, 'ua', 'Підсумковий тест'),
(1859, 566, 'ru', 'Финальный тест'),
(1860, 566, 'en', 'Final test'),
(1861, 567, 'ua', 'Введіть назву заняття'),
(1862, 567, 'ru', 'Введите название занятия'),
(1863, 567, 'en', 'Enter a name for lecture'),
(1864, 568, 'ua', 'лекція/практика'),
(1865, 568, 'ru', 'лекция/практика'),
(1866, 568, 'en', 'lecture/practice'),
(1867, 569, 'ua', 'екзамен'),
(1868, 569, 'ru', 'экзамен'),
(1869, 569, 'en', 'exam'),
(1870, 570, 'ua', 'індивідуальний модульний проект'),
(1871, 570, 'ru', 'индивидуальный модульный проект'),
(1872, 570, 'en', 'module individual project'),
(1873, 571, 'ua', 'командний дипломний проект'),
(1874, 571, 'ru', 'командный дипломный проект'),
(1875, 571, 'en', 'diploma team project'),
(1876, 572, 'ua', 'Виберіть тип заняття'),
(1877, 572, 'ru', 'Выберите тип занятия'),
(1878, 572, 'en', 'Select the type of lecture'),
(1879, 573, 'ua', 'Введіть тривалість заняття'),
(1880, 573, 'ru', 'Введите время занятия'),
(1881, 573, 'en', 'Enter duration of lecture'),
(1882, 574, 'ua', 'занять'),
(1883, 574, 'ru', 'занятий'),
(1884, 574, 'en', 'lectures'),
(1885, 575, 'ua', 'Натисніть для редагування'),
(1886, 575, 'ru', 'Нажмите для изменения'),
(1887, 575, 'en', 'Click to edit'),
(1888, 576, 'ua', 'Поле не може бути пустим'),
(1889, 576, 'ru', 'Поле не может быть пустым'),
(1890, 576, 'en', 'The field can not be empty'),
(1891, 577, 'ua', 'Введіть ціле невід''ємне число'),
(1892, 577, 'ru', 'Введите целое неотрицательное число'),
(1893, 577, 'en', 'Enter a non-negative integer'),
(1894, 578, 'ua', 'Коли мова йде про навчальний заклад, до думки приходять велика будівля з десятками навчальних приміщень, лекційні аудиторії, парти, записники, конспекти, викладачі, лекції, семінари. Така система освіти сформувалася ще у Стародавній Греції, і за кілька тисяч років майже не змінилася.'),
(1895, 578, 'ru', 'Когда речь идет об учебном заведении, представляешь большое здание с десятками учебных помещений, лекционные аудитории, парты, записные книжки, конспекты, преподаватели, лекции, семинары. Такая система образования сформировалась еще в Древней Греции, и за несколько тысяч лет почти не изменилась.'),
(1896, 578, 'en', 'When we say “educational establishment” we imagine a high building with many classrooms, desks,copybooks,lecturenotes, teachers, seminars. Such system of education appeared in Ancient Greece and is still being  used nowadays.'),
(1897, 579, 'ua', 'Але зараз світ стоїть на порозі великої революції в освіті, яка назавжди змінить те, як ми навчаємося. Сьогодні технології зробили доступним те, що раніше могли дозволити собі лише одиниці, наймаючи персональних вчителів та репетиторів: персоналізоване навчання.'),
(1898, 579, 'ru', 'Но сейчас мир стоит на пороге большой революции в образовании, которая навсегда изменит то, как мы учимся. Сегодня технологии сделали доступным то, что раньше могли позволить себе лишь единицы, нанимая персональных учителей и репетиторов: персонализированное обучение.'),
(1899, 579, 'en', 'But today the world requires significant changes in education system because new technologies make personalized learning, which was  previously  available only to few people who were taught by private teachers and tutors, affordable  to everybody.'),
(1900, 580, 'ua', 'Гарна новина для тебе: сьогодні таких спеціалістів не вистачає.'),
(1901, 580, 'ru', 'Хорошая новость для тебя: сегодня таких специалистов не хватает.'),
(1902, 580, 'en', 'Good news for you:   Such specialists are in high demand nowadays.'),
(1903, 581, 'ua', 'Інформаційні технології розвиваються дуже швидко і стають потрібними усюди, існуючі навчальні заклади просто не встигають готувати потрібну кількість.'),
(1904, 581, 'ru', 'Информационные технологии развиваются очень быстро и становятся нужными всюду, существующие учебные заведения просто не успевают готовить нужное количество.'),
(1905, 581, 'en', 'Information technologies are developing very fast and become needed everywhere, that is why educational establishments don`t manage to teach the required number of specialists.'),
(1906, 582, 'ua', 'Нестача спеціалістів означає, що зарплати на ринку стабільно зростають, і сягнули небачених для України значень: в середньому спеціалісти з інформаційних технологій сьогодні отримують 3-5 тис доларів у місяць, і при цьому роботодавці активно полюють на професіоналів.'),
(1907, 582, 'ru', 'Недостаток специалистов означает, что зарплаты на рынке стабильно растут, и достигли невиданных для Украины значений: в среднем специалисты по информационным технологиям сегодня получают 3-5 тыс долларов в месяц, и при этом работодатели активно охотятся на профессионалов.'),
(1908, 582, 'en', 'The lack of specialists means that the salaries on the market are steadily rising, and reaching very high for Ukraine:  an average salary of an  IT specialist is 3-5 thousand dollars per  month, but employers are still  actively hunting for professionals.'),
(1909, 583, 'ua', 'Секрет таких високих зарплат не лише у дефіциті кадрів, а й у тому, що для ІТ-галузі кордони - не проблема. Ти можеш працювати вдома зі своєї квартири в Україні над замовленням клієнта зі США чи Німеччини і отримувати винагороду у доларах чи євро з рівнем оплати відповідно до світових стандартів.'),
(1910, 583, 'ru', 'Секрет таких высоких зарплат не только в дефиците кадров, но и в том, что для ИТ-отрасли границы - не проблема. Ты можешь работать дома из своей квартиры в Украине над заказом клиента из США или Германии и получать вознаграждение в долларах или евро с уровнем оплаты в соответствии с мировыми стандартами.'),
(1911, 583, 'en', 'The reason of such high salaries is not only the lack of staff  but in the fact that IT is an  industry without borders.  You can work with customers`  orders from USA or Germany at home in Ukraine and receive your  salary in dollars or euro  in accordance with international standards.'),
(1912, 584, 'ua', 'Запрошуємо тебе приєднатися до світової інформаційної еліти та за короткий час стати професіоналом у сфері інформаційних технологій, щоб отримувати стабільно високий дохід,  працюючи в зручних умовах за гнучким графіком.'),
(1913, 584, 'ru', 'Приглашаем тебя присоединиться к мировой информационной элиты и за короткое время стать профессионалом в сфере информационных технологий, чтобы получать стабильно высокий доход, работая в удобных условиях по гибкому графику.'),
(1914, 584, 'en', 'We invite you to join the elite world of information technologies and become a professional in IT field , get stable high salary,work flexible schedule  in comfortable conditions.'),
(1915, 585, 'ua', 'Що очікується від тебе'),
(1916, 585, 'ru', 'Что ожидается от тебя'),
(1917, 585, 'en', 'What is expected from you'),
(1918, 586, 'ua', 'Програмування - це не так складно, як ти можеш уявляти. Безумовно, щоб стати хорошим програмістом, потрібен час та зусилля. Ризикнемо сказати, що крім часу та зусиль (та, зрозуміло, наявності простенького компютера) не потрібно більше ні-чо-го. '),
(1919, 586, 'ru', 'Программирование - это не так сложно, как ты можешь представить. Безусловно, чтобы стать хорошим программистом, нужно время и усилия. Рискнем сказать, что кроме времени и усилий (и, разумеется, наличия простенького компьютера) не нужно больше ни-че-го.'),
(1920, 586, 'en', 'Programming is not as hard as you think. Certainly, you have to spend  time and efforts to become a good programmer. I daresay you need nothing more but time and efforts (and of course a simple computer).'),
(1921, 587, 'ua', 'Не потрібно бути сильним у математиці: навіть якщо у школі ти не любив математику, а твої оцінки не піднимались вище середнього рівня, ти зможеш стати чудовим програмістом.'),
(1922, 587, 'ru', 'Не нужно быть сильным в математике: даже если в школе ты не любил математику, а твои оценки не пиднимались выше среднего уровня, ты сможешь стать прекрасным программистом.'),
(1923, 587, 'en', 'You needn''t be good at math, even if you didn''t like math at school and your  school marks weren`t high, you can still become a wonderful programmer.'),
(1924, 588, 'ua', 'Не потрібно знати, як влаштований компютер чи бути досвіченим користувачем будь-яких програм. Достатньо часу на навчання та бажання займатися.'),
(1925, 588, 'ru', 'Не нужно знать, как устроен компьютер или быть опытным пользователем любых программ. Достаточно времени на обучение и желание заниматься.'),
(1926, 588, 'en', 'You don''t need to know how computer is built or be an experienced user of any applications . You just need  time and desire to study.'),
(1927, 589, 'ua', 'Гарні знання з математики, логіки, комп’ютера можуть пришвидшити темп навчання, але й без них кожен зможе досягти високого рівня професіоналізму у програмуванні завдяки іноваційному підходу до навчання Академії Програмування ІНТІТА.'),
(1928, 589, 'ru', 'Хорошие знания по математике, логике, компьютера могут ускорить темп обучения, но и без них каждый сможет достичь высокого уровня профессионализма в программировании благодаря инновационному подходу к обучению Академии Программирование ИНТИТА.'),
(1929, 589, 'en', 'Good knowledge of math, logic and computer  can make  the process of education faster   but even without them everyone can  become highly professional in programming due to  innovative approach to teaching  and learning provided by INTITA Programming Academy.'),
(1930, 590, 'ua', 'Відмова у доступі'),
(1931, 590, 'ru', 'Отказ в доступе'),
(1932, 590, 'en', 'Lack of access'),
(1933, 591, 'ua', 'Зареєструватися'),
(1934, 591, 'ru', 'Зарегистрироваться'),
(1935, 591, 'en', 'Sign up'),
(1936, 592, 'ua', 'Сплатити зараз'),
(1937, 592, 'ru', 'Оплатить сейчас'),
(1938, 592, 'en', 'Pay now'),
(1939, 593, 'ua', 'Оплатити модуль'),
(1940, 593, 'ru', 'Оплатить модуль'),
(1941, 593, 'en', 'Pay module'),
(1942, 594, 'ua', 'Виберіть користувача'),
(1943, 594, 'ru', 'Выберите пользователя'),
(1944, 594, 'en', 'Choose a user'),
(1945, 595, 'ua', 'Користувач'),
(1946, 595, 'ru', 'Пользователь'),
(1947, 595, 'en', 'User'),
(1948, 596, 'ua', 'Всі курси'),
(1949, 596, 'ru', 'Все курсы'),
(1950, 596, 'en', 'All courses'),
(1951, 597, 'ua', 'Виберіть курс'),
(1952, 597, 'ru', 'Выберите курс'),
(1953, 597, 'en', 'Select course'),
(1954, 598, 'ua', 'Модуль'),
(1955, 598, 'ru', 'Модуль'),
(1956, 598, 'en', 'Module'),
(1957, 599, 'ua', 'Сплатити зараз'),
(1958, 599, 'ru', 'Оплатить сейчас'),
(1959, 599, 'en', 'Pay now'),
(1960, 600, 'ua', 'Оплатити курс'),
(1961, 600, 'ru', 'Оплатить курс'),
(1962, 600, 'en', 'Pay course'),
(1963, 601, 'ua', 'Виберіть користувача'),
(1964, 601, 'ru', 'Выберите пользователя'),
(1965, 601, 'en', 'Choose a user'),
(1966, 602, 'ua', 'Всі курси'),
(1967, 602, 'ru', 'Все курсы'),
(1968, 602, 'en', 'All courses'),
(1969, 603, 'ua', 'Виберіть курс'),
(1970, 603, 'ru', 'Выберите курс'),
(1971, 603, 'en', 'Select course'),
(1972, 604, 'ua', 'Сплатити зараз'),
(1973, 604, 'ru', 'Оплатить сейчас'),
(1974, 604, 'en', 'Pay now'),
(1975, 605, 'ua', 'Курс'),
(1976, 605, 'ru', 'Курс'),
(1977, 605, 'en', 'Course'),
(1978, 606, 'ua', 'Всі модулі'),
(1979, 606, 'ru', 'Все модули'),
(1980, 606, 'en', 'All modules'),
(1981, 607, 'ua', 'Виберіть модуль'),
(1982, 607, 'ru', 'Выберите модуль'),
(1983, 607, 'en', 'Select module'),
(1984, 608, 'ua', 'Загальний'),
(1985, 608, 'ru', 'Общий'),
(1986, 608, 'en', 'General'),
(1987, 609, 'ua', 'За алфавітом'),
(1988, 609, 'ru', 'По алфавиту'),
(1989, 609, 'en', 'Alphanumeric'),
(1990, 610, 'ua', 'За датою'),
(1991, 610, 'ru', 'По дате'),
(1992, 610, 'en', 'By date'),
(1993, 611, 'ua', 'За рейтингом'),
(1994, 611, 'ru', 'За рейтингом'),
(1995, 611, 'en', 'By rating'),
(1996, 612, 'ua', 'Вибач, ти не можеш переглядати чужий профіль.'),
(1997, 612, 'ru', 'Извини, ты не можешь просматривать чужой профиль.'),
(1998, 612, 'en', 'Sorry, you can not view someone else''s profile.'),
(1999, 613, 'ua', 'Відео'),
(2000, 613, 'ru', 'Видео'),
(2001, 613, 'en', 'Video'),
(2002, 614, 'ua', 'Текст'),
(2003, 614, 'ru', 'Текст'),
(2004, 614, 'en', 'Text'),
(2005, 615, 'ua', 'Частина'),
(2006, 615, 'ru', 'Часть'),
(2007, 615, 'en', 'Part'),
(2008, 616, 'ua', 'занять'),
(2009, 616, 'ru', 'занятий'),
(2010, 616, 'en', 'lectures'),
(2011, 617, 'ua', 'Форум'),
(2012, 617, 'ru', 'Форум'),
(2013, 617, 'en', 'Forum'),
(2014, 618, 'ua', 'Ваш профіль заповнено на'),
(2015, 618, 'ru', 'Ваш профиль заполнен на'),
(2016, 618, 'en', 'Your profile is completed by'),
(2017, 619, 'ua', 'Додати аватар'),
(2018, 619, 'ru', 'Добавить аватар'),
(2019, 619, 'en', 'Add an avatar'),
(2020, 620, 'ua', 'Додати'),
(2021, 620, 'ru', 'Добавить'),
(2022, 620, 'en', 'Add'),
(2023, 621, 'ua', 'ім''я'),
(2024, 621, 'ru', 'имя'),
(2025, 621, 'en', 'name'),
(2026, 622, 'ua', 'прізвище'),
(2027, 622, 'ru', 'фамилию'),
(2028, 622, 'en', 'surname'),
(2029, 623, 'ua', 'нік'),
(2030, 623, 'ru', 'ник'),
(2031, 623, 'en', 'nickname'),
(2032, 624, 'ua', 'дату народження'),
(2033, 624, 'ru', 'дату рождения'),
(2034, 624, 'en', 'date of birth'),
(2035, 625, 'ua', 'телефон'),
(2036, 625, 'ru', 'телефон'),
(2037, 625, 'en', 'phone'),
(2038, 626, 'ua', 'адресу'),
(2039, 626, 'ru', 'адрес'),
(2040, 626, 'en', 'address'),
(2041, 627, 'ua', 'освіту'),
(2042, 627, 'ru', 'образование'),
(2043, 627, 'en', 'education'),
(2044, 628, 'ua', 'про себе'),
(2045, 628, 'ru', 'о себе'),
(2046, 628, 'en', 'about myself'),
(2047, 629, 'ua', 'захоплення'),
(2048, 629, 'ru', 'увлечения'),
(2049, 629, 'en', 'interests'),
(2050, 630, 'ua', 'звідки про нас дізналися'),
(2051, 630, 'ru', 'откуда о нас узнали'),
(2052, 630, 'en', 'where you hear about us'),
(2053, 631, 'ua', 'посилання на facebook'),
(2054, 631, 'ru', 'ссылку на facebook'),
(2055, 631, 'en', 'link to facebook'),
(2056, 632, 'ua', 'посилання на googleplus'),
(2057, 632, 'ru', 'ссылку на googleplus'),
(2058, 632, 'en', 'link to googleplus'),
(2059, 633, 'ua', 'посилання на linkedin'),
(2060, 633, 'ru', 'ссылку на linkedin'),
(2061, 633, 'en', 'link to linkedin'),
(2062, 634, 'ua', 'посилання на vkontakte'),
(2063, 634, 'ru', 'ссылку на vkontakte'),
(2064, 634, 'en', 'link to vkontakte'),
(2065, 635, 'ua', 'посилання на twitter'),
(2066, 635, 'ru', 'ссылку на twitter'),
(2067, 635, 'en', 'link to twitter'),
(2068, 636, 'ua', 'Ви ввели некоректну сторінку'),
(2069, 636, 'ru', 'Вы ввели неправильную страницу'),
(2070, 636, 'en', 'You entered an incorrect page'),
(2071, 637, 'ua', 'Виберіть схему оплати:'),
(2072, 637, 'ru', 'Выберите схему оплаты:'),
(2073, 637, 'en', 'Choose payment scheme:'),
(2074, 638, 'ua', 'Частина недоступна'),
(2075, 638, 'ru', 'Часть недоступна'),
(2076, 638, 'en', 'Part not available'),
(2077, 639, 'ua', 'На жаль, відео для цієї сторінки ще не завантажено.'),
(2078, 639, 'ru', 'К сожалению, видео для этой страницы еще не загружено.'),
(2079, 639, 'en', 'Unfortunately, the video for this has not been downloaded.'),
(2080, 640, 'ua', 'В доступі відмовлено. Ви не пройшли попередні кроки.'),
(2081, 640, 'ru', 'В доступе отказано. Вы не прошли предыдущие шаги.'),
(2082, 640, 'en', 'Access is denied. You have not passed the previous steps.'),
(2083, 641, 'ua', '(показати)'),
(2084, 641, 'ru', '(показать)'),
(2085, 641, 'en', '(showing)'),
(2086, 642, 'ua', '(згорнути)'),
(2087, 642, 'ru', '(свернуть)'),
(2088, 642, 'en', '(minimize)'),
(2089, 643, 'ua', 'INTITA - ПРОГРАМУЙ МАЙБУТНЄ!'),
(2090, 643, 'ru', 'INTITA - ПРОГРАММИРУЙ БУДУЩЕЕ!'),
(2091, 643, 'en', 'INTITA - PROGRAM THE FUTURE!'),
(2092, 644, 'ua', 'Хочеш стати висококласним спеціалістом? Приймай вірне рішення - навчайся разом з нами!\r\nМи працюємо на результат!'),
(2093, 644, 'ru', 'Хочешь стать высококлассным специалистом? Принимай правильное решение - учись вместе с нами!\r\nМы работаем на результат!'),
(2094, 644, 'en', 'Would you like to become a highly qualified programmer? Make the right decision, join us for learning! We aim for results!'),
(2095, 645, 'ua', 'Якщо ви професійний ІТ-шник і бажаєте викладати окремі ІТ теми чи модулі і співпрацювати з нами в напрямку підготовки програмістів, напишіть нам листа.'),
(2096, 645, 'ru', 'Если Вы профессиональный ІТ-шник и хотите преподавать некоторые ІТ курсы и сотрудничать с нами в подготовке программистов, напишите нам письмо.'),
(2097, 645, 'en', 'If you are an expert in IT and want to teach IT material or modules and collaborate with us on  educating future   programmers, contact us...'),
(2098, 646, 'ua', 'У тебе немає доступу до цього заняття. Спочатку пройди попередній матеріал.'),
(2099, 646, 'ru', 'У тебя нет доступа к этому занятию. Сначала пройди предыдущий материал.'),
(2100, 646, 'en', 'You do not have access to this occupation. First, go through the previous material.'),
(2101, 647, 'ua', 'Рекомендований час'),
(2102, 647, 'ru', 'Рекомендуемое время'),
(2103, 647, 'en', 'Recommended time'),
(2104, 648, 'ua', 'На черзі'),
(2105, 648, 'ru', 'На очереди'),
(2106, 648, 'en', 'The next step'),
(2107, 649, 'ua', 'Завершено!'),
(2108, 649, 'ru', 'Завершен!'),
(2109, 649, 'en', 'Finished!'),
(2110, 650, 'ua', 'Затрачено'),
(2111, 650, 'ru', 'Прошло'),
(2112, 650, 'en', 'Spent'),
(2113, 651, 'ua', 'Модуль в роботі!'),
(2114, 651, 'ru', 'Модуль в работе!'),
(2115, 651, 'en', 'The module work!'),
(2116, 652, 'ua', 'з'),
(2117, 652, 'ru', 'из'),
(2118, 652, 'en', 'of the'),
(2119, 653, 'ua', 'днів'),
(2120, 653, 'ru', 'дней'),
(2121, 653, 'en', 'days'),
(2122, 654, 'ua', 'день'),
(2123, 654, 'ru', 'день'),
(2124, 654, 'en', 'day'),
(2125, 655, 'ua', 'дні'),
(2126, 655, 'ru', 'дня'),
(2127, 655, 'en', 'days'),
(2128, 656, 'ua', 'Модуль'),
(2129, 656, 'ru', 'Модуль'),
(2130, 656, 'en', 'Module'),
(2131, 657, 'ua', 'Курс'),
(2132, 657, 'ru', 'Курс'),
(2133, 657, 'en', 'Course'),
(2134, 658, 'ua', 'Надрукувати'),
(2135, 658, 'ru', 'Напечатать'),
(2136, 658, 'en', 'Print'),
(2137, 659, 'ua', 'Завдання'),
(2138, 659, 'ru', 'Задание'),
(2139, 659, 'en', 'Quiz'),
(2140, 660, 'ua', 'Онлайн допомога:'),
(2141, 660, 'ru', 'Онлайн помощь:'),
(2142, 660, 'en', 'Online help:'),
(2143, 661, 'ua', 'Ціна за модуль'),
(2144, 661, 'ru', 'Цена за модуль'),
(2145, 661, 'en', 'Module price'),
(2146, 662, 'ua', 'Схема курса'),
(2147, 662, 'ru', 'Схема курса'),
(2148, 662, 'en', 'Course schema'),
(2149, 663, 'ua', 'Дайте відповідь на запитання'),
(2150, 663, 'ru', 'Ответьте на вопрос'),
(2151, 663, 'en', 'Answer the question'),
(2152, 664, 'ua', 'міс.'),
(2153, 664, 'ru', 'мес.'),
(2154, 664, 'en', 'months'),
(2155, 665, 'ua', 'Допомога по скайпу'),
(2156, 665, 'ru', 'Помощь по скайпу'),
(2157, 665, 'en', 'Assistance on Skype'),
(2158, 666, 'ua', 'В майбутньому буде два типи робіт: ті - де Ви вказуватимете комп''ютеру що робити - програмувати <br> і ті - де машини вказуватимуть що робити Вам!'),
(2159, 666, 'ru', 'В будущем будет два типа работ: те - где Вы будете указывать цель компьютеру что делать - программировать <br> и те - где машины будут указывать что делать Вам!'),
(2160, 666, 'en', 'In the future there’s potentially two types of jobs: where you tell a machine what to do, programming a computer, <br> or a machine is going to tell you what to do!'),
(2161, 667, 'ua', 'місяці'),
(2162, 667, 'ru', 'месяца'),
(2163, 667, 'en', 'months'),
(2164, 668, 'ua', 'модулі'),
(2165, 668, 'ru', 'модули'),
(2166, 668, 'en', 'modules'),
(2167, 669, 'ua', 'Стажування'),
(2168, 669, 'ru', 'Стажировка'),
(2169, 669, 'en', 'Training'),
(2170, 670, 'ua', 'Схема проходження курсу'),
(2171, 670, 'ru', 'Схема прохождения курса'),
(2172, 670, 'en', 'Chart a course'),
(2173, 671, 'ua', 'Зберегти схему'),
(2174, 671, 'ru', 'Сохранить схему'),
(2175, 671, 'en', 'Save scheme'),
(2176, 672, 'ua', 'Неправильний формат файла'),
(2177, 672, 'ru', 'Неверный формат файла'),
(2178, 672, 'en', 'Invalid file format'),
(2179, 673, 'ua', 'Екзамен'),
(2180, 673, 'ru', 'Экзамен'),
(2181, 673, 'en', 'Exam'),
(2182, 674, 'ua', 'НАСТУПНЕ ЗАНЯТТЯ />'),
(2183, 674, 'ru', 'СЛЕДУЮЩЕЕ ЗАНЯТИЕ />'),
(2184, 674, 'en', 'NEXT LECTURE />'),
(2185, 675, 'ua', 'Вітаємо!'),
(2186, 675, 'ru', 'Поздравляем!'),
(2187, 675, 'en', 'Congratulations!'),
(2188, 676, 'ua', 'Ти успішно пройшов(ла) заняття!'),
(2189, 676, 'ru', 'Ты успешно прошел (а) занятие!'),
(2190, 676, 'en', 'You successfully completed lecture!'),
(2191, 677, 'ua', 'Також можеш'),
(2192, 677, 'ru', 'Также можешь'),
(2193, 677, 'en', 'Also you can'),
(2194, 678, 'ua', 'поділитися успіхом у соціальних мережах:'),
(2195, 678, 'ru', 'поделиться успехом в социальных сетях:'),
(2196, 678, 'en', 'share success with social networks:'),
(2197, 679, 'ua', 'Ти успішно вирішив(ла) завдання! Тепер ти можеш перейти до наступного матеріалу!'),
(2198, 679, 'ru', 'Ты успешно решил (а) задание! Теперь ты можешь перейти к следующему материалу!'),
(2199, 679, 'en', 'You successfully solved task! Now you can move to the next material!'),
(2200, 680, 'ua', 'ЗАКРИТИ />'),
(2201, 680, 'ru', 'ЗАКРЫТЬ />'),
(2202, 680, 'en', 'CLOSE />'),
(2203, 681, 'ua', 'ДАЛІ />'),
(2204, 681, 'ru', 'ДАЛЬШЕ />'),
(2205, 681, 'en', 'NEXT />'),
(2206, 682, 'ua', 'Помилка!'),
(2207, 682, 'ru', 'Ошибка!'),
(2208, 682, 'en', 'Error!'),
(2209, 683, 'ua', 'Щось пішло неправильно, виправ помилку та переходь до наступного матеріалу.'),
(2210, 683, 'ru', 'Что-то пошло неправильно, исправь ошибку и перейди к следующему материалу.'),
(2211, 683, 'en', 'Something went right, correct errors and move to the next material.'),
(2212, 684, 'ua', 'Введіть назву в потрібному форматі або заповніть поле'),
(2213, 684, 'ru', 'Введите название в нужном формате или заполните поле'),
(2214, 684, 'en', 'Enter a name in the correct format, or fill out the form'),
(2215, 685, 'ua', 'Введіть назву в потрібному форматі'),
(2216, 685, 'ru', 'Введите название в нужном формате'),
(2217, 685, 'en', 'Enter a name in the proper format'),
(2218, 686, 'ua', 'Редагувати сторінку'),
(2219, 686, 'ru', 'Редактировать страницу'),
(2220, 686, 'en', 'Edit page'),
(2221, 687, 'ua', 'Режим перегляду'),
(2222, 687, 'ru', 'Режим просмотра'),
(2223, 687, 'en', 'Viewing Mode'),
(2224, 688, 'ua', 'Список частин заняття'),
(2225, 688, 'ru', 'Список частей занятия'),
(2226, 688, 'en', 'List of parts'),
(2227, 689, 'ua', 'Додати відео'),
(2228, 689, 'ru', 'Добавить видео'),
(2229, 689, 'en', 'Add video'),
(2230, 690, 'ua', 'Текстовий блок:'),
(2231, 690, 'ru', 'Текстовый блок:'),
(2232, 690, 'en', 'Text block:'),
(2233, 691, 'ua', 'Додати:'),
(2234, 691, 'ru', 'Добавить:'),
(2235, 691, 'en', 'Add:'),
(2236, 692, 'ua', 'Текст'),
(2237, 692, 'ru', 'Текст'),
(2238, 692, 'en', 'Text'),
(2239, 693, 'ua', 'Код'),
(2240, 693, 'ru', 'Код'),
(2241, 693, 'en', 'Code'),
(2242, 694, 'ua', 'Приклад'),
(2243, 694, 'ru', 'Пример'),
(2244, 694, 'en', 'Example'),
(2245, 695, 'ua', 'Інструкція'),
(2246, 695, 'ru', 'Инструкция'),
(2247, 695, 'en', 'Instruction'),
(2248, 696, 'ua', 'Завдання (тест)'),
(2249, 696, 'ru', 'Задача (тест)'),
(2250, 696, 'en', 'Tasks (test)'),
(2251, 697, 'ua', 'Додати тест'),
(2252, 697, 'ru', 'Добавить тест'),
(2253, 697, 'en', 'Add test'),
(2254, 698, 'ua', 'Додати просту задачу'),
(2255, 698, 'ru', 'Добавить простую задачу'),
(2256, 698, 'en', 'Add a simple task'),
(2257, 699, 'ua', 'Додати задачу'),
(2258, 699, 'ru', 'Добавить задачу'),
(2259, 699, 'en', 'Add task'),
(2260, 700, 'ua', 'Редагування теста:'),
(2261, 700, 'ru', 'Редактирование теста:'),
(2262, 700, 'en', 'Edit test:'),
(2263, 701, 'ua', 'Варіанти відповіді:'),
(2264, 701, 'ru', 'Варианты ответа:'),
(2265, 701, 'en', 'Possible answers:'),
(2266, 702, 'ua', 'Додати відповідь'),
(2267, 702, 'ru', 'Добавить ответ'),
(2268, 702, 'en', 'Add answer'),
(2269, 703, 'ua', 'Видалити останню відповідь'),
(2270, 703, 'ru', 'Удалить последний ответ'),
(2271, 703, 'en', 'Delete last answer'),
(2272, 704, 'ua', 'Правильні відповіді:'),
(2273, 704, 'ru', 'Правильные ответы:'),
(2274, 704, 'en', 'Correct answers:'),
(2275, 705, 'ua', 'відповідь'),
(2276, 705, 'ru', 'ответ'),
(2277, 705, 'en', 'answer'),
(2278, 706, 'ua', 'Редагувати'),
(2279, 706, 'ru', 'Редактировать'),
(2280, 706, 'en', 'Edit'),
(2281, 707, 'ua', 'Скасувати'),
(2282, 707, 'ru', 'Отменить'),
(2283, 707, 'en', 'Cancel'),
(2284, 708, 'ua', 'Видалити тест'),
(2285, 708, 'ru', 'Удалить тест'),
(2286, 708, 'en', 'Remove test'),
(2287, 709, 'ua', 'Посилання youtube'),
(2288, 709, 'ru', 'Ссылка youtube'),
(2289, 709, 'en', 'Link youtube'),
(2290, 710, 'ua', 'Питання:'),
(2291, 710, 'ru', 'Вопрос:'),
(2292, 710, 'en', 'Question:'),
(2293, 711, 'ua', 'Додати нову частину'),
(2294, 711, 'ru', 'Добавить новую часть'),
(2295, 711, 'en', 'Add new part'),
(2296, 712, 'ua', 'Додати'),
(2297, 712, 'ru', 'Добавить'),
(2298, 712, 'en', 'Add'),
(2299, 713, 'ua', 'Питання теста:'),
(2300, 713, 'ru', 'Вопрос теста:'),
(2301, 713, 'en', 'Test questions:'),
(2302, 714, 'ua', 'умова теста'),
(2303, 714, 'ru', 'условие теста'),
(2304, 714, 'en', 'condition test'),
(2305, 715, 'ua', 'Студент'),
(2306, 715, 'ru', 'Студент'),
(2307, 715, 'en', 'Student'),
(2308, 716, 'ua', 'Видалений користувач'),
(2309, 716, 'ru', 'Удаленный пользователь'),
(2310, 716, 'en', 'Deleted user'),
(2311, 717, 'ua', 'Видалена лекція'),
(2312, 717, 'ru', 'Лекция удалена'),
(2313, 717, 'en', 'Deleted lecture'),
(2314, 718, 'ua', 'Видалити просту задачу'),
(2315, 717, 'ru', 'Удалить простую задачу'),
(2316, 717, 'en', 'Delete plain task'),
(2317, 719, 'ua', 'Додати просту задачу'),
(2318, 719, 'ru', 'Добавить простую задачу'),
(2319, 719, 'en', 'Add plain task'),
(2320, 720, 'ua', 'Редагувати просту задачу'),
(2321, 720, 'ru', 'Редактировать простую задачу'),
(2322, 720, 'en', 'Edit plain task'),
(2323, 721, 'ua', 'Додати нову задачу:'),
(2324, 721, 'ru', 'Добавить новую задачу'),
(2325, 721, 'en', 'Add new task'),
(2326, 722, 'ua', 'Мова програмування:'),
(2327, 722, 'ru', 'Язык программирования:'),
(2328, 722, 'en', 'Programing language:'),
(2329, 723, 'ua', 'Назва:'),
(2330, 723, 'ru', 'Название:'),
(2331, 723, 'en', 'Title:'),
(2332, 724, 'ua', 'Назва задачі'),
(2333, 724, 'ru', 'Название задачи:'),
(2334, 724, 'en', 'Title of the task:'),
(2335, 725, 'ua', 'Умова задачі*:'),
(2336, 725, 'ru', 'Условие задачи*:'),
(2337, 725, 'en', 'Condition of the task:'),
(2338, 726, 'ua', 'Еталон*:'),
(2339, 726, 'ru', 'Эталон*:'),
(2340, 726, 'en', 'Etalon*:'),
(2341, 727, 'ua', 'Футер*:'),
(2342, 727, 'ru', 'Футер*:'),
(2343, 727, 'en', 'Footer*:'),
(2344, 728, 'ua', 'Хедер*:'),
(2345, 728, 'ru', 'Хедер*:'),
(2346, 728, 'en', 'Header*:'),
(2347, 729, 'ua', 'Додати задачу'),
(2348, 729, 'ru', 'Добавить задачу'),
(2349, 729, 'en', 'Add task'),
(2350, 730, 'ua', 'Скасувати'),
(2351, 730, 'ru', 'Отменить'),
(2352, 730, 'en', 'Cancel'),
(2353, 731, 'ua', 'Формула для вставки в блок'),
(2354, 731, 'ru', 'Формула для вставки в блок'),
(2355, 731, 'en', 'Formula for inserting the block'),
(2356, 732, 'ua', 'Формула в тексті'),
(2357, 732, 'ru', 'Формула в текстe'),
(2358, 732, 'en', 'Formula in the text'),
(2359, 733, 'ua', 'Поставте курсор в текстовий блок та вставте LaTeX формулу'),
(2360, 733, 'ru', 'Поставте курсор в текстовий блок и вставте LaTeX формулу'),
(2361, 733, 'en', 'Place the cursor in the text block and insert LaTeX formula'),
(2362, 734, 'ua', 'Вставити формулу'),
(2363, 734, 'ru', 'Вставить формулу'),
(2364, 734, 'en', 'Insert the formula'),
(2365, 735, 'ua', 'Редагувати:'),
(2366, 735, 'ru', 'Редактировать'),
(2367, 735, 'en', 'Edit'),
(2368, 736, 'ua', '(Виберіть мову програмування)'),
(2369, 736, 'ru', '(Виберите язык программирования)'),
(2370, 736, 'en', '(Choose the programing language)'),
(2371, 737, 'ua', 'Видалити задачу'),
(2372, 737, 'ru', 'Удалить задачу'),
(2373, 737, 'en', 'Remove task'),
(2374, 738, 'ua', 'Умова теста'),
(2375, 738, 'ru', 'Условие теста'),
(2376, 738, 'en', 'Test condition'),
(2377, 739, 'ua', 'Додати задачу'),
(2378, 739, 'ru', 'Добавить задачу'),
(2379, 739, 'en', 'Add Task'),
(2380, 740, 'ua', 'Псевдонім має бути унікальним'),
(2381, 740, 'ru', 'Псевдоним должен быть уникальным'),
(2382, 740, 'en', 'Alias must unique'),
(2383, 741, 'ua', 'Видалений'),
(2384, 741, 'ru', 'Удаленний'),
(2385, 741, 'en', 'Removed'),
(2386, 742, 'ua', 'Номер курсу'),
(2387, 742, 'ru', 'Номер курса'),
(2388, 742, 'en', 'Number of course'),
(2389, 743, 'ua', 'Назва англійською'),
(2390, 743, 'ru', 'Название на английском'),
(2391, 743, 'en', 'Title in english'),
(2392, 744, 'ua', 'Назва російською'),
(2393, 744, 'ru', 'Название на руском'),
(2394, 744, 'en', 'Title in russian'),
(2395, 745, 'ua', 'Псевдонім'),
(2396, 745, 'ru', 'Псевдоним'),
(2397, 745, 'en', 'Alias'),
(2398, 746, 'ua', 'Введіть ім''я випускника.'),
(2399, 746, 'ru', 'Введите имя выпускника'),
(2400, 746, 'en', 'Insert the name of the graduate'),
(2401, 747, 'ua', 'Введіть прізвище випускника.'),
(2402, 747, 'ru', 'Введите фамилию випускника'),
(2403, 747, 'en', 'Insert the sur-name of the graduate'),
(2404, 748, 'ua', 'Рейтинг повинен бути числовим значенням.'),
(2405, 748, 'ru', 'Рейтинг должен быть числовым значением'),
(2406, 748, 'en', 'Range should be integer value'),
(2407, 749, 'ua', 'Введіть дату в форматі РРРР-ММ-ДД'),
(2408, 749, 'ru', 'Введите дату в формате ГГГГ-ММ-ДД'),
(2409, 749, 'en', 'Insert date in format YYYY-MM-DD'),
(2410, 750, 'ua', 'Дата закінчення не може бути раніше ніж 2012 рік.'),
(2411, 750, 'ru', 'Дата окончания не может быть раньше чем 2012 год'),
(2412, 750, 'en', 'Release date can not be earlier than 2012 year'),
(2413, 751, 'ua', 'Дата закінчення не може бути пізніше ніж зараз.'),
(2414, 751, 'ru', 'Дата окончания не может быть позже чем сейчас'),
(2415, 751, 'en', 'Release date can not be earlier than now'),
(2416, 752, 'ua', 'Ім''я'),
(2417, 752, 'ru', 'Имя'),
(2418, 752, 'en', 'First Name'),
(2419, 753, 'ua', 'Прізвище'),
(2420, 753, 'ru', 'Фамилия'),
(2421, 753, 'en', 'Last Name'),
(2422, 754, 'ua', 'Аватар'),
(2423, 754, 'ru', 'Аватар'),
(2424, 754, 'en', 'Avatar'),
(2425, 755, 'ua', 'Дата випуску'),
(2426, 755, 'ru', 'Дата выпуска'),
(2427, 755, 'en', 'Graduate Date'),
(2428, 756, 'ua', 'Посада'),
(2429, 756, 'ru', 'Должность'),
(2430, 756, 'en', 'Position'),
(2431, 757, 'ua', 'Місце роботи'),
(2432, 757, 'ru', 'Место работы'),
(2433, 757, 'en', 'Place of Place'),
(2434, 758, 'ua', 'Посилання на місце роботи'),
(2435, 758, 'ru', 'Ссылка на место работы'),
(2436, 758, 'en', 'Link on the place of work'),
(2437, 759, 'ua', 'Сторінка курсу'),
(2438, 759, 'ru', 'Страница курса'),
(2439, 759, 'en', 'Page of the course'),
(2440, 760, 'ua', 'Історія'),
(2441, 760, 'ru', 'История'),
(2442, 760, 'en', 'History'),
(2443, 761, 'ua', 'Рейтинг'),
(2444, 761, 'ru', 'Рейтинг'),
(2445, 761, 'en', 'Rate'),
(2446, 762, 'ua', 'Відгук'),
(2447, 762, 'ru', 'Отзыв'),
(2448, 762, 'en', 'Recall'),
(2449, 763, 'ua', 'Ім''я англійською'),
(2450, 763, 'ru', 'Имя на английском'),
(2451, 763, 'en', 'First name in English'),
(2452, 764, 'ua', 'Прізвище англійською'),
(2453, 764, 'ru', 'Фамилия на английском'),
(2454, 764, 'en', 'Last Name in English'),
(2455, 765, 'ua', 'Рейтинг не може бути більше ніж 10'),
(2456, 765, 'ru', 'Рейтинг не может быть больше чем 10'),
(2457, 765, 'en', 'Rating can not be large then 10'),
(2458, 766, 'ua', 'Рейтинг не може бути менше ніж 0'),
(2459, 766, 'ru', 'Рейтинг не может быть меньше чем 0'),
(2460, 766, 'en', 'Rating can not be less then 10'),
(2461, 767, 'ua', 'Ви впевнені, що хочете видалити цей блок?'),
(2462, 767, 'ru', 'Вы уверены, что хотите удалить этот блок?'),
(2463, 767, 'en', 'Are you sure you want to delete this block?'),
(2464, 768, 'ua', 'Щось пішло не так. Перевірте з''єднання, перезавантажте сторінку та спробуйте ще раз. Якщо не допомогло - зв''яжіться з адміністрацією.'),
(2465, 768, 'ru', 'Что-то пошло не так. Проверьте соединение, перезагрузите страницу и попробуйте еще раз. Если не помогло - свяжитесь с администрацией.'),
(2466, 768, 'en', 'Something went wrong. Check the connection, reload the page and try again.  If this does not help - contact administration.'),
(2467, 769, 'ua', 'Закрийте попередні блоки перед редагуванням нового.'),
(2468, 769, 'ru', 'Закройте предыдущие блоки перед редактированием нового.'),
(2469, 769, 'en', 'Close the previous blocks before editing a new one.'),
(2470, 770, 'ua', 'Збережено'),
(2471, 770, 'ru', 'Сохранено'),
(2472, 770, 'en', 'Saved'),
(2473, 771, 'ua', 'Зберегти');
INSERT INTO `translate` (`id_record`, `id`, `language`, `translation`) VALUES
(2474, 771, 'ru', 'Сохранить'),
(2475, 771, 'en', 'Save'),
(2476, 772, 'ua', 'Закрити'),
(2477, 772, 'ru', 'Закрыть'),
(2478, 772, 'en', 'Close'),
(2479, 773, 'ua', 'Введіть просту задачу'),
(2480, 773, 'ru', 'Введите простую задачу'),
(2481, 773, 'en', 'Enter the simple task'),
(2482, 774, 'ua', 'Завдання'),
(2483, 774, 'ru', 'Задание'),
(2484, 774, 'en', 'Task'),
(2485, 775, 'ua', 'Автор'),
(2486, 775, 'ru', 'Автор'),
(2487, 775, 'en', 'Author'),
(2488, 776, 'ua', 'Поле не може бути пустим'),
(2489, 776, 'ru', 'Поле не может быть пустым'),
(2490, 776, 'en', 'The field can not be empty'),
(2491, 777, 'ua', 'Тепер ваша реєстрація завершена. Тепер ви можете увійти на сайт під вашим обліковим записом соціальної мережі.'),
(2492, 777, 'ru', 'Теперь ваша регистрация завершена. Теперь вы можете войти на сайт под учетной записью социальной сети.'),
(2493, 777, 'en', 'Now your registration is complete. Now you can log in to your account social network.'),
(2494, 778, 'ua', 'Введіть електронну пошту в поле нижче для прив''язки її до вашого аккаунта в соціальній мережі. На дану електронну пошту буде відправлено посилання для підтвердження дійсності адреси.'),
(2495, 778, 'ru', 'Введите электронную почту в поле ниже для привязки ее к вашему аккаунта в социальной сети. На эту электронную почту будет отправлено ссылки для подтверждения подлинности адреса.'),
(2496, 778, 'en', 'Enter your email in the box below to assign it to your account in a social network. In this e-mail will be sent a link to confirm the validity of the address.'),
(2497, 718, 'ru', 'Удалить простую задачу'),
(2498, 718, 'en', 'Delete a plain task'),
(2499, 779, 'ua', 'Соціальні мережі'),
(2500, 779, 'ru', 'Социальные сети'),
(2501, 779, 'en', 'Social network'),
(2502, 54655, 'ua', 'gsrthtr'),
(2503, 54655, 'ru', 'fraef'),
(2504, 54655, 'en', 'fe'),
(2505, 780, 'ua', 'риь'),
(2506, 780, 'ru', 'пеагор'),
(2507, 780, 'en', 'dtgfghd'),
(2508, 782, 'ua', 'Повідомлення для перевірки функціональності'),
(2509, 782, 'ru', 'Сообщение для проверки функциональности'),
(2510, 782, 'en', 'message'),
(2511, 783, 'ua', 'мор'),
(2512, 783, 'ru', 'мор'),
(2513, 783, 'en', '3565'),
(2514, 3123, 'ua', 'sadasdsa'),
(2515, 3123, 'ru', 'sadsadasd'),
(2516, 3123, 'en', 'sadsada');

-- --------------------------------------------------------

--
-- Структура таблицы `user`
--

CREATE TABLE IF NOT EXISTS `user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `firstName` varchar(255) NOT NULL,
  `identity` varchar(255) NOT NULL,
  `network` varchar(255) NOT NULL,
  `state` tinyint(1) NOT NULL,
  `full_name` varchar(255) NOT NULL,
  `middleName` varchar(255) DEFAULT NULL,
  `secondName` varchar(255) DEFAULT NULL,
  `nickname` varchar(255) DEFAULT NULL,
  `birthday` varchar(11) DEFAULT NULL,
  `email` varchar(255) NOT NULL,
  `password` varchar(255) DEFAULT NULL,
  `facebook` varchar(255) DEFAULT NULL,
  `googleplus` varchar(255) DEFAULT NULL,
  `linkedin` varchar(255) DEFAULT NULL,
  `vkontakte` varchar(255) DEFAULT NULL,
  `twitter` varchar(255) DEFAULT NULL,
  `phone` varchar(15) DEFAULT NULL,
  `hash` varchar(20) NOT NULL,
  `address` text,
  `education` varchar(255) DEFAULT NULL,
  `educform` varchar(60) DEFAULT 'Онлайн',
  `interests` text,
  `aboutUs` text,
  `aboutMy` varchar(255) DEFAULT NULL,
  `avatar` varchar(255) DEFAULT 'noname.png',
  `role` tinyint(2) NOT NULL DEFAULT '0',
  `token` varchar(150) DEFAULT NULL,
  `activkey_lifetime` datetime DEFAULT NULL,
  `status` tinyint(1) DEFAULT '0',
  `reg_time` int(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=262 ;

--
-- Дамп данных таблицы `user`
--

INSERT INTO `user` (`id`, `firstName`, `identity`, `network`, `state`, `full_name`, `middleName`, `secondName`, `nickname`, `birthday`, `email`, `password`, `facebook`, `googleplus`, `linkedin`, `vkontakte`, `twitter`, `phone`, `hash`, `address`, `education`, `educform`, `interests`, `aboutUs`, `aboutMy`, `avatar`, `role`, `token`, `activkey_lifetime`, `status`, `reg_time`) VALUES
(1, 'Anonim', '', '', 0, '', NULL, NULL, NULL, NULL, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 1, NULL, NULL, 0, 0),
(2, 'Administrator', '', '', 0, '', NULL, 'Forum', '', '', 'forum_admin@gmail.com', '20eabe5d64b0e216796e834f52d61fd0b70332fc', '', '', '', 'https://vk.com/', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 3, 'ef50a48e3132fb85a11a789529f45ca21e18e322', NULL, 1, 0),
(11, 'ivannayutrrtr', '', '', 0, '', NULL, '', '', '', 'ivanna@yutr.rtr', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 1, NULL, NULL, 1, 0),
(22, 'Student', '', '', 0, '', NULL, '      ', '', '01/02/2005', 'student@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', 'Ширшова, 19/24', 'Одесский государственный аграрный университет', 'Онлайн/Офлайн', 'апрп мпира вапарап арывпарвы парвыпаыврапвыыапв ыапв ырапвырапвырапвырапвыарвыпарвпарвпарвыпаврпараправправпавпрвапарвапвыапвыапвы, воарпвапаврпвапавапаыврапвырапыврапывапывапыварывпарвыпавпавыпава, лопиррпапапывапврапвыапывапвыапвыапвыыравыпа, оварпоарп', 'оароарпаорпаолправорпаовправправпрвапавло, лоыврапоаврпварпавол, оарповарповапрваправпраолпралоправо', 'рпртпотпотрпо', '565491fe556ca.jpg', 0, NULL, NULL, 1, 0),
(38, 'Вчитель', '', '', 0, '', NULL, 'Вчитель', 'Teacher1', '25/11/1984', 'teacher1@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', 'https://plus.google.com/u/0/106279986990195842070/posts', '', '', '', '+38(222)1111111', '', '', '', 'Онлайн', '', '', '', '56549268307cf.jpg', 1, '8f1f15efd7312a5795163d48402a727541c8ddc2', '2015-07-29 09:55:49', 1, 1445419691),
(39, 'Викладач', '', '', 0, '', NULL, '', '', '', 'teacher2@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '+38(111)1111222', '', '', '', 'Онлайн', '', '', '', 'noname.png', 1, NULL, NULL, 1, 1445420374),
(40, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'teacher3@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 1, NULL, NULL, 1, 0),
(41, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'teacher4@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 1, NULL, NULL, 1, 0),
(42, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'teacher5@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 1, NULL, NULL, 1, 0),
(43, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'teacher6@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 1, NULL, NULL, 1, 0),
(44, 'Vinnytsia', '', '', 0, '', NULL, 'ITAcademy', '', '', 'ita.in.ua.hr@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', '55cb512264ba3.jpg', 0, NULL, NULL, 1, 0),
(45, 'Roman', '', '', 0, '', NULL, 'Melnyk', 'ROMCOM', '', 'romcom77@gmail.com', '08de4459afb53dd6e8ab179fb42cdb93b0516185', '', '', '', '', '', '', '', '', 'ВНТУ', 'Онлайн', 'Рибалка', 'від друзів', '', '56263085b98ab.gif', 0, NULL, NULL, 1, 0),
(46, 'IT', '', '', 0, '', NULL, 'Academy', NULL, NULL, 'ita.in.ua@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 0),
(47, 'Анонім', '', '', 0, '', NULL, '', '', '', 'tifjseihfuiw@tttt.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 1, NULL, NULL, 1, 0),
(48, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'teac@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 1, NULL, NULL, 1, 0),
(49, 'Admin', '', '', 0, '', NULL, 'LastName', 'Nick', '', 'vnnchkh12@gmail.com', '20eabe5d64b0e216796e834f52d61fd0b70332fc', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 3, NULL, NULL, 1, 0),
(50, 'Serhiy', '', '', 0, '', NULL, 'Kalinovsky', NULL, '19.11.1978', 'serhiy.kalinovsky@gmail.com', NULL, 'https://www.facebook.com/serhiy.kalinovsky', NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 1, NULL, NULL, 1, 0),
(51, 'student', '', '', 0, '', NULL, '', '', '', 'student1@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1445419893),
(52, 'Student ', '', '', 0, '', NULL, 'Hello', '', '', 'student2@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', '56124acf335bc.jpg', 0, NULL, NULL, 1, 0),
(53, 'StudenT', '', '', 0, '', NULL, '', '', '', 'student3@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', '56124aeee81ec.jpg', 0, NULL, NULL, 1, 0),
(54, 'StudentFour', '', '', 0, '', NULL, NULL, NULL, NULL, 'student4@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 0),
(55, 'StudentFive', '', '', 0, '', NULL, NULL, NULL, NULL, 'student5@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 0),
(56, 'Вова', '', '', 0, '', 'Джа', 'Марля', 'Wizlight', '21/03/1997', 'Wizlightdragon@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', 'https://plus.google.com/101767783598664816439', '', 'http://vk.com/id172289303', '', '+38(911)_______', '', 'Ямайка', 'ВДПУ', 'Онлайн', 'Ковбаска, колобки, раста', '', 'Володію албанською. Люблю м''ясо та до м''яса. Розвожу королів. ', '55a912c34baad.jpg', 0, '13270b2a395f880711dd027eab31260fc61e79e9', '2015-08-17 21:03:42', 1, 0),
(103, 'David', '', '', 0, '', NULL, 'Cameron', '', '', 'info@bonprix.ua', '3d4f2bf07dc1be38b20cd6e46949a1071f9d0e3d', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, 'bfbb9ee6d481be5934356ddde3f42861ae3dc2e0', NULL, 1, 0),
(104, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'fbgf@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, 'c5f1a9722575671a9da8efe5cc32e26f76092818', NULL, 0, 0),
(106, 'Аліна', '', '', 0, '', NULL, '', '', '11/11/2011', 'nnn.badyora2015@gmail.com', '6216f8a75fd5bb3d5f22b6f9958cdede3fc086c2', '', 'https://plus.google.com/106279986990195842070', '', 'http://vk.com/i.cook', '', '+38(111)1111111', '', '', '', 'Онлайн/Офлайн', '', '', '', '5613cc9b7d2bc.jpg', 0, '0c967b3f8ade5c294cbc7ad6f9fa5368f36d40b5', '2015-10-06 12:23:32', 1, 0),
(108, 'Sector', '', '', 0, '', NULL, 'Freedom', NULL, NULL, 'yaroslav.plaksii@gmail.com', NULL, 'https://www.facebook.com/app_scoped_user_id/100007943565992/', NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, '559f786580f41.jpg', 1, NULL, NULL, 1, 0),
(109, '', '', '', 0, '', NULL, '', '', '', 'antongriadchenko@gmail.com', '5a7e4b28af86dc7f576692b97266fb445149ddee', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 1, NULL, NULL, 1, 0),
(110, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'nover2579@yandex.ru', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 1, NULL, NULL, 1, 0),
(111, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'nover2579@yandex.ru', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 0),
(113, 'Олександр', '', '', 0, '', NULL, 'Бохан', NULL, NULL, 'bohanoleksandr@gmail.com', NULL, NULL, 'https://plus.google.com/108436464601398494495', NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, '55a4f757309bd.jpg', 0, NULL, NULL, 1, 0),
(114, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'sdhfk@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 1, 'cfdd43635cc3655c739fe28d97ef59111c81f6b7', NULL, 0, 0),
(115, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'nnn.basyora2015@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '3c79de9b46fbbd2d1a58bd6f3b378c7fe019d9ed', NULL, 0, 0),
(116, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'gfhjdkghfkghdkg@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '00a07e16dabfafe4507b1751fc68407f3d6fbdbc', NULL, 0, 0),
(117, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'permmemo@gmail.com', '33852ff90d1a0fcd5ec3806275ad5d19b20bc69a', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 1, NULL, NULL, 1, 0),
(118, 'gjgkgkj', '', '', 0, '', NULL, 'hjghjggjgh', 'hjhjhjhj', '14/02/2012', 'gfhjd@gmail.com', '6216f8a75fd5bb3d5f22b6f9958cdede3fc086c2', '', '', '', '', '', '+38(380)0387125', '', '', '', 'Онлайн/Офлайн', '', '', '', 'noname.png', 0, '8d5ab4dc6bfea2d3bdb64ffe0d82f55d069ea4a7', NULL, 0, 0),
(119, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'fjghdfgkhdfgk@ghfkgh.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '1cf6f858abe11ac03e10bc5257a22d49b2223424', NULL, 0, 0),
(120, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'inderella9566cb@rumbler.ru', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, 'dcabda068f44b293f5f4111d0c7d010c11af5177', NULL, 0, 0),
(121, '', '', '', 0, '', NULL, '', '', '', '22student55@mail.ua', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', '55af57a34461d.jpg', 0, NULL, NULL, 1, 0),
(122, '', '', '', 0, '', NULL, NULL, NULL, NULL, '55sweet55@ukr.net', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, 'a9ab4b7c9d80eaf187d9c3e61833cdd576be1016', NULL, 0, 0),
(123, 'пппппппппппппппппппп', '', '', 0, '', NULL, 'пппппппппппппппппппп', 'пппппппппппппппппппп', '10/04/2010', 'datingstest2015@i.ua', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '+38(000)0000000', '', 'мс', 'ими', 'Онлайн/Офлайн', 'миясми', '', 'мимимчмитим', '55d1d179001a2.jpg', 0, NULL, NULL, 1, 0),
(124, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'datingstest2015@meta.ua', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 0),
(125, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'potap@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '511f63a611a3c4af4a74705294750b458a30f716', NULL, 1, 1438013849),
(126, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'fdghf@gmail.44', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 1, '73871ad16527d5492735ec0fb28d61f49b6ee3fb', NULL, 0, 1438062774),
(127, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'ohnDoe@example.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '152c6eb30316267b4955e076951ef7a55ba4c960', NULL, 0, 1438079401),
(128, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'o.h.nDoe@example.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, 'dbee357fd9bcaf25080407179a113ce1fff64ef7', NULL, 0, 1438079467),
(129, 'Наталья', '', '', 0, '', NULL, 'ииииииииииииии', '222222222222222222', '', 'natasha-badora@yandex.ru', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '222222222222222222222', '2222222222222222222222222', 'ттттттттттттттт', '55f2a11eb5ad7.jpg', 0, NULL, NULL, 1, 1438165651),
(130, 'Михайло', '', '', 0, '', NULL, 'Чухно', '', '02/07/1989', 'chuhno.mv@gmail.com', '47439b407286cd6f94618fbfb113f283ab3b4490', '', '', 'https://www.linkedin.com/pub/misha-chuhno/103/5a3/276', '', '', '', '', '', 'Магістр, Викладач математики та інформатики', 'Онлайн', 'PHP, JavaScript, OOP, MySQL, MSSQL, C#', '', '', '55ba02d1920fe.jpg', 1, NULL, NULL, 1, 1438250920),
(131, '', '', '', 0, '', NULL, '', '', '', 'gfgj@rtuuy.com', 'b821103a5881b0d768dd9f697df6b0b7951110b2', '', '', '', '', '', '', '', 'dgh', 'dgh', 'Онлайн', '', '', 'dh', '55cb276c7fcba.jpg', 0, 'e43a0dc110feea87fb2fe641ee3bfa268cb0f79b', NULL, 0, 1439377260),
(132, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'abyr@gmail.com', '20eabe5d64b0e216796e834f52d61fd0b70332fc', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, 'e4d4408e9332f3cdc524c27699403cd8419e3b84', NULL, 1, 1439386470),
(133, 'robota', '', '', 0, '', NULL, 'molodi', 'RM', '', 'robotamolodi@gmail.com', '08de4459afb53dd6e8ab179fb42cdb93b0516185', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', '55d071d957098.jpg', 1, NULL, NULL, 1, 1439389511),
(134, 'Oleksii', '', '', 0, '', NULL, 'Tiurenkov', 'Oleksii', '28/04/1977', 'alterego4@gmail.com', 'f3d78634c57009fe538ad68b79eef6ecf6746c95', '', '', '', '', '', '+38(067)4304672', '', '', '', 'Онлайн', '', '', '', '55cf13730eb65.JPG', 3, '78d4d3b4a3e744c28e42e6d6064fd0e0ed54a8af', NULL, 1, 1439633240),
(165, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'yulia.plaksii@gmail.com', '307508b21c53226eefbbd656578938f795132127', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1439903279),
(166, '', '', '', 0, '', NULL, '', '', '13/04/1951', 'p.badyora@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', 'https://plus.google.com/u/0/115050555533795123176/', '', '', '', '+38(098)5566412', '', '', '', 'Онлайн', 'захоплююсь усім', '', '', '55d6225a3117b.jpg', 0, NULL, NULL, 1, 1439982589),
(167, '', '', '', 0, '', NULL, '', '', '', 'green2015in@gmail.com', 'fea7f657f56a2a448da7d4b535ee5e279caf3d9a', 'https://www.facebook.com/natasha', '', '', '', '', '+38(222)222____', '', '', '', 'Онлайн', '', '', '', '56103ecfa175b.JPG', 0, NULL, NULL, 1, 1440492238),
(168, 'yellow', '', '', 0, '', NULL, 'yellow', 'yellow2015in@gmail.c', '15/02/1952', 'yellow2015in@gmail.com', 'f56d6351aa71cff0debea014d13525e42036187a', '', '', '', '', '', '+38(000)0000000', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1440492499),
(169, '', '', '', 0, '', NULL, '', '', '', 'gray2015in@gmail.com', '61e2f51ca8bab57ee8ea8bf4e59be45caf1b4dd9', '', '', '', '', '', '+38(000)000000_', '', 'пл. гагарина, 2', 'ВДПУ', 'Онлайн/Офлайн', '', '', 'пурплрплврлфвпппл', 'noname.png', 0, NULL, NULL, 1, 1440493724),
(170, 'fdgdg', '', '', 0, '', NULL, '', '', '', 'red2015in@gmail.com', 'fbd12441fe94a4d805ff32edce5dc1580a71aff2', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1440493882),
(171, '', '', '', 0, '', NULL, '', '', '', 'blond2015in@gmail.com', '8df95130cebeed72ebba06c7186442fa1cf63a01', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1440494198),
(172, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'wizlightdragon@rambler.ru', '011c945f30ce2cbafc452f39840f025693339c42', NULL, 'https://plus.google.com/113345607240713739668', NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1440513068),
(173, 'Black', '', '', 0, '', NULL, '', '', '', 'black2015in@gmail.com', '466bc8cef3e71de796ec483e212724a2c2044c68', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1440676287),
(174, '', '', '', 0, '', NULL, '', '', '12/02/1958', 'white2015in@gmail.com', 'ab874467a7d1ff5fc71a4ade87dc0e098b458aae', 'https://www.facebook.com/natasha.badora', '', '', 'http://vk.com/id561245', '', '+38(000)0000011', '', 'м. Вінниця, вул. свердлова 36/45', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1440679783),
(175, '', '', '', 0, '', NULL, '', '', '', 'fgvdjgfj@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, '2fd455b569ba96c6363dd4a4a7fe41ce80690709', NULL, 0, 1440837121),
(176, 'orange', '', '', 0, '', NULL, '', 'orange', '', 'orange2015in@gmail.com', 'b60af5f37878192ee5a17a536bad6bd936a94916', 'https://www.facebook.com/natasha', '', '', 'http://vk.com/id5648', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, 'a65d198d99016df38cf956fc3a58dc5b034cb1a4', NULL, 0, 1440846530),
(177, '', '', '', 0, '', NULL, '', '', '', 'cnmbcvbcv@bjghbfj.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', '55e192fd065a7.jpg', 0, 'e03d02cd95540702340f3355f2867eddef6c03f7', NULL, 0, 1440846589),
(178, 'Ruslan', '', '', 0, '', NULL, 'Krucheniuk', NULL, NULL, 'krucheniuk@gmail.com', NULL, NULL, 'https://plus.google.com/103980180524390935665', NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, '55e412e6a5e47.jpg', 0, NULL, NULL, 1, 1441010407),
(179, 'варп', '', '', 0, '', NULL, '', '', '', 'dfkjgh@gmail.com', '17ba0791499db908433b80f37c5fbc89b870084b', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', '55e4358c89bdc.jpg', 0, '65f02a63c7a0099059e5f449cc5279a8b8db5114', NULL, 0, 1441019276),
(180, '', '', '', 0, '', NULL, '', '', '', 'dfgbsdj@gmail.com', '17ba0791499db908433b80f37c5fbc89b870084b', 'https://www.facebook.com/natasha', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, '1747542fa4cddfadae9e8ebc276a1323bac25932', NULL, 0, 1441019521),
(181, '', '', '', 0, '', NULL, '', '', '', 'brawn2015in@gmail.com', '6216f8a75fd5bb3d5f22b6f9958cdede3fc086c2', '', '', '', '', '', '', '', '', '', 'Онлайн', 'тимти', '', '', '55ed761146dd5.jpg', 0, '0a6b451d494118d8625498a740c92b066d466d06', NULL, 0, 1441625617),
(182, 'Ім''я', '', '', 0, '', NULL, 'Прізвище', 'Нік', '04/12/2012', 'vbvcbvv@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, 'd6bb0016b53d81626b0db55933ee79083b546203', NULL, 0, 1441817423),
(183, '', '', '', 0, '', NULL, '', '', '', 'fjgf@fkgjhfk.com', '54d3d569621e12dd4a4dd244fb44896d9ae1bb0b', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, 'd5de6a125dadcb8875ebfbd3dc2dda479e57dcbd', NULL, 0, 1441820943),
(184, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'ivanna_sunny@ukr.net', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, 'http://vk.com/id102001593', NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1441821469),
(185, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'blue2015in@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, 'e016a970816e72fe38afb5d3bc581869e54560b7', NULL, 0, 1441871074),
(186, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'admin@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '637c6cabc2f52229c60d3d7b721c35f510e1d18b', NULL, 0, 1441966085),
(187, 'Ім''я', '', '', 0, '', NULL, 'ghbpdsbot', 'ybr', '20/08/2011', 'violet2015in@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '+38(555)5555555', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1441970048),
(188, '', '', '', 0, '', NULL, '', '', '', 'golden2015in@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '1', '1', 'Онлайн', '1', '1', '1', 'noname.png', 0, NULL, NULL, 1, 1442050199),
(189, '', '', '', 0, '', NULL, '', '', '04/05/1998', 'strawberry2015in@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '+38(465)4656546', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1442066807),
(190, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'water2015in@ukr.net', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '3da212abc4e4c8d106f6c81dffd4b736c27a60dd', NULL, 0, 1442323702),
(191, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'a-bvz@rumbler.ru', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '8c2910a2eeb3c7d57b8f5cc513852ae8fe0633c7', NULL, 0, 1442410013),
(192, '', '', '', 0, '', NULL, '', '', '20/02/2004', 'pink2015in@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', 'https://plus.google.com/up/accounts/upgrade/?continue=https://plus.google.com/u/0/?gpsrc%3Dogpy0%26tab%3DmX&gpsrc=ogpy0', '', '', '', '+38(222)222____', '', '', '', 'Онлайн/Офлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1442496554),
(193, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'gmnbmbn@dlhkjf.com', '55ec981f0a6054d4ad0c3fec7f32b1086f7d24f4', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, NULL, 0, '2038cbb8cab0ad6b5f3c91731146c0b6e522bf57', NULL, 0, 1442654144),
(194, 'Name', '', '', 0, '', NULL, '', 'Nickname', '', 'flover2015in@mail.ru', 'e27026187fbb2e5fb26b12aea83980bd5f4f5c9d', '', '', '', '', '', '', '', '', '', 'Онлайн', 'порпоапраопралвпр', '', '', 'noname.png', 0, NULL, NULL, 1, 1442993951),
(195, '', '', '', 0, '', NULL, '', '', '', 'geotop2015in@mail.ru', 'a045b7efa463c6ed195c644163f4168952fbd34a', 'https://www.facebook.com/josephfashion?fref=nf&ft[tn]=kC&ft[qid]=6197605189383735423&ft[mf_story_key]=-8468658465812397042&ft[ei]=6197605192584604353.6020812059965.16.0.AQL8BX8XdfJ9sJqIQnxGd_lK15G59yQsoj6Ga_BGe13htEMWJfiPch8Ztyhsv-GutGooxEC0FeTwrzleOf64un', 'https://plus.google.com/u/0/106279986990195842070/posts', 'https://www.linkedin.com/profile/view?id=385972287&authType=NAME_SEARCH&authToken=073H&locale=en_US&trk=tyah2&trkInfo=idx%3A1-1-1%2CtarId%3A1425319878205%2Ctas%3Aelena+du', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1442995719),
(196, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'lo.intita2016@yandex.ru', 'e693a4a05990fd8d115e600f4c6edf9c5541942e', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, NULL, 0, NULL, NULL, 1, 1442999152),
(197, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'super.oto2016@yandex.ru', '2d31efa5cbf97fe000001f41b39f1fceb2ecdc40', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, NULL, 0, NULL, NULL, 1, 1443001227),
(198, '', '', '', 0, '', NULL, NULL, NULL, NULL, '1989alpan@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '257d6dc89f6e936f7f536b0c653a2f5dd3e1193b', NULL, 0, 1443461167),
(199, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'cherry2015in@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '90baa5f2b4f172796029a59038e739f07d90fd57', NULL, 0, 1443695896),
(200, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'purple2015in@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1443696013),
(201, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'purple2015i.n@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '1caae227d1a401811ace307b9a2bf1933d62aede', NULL, 0, 1443771568),
(202, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'zaburanna11@ukr.net', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '91881718b9de1073bcfdb5d02fcc08018931e1ac', NULL, 0, 1444030765),
(203, '', '', '', 0, '', NULL, '', '', '', 'zaburanna22@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '+38(068)7273882', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1444032135),
(204, '', '', '', 0, '', NULL, '', '', '', 'watermalon2015in@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1444032315),
(205, 'варпвпірвп', '', '', 0, '', NULL, 'вапролд', '', '', 'intita11@ukr.net', '9a99c59b66ba09bbb2402baa42fb091d4ed4fff4', '', 'https://plus.google.com/108161518090717968731', 'https://www.linkedin.com/pub/victoria-hrintsova/ba/552/294', '', '', '+38(000)0000000', '', '', '', 'Онлайн/Офлайн', '', '', '', NULL, 0, NULL, NULL, 1, 1445419793),
(206, 'Фадєєва', '', '', 0, '', NULL, 'Фадєєва', '', '11/02/1991', 'qa.test.15@yandex.ru', '618dcdfb0cd9ae4481164961c4796dd8e3930c8d', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1444239737),
(207, '', '', '', 0, '', NULL, '', '', '', 'maksimova.vn@i.ua', '3d4f2bf07dc1be38b20cd6e46949a1071f9d0e3d', '', '', '', 'http://vk.com/id28128673', '', '', '', '', '', 'Онлайн', '', '', '', '5629fed1c6450.jpg', 0, NULL, NULL, 1, 1445590694),
(208, '', '', '', 0, '', NULL, '', '', '', 'y1@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', '561252fd086ca.jpg', 0, 'e5d2d185735b97ddf6f9b9d6c761d2f35133fe74', NULL, 1, 1444040992),
(209, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'ivan.nadejdaa@ramblerr.ru', '05bf9bcd5a06421c7be9946a38d279f1bf461de0', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '663ebd2727ee940e75ac34a826f55dd507e2c4fb', NULL, 0, 1444044425),
(210, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'ivan.nadejdaa@i.ua', 'b0377f7a34be2407fff5a4a75d1c0d2ccd0f69ef', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '8796770be626f353c2e97392307c8c7bfb236b12', NULL, 0, 1444044558),
(211, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'ivan.nadejdaa@rambler.ru', 'def357bec4e026053bc46383c91afc9b12909134', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '742351ac311157cf3412c7b9643c34ad8eee1359', NULL, 0, 1444044891),
(212, '', '', '', 0, '', NULL, '', '', '', 'radom.alex@bigmir.net', '01b307acba4f54f55aafc33bb06bbbf6ca803e9a', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, '3bab13637fc765a5ebf07b1f308f7a71a604803c', NULL, 0, 1444045119),
(213, '', '', '', 0, '', NULL, '', '', '', 'elena.zadvig@meta.ua', '128ef2163e92cf83fa2d6726c63db1f5d98b4552', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, '0f9f4e45c43b2d5ab56e613ffe2998e49d7ee885', NULL, 0, 1444046109),
(214, '', '', '', 0, '', NULL, '', '', '', 'z@rambler.ruu', '395df8f7c51f007019cb30201c49e884b46b92fa', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, '0b85b0e46a6533d5c0e83eee408d57e98fa30ccd', NULL, 0, 1444046642),
(215, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'maksimova.vin@ramblerr.ruu', '356a192b7913b04c54574d18c28d46e6395428ab', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, 'fa946b970457e125ee9326f3d6808b7317433c6b', NULL, 0, 1444046925),
(216, 'Александр', '', '', 0, '', NULL, 'Ковальов', 'Александр', '24/07/1987', 'akovalov736@gmail.com', '05bf9bcd5a06421c7be9946a38d279f1bf461de0', '', '', '', '', '', '+38(096)8263302', '', '', '', 'Онлайн/Офлайн', '', '', '', 'noname.png', 0, '82d4a2675c9d659053958545fd2d6b4d0cb2e3b4', '2015-10-05 12:42:16', 1, 1444048810),
(217, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'lov.ton@meta.ua', '05bf9bcd5a06421c7be9946a38d279f1bf461de0', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '8d166377038fae0c4789440a28febbf46297c5ab', NULL, 0, 1444063562),
(218, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'slavochka.romanov.1980@mail.ru', '05bf9bcd5a06421c7be9946a38d279f1bf461de0', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, 'a36e84f17393583d3945b83987e527d0f7c91006', '2015-10-05 16:53:56', 1, 1444063848),
(219, 'Аліна', '', '', 0, '', NULL, 'Фадеева', 'Алька', '12/12/1982', 'pora.ua@i.ua', '05bf9bcd5a06421c7be9946a38d279f1bf461de0', '', '', '', '', '', '+38(098)2569988', '', '', '', 'Онлайн/Офлайн', '', '', '', 'noname.png', 0, 'c5f07e64577f736b5a637e73a9906df8a21e63b8', NULL, 0, 1444069383),
(220, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'tutfggf@vvvvv.uu', '356a192b7913b04c54574d18c28d46e6395428ab', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '843b641a28f806227ef515206f04f73af239538d', NULL, 0, 1444075884),
(221, 'Діанка', '', '', 0, '', NULL, 'Скрипник', 'dianka182015', '18.10.2001', 'diana.skrypnik18@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, 'https://www.linkedin.com/pub/vika-petrova/107/438/392', 'http://vk.com/id293137351', NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1446542877),
(222, 'Diana', '', '', 0, '', NULL, 'Skrypnik', NULL, NULL, 'dianaskrypnik18@gmail.com', NULL, NULL, 'https://plus.google.com/116716694615824882039', NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, '561395a7492a2.jpg', 0, NULL, NULL, 1, 1444124072),
(223, 'Вася', '', '', 0, '', NULL, 'Иванов', NULL, NULL, 'super_test123@ukr.net', NULL, 'https://www.facebook.com/app_scoped_user_id/109035116119064/', NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1444127284),
(224, 'Марина', '', '', 0, '', NULL, 'Лещишина', 'marinka_5', '26.5.1994', 'pretty-woman15@mail.ru', NULL, NULL, NULL, NULL, 'http://vk.com/id50650798', NULL, NULL, '', 'Винница', NULL, 'Онлайн', NULL, NULL, NULL, '5615572485716.jpg', 0, NULL, NULL, 1, 1444239141),
(225, '                    ', '', '', 0, '', NULL, '                    ', '                    ', '01/01/2000', 'otiurenkov@rrrr.rr', '356a192b7913b04c54574d18c28d46e6395428ab', '', '', '', '', '', '', '', '', '', 'Онлайн/Офлайн', '', '', '', 'noname.png', 0, '2893d62f7020199cb75ed1b859c6869598abd3e7', NULL, 0, 1444717880),
(226, 'Татьяна', '', '', 0, '', NULL, 'Максимова', 'Смайл', '24/07/1987', 'maksim.vin@rambler.ru', 'f3d78634c57009fe538ad68b79eef6ecf6746c95', '', '', '', '', '', '+38(099)9999999', '', '', '', 'Онлайн/Офлайн', '', '', '', 'noname.png', 0, '9762ee3c818cdcdc04af83372965c5a70d65a7de', NULL, 0, 1444718424),
(227, 'Татьяна', '', '', 0, '', NULL, 'Максимова', 'Смайл', '12/12/2000', 'maksimova.vin@ukr.net', '48058e0c99bf7d689ce71c360699a14ce2f99774', '', '', '', 'https://vk.com/tmaximova2013', '', '+38(066)3336655', '', 'м. Чернівці', 'вища', 'Онлайн/Офлайн', 'спорт, книги, кулінарія', 'інтернет', 'працюю за фахом викладача інформатики', '561cb1f06585a.jpg', 0, 'a93b3e887c8bcd5dbbcfa4ea6a3dd5c21a4396f0', NULL, 0, 1444721136),
(228, 'Арсеня', '', '', 0, '', NULL, 'Минский', 'Сеня', '10/11/1981', 'maksimova.vin@rambler.ru', 'fea7f657f56a2a448da7d4b535ee5e279caf3d9a', 'https://www.facebook.com/dmukrainochka', 'https://plus.google.com/getstarted/getstarted?fww=1', 'https://www.linkedin.com/nhome/', 'http://vk.com/id172289303', '', '+38(066)6622333', '', '1111111111111111111111111111111111111', 'вища ВДПУ', 'Онлайн/Офлайн', 'футбол', 'інтернет', 'Викладач інформатики                                  ', '561cc213bdc1b.jpg', 0, NULL, '2015-12-17 11:50:55', 1, 1445604250),
(229, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'maksimova.vin@rambler.ru', '5e07e3a09df9cfee0ca0cc71c142cf5511535601', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1444729622),
(230, 'Василий ', '', '', 0, '', NULL, 'Гномов', 'Васька', '03/05/1996', 'gnomov.vasyusha@mail.ru', '1c6637a8f2e1f75e06ff9984894d6bd16a3a36a9', '', '', '', '', '', '+38(069)5555323', '', '23222222222222222222222222222222222222222222222222222222222222222222222222222', 'вища', 'Онлайн/Офлайн', '', '', '', 'noname.png', 1, NULL, NULL, 1, 1444730682),
(231, 'Арсен', '', '', 0, '', NULL, 'Терен', '', '', 'teren_super@i.ua', 'cd3f0c85b158c08a2b113464991810cf2cdfc387', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, 'b63f665027a6e319ac903207eed8596afd61d9ba', NULL, 0, 1444731040),
(232, 'Арсен', '', '', 0, '', NULL, 'Терен', '', '', 'gnomov.vasyusha@mail.ru', 'cd3f0c85b158c08a2b113464991810cf2cdfc387', '', '', '', '', '', '+38(222)222222_', '', '', '', 'Онлайн', '', '', '', '561cd97dae837.jpg', 1, NULL, NULL, 1, 1444731104),
(233, 'Аліна ', '', '', 0, '', NULL, 'Фадеева', '', '', 'teren@i.ua', '17ba0791499db908433b80f37c5fbc89b870084b', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 1, '64f00826a574975ddd5c6ed5388616c706a4b21c', NULL, 0, 1444751102),
(234, 'Аліна', '', '', 0, '', NULL, 'Фадєєва', '', '', 'teren_super5@i.ua', '6216f8a75fd5bb3d5f22b6f9958cdede3fc086c2', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, '05ab2bbbce4e366c97670b47a9a72c957612000b', NULL, 0, 1444751174),
(235, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'warriorhonor@gmail.com', '471691118f87a5dfe969012566409bf28666a8d2', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1445154198),
(236, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'ivanov_pet75@mail.ru', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1445247883),
(237, 'иииїїїїіііієєєє', '', '', 0, '', NULL, '', '', '', 'pechkin_1989@mail.ua', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1445248083),
(238, 'Вася', '', '', 0, '', NULL, 'Петечкин', '', '', 'zaburanna@ukr.net', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, '7858c6066fcf0ef4fd061c034d1a3e12e460e1e4', NULL, 0, 1445427022),
(239, 'reft', '', '', 0, '', NULL, 'rfvgbnhjmk', '', '', 'zaburanna@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, '23a0495c31f41a101f8098e2aa234f012b297b9c', NULL, 0, 1445427139),
(240, 'adfg', '', '', 0, '', NULL, 'sdfgh', '', '', 'grintsova11@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, '2c36bf11f4104c9d4478400513ab2c1c39e127d5', NULL, 0, 1445427204),
(241, 'Вікторія', '', '', 0, '', NULL, 'Грінцова', 'maluwka11', '11.2.1991', 'ziro4kkka@ukr.net', NULL, NULL, NULL, NULL, 'http://vk.com/id10405651', NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1445427999),
(242, 'Vasya', '', '', 0, '', NULL, 'Ivanov', '', '', 'vasyaivanov11@ukr.net', '8033a7f55d17f679ee0cdef9f9841679476f46f9', '', '', '', 'http://vk.com/id329727625', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1445594237),
(243, '', '', '', 0, '', NULL, '', 'hjhg', '', 'vladislavmironov548@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', '562a033389355.jpg', 0, NULL, NULL, 1, 1445593834),
(244, '', '', '', 0, '', NULL, '', '', '', 'troll12@i.ua', 'fea7f657f56a2a448da7d4b535ee5e279caf3d9a', '', '', '', '', '', '+38(000)_______', '', '', '', 'Онлайн/Офлайн', '', '', '', '562a07a089f62.jpg', 0, NULL, NULL, 1, 1445595471),
(245, '', '', '', 0, '', NULL, '', '', '', 'vanov.vanya@lenta.ru', 'fea7f657f56a2a448da7d4b535ee5e279caf3d9a', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', '562a0b4856df9.jpg', 0, NULL, NULL, 1, 1445595914),
(246, 'вика', '', '', 0, '', NULL, 'иванова', '', '', 'ivanova@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, '667c9589af993c136f316fc0dcfc054c38848b5e', NULL, 0, 1445602813),
(247, 'Дмитрий', '', '', 0, '', NULL, 'Максимов', NULL, NULL, 'romeorom@i.ua', NULL, 'https://www.facebook.com/app_scoped_user_id/112371969125479/', NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, '563784881c1d5.jpg', 0, NULL, NULL, 1, 1446478984),
(248, 'Арсен', '', '', 0, '', NULL, 'Тюрин', '', '', 'sed23@i.ua', NULL, 'https://www.facebook.com/app_scoped_user_id/105903109773708/', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', '56378d522e592.jpg', 1, NULL, NULL, 1, 1446481235),
(249, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'klubni4kkka@ukr.net', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1446543015),
(250, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'testerqa15@ukr.net', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1446660460),
(251, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'gn''omov.vasyus''ha@mail.ru', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 1, 'b711870e49826ef8db644e99571ef17235598613', NULL, 0, 1446891822),
(252, 'Test', '', '', 0, '', NULL, 'Int', NULL, NULL, 'vikingwizlight@gmail.com', NULL, NULL, 'https://plus.google.com/113345607240713739668', NULL, 'http://vk.com/id332326816', NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, '564747870a963.jpg', 0, NULL, '2015-12-25 15:40:41', 1, 1447511943),
(253, '', '', '', 0, '', NULL, '', '', '', 'qa.maksimova.vin@i.ua', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 1, '90277a618f0ce7c07bf0f3fce09afe4323ebabda', NULL, 1, 1449475589),
(254, 'Студент ІТ', '', '', 0, '', NULL, '         ', '', '11/02/1999', 'qa.maksimova@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '+38(066)6666666', '', 'Ленина 126', 'ВНАУ', 'Онлайн/Офлайн', '', '', '', 'noname.png', 1, NULL, '2015-12-25 15:20:17', 1, 1449476103),
(255, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'ivanov24vit@gmail.com', '20eabe5d64b0e216796e834f52d61fd0b70332fc', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 1, NULL, '2015-12-25 15:01:27', 1, 1450681729),
(256, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'intit@i.ua', '63744a873a645a58693a8177499c8fbcce1345f1', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '6a7e40f76d986595f63b83bc0637a33116432ca2', NULL, 0, 1451122172),
(257, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'intit4@autorambler.ru', '63744a873a645a58693a8177499c8fbcce1345f1', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '5bf20f0baaaf63ce9a2aa3f036f20e6c10da6b6d', NULL, 0, 1451123032),
(258, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'intit6@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1451124018),
(259, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'intit12@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, '34ad1f3d830a1be0ddce02999125e2a9bfaf7648', NULL, 0, 1451124661),
(260, '', '', '', 0, '', NULL, NULL, NULL, NULL, 'ivanov.vin33@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL, 'Онлайн', NULL, NULL, NULL, 'noname.png', 0, NULL, NULL, 1, 1451304918),
(261, '', '', '', 0, '', NULL, '', '', '', 'ivanov.vin55@gmail.com', '011c945f30ce2cbafc452f39840f025693339c42', '', '', '', '', '', '', '', '', '', 'Онлайн', '', '', '', 'noname.png', 0, NULL, NULL, 1, 1451305366);

-- --------------------------------------------------------

--
-- Структура таблицы `user_admin`
--

CREATE TABLE IF NOT EXISTS `user_admin` (
  `id_user` int(10) NOT NULL AUTO_INCREMENT,
  `start_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `end_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id_user`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=135 ;

--
-- Дамп данных таблицы `user_admin`
--

INSERT INTO `user_admin` (`id_user`, `start_date`, `end_date`) VALUES
(2, '2015-12-16 19:31:08', NULL),
(49, '2015-12-16 19:31:08', NULL),
(134, '2015-12-16 19:31:08', NULL);

--
-- Ограничения внешнего ключа сохраненных таблиц
--

--
-- Ограничения внешнего ключа таблицы `chat_room`
--
ALTER TABLE `chat_room`
  ADD CONSTRAINT `FK_fy1be4k30rsfiyj277sx585ev` FOREIGN KEY (`author_id`) REFERENCES `chat_user` (`id`);

--
-- Ограничения внешнего ключа таблицы `chat_room_users`
--
ALTER TABLE `chat_room_users`
  ADD CONSTRAINT `FK_8uci3ndco1sna4jf1t5u33lia` FOREIGN KEY (`rooms_from_users_id`) REFERENCES `chat_room` (`id`),
  ADD CONSTRAINT `FK_9ryl67smn61vqw2j0wrl3lxtw` FOREIGN KEY (`users_id`) REFERENCES `chat_user` (`id`);

--
-- Ограничения внешнего ключа таблицы `chat_tenant`
--
ALTER TABLE `chat_tenant`
  ADD CONSTRAINT `FK_icdfbpqt3tdjy7d8204mvdcg0` FOREIGN KEY (`chat_user_id`) REFERENCES `chat_user` (`id`);

--
-- Ограничения внешнего ключа таблицы `chat_user_last_room_date`
--
ALTER TABLE `chat_user_last_room_date`
  ADD CONSTRAINT `FK_l12n7117lch4gomo1egq6wabl` FOREIGN KEY (`room_id`) REFERENCES `chat_room` (`id`),
  ADD CONSTRAINT `FK_tcagriy0qhcpqgarbl77lrkel` FOREIGN KEY (`chat_user_id`) REFERENCES `chat_user` (`id`);

--
-- Ограничения внешнего ключа таблицы `chat_user_message`
--
ALTER TABLE `chat_user_message`
  ADD CONSTRAINT `FK_2vqyb0vwecdl9a0b1lsdr6pac` FOREIGN KEY (`author_id`) REFERENCES `chat_user` (`id`),
  ADD CONSTRAINT `FK_fo86b284hr4fm8kaxxbx78a40` FOREIGN KEY (`room_id`) REFERENCES `chat_room` (`id`);

--
-- Ограничения внешнего ключа таблицы `plain_task_answer_teacher`
--
ALTER TABLE `plain_task_answer_teacher`
  ADD CONSTRAINT `FK_plain_task_answer_teacher_plain_task_answer` FOREIGN KEY (`id_plain_task_answer`) REFERENCES `plain_task_answer` (`id`),
  ADD CONSTRAINT `FK_plain_task_answer_teacher_teacher` FOREIGN KEY (`id_teacher`) REFERENCES `teacher` (`teacher_id`);

--
-- Ограничения внешнего ключа таблицы `skip_task`
--
ALTER TABLE `skip_task`
  ADD CONSTRAINT `FK_skip_task_lecture_element` FOREIGN KEY (`condition`) REFERENCES `lecture_element` (`id_block`),
  ADD CONSTRAINT `FK_skip_task_question_lecture_element` FOREIGN KEY (`question`) REFERENCES `lecture_element` (`id_block`),
  ADD CONSTRAINT `FK_skip_task_teacher` FOREIGN KEY (`author`) REFERENCES `teacher` (`teacher_id`);

--
-- Ограничения внешнего ключа таблицы `skip_task_answers`
--
ALTER TABLE `skip_task_answers`
  ADD CONSTRAINT `FK_skip_task_answers_skip_task` FOREIGN KEY (`id_task`) REFERENCES `skip_task` (`id`);

--
-- Ограничения внешнего ключа таблицы `skip_task_marks`
--
ALTER TABLE `skip_task_marks`
  ADD CONSTRAINT `FK_skip_task_marks_user` FOREIGN KEY (`user`) REFERENCES `user` (`id`);

--
-- Ограничения внешнего ключа таблицы `user_admin`
--
ALTER TABLE `user_admin`
  ADD CONSTRAINT `FK_user_admin_user` FOREIGN KEY (`id_user`) REFERENCES `user` (`id`);

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
