apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'
apply plugin: 'war'
//apply plugin: 'ca.cutterslade.analyze' //for dependency analization 

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

//jar.enabled = false
//bootRepackage.enabled = false

war {
    baseName = 'crmChat'
}
configurations {
    providedRuntime
}

buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
    repositories {
    // jcenter()////dependency analization plugin repository
        mavenCentral()
        maven { url "http://repo.spring.io/libs-release" }
    	maven { url "http://repo.spring.io/milestone" }
    	maven { url "http://repo.spring.io/snapshot" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  //      classpath("ca.cutterslade.gradle:gradle-dependency-analyze:1.0.3") //dependency analization plugin
    }

}

repositories {	
	mavenCentral()
	maven { url "http://repo.spring.io/libs-release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
}

ext {
    commonsPoolVersion = '2.4.2'
    nettyVersion = '4.0.33.Final'
    reactorVersion = '2.0.7.RELEASE'
    redisVersion = '0.6'
    springSessionVersion = '1.1.0.M1'	
}
configurations {
  providedRuntime
}

dependencies {

	compile("org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final")
	compile("org.springframework.boot:spring-boot-starter-data-jpa:1.3.0.RELEASE")
	compile("mysql:mysql-connector-java:5.1.38")
	
	compile("org.apache.commons:commons-collections4:4.1")

	compile("org.springframework.boot:spring-boot-starter")
  	//compile("org.springframework.data:spring-data-redis")
  	compile("redis.clients:jedis:2.7.2")
 	
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework:spring-messaging")
    
    
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    compile("org.springframework.boot:spring-boot-starter-actuator")
    
    compile("org.springframework.security:spring-security-messaging")
    compile("org.springframework.session:spring-session:$springSessionVersion")
    compile("org.apache.commons:commons-pool2:$commonsPoolVersion")
    //compile  'org.springframework.boot:spring-boot-starter-redis:1.2.0.RELEASE'
    
    ////////////////
    //			OLD
    ////////////////
    /*compile("com.github.kstyrc:embedded-redis:$redisVersion")
    compile("io.projectreactor:reactor-core:${reactorVersion}")
	compile("io.projectreactor:reactor-net:${reactorVersion}") {
		exclude group: "io.netty", module: "netty-all"
	}
	compile("io.netty:netty-all:$nettyVersion")*/
   
    testCompile("org.springframework.boot:spring-boot-starter-test")
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

