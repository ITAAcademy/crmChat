"use strict";function botrating(){return{controller:"ChatViewItemController",restrict:"EA",template:'<ul class="star-rating" ng-class="{readonly: readonly}"><p>{{text}}</p>  <li ng-repeat="star in stars" class="star" ng-class="{filled: star.filled}" ng-style="star.filled && {\'color\' : starcolor}" ng-click="toggle($index)">    <i class="fa fa-star"></i>  </li></ul>',scope:{itemvalue:"<",max:"=",onRatingSelect:"=?",readonly:"=",name:"=",text:"=",starcolor:"="},link:function(e,t,n){function a(){e.stars=[];for(var t=0;t<e.max;t++)e.stars.push({filled:t<e.itemvalue})}"undefined"!=typeof n.onratingselect&&"angular.noop"!=n.onratingselect||(n.onratingselect=function(){}),void 0==e.max&&(e.max=5),e.fillesStarStyle={color:e.starcolor},e.toggle=function(t){void 0!=e.readonly&&0!=e.readonly||(e.itemvalue=t+1,n.onratingselect({rating:t+1}),a())},e.itemvalue=1,e.$watch("max",function(e,t){e!=t&&a()}),e.$watch("itemvalue",function(e,t){e!=t&&a()}),a(),e.init(e,t,n)}}}function isAssignable(e,t,n){var a=e(t[n]);return angular.isFunction(a.assign)}function botcalendar(e,t){return{controller:"ChatViewItemController",template:'<span class="input-group"><input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="itemvalue" is-open="popup1.opened" datepicker-options="dateOptions" ng-required="true" close-text="Close" /><span class="input-group-btn"><button type="button" class="btn btn-default" ng-click="open1()"><i class="glyphicon glyphicon-calendar"></i></button></span></span>',scope:{itemvalue:"<",name:"="},link:{pre:function(e,t,n){e.popup1={opened:!1}},post:function(e,t,n){e.popup1={},e.open1=function(){console.log("open1"),e.popup1.opened=!0},e.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],e.format=e.formats[2],e.altInputFormats=["dd.MM.yyyy"],e.dateOptions={maxDate:new Date(2020,5,22),minDate:new Date(1900,1,1),startingDay:1},"date"==getType(e.itemvalue)&&(e.itemvalue=new Date(e.itemvalue)),e.init(e,t,n)}}}}angular.module("springChat.directives").directive("botContainer",function(e,t){return{controller:"ChatBotController",scope:{content:"&"},link:function(n,a,o,i){n.mainScope=n,n.getCurrentMessageTime=function(){var e=t(o.time)(n.$parent);return formatDateToTime(new Date(e))};var r=function(e){var a={time:"getCurrentMessageTime()"},o=n.chatRouteInterfaceScope.botParameters,i="$",r=e;for(var l in a){var c=t(a[l])(n);r=r.replace(i+l,c)}for(var s in o)r=r.replace(i+s.slice(1,-1),o[s]);return r};n.$watch("content",function(){var i,l=t(o.content)(n.$parent);try{i=JSON.parse(l)}catch(e){console.info("JSON NOT VALID TRY CREATE"),i={id:-1,body:l}}n.currentMessage=i,null!=n.chatRouteInterfaceScope||void 0!=n.chatRouteInterfaceScope?n.nextDialogItemJS=new Function("param",n.currentMessage.testCase)(n.chatRouteInterfaceScope.botParameters):n.nextDialogItemJS=-1;var c="",s="";if(null!=n.chatRouteInterfaceScope||void 0!=n.chatRouteInterfaceScope)var u=r(i.body);else var u=i.body;if(console.log("botContainer content:"+u),a.html(c+u+s),"undefined"!=typeof o.callback){var p=new Function("return "+n.$eval(o.callback))();"undefined"!=typeof p&&p(a)}e(a.contents())(n),null==o.disabled&&void 0==o.disabled||(n.disabled=o.disabled),n.$watch("disabled",function(){if(n.disabled){for(var e=0;e<a[0].children.length;e++)a[0].children[e].style.pointerEvents="none";a[0].style.pointerEvents="none"}})},!0),n.botChildrens=new Array,null==n.chatRouteInterfaceScope&&void 0==n.chatRouteInterfaceScope||(n.chatRouteInterfaceScope.botContainers.length>0&&(n.chatRouteInterfaceScope.botContainers[n.chatRouteInterfaceScope.botContainers.length-1].scope.disabled=!0),n.chatRouteInterfaceScope.botContainers.push({element:a,scope:n})),n.enabledListener(n,a)}}}),angular.module("springChat.directives").directive("botList",function(e,t){return{controller:"ChatViewItemController",scope:{horizontal:"="},link:{post:function(t,n,a,o){function i(){var e=n[0].children;t.horizontal?(n[0].classList.add("layout-ul-horizontal"),n[0].classList.remove("layout-ul-vertical")):(n[0].classList.remove("layout-ul-horizontal"),n[0].classList.add("layout-ul-vertical")),console.log("render List");for(var a=0;a<e.length;a++)t.horizontal?(e[a].classList.add("layout-li-horizontal"),e[a].classList.remove("layout-li-vertical")):(e[a].classList.remove("layout-li-horizontal"),e[a].classList.add("layout-li-vertical"))}t.$watch("horizontal",function(){i()}),t.listenContent=function(){t.unlistenContent=t.$watch(n[0],function(){i(),t.unlistenContent(),e(n.contents())(t),t.$$postDigest(function(){})},!0)},t.listenContent(),t.init(t,n,a)}}}}),angular.module("springChat.directives").directive("botlink",function(e,t,n){return{controller:"ChatViewItemController",scope:{text:"=",ispost:"=",linkindex:"=",href:"<",classes:"="},link:{post:function(t,n,a,o){t.mainScope=t.$parent.mainScope;var i="{{text}}";console.log("body:"+i);var r="true"===a.ispost;if(r&&(t.href=""),t.$watch("ispost",function(){t.ispost&&(t.href="")}),t.$watch("href",function(){"undefined"!=typeof t.href&&t.href.length>0&&(t.ispost=!1)}),t.itemvalue=i,r&&"undefined"!=typeof a.linkindex&&a.linkindex.length>0){var l={body:null,category:null,nextNode:null,answer:null};l.nextNode=a.linkindex;var c=t.mainScope.currentMessage;null==c.id&&(c.id=-1),null!=c.category&&(l.category=c.category.id);var s=JSON.stringify(l),u="bot_operations/{0}/get_bot_container/{1}".format(t.$parent.currentRoom.roomId,a.linkindex),p='getNewItem("{0}","{1}")'.format(s.escapeQuotes(),u);t.onClick=function(){t.$eval(p)}}var d='<a class="{{classes}}" ng-click="onClick()" ng-model="itemvalue" ng-href="{{href}}"> ',m="</a>",f=d+i+m;n.html(f),t.content=f,e(n.contents())(t),t.init(t,n,a)}}}}),angular.module("springChat.directives").directive("botinput",function(e,t,n){return{controller:"ChatViewItemController",scope:{text:"=",name:"="},link:{post:function(t,n,a,o){var i="{{text}}";t.itemvalue="";var r='<input type="text" name="{0}" ng-model="itemvalue">'.format(a.name),l="</input>",c=r+i+l;n.html(c),t.content=c,e(n.contents())(t),t.init(t,n,a)}}}}),angular.module("springChat.directives").directive("botsubmit",function(e,t,n){return{scope:{text:"="},controller:"ChatViewItemController",link:function(t,n,a,o){t.mainScope=t.$parent.mainScope,t.submitBot=function(e){e.preventDefault();$(e.currentTarget.form);if(void 0==t.mainScope.nextDialogItemJS||""==t.mainScope.nextDialogItemJS)return void alert("NO JS FUNCTION");var n="bot_operations/{0}/submit_dialog_item/{1}";n=void 0!=t.mainScope.currentRoom?n.format(t.mainScope.currentRoom.roomId,t.mainScope.currentMessage.idObject.id):n.format(0,t.mainScope.currentMessage.idObject.id);var a="/crmChat/"+n+"/next_item/"+t.mainScope.nextDialogItemJS,o={};t.mainScope.getParamsInJSON(o);var i=JSON.stringify(o);console.log("dataToSend:"+i),$.ajax({type:"POST",contentType:"binary/octet-stream",url:a,data:i,success:function(e){"quize save"==e&&alert("Ваша відповідь прийнята. Дякуємо за потрачений час")},error:function(e,t,n){alert("Вибачте за незручності, наразі відповідь не може бути прийнята")}})};var i="{{text}}",r='<button name="{0}" ng-click="submitBot($event)">'.format("submitBtn"),l="</button>",c=r+i+l;n.html(c),t.content=c,t.init(t,n,a),e(n.contents())(t)}}}),angular.module("springChat.directives").directive("botcheckgroup",function(e,t,n){return{controller:"ChatViewItemController",scope:{legend:"=",labels:"=",name:"="},link:{post:function(t,n,a,o){function i(){if("undefined"!=typeof t.labels){c="";for(var o=0;o<t.labels.length;o++){var i="{{name}}_item",u=o,p="{{labels[{0}]}}".format(o);c+=r.format(s,i,u,p)}var d="</fieldset>",m=l+c+d;n.html(m),t.content=m,e(n.contents())(t),t.init(t,n,a)}}var r='<div><input type="{0}" name="{1}" value="{2}" />{3}</div>',l="<fieldset><legend>{{legend}}</legend>",c="",s="checkbox";t.$watch("labels.length",function(){i()},!0)}}}}),angular.module("springChat.directives").directive("botradiogroup",function(e,t,n){return{controller:"ChatViewItemController",scope:{legend:"=",labels:"=",name:"="},link:{post:function(t,n,a,o){function i(){if("undefined"!=typeof t.labels){c="";for(var o=0;o<t.labels.length;o++){var i="{{name}}_item",u=o,p="{{labels[{0}]}}".format(o);c+=r.format(s,i,u,p)}var d="</fieldset>",m=l+c+d;n.html(m),t.content=m,e(n.contents())(t),t.init(t,n,a)}}var r='<div><input type="{0}" name="{1}" value="{2}" />{3}</div>',l="<fieldset><legend>{{legend}}</legend>",c="",s="radio";t.$watch("labels.length",function(){i()},!0)}}}}),angular.module("springChat.directives").directive("botClose",function(e,t,n){return{controller:"ChatViewItemController",scope:{},link:{post:function(t,n,a,o){var i='<a class="btn btn-default" ng-click="giveTenant()">Get tenant</a>';n.html(i),t.content=i,e(n.contents())(t),t.init(t,n,a)}}}}),angular.module("springChat.directives").directive("botarray",function(e,t,n){return{controller:"ChatViewItemController",scope:{dataarray:"="},link:{post:function(t,n,a,o){t.addNewItemFunction=function(){t.dataarray.push("")},t.removeItem=function(e){t.dataarray.splice(e,1)},t.moveDown=function(e){if(!(e>=t.dataarray.length-1||e<0)){var n=t.dataarray[e+1],a=t.dataarray[e];t.dataarray[e+1]=a,t.dataarray[e]=n}},t.moveUp=function(e){if(!(e>=t.dataarray.length||e<1)){var n=t.dataarray[e-1],a=t.dataarray[e];t.dataarray[e-1]=a,t.dataarray[e]=n}};var i='<div ng-repeat="data in dataarray track by $index">',r='<button class="property_array_button" ng-click="removeItem($index)"><span class="glyphicon glyphicon-remove "></button>',l='<button class="property_array_button" ng-click="moveUp($index)"><span class="glyphicon glyphicon-arrow-up "></span></button>',c='<button class="property_array_button" ng-click="moveDown($index)"><span class="glyphicon glyphicon-arrow-down "></span></button>',s='<div class="button-group-inline">{0}{1}{2}</div>'.format(l,c,r),u='<span class="property_array_row_indexer">{{$index}}</span><input class="property_array_edit_input" type="text" ng-model="dataarray[$index]">'+s,p='</div><div class = "btn btn-default add-item-btn" ng-click="addNewItemFunction()">+</div>',d=i+u+p;n.html(d),t.content=d,e(n.contents())(t),t.init(t,n,a)}}}}),angular.module("springChat.directives").directive("botselect",function(e,t,n){return{controller:"ChatViewItemController",scope:{size:"=",multiple:"=",options:"=",itemvalue:"<",name:"<"},link:{post:function(t,n,a,o){var i='<select ng-options="k as v for (k,v) in options" ng-model="itemvalue"></select>',r=i;n.html(r),t.content=r,e(n.contents())(t),t.init(t,n,a)}}}}),angular.module("springChat.directives").directive("inputListBox",function(e,t){return{restrict:"E",scope:{inputValue:"=ngModel",listData:"=ngListData"},link:function(e,t,n){e.$watch("inputValue",function(){if(console.log("scope.$watch inputValue "+e.inputValue),0==e.keyPressProcessed){for(var t=[],n=0;n<e.listData.length;n++){var a=e.listData[n],o=e.inputValue.length,i=a.substring(0,o);console.log("scope.inputValue = "+e.inputValue+" listElement = "+a+" input_size = "+o+" substr = "+i),1==o?a[0]==e.inputValue&&t.push(a):a.substring(0,e.inputValue.length)==e.inputValue&&t.push(a)}e.listToShow=t}}),e.listToShow=[],e.onSelectFromList=function(t){e.inputValue=t}},template:' <input class="modal_input" type="text"  ng-keypress="keyPressProcessed = false;"  ng-keydown="keyDown($event)"     typeahead-wait-ms = "1"          typeahead-on-select = " onSelectFromList($model)"     uib-typeahead="value for value in listToShow"     ></input>'}}),angular.module("springChat.directives").directive("botcheckbox",function($compile,$parse,$http){return{controller:"ChatViewItemController",scope:{legend:"=",labels:"=",itemvalue:"="},link:{post:function post(scope,element,attr,ctrl){for(var checkBoxTemplate='<div><input {2} type="{0}" name="{1}" value="{{3}}"/><span>  {1}</span></div>',index=0,prefix="<fieldset><legend>{{legend}}</legend>",body="",item_type="checkbox",modalT='ng-model="{{itemvalue[{0}]}}"',labels=eval(attr.labels),i=0;i<labels.length;i++){var modalTemp=modalT.format(i);body+=checkBoxTemplate.format(item_type," {{labels["+i+"]}}",modalTemp,i),scope.itemvalue[i]=!1}var suffix="</fieldset>{{itemvalue}}",elementValue=prefix+body+suffix;element.html(elementValue),scope.content=elementValue,$compile(element.contents())(scope),scope.init(scope,element,attr)}}}}),angular.module("springChat.directives").directive("bottext",function(e,t,n){return{controller:"ChatViewItemController",scope:{text:"=",textcolor:"=",textsize:"=",textalign:"="},link:{post:function(t,n,a,o){var i='<p style="color:{0};font-size:{1}px;text-align:{2};">{3}</p>',r=i.format("{{textcolor}}","{{textsize}}","{{textalign}}","{{text}}");n.html(r),t.content=r,e(n.contents())(t),t.init(t,n,a)}}}}),angular.module("springChat.directives").directive("botrating",botrating),angular.module("springChat.directives").directive("botcalendar",botcalendar);